{"version":3,"sources":["jquery/common/bizagi.tabs/js/jquery.material.tab.js","jquery/common/bizagi.mfb/js/bizagi.mfb.js","jquery/common/bizagi.ripple/js/jquery.ripple.js","jquery/common/bizagi.grid/js/tablet/bizagi.grid.tablet.js","jquery/common/base/js/lib/mobile/jquery.tabs.js","jquery/rendering/js/base/bizagi.rendering.element.js","jquery/rendering/js/base/container/bizagi.rendering.container.js","jquery/rendering/js/base/render/bizagi.rendering.render.js","jquery/rendering/js/base/render/bizagi.rendering.render.base.js","jquery/rendering/js/base/container/bizagi.rendering.form.js","jquery/rendering/js/base/container/bizagi.rendering.formTemplate.js","jquery/rendering/js/base/container/bizagi.rendering.layout.js","jquery/rendering/js/base/container/bizagi.rendering.accordion.js","jquery/rendering/js/base/container/bizagi.rendering.accordionItem.js","jquery/rendering/js/base/render/bizagi.rendering.collectionnavigator.js","jquery/rendering/js/base/container/bizagi.rendering.group.js","jquery/rendering/js/base/container/bizagi.rendering.horizontal.js","jquery/rendering/js/base/container/bizagi.rendering.panel.js","jquery/rendering/js/base/container/bizagi.rendering.contentPanel.js","jquery/rendering/js/base/container/bizagi.rendering.searchForm.js","jquery/rendering/js/base/container/bizagi.rendering.tab.js","jquery/rendering/js/base/container/bizagi.rendering.tabItem.js","jquery/rendering/js/base/container/bizagi.rendering.nestedForm.js","jquery/rendering/js/base/render/bizagi.rendering.combo.js","jquery/rendering/js/base/render/bizagi.rendering.check.js","jquery/rendering/js/base/render/bizagi.rendering.number.js","jquery/rendering/js/base/render/bizagi.rendering.numberScientificNotation.js","jquery/rendering/js/base/render/bizagi.rendering.date.js","jquery/rendering/js/base/render/bizagi.rendering.extendedText.js","jquery/rendering/js/base/render/bizagi.rendering.grid.js","jquery/rendering/js/base/render/bizagi.rendering.hidden.js","jquery/rendering/js/base/render/bizagi.rendering.label.js","jquery/rendering/js/base/render/bizagi.rendering.search.js","jquery/rendering/js/base/render/bizagi.rendering.text.js","jquery/rendering/js/base/render/bizagi.rendering.button.js","jquery/rendering/js/base/render/bizagi.rendering.fileprint.js","jquery/rendering/js/base/render/bizagi.rendering.link.js","jquery/rendering/js/base/render/bizagi.rendering.geolocation.js","jquery/rendering/js/base/render/bizagi.rendering.association.js","jquery/rendering/js/base/render/bizagi.rendering.upload.js","jquery/rendering/js/base/render/bizagi.rendering.ecm.js","jquery/rendering/js/base/render/bizagi.rendering.yesno.js","jquery/rendering/js/base/render/bizagi.rendering.letter.js","jquery/rendering/js/base/render/bizagi.rendering.formLink.js","jquery/rendering/js/base/render/bizagi.rendering.cascadingCombo.js","jquery/rendering/js/base/render/bizagi.rendering.list.js","jquery/rendering/js/base/render/bizagi.rendering.multiSelect.js","jquery/rendering/js/base/render/bizagi.rendering.searchList.js","jquery/rendering/js/base/render/bizagi.rendering.money.js","jquery/rendering/js/base/render/bizagi.rendering.radio.js","jquery/rendering/js/base/render/bizagi.rendering.image.js","jquery/rendering/js/base/render/bizagi.rendering.userfield.js","jquery/rendering/js/base/render/bizagi.rendering.document.js","jquery/rendering/js/base/render/bizagi.rendering.range.js","jquery/rendering/js/base/render/bizagi.rendering.rangeDate.js","jquery/rendering/js/base/render/bizagi.rendering.rangeMoney.js","jquery/rendering/js/base/render/bizagi.rendering.rangeNumber.js","jquery/rendering/js/base/render/bizagi.rendering.checkList.js","jquery/rendering/js/base/render/bizagi.rendering.actionLauncher.js","jquery/rendering/js/base/render/bizagi.rendering.entityTemplate.js","jquery/rendering/js/base/render/bizagi.rendering.polymorphicLauncher.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.column.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.readonly.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.combo.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.date.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.search.js","jquery/rendering/js/base/bizagi.rendering.base.factory.js","jquery/rendering/js/bizagi.rendering.device.factory.js","jquery/rendering/js/bizagi.rendering.facade.js"],"names":["$","updateIndicatorState","tabs","active_tab","direction","tabs_meta","getTabsMetaInfo","tabs_info","tabsMetaInfo","tab_info","tabMetaInfo","left","tmp_left","scrollLeftNormalized","clientWidth","scrollWidth","scrollLeft","width","tabs_meta_info","r","getBoundingClientRect","a","n","window","document","body","e","createElement","appendChild","createTextNode","dir","style","fontSize","height","position","top","overflow","type","removeChild","getScrollType","Number","NaN","getNormalizedScrollLeft","right","tab_meta_info","fn","material_bizagi_tabs","options","params","opts","extend","defaults","base","index","$el","undefined","$active","$active_content","init","el","$ind","self","this","$tabs","$content_tabs","updatePositions","active","$indicator","info","get","css","scroll_info","scrollSelectedIntoView","trigger","active_index_tab","each","element","addClass","data","hide","push","on","stopPropagation","prepend","find","removeClass","reference","show","preventDefault","getActiveTab","tab","contantTab","moveToNextTab","length","click","refreshPositions","console","error","mfb","overlay","opened","buttons","activePrincipalButton","placement","indexOf","efect","clickHoverOpt","toggleMethod","menuState","menuStateValue","isOpen","isClosed","mainButtonClass","restingIcon","activeIcon","children","remove","target","currentState","attachEvt","elems","evt","handler","i","len","addEventListener","configureBlur","blur","siblings","closest","html","kendo","template","useWithBlock","append","toggle","getAttribute","parentNode","button","principal","appendTo","bind","setAttribute","jQuery","bz_navigation_buttons","isDesign","lastActionExecuted","allowAddButtons","$element","empty","$container","result","caption","properties","$elementButton","replace","targetElement","offset","offsetWidth","$addButton","htmlButtons","heightAddButton","heightWrapper","heightButtons","$rightNavigationButton","rightNavigationButtonIsLocated","insertAfter","leftNavigationButtonIsLocated","$leftNavigationButton","ev","maxScrollLeft","detach","prependTo","processButtons","transparent","$temp","rippleEffect","eventPageX","eventPageY","inkX","inkY","maxDiameter","rippleColor","$inkSpan","$inkparent","$thisElement","eventType","getRippleColorFromTraverse","inkColor","fallBackColor","backgroundOrInhreitedBackGround","hex","luma","returnLumintion","fallback","getBgColor","$elementToCheckForBg","is","parent","colorToHex","getLuminationValue","getColorLuminance","getInkColor","inkDefaultColor","appendInkTo","inkClass","inkContainerClass","Math","max","outerWidth","outerHeight","idToUse","background-color","pageX","pageY","touch","originalEvent","touches","changedTouches","setTimeout","hexcolor","substring","rgb","parseInt","lum","String","c","resultHex","substr","round","min","toString","color","match","slice","widget","ui","bizagi_grid","_init","_super","isOfflineForm","bizagi","util","parseBoolean","attachHandlers","_getComponent","pageNumber","attr","changePage","selectDynamicPager","columnIndex","sortBy","totalizer","processAction","unselectRow","$context","parents","hasClass","businessKey","onRemoveNewRow","key","selectRow","_addColumnActions","totalData","onRowSelected","prototype","apply","arguments","_showRowButtons","onRowUnselected","_hideRowButtons","getCell","xpath","row","cell","_canShowButtons","actions","drawPager","pages","total","number","page","pagination","renderPages","totalPages","currentPage","fasttmpl","pager","_canShowRowButtons","columns","maxColumns","selectedRow","getNewRowKeys","rows","map","action","onSaveAddedRows","onCancelEdition","isNewRecord","addInlineRow","_triggerHandler","drawRow","createAddRowData","newRow","postRenderRow","columnKeyIndex","ceil","random","onAddRow","add","inlineAdd","savedRows","keys","newRowKeys","isValid","value","items","details","name","localization","getResource","edit","overflowMenu","cancelNewRow","newRows","_replaceElement","RegExp","bztabs","activeTab","tabNumber","activate","popUp","beforeActivate","tabCountPopup","tabHeader","tabCountReal","widthRow","floor","item","textContent","tabCurrent","eq","widthTabSelected","updateTabSize","first","origin","changeTab","dataRef","tempTabs","moveAtTheEnd","currentTarget","tabChildren","when","domIncluded","done","event","headerWidth","innerWidth","totalWidth","j","pop","last","Class","ELEMENT_TYPE_CONTAINER","ELEMENT_TYPE_RENDER","ELEMENT_TYPE_COLUMN","renderFactory","dataService","resources","observableElement","disposed","initializeData","subscribers","xpathContext","getXpathContext","idPageCache","getPageCache","getFormContainer","getElementType","resize","size","focus","required","layout","isScrolledIntoView","effect","triggerGlobalHandler","triggerHandler","unbind","one","getRenderedElement","getMode","getParams","getFormType","ready","isReadyToSave","getCustomHandlers","dispose","off","override","disposeTime","isDisposed","processFailMessage","message","form","context","errorType","validationController","clearValidationMessages","showErrorMessage","container","idCase","JSON","parse","code","responseText","showAlertMessage","startLoading","endLoading","beforeToRefresh","afterToRefresh","rendering","TYPE_QUERY_FORM","uniqueId","editable","visible","orientation","originalProperties","encode","childrenHash","elements","render","createRenderElement","createContainerElement","createFormElement","originalElement","inlineEdit","retype","clone","getRender","mode","processDuplicateRender","registerRender","getContainer","getElement","getElementsByType","child","clonedElement","displayName","isClone","cloneRender","internalRender","applyContainerDefaults","id","tag","requestedForm","renderContainerHtml","postRenderContainer","renderingDeferred","Deferred","renderContainer","isRendered","promise","isEmpty","alert","backgroundColor","changeBackgroundColor","changeVisibility","argument","changeEditability","replaceTag","replaceSelector","replaceChildrenTag","replaceChildrenHtml","resolve","executeChildrenPostRender","configureHandlers","applyPlaceHolderPolyfill","configureDesignView","configureLayoutView","config","placeHolderConfig","forceApply","Placeholders","enable","childrenElements","childElement","postRenderElement","renderChildrenHtml","temp","renderElement","collectRenderValues","renderValues","canBeSent","collectData","hasChanged","collectRenderValuesQueryForm","canBeSentQueryForm","collectDataQueryForm","firstChild","getRenders","renders","getRendersByXpath","o","invalidElements","hasValidGrids","childrenPromises","getFocus","getCustomHandler","customHandlers","refreshContainer","args","multiaction","refreshControl","idRender","contexttype","unregisterChildren","removeActions","currentContainer","replaceWith","refreshActions","triggerChildrenActions","fail","always","refreshDesignContainer","messageValidation","l","triggerRenderChange","changed","registerActions","actionController","buildActions","unregisterRender","replaceChild","splice","getChildById","postRenderTimeout","maxRendersPerScreen","rendersExecuted","renderOptimization","startOptimization","stopOptimization","included","includedInResult","renderType","normalizeType","test","submitOnChange","maxLength","helpText","trim","textFormat","valueFormat","isHidden","contextType","labelAlign","valueAlign","originalValue","previousValue","calculateInitialLayoutProperties","displayType","getDefaultLabelAlign","getDefaultValueAlign","getRTLAlign","renderWidth","calculateRenderWidth","labelWidth","valueWidth","label","control","layoutType","renderTemplateName","renderTemplate","getTemplate","replaceAll","isFullRender","detectDevice","isTabletDevice","parseFloat","isExtendedText","isExtended","displayOptionClass","getDisplayOptionClass","labelAlignClass","getAlignClass","valueAlignClass","stringLabelWidth","stringValueWidth","printVersion","printversion","cssClass","cssclass","showFullRender","internalRenderControl","state","replaceControlHtml","resolveResult","asyncRenderDeferred","renderControl","renderReadOnly","configureSubmitOnChange","isLabelFormat","executePostRender","_element","internalPostRender","getControl","emptyControlByAsyncRenderDeferred","processLayout","postRenderPrintVersion","postRender","postRenderReadOnly","performExecutionModeMethods","performDesignModeMethods","configureHandlersQueryForm","configureHandlersReadOnly","internalSetInitialValue","log","internalSetInitialValueFlag","setDisplayValue","grid","setValidationMessage","hasValue","isQueryForm","filter","forEach","messageData","isQuery","getValue","val","columnEditable","getColumn","isNumeric","controlValueIsChanged","format","changeColor","background","bold","changeFontBold","italic","changeFontItalic","underline","changeFontUnderline","strikethru","changeFontStrikethru","changeFontSize","changeRequired","setValue","triggerEvents","identicalObjects","checkRequired","changeRequiredLabel","triggerRenderValidate","validateInputRetype","display","enableCheck","displayValue","getDisplayValue","sanitizeHTML","getLabel","mustImplement","getControlFiller","validationMessage","readOnlyValue","isObject","isString","decodedDisplayValue","changeDisplayOption","changeLabelAlign","alignType","changeValueAlign","customizeRenderWidth","setProperty","getElementsToStylize","originalColor","currentStyle","getFormattingLabel","compareValue","baseValue","defaultValue","forceCollectData","includes","compareValueObj","_findAction","guid","targetObj","guidAction","objectValue","valuestrikethru","valueunderline","newFontSize","emptyControlByChangeEditability","changeEditabilityCellControl","renderColumn","decorated","getDecorated","readyDeferred","onCellChange","labelElement","controlElement","idForm","pipe","controlFiller","currentElement","refreshDesignControl","cleanData","clearDisplayValue","input","updateOriginalValue","change","queryValue","searchType","typeSearch","rangeQuery","toUpperCase","newParameter","orderType","displayXpath","force","displayOnly","time","defaultControl","innerControl","isIE","autoScrollBottom","align","dependencies","conditions","expressions","simple","submitOnChangexpathContext","operator","argumentType","commands","command","elseCommands","addSubmitAction","bRefreshForm","notCollect","defer","BA_CONTEXT_PARAMETER_PREFIX","internalSubmitOnChange","reject","getCacheIdCase","cache","idCaseObject","parameters","percent2Number","getIdCase","getIdWorkitem","idWorkitem","getidTask","idTask","getSessionId","sessionId","changeCellColor","changeCellBackgroundColor","backgroundImage","needBGPaint","background-image","changeCellVisibility","changeCellRequired","startActionExecution","actionExecutionDeferred","endActionExecution","readyActionExecution","isFromCreatedRow","isNewRow","submitInvalidatePageCacheRequest","pageCacheToInvalidate","invalidatePageCache","isDesignMode","isExecutionMode","preventDefaultForAnchorTag","isSharepointContext","processLabelLayout","processControlLayout","warm","$label","changeFontColor","changeTextDecoration","$control","$elements","textDecoration","device","rendersById","rendersByXpath","rendersByType","pageCacheId","displayAsReadOnly","userConfirmationMessage","hasRule","paramsRender","processPath","breadCrumb","split","validations","allowValidateAndSaveAction","enableActionValidateAndSave","initializeButtons","transitions","originalProcessButton","processButton","isRoutingDisabled","applicationParent","isOfflineFormsV2Supported","isMobileDevice","ordinal","next","nextWithoutValidations","submitData","cancel","back","createnewcase","validate","save","routing","executeRule","refresh","buildButtonStyle","useCustomButtons","unshift","setParam","property","isArray","listRendesByType","getRenderByType","listRendesByTypeLength","renderKey","listRender","getRenderById","getGridByColumn","grids","columnsIds","helptext","queryForm","summaryForm","globalForm","complexGatewayContainer","activeTransitions","mainForm","controllers","validation","checkboxLabel","transitionId","strStyle","getContextType","getEndPointAction","formtype","getButtons","stopImmediatePropagation","buttonProperties","lastActionButton","routingDisabled","prop","hasOwnProperty","propagateExternalEvents","processDefer","contains","documentElement","preProcessButton","postProcessButton","responses","setLoaderDeferred","loaderDeferred","deleteLoaderDeferred","isLoaderDeferredSet","useOrSetLoaderDeferred","getLoaderPromise","appendWaitForLoader","create","then","chrono","initAndStart","getAllTabs","getAllTabsLength","innerTabsLoading","loadingDeferred","performValidations","needsUserConfirmation","showConfirmationBox","submitForm","expandNotificationBox","customHandler","validateForm","saveForm","collectRenderValuesForSubmit","deferredsToWait","deferreds","internalSubmitFormOffline","internalSubmitForm","checkWidgetsData","isComplexGatewayPainted","getLastActionButton","countProps","showMessageBox","prepare","offlineType","waitForOnlineResponse","online","tryPushResponsePromise","responsePromise","IdCase","caseNumber","CaseNumber","failHandler","offlineAction","isValidResource","showNotification","text","animate","scrollTop","submitDataAction","executeButtonAction","performAction","checkpointAction","commitAction","waitingDeferreds","prepareCheckpointAction","executeButton","prepareCommitAction","getButtonAction","forcePlanCompletion","surrogatekey","surrogateKey","flowControlDeferred","response","execute","bHasValidations","stop","alertMessage","propertiesToDisplayMessages","validationToDisplayMessages","messages","modalError","sendRollbackAction","refreshForm","jqxhrList","abortAll","_","messageType","addValidationMessage","icon","itemAdditionalClass","autofocus","showValidationMessage","addErrorMessage","errorMessage","deferred","selectedTabs","getSelectedTabs","isRefresh","idStartScope","tabContainers","tabContainer","selected","processInternalSubmitAction","waitingTemplate","waitingOverlay","waitingMessage","tmpl","isSharePoint","canvas","getSize","getOffset","min-height","min-width","getFocusedElement","setFocusedElement","errorJson","setSize","isEmptyObject","rule","clearOnlyServer","join","executeInterface","interface","executeSAPConnector","guidsap","executeConnector","guidConnector","unbindActions","cancelPreviousRequest","focusIdentifier","IdScope","objMessage","strMessage","multiactionConnection","connection","abort","showErrorAlertDialog","buttonId","sendCheckpoint","url","checkpointUrl","commitLinkForm","commitUrl","rollbackLinkForm","rollbackUrl","getButton","getFloatingButton","contextEvent","processTemplate","controls","processedTemplate","g1","g2","string","layoutCollection","getCss","layoutGuid","layoutguid","loadStyle","getContextEvent","stripslashes","desktop","allowAdd","withAddForm","allowEdit","withEditForm","allowDetail","allowDelete","getKeys","pointer","totalRows","inlineAddRecords","showPreview","drawControls","drawActions","drawControl","drawForms","drawPreview","templateItem","hasData","getTotalRows","getRow","getNextRow","getPreviousRow","getFirstRow","getLastRow","getIndexes","setPointer","isTherePendingInlineRow","addKey","newId","removeKey","navigationform","getParameters","recordXpath","recordXPath","submitAddRequest","addGridRecord","addUrl","idEntity","submitEditRequest","editGridRecord","editUrl","submitDeleteRequest","deleteGridRecord","deleteUrl","submitSaveRequest","saveGridRecord","saveUrl","dataFail","submitRollbackRequest","rollbackGridAction","getRemoteData","dataUrl","getData","content","validateControls","collapse","expandedIcon","getExpandedIcon","collapsedIcon","getCollapsedIcon","expandedClassIcon","toogleContainer","bImmediate","loading","panel","renderResult","performSearch","searchParams","submitSearch","refreshResults","collectSearchValues","isMapEmpty","maxRecords","maxRows","idSearchForm","allowFullSearch","criteria","records","deviceMaxRecordsExceeded","onSearchFinished","errorObject","submitArray","operation","getCriteriaOperation","criteriaData","dataType","parseAdditionalProperties","tabItems","counter","tooltip","tabOrientation","loadOnDemand","formParams","containsFocusedElement","setActiveTab","selectedTab","renderTabContent","hasLocalData","enableTyping","complementData","isDependant","getParentCombo","valueControl","BA_ACTION_PARAMETER_PREFIX","renderCombo","renderComboTemplate","dataPromise","getTemplateName","emptyValue","emptyLabelForCombo","getTemplateParams","unique","randomNumber","formatItem","showEmpty","showCurrentData","getDummyData","remoteDataLoaded","extra","recalculate","msgObj","auxMsg","parseJSON","resetData","combo","getSelectedValue","currentValue","parseAdditionalValues","newItem","hidden","bCurrentDataFound","emptyFound","dataValue","Object","column","comboData","isExtraItem","escapeValue","mapValue","fromAction","validateValue","translated","findDataValueById","showLetters","randomId","allowDecimals","getDefaultAllowDecimals","numDecimals","BIZAGI_DEFAULT_CURRENCY_INFO","decimalDigits","symbol","positiveFormat","negativeFormat","decimalSymbol","decimalSeparator","digitGroupSymbol","groupSeparator","groupDigits","setGroupDigits","colorize","colorizeOnNegative","dataTypeMinValue","calculateMinValue","dataTypeMaxValue","calculateMaxValue","isMobile","isAndroidDevice","numericInput","numeric","attachRetypeDouble","attachFormatCurrency","removeValidations","isValidRender","formatCurrency","regions","language","digitGroupSeparator","minValue","getMinValue","maxValue","getMaxValue","percentage","inputValue","inputLength","xPath","oldVal","isInvalidFormat","tempValue","isNaN","asNumber","messageToShow","isValidRenderMessage","executeFormatCurrencyPlugin","tmpData","isIE11","clipboardData","totalVal","eval","keydown","keyUnicode","charCode","keyCode","formatTimeout","clearTimeout","floatPart","selectionStart","selectionEnd","currentPosition","keyup","keypress","character","fromCharCode","roundToDecimalPlace","removeTrailingZeros","positive","regExp","re","bValid","validMessage","getDefaultGroupDigits","thousands","changeMinValue","newValue","changeMaxValue","createTooltip","currentTitle","toolTipZindex","getMaxZindex","zIndex","numericSN","toLowerCase","dateFormat","timeFormat","showTime","fullFormat","search","date","dateFormatter","getDateFromInvariant","datePickerRegional","formatDate","indexDateTimeSeparation","lastIndexOf","uppercaseDatePlaceholder","rtl","intHandler","isNow","dateControl","getDateControl","timeControl","getTimeControl","mask","onChangeHandler","updatingTime","setHours","formatInvariant","setSeconds","setMilliseconds","Date","hasMaxLines","maxLines","regularExpressionExpression","regularExpressionMessage","regularExpression","expression","isEmptyField","textarea","validationMessages","regEx","decodedValue","decodeURI","valueToDisplay","originalData","areThereEditableColumns","areThereTotalizedColumns","initProperties","enabledChecks","exclusiveChanges","originalEnabledChecks","columnProperties","groupBy","allowGrouping","spliceRowData","isExclusive","columnRender","singleInstance","totalize","reverse","showSummary","rowsPerPage","keyColumn","skipInitialLoad","allowMore","allowFilter","groupSummary","groupText","groupCollapsed","groupOrder","formShowMode","floatingHeader","sort","sortOrder","order","addLabel","editLabel","deleteLabel","exportOptionsLabel","detailLabel","tableCssClass","alreadySaved","overrideGetRemoteData","changes","cellOverrides","isRTL","changeOrderData","rowKey","reverseDataRows","shift","removeRemainingColumns","numColumns","remainingColumns","getColumnType","getGridTemplate","applyTemplate","columnInitializers","initialize","encodeXpath","sortType","searchFilter","getGridData","spliceIndex","spliceRowDataVisible","spliceRowDataEditable","rowTemplate","buildCellXpathFilter","disableServerGridValidations","dataResp","collectGridChange","isPressed","pressed","configureColumnSubmitOnChange","keysToDelete","columnXpath","canColumnBeSent","columnExclusiveChanges","columnEnabledChecks","lengthEnabledChecks","v","cellOverride","getCellOverride","getCellValue","getCellCurrentValue","getControlCell","setError","changeCellEditability","changeCellProperties","changeCellMaxValue","changeCellMinValue","cleanCellData","saveGrid","changeColumnsEditability","saveInlineAddedRows","refreshCell","refreshGridCell","typeRender","getDepthData","isBoolean","updateAffectedCellManually","canBeExported","rowDeleted","hasErrors","getDataNewRows","merge","uniqueMessages","isValueValid","k","messagesLength","gridValidationMessage","setCellOverrides","len_v","newRecords","cellValue","getGridExportUrl","disposition","exportType","submitForGridChange","getEnabledChecks","xpathfilter","getGridDataExclusivesSelected","cleanNewRecords","hasColorHeader","headerFormat","allowDinamiclabel","bindingValue","configureHelpText","searchForms","advancedSearch","allowSuggest","allowTyping","allowClear","searchLength","enableLocalStorage","expireCache","submitVersion","h_contexttype","enableQuerySuggestBehavior","term","regexC","getSearchData","hideStatus","selectedValue","regex","showDesignValidations","isNull","submitOnChangexpathContextRow","runButtonAction","b","filesCount","getFilePrintUrl","geolocation","navigator","allowUpdate","getCurrentPosition","succes_callback","fail_callback","getErrorMessage","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","performPrecision","latitude","longitude","toPrecision","allowFlip","flipped","flipstate","leftData","rightData","processPropertyValue","def","getFlipAssociation","flip","makeJsonBase","getColumnData","getRightAssociation","formatJson","associationData","leftId","association","isChecked","idRight","checked","removeElement","rightId","removeValue","addElement","leftXpath","rightXpath","leftFactName","rightFactName","values","maxFileSizeOfProperty","maxSize","maxFileSizeOfUser","BIZAGI_SETTINGS","UploadMaxFileSize","maxfiles","validExtensions","singleExtensions","defExtensions","getUploadAddUrl","allowSendInMail","files","getUploadXpath","haveFiles","noFiles","file","fileName","renderUploadItem","replaceFilesHtml","itemTemplate","getTemplateItemName","buildItemUrl","filename","getUploadFileUrl","fileId","deleteUploadItem","deleteUploadFile","grep","fileItem","buildAddParams","prefix","BA_PAGE_CACHE","BIZAGI_SESSION_NAME","setRenderRequired","maxFiles","serviceLocator","getUrl","q_xpath","showMetadata","listControl","fileProperties","idFileUpload","getFileExtension","isImage","lengthValues","idAttrib","renderFileLayout","loader","productBuildToAbout","replaceItemHtml","metadataTemplate","getECMMetadata","getFileProperties","metaData","ecm_ecmStatus","ecmStatus","ecm_isVisible","isVisible","ecm_allowUpdateMetadata","allowUpdateMetadata","ecm_allowDelete","ecm_allowUpdateContent","allowUpdateContent","ecm_allowView","allowView","ecm_allowCheckOut","allowCheckOut","ecm_allowCancelCheckOut","allowCancelCheckOut","ecm_allowEdit","idFileUploads","deviceType","extension","p_sessionId","cookie","getECMFileUrl","metaValues","deleteECMFile","lockUploadItem","checkOutFile","unlockUploadItem","cancelCheckOut","isEmptyValue","letterOpened","getLetterContent","getXpath","getContextXpath","saveLetterContent","getCanGenerateLetter","maximized","likeButton","editLinkForm","getFormLinkXpath","saveLinkForm","executeSubmitOnChange","submitCommitRequest","submitCheckpointRequest","submitDataRequest","services","service","dependants","parentCombo","initializingCascadingCombo","bindDependantCombo","configureReadOnlyHandlers","isInitialValue","deferredVisible","dependantCombo","onChangeFunction","refreshDependantCombo","focusDependant","cleanInput","isEventBinded","_data","unbindDependantCombo","dependant","parentValue","inputCombo","parentLength","parentArray","configured","itemSelected","listSize","getDataValue","idToRemove","markAsChecked","some","found","canAddMoreItems","$tagsContainer","toArray","reduce","acc","getElementWidth","MORE_OPTION_WIDTH","styles","getComputedStyle","filterList","query","stringContainer","stringToSearch","addSelectedElements","findItemById","hasSearchForm","list","removeLastElement","getListItems","showsymbol","currencySymbol","horizontal","vertical","getUploadAddFileUrl","isUserPreference","isAutoWidth","isAutoHeight","getTemplateItem","currentUser","idUser","getPropertyData","charAt","buildItemUrlOffline","getFormParams","getOfflineImage","imageValue","getDataUrl","saveImageOffline","path","blobPromise","isNative","media","getImagePath","normalizeIOSFilePath","errorHandler","resolveLocalFileSystemURL","fileEntry","reader","FileReader","onloadend","blob","Blob","readAsArrayBuffer","blobImage","operationType","saveOfflineImage","buildFullItemUrl","getFileDependencies","fileDependencies","loadFile","renderUserfieldControl","extendedData","ajax","userEditableControl","getEditableControl","renderComplex","loadUserfieldReadOnly","userReadOnlyControl","getReadonlyControl","getReadonlyValue","setEditableValue","getEditableValue","getPropertyValue","propertyName","jqXHR","textStatus","errorThrown","getRenderElements","getServerResourceURL","resource","userfieldGuid","getRenderValue","showDialog","showPopup","initialParams","userfieldName","getUserfieldControl","isColumn","getControlXpathContext","getUserFieldInstance","replicateUserfieldMethods","userfieldInstance","downloadalldocuments","allowGenerate","preRenderControl","downloadAllDocuments","documents","getControlHtml","renderDocumentsHtml","renderActionsHtml","noActivateButton","allowgenerate","activateButton","getDocumentXpath","renderDocumentItem","joined","buildAllDocumentsUrl","getAllDocumentsDownloadUrl","caseId","idWorkItem","workitemId","htmlControl","updateControlForPrintMode","validateContainer","replaceActionsHtml","buttonExecuted","generateLink","isPropagationStopped","documentTemplateGenerate","showDocumentPreview","deleteDocumentTemplate","resolveDeleteDocumentTemplate","xpathcontext","generateDocumentTemplate","resolveDocumentTemplateGenerate","messageText","autoOpenDocuments","returnCssTypeFile","lenght","redrawDocuments","documentContainer","renderAllDocumentDownload","removeDeleteButton","startIndex","restOfWord","finishIndex","downloadAllDocumentsLink","getErrorTemplate","getTemplateDownload","getTemplateReadonly","setRanageControls","minControl","maxControl","$maxCanvas","$minCanvas","renderRangeControl","$canvas","defineRangeControl","dateMin","suscribe","observer","notify","dateMax","getRenderProperties","typeRangeControl","renderProperties","moneyMin","money","moneyMax","numberMin","numberMax","checkListGroup","typeForm","deferredActions","engine","templateEngine","autoGenerateData","templateGuid","selecttemplate","processPropertyValueArgs","pcaseId","pguidEntity","guidEntity","psurrogatedKey","surrogatedKey","ptags","tagslist","pmaxitems","maxItems","pactionXpath","xpathActions","processPropertyValueDataTmplArgs","ptemplateGuid","defaultAllowActions","allowactions","isHorizontal","allowSearch","templatetype","executeActionImmediately","processPropertyValueExecuteAction","pguidAction","pparameters","executeActions","notifyExecution","actionName","readOnly","templateDefined","actionManager","guidProcess","actionType","guidWFClass","hasStartForm","processStartForm","guidprocess","title","processActionFormCollection","processActionForm","addActionToQueue","actionsList","additionalXpaths","additionalXpath","idParentWorkitem","entityXpath","newValueActionsList","removeActionToQueue","controlValue","countSameActions","count","getPropertiesActionLaucher","actionsLaucher","getTagList","processPropertyValueExecuteConstructor","pguidConstructor","guidConstructor","guidObject","displayNamee","taglist","decoratedClass","decorateRenders","columnVisible","showColumn","readonly","isReadonly","instanceDecoratedClass","applyOverrides","propertyOverrides","invalidElement","overrideDecoratedRenderProperties","renderSummary","postRenderSummary","setSurrogateKey","defaultvalue","setDefaultValue","getCompositeValue","overrideProperties","getSortName","getAnyDecoratedInstance","getSortColumn","arrayEach","originalGetData","getDataForAllCells","findDataById","fetchingData","valueForGrid","tableCell","formattedDate","templates","loadOverrides","initAsyncStuff","loadTemplates","loadTemplate","templateDestination","templateService","resolvedTemplate","getCommonTemplate","containerParams","mobileform","formTemplate","usersForm","contentPanel","nestedForm","tabItem","accordion","accordionItem","group","mobilegroup","searchForm","renderParams","extendedText","mobiletext","check","yesno","cascadingCombo","multiSelect","radio","image","ecm","upload","searchList","letter","formLink","link","layoutImage","layoutLink","layoutLabel","layoutText","layoutDateTime","layoutNumber","layoutMoney","layoutPlaceholder","actionLauncher","layoutBoolean","layoutUpload","entityTemplate","polymorphicLauncher","userfieldWrapper","getSearchRender","getQueryRender","fileprint","collectionnavigator","getUser","rangeDate","rangeMoney","rangeNumber","activityCheckList","columnParams","exclusiveCheck","uploadecm","numberScientificNotation","queryExtendedText","queryText","queryCheck","queryYesNo","queryNumber","queryMoney","queryDate","queryCombo","queryCascadingCombo","querySuggest","queryLabel","queryList","queryMultiSelect","querySearch","queryRadio","queryState","queryCaseState","queryProcess","querySearchUser","execution_device","cachedFactory","getRenderFactory","print","factory","tablet","isSmartphoneDevice","smartphone","getDataService","executionDeferred","deviceFactory","getFactory","subscribe","unsubscribe","publish","update","doc","ownerDocument","location","queryString","getQueryString","process","refreshing","pathProcess","insertBefore","lastWidth","lastHeight","resizeInPopUpHTML","configureRefresh","configureRouting","configureRenderError","configureResize","configureGlobalHandlers","stopAndLog","enableE2EInterface","errorTemplate","getFormData","transformGridControl","processForm","getFailDeferred","jsonErrorMessage","BIZAGI_ORIENTATION","buttonsForm","refreshParams","fastEmpty","canvasParent","resizeTimeout","forceResize","triggerParams","heightActivitiFormContainer","renderForm","buttonContainer","heightButtonContainer","renderBehavior","heightCanvas","innerHeight"],"mappings":"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","sourcesContent":["/**\r\n * Autor: Ricardo Pérez\r\n */\r\n\r\n(function ($) {\r\n\r\n    $.fn.material_bizagi_tabs = function (options, params) {\r\n\r\n        var opts = $.extend({}, $.fn.material_bizagi_tabs.defaults, options);\r\n\r\n        var base = {\r\n            index: 0,\r\n            tabs: [],\r\n            $el: undefined,\r\n            $active: undefined,\r\n            $active_content: undefined, \r\n            init: function(el, params){\r\n                var self = this;\r\n                var $tabs = $(\">ul.bz-tabs\", el);\r\n                var $content_tabs = self.$el = $(el);\r\n                var $ind;\r\n                self.index = opts.active_index_tab;\r\n\r\n                function updatePositions(active, $indicator){\r\n                    if (typeof $indicator !== \"undefined\"){\r\n                        var info = updateIndicatorState($tabs.get(0), active.get(0), opts.direction);\r\n                        $indicator.css(\"left\", info.left).css(\"width\", info.width);\r\n                    }\r\n        \r\n                    var scroll_info = scrollSelectedIntoView($tabs.get(0), active.get(0), opts.direction);                        \r\n                    $tabs.scrollLeft(scroll_info);\r\n                    $tabs.trigger(\"updatePositions\", getTabsMetaInfo($tabs.get(0), active.get(0), opts.direction));\r\n                }\r\n\r\n                $(\">li.bz-tab\", $tabs).each(function(index, element) {\r\n                    if (index === opts.active_index_tab){\r\n                        self.$active = $(this);\r\n                        self.$active.addClass(\"active\");\r\n                    }\r\n                    else {\r\n                        $($(element).data(\"reference\"), $content_tabs).hide();\r\n                    }\r\n                    self.tabs.push({index: index, element: element});\r\n                });\r\n                \r\n                self.$active_content = $(self.$active.data(\"reference\"), $content_tabs);\r\n                \r\n                //Updates the initial position\r\n                updatePositions(self.$active);\r\n                \r\n                $tabs.on('click', '> li.bz-tab', function (e) {\r\n                    e.stopPropagation();\r\n        \r\n                    if (typeof $ind === \"undefined\"){\r\n                        $ind = $(\"<li class='bz-indicator-bar'></li>\");\r\n                        var info = updateIndicatorState($tabs.get(0), self.$active.get(0), opts.direction);\r\n                        $ind.css(\"left\", info.left).css(\"width\", info.width);\r\n                        $ind = $tabs.prepend($ind).find(\".bz-indicator-bar\");\r\n                    }\r\n        \r\n                    self.$active.removeClass('active');            \r\n                    self.$active_content.hide();\r\n        \r\n                    self.$active = $(this);\r\n        \r\n                    var reference = self.$active.data(\"reference\");\r\n                    self.index = self.$active.data(\"index\");\r\n\r\n                    self.$active_content = $(reference, $content_tabs);\r\n        \r\n                    self.$active.addClass('active');\r\n\r\n                    //Updates to the current position\r\n                    updatePositions(self.$active, $ind);\r\n                    $tabs.trigger(\"updateActive\", {index: self.index});\r\n\r\n                    self.$active_content.show();\r\n                    e.preventDefault();\r\n                });\r\n\r\n            },\r\n            getActiveTab: function(){\r\n                return {\r\n                    index: this.index,\r\n                    tab: this.$active,\r\n                    contantTab : this.$active_content\r\n                };\r\n            },\r\n            moveToNextTab: function(){\r\n                var index = ((this.index + 1) < this.tabs.length) ? this.index + 1 : 0;\r\n                this.tabs[index].element.click();\r\n            },\r\n            refreshPositions: function(){\r\n                this.tabs[this.index].element.click();\r\n            }\r\n        };\r\n\r\n        \r\n        if (typeof options == \"string\" && options) {\r\n            base = $(this).data(\"base\");\r\n            if (typeof base == \"undefined\"){\r\n                console.error(\"this plugin is has not been initialized!!\");\r\n            }\r\n            return base[options](params);\r\n        }\r\n        else {\r\n            return this.each(function () {\r\n                base.init(this, params);\r\n                $(this).data(\"base\", base);\r\n            });\r\n        }\r\n    };\r\n\r\n    $.fn.material_bizagi_tabs.defaults = {\r\n        direction: 'ltr',\r\n        active_index_tab: 0\r\n    }\r\n\r\n    function updateIndicatorState(tabs, active_tab, direction) {\r\n        var tabs_meta = getTabsMetaInfo(tabs, active_tab, direction);\r\n        var tabs_info = tabs_meta.tabsMetaInfo;\r\n        var tab_info = tabs_meta.tabMetaInfo;\r\n\r\n        var left = 0;\r\n        if (tabs_info && tab_info) {\r\n            var tmp_left = \"rtl\" === direction ? tabs_info.scrollLeftNormalized + tabs_info.clientWidth - tabs_info.scrollWidth : tabs_info.scrollLeft;\r\n            left = tab_info.left - tabs_info.left + tmp_left;\r\n        }\r\n        return {\r\n            left: left,\r\n            width: tab_info ? tab_info.width : 0\r\n        }\r\n    }\r\n\r\n    function getTabsMetaInfo(tabs, active_tab, direction) {\r\n        var tabs_meta_info = void 0;\r\n        if (tabs) {\r\n            var r = tabs.getBoundingClientRect();\r\n            tabs_meta_info = {\r\n                clientWidth: tabs ? tabs.clientWidth : 0,\r\n                scrollLeft: tabs ? tabs.scrollLeft : 0,\r\n                scrollLeftNormalized: tabs ? getNormalizedScrollLeft(tabs, direction) : 0,\r\n                scrollWidth: tabs ? tabs.scrollWidth : 0,\r\n                left: r.left,\r\n                right: r.right\r\n            }\r\n        }\r\n        var tab_meta_info = void 0;\r\n        if (tabs && false !== active_tab) {\r\n            tab_meta_info = active_tab.getBoundingClientRect();\r\n        }\r\n\r\n        return {\r\n            tabsMetaInfo: tabs_meta_info,\r\n            tabMetaInfo: tab_meta_info\r\n        }\r\n    }\r\n\r\n    function getNormalizedScrollLeft(tabs, direction) {\r\n        var a = tabs.scrollLeft;\r\n        if (\"rtl\" !== direction)\r\n            return a;\r\n        var n = getScrollType(tabs);\r\n        if (\"indeterminate\" === n)\r\n            return Number.NaN;\r\n        switch (n) {\r\n            case \"negative\":\r\n                return e.scrollWidth - e.clientWidth + a;\r\n            case \"reverse\":\r\n                return e.scrollWidth - e.clientWidth - a\r\n        }\r\n        return a\r\n    }\r\n\r\n    function getScrollType(tabs) {\r\n        if (!tabs || !window.document.body)\r\n            return \"indeterminate\";\r\n\r\n        var e = window.document.createElement(\"div\");\r\n        e.appendChild(document.createTextNode(\"ABCD\"));\r\n        e.dir = \"rtl\";\r\n        e.style.fontSize = \"14px\";\r\n        e.style.width = \"4px\";\r\n        e.style.height = \"1px\";\r\n        e.style.position = \"absolute\";\r\n        e.style.top = \"-1000px\";\r\n        e.style.overflow = \"scroll\";\r\n        document.body.appendChild(e);\r\n        type = \"reverse\";\r\n        if (e.scrollLeft > 0)\r\n            type = \"default\";\r\n        else {\r\n            e.scrollLeft = 1;\r\n            0 === e.scrollLeft && (type = \"negative\")\r\n        }\r\n        document.body.removeChild(e);\r\n        return type;\r\n    }\r\n\r\n    scrollSelectedIntoView = function (tabs, active_tab, direction) {\r\n        var tabs_meta = getTabsMetaInfo(tabs, active_tab, direction)\r\n        var tabs_info = tabs_meta.tabsMetaInfo;\r\n        var tab_info = tabs_meta.tabMetaInfo;\r\n\r\n        if (!tab_info || !tabs_info)\r\n            return;\r\n        \r\n        var scroll_info = void 0;\r\n        if (tab_info.left < tabs_info.left) {\r\n            scroll_info = tabs_info.scrollLeft + (tab_info.left - tabs_info.left);\r\n        } else if (tab_info.right > tabs_info.right) {\r\n            scroll_info = tabs_info.scrollLeft + (tab_info.right - tabs_info.right);\r\n        }             \r\n        return scroll_info;\r\n    }\r\n    \r\n})($);","/**\r\n * Material floating button\r\n * By: Nobita\r\n * Repo and docs: https://github.com/nobitagit/material-floating-button\r\n *\r\n * License: MIT\r\n */\r\n\r\n// build script hook - don't remove\r\n(function ($) {\r\n    $.fn.mfb = function (options) {\r\n        \"use strict\";\r\n\r\n        var animations = [\"mfb-zoomin\", \"mfb-slidein\", \"mfb-slidein-spring\", \"mfb-fountain\"];\r\n        var placements = [\"mfb-component--tl\", \"mfb-component--tr\", \"mfb-component--bl\", \"mfb-component--br\"];\r\n\r\n        /**\r\n         * Some defaults\r\n         */\r\n        var self = this;\r\n        var overlay = {\r\n            element: $(\"<div class='mfb-component__overlay'></div>\"),\r\n            opened: false\r\n        };\r\n\r\n        options = options || {};\r\n        options.buttons = options.buttons || [];\r\n        options.activePrincipalButton = options.activePrincipalButton || false;\r\n        options.placement = typeof options.placement !== \"undefined\" ? (placements.indexOf(options.placement) !== -1 ? options.placement : \"mfb-component--br\") : \"mfb-component--br\";\r\n        options.efect = typeof options.efect !== \"undefined\" ? (animations.indexOf(options.efect) !== -1 ? options.efect : \"mfb-slidein\") : \"mfb-slidein\";\r\n        options.clickHoverOpt = options.clickHoverOpt ||\"click\";\r\n        options.toggleMethod = options.toggleMethod || \"data-mfb-toggle\";\r\n        options.menuState = options.menuState || \"data-mfb-state\";\r\n        options.menuStateValue =  options.menuStateValue || \"closed\";\r\n        options.isOpen = options.isOpen||  \"open\";\r\n        options.isClosed = options.isClosed || \"closed\";\r\n        options.mainButtonClass = options.mainButtonClass || \"mfb-component__button--main\";\r\n        options.restingIcon = options.restingIcon || \"mo-icon bz-plus\";\r\n        options.activeIcon = options.activeIcon || \"mo-icon bz-cross\";\r\n\r\n        /**\r\n         * @todo ask: I think this is useless cause we don't need to remove the main button, remove the complete component will be cleaner\r\n         */\r\n        // $(\"[\" + options.toggleMethod + \"='\" + options.clickHoverOpt + \"'] .\" + options.mainButtonClass, this).remove();\r\n        $(this).children(\".mfb-component-holder\").remove();\r\n        /**\r\n         * @fix How about the events that was bind before?\r\n         */\r\n\r\n        var tmpl =\r\n            \"<ul class=\\\"mfb-component-holder #: data.placement # #: data.efect #\\\" #: data.toggleMethod #=\\\"#: data.clickHoverOpt #\\\" #: data.menuState#=\\\"#: data.menuStateValue #\\\">\" +\r\n            \"   <li class=\\\"mfb-component__wrap\\\">\" +\r\n            \"      #if (data.activePrincipalButton && data.buttons.length >= 1){#\" +\r\n            \"       <a #if(typeof data.buttons[0].label !== \\\"undefined\\\"){# data-mfb-label=\\\"#: data.buttons[0].label #\\\"#}# class=\\\"mfb-component__button--main\\\">\" +\r\n            \"           <i class=\\\"mfb-component__main-icon--resting mfb-icon-font bz-#:data.restingIcon#\\\"></i><i class=\\\"mfb-component__main-icon--active mfb-icon-font bz-#:data.buttons[0].icon#\\\"></i>\" +\r\n            \"       </a>\" +\r\n            \"       #}else{#\" +\r\n            \"       <a #if(typeof data.label !== \\\"undefined\\\"){# data-mfb-label=\\\"#: data.label #\\\"#}# class=\\\"mfb-component__button--main\\\">\" +\r\n            \"           <i class=\\\"mfb-component__main-icon--resting mfb-icon-font bz-#:data.restingIcon#\\\"></i><i class=\\\"mfb-component__main-icon--active mfb-icon-font bz-#:data.activeIcon#\\\"></i>\" +\r\n            \"       </a>\" +\r\n            \"       #}#\" +\r\n            \"       # if(data.buttons.length > 0){#\" +\r\n            \"       <ul class=\\\"mfb-component__list\\\">\" +\r\n            \"           #for(var i = (data.activePrincipalButton ? 1 : 0), len = data.buttons.length; i< len; i++){#\" +\r\n            \"           <li data-id=\\\"#: data.buttons[i].id #\\\">\" +\r\n            \"               <a href=\\\"#: data.buttons[i].link #\\\" data-index=\\\"#: i#\\\" #if(typeof data.buttons[i].label !== \\\"undefined\\\"){# data-mfb-label=\\\"#: data.buttons[i].label #\\\"#}# class=\\\"mfb-component__button--child\\\">\" +\r\n            \"                  <i class=\\\"mfb-component__child-icon mfb-icon-font bz-#: data.buttons[i].icon #\\\"></i>\" +\r\n            \"               </a>\" +\r\n            \"           </li>\" +\r\n            \"           #}#\" +\r\n            \"       </ul>\" +\r\n            \"       #}#\" +\r\n            \"   </li>\" +\r\n            \"</ul>\";\r\n\r\n        /**\r\n         * Internal references\r\n         */\r\n        var target,\r\n            currentState;\r\n\r\n        /**\r\n         * For every menu we need to get the main button and attach the appropriate evt.\r\n         */\r\n        function attachEvt(elems, evt, handler) {\r\n            for (var i = 0, len = elems.length; i < len; i++) {\r\n                elems[i].addEventListener(evt, handler, false);\r\n            }\r\n        }\r\n\r\n        function configureBlur(element, blur){\r\n            if(blur){\r\n                element.siblings().addClass(\"mfb-component__overlay--blur\");\r\n                element.closest(\"[data-role]\").siblings().addClass(\"mfb-component__overlay--blur\");\r\n            }else{\r\n                element.siblings().removeClass(\"mfb-component__overlay--blur\");\r\n                element.closest(\"[data-role]\").siblings().removeClass(\"mfb-component__overlay--blur\");\r\n            }\r\n        }\r\n\r\n        /**\r\n         * The open/close action is performed by toggling an attribute\r\n         * on the menu main element.\r\n         *\r\n         * First, check if the target is the menu itself. If it's a child\r\n         * keep walking up the tree until we found the main element\r\n         * where we can toggle the state.\r\n         */\r\n        function toggleButton(evt) {\r\n            target = evt.target;\r\n            while (target && !target.getAttribute(options.toggleMethod)) {\r\n                target = target.parentNode;\r\n                if (!target) {\r\n                    return;\r\n                }\r\n            }\r\n            currentState = target.getAttribute(options.menuState) === options.isOpen ? options.isClosed : options.isOpen;\r\n\r\n            if (options.activePrincipalButton && currentState !== \"open\") {\r\n                var button = options.buttons[0];\r\n                if (options.click) {\r\n                    options.click(evt, $.extend(button, {principal: true}), this);\r\n                }\r\n                configureBlur($(target), true);\r\n            }\r\n\r\n            if (currentState === \"open\" && !overlay.opened) {\r\n                overlay.element.appendTo(target).bind(\"click\", function() {\r\n                    this.remove();\r\n                    overlay.opened = false;\r\n                    target.setAttribute(options.menuState, \"close\");\r\n                    configureBlur($(target), false);\r\n                });\r\n                configureBlur($(target), true);\r\n            } else {\r\n                overlay.element.remove();\r\n                configureBlur($(target), false);\r\n            }\r\n\r\n            overlay.opened = !overlay.opened;\r\n\r\n            target.setAttribute(options.menuState, currentState);\r\n        }\r\n\r\n        function clickChildButton(evt) {\r\n            var index = $(this).data(\"index\");\r\n            var button = options.buttons[index];\r\n\r\n            $(\".mfb-component__overlay\", self).click();\r\n\r\n            if (options.click){\r\n                evt.preventDefault();\r\n                options.click(evt, $.extend(button, {principal: false}), this);\r\n            }\r\n        }\r\n\r\n        function clickPrincipalButton(evt) {\r\n            if (options.click) {\r\n                evt.preventDefault();\r\n                options.click(evt, { principal: true }, this);\r\n            }\r\n        }\r\n\r\n        var template = kendo.template(tmpl, { useWithBlock: false });\r\n        var html = template(options);\r\n\r\n        if (options.position === \"prepend\") {\r\n            this.prepend(html);\r\n        } else {\r\n            this.append(html);\r\n        }\r\n\r\n        // Principal button to toggle\r\n        var toggle = options.buttons.length > 0 ? toggleButton : clickPrincipalButton;        \r\n        attachEvt($(\"[\" + options.toggleMethod + \"='\" + options.clickHoverOpt + \"'] .\" + options.mainButtonClass, this), \"click\", toggle);        \r\n\r\n        // Secondary buttons to click\r\n        attachEvt($(\".mfb-component__button--child\", this), \"click\", clickChildButton);\r\n    };\r\n\r\n// build script hook - don't remove\r\n})(jQuery);\r\n\r\n\r\n(function ($) {\r\n    $.fn.bz_navigation_buttons = function (options) {        \r\n        options = options || {};\r\n        var MARGIN = 2;\r\n        var buttons = options.buttons || [];\r\n        var isDesign = options.isDesign || false;\r\n        var lastActionExecuted = options.lastActionExecuted || false;\r\n        var allowAddButtons = options.allowAddButtons || false;\r\n        var $element = this;\r\n        \r\n\r\n        var addButtonTemplate = '<div class=\"bz-button--add\"><svg class=\"ico_16x16\" ><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-plus\"></use></svg></div>';        \r\n        var containerTemplate = '<ul class=\"bz-buttons--container\"></ul>';\r\n        var buttonTemplate ='<li class=\"bz-button--container\"><button class=\"bz-btn\">{0}</button></li>';        \r\n        var rightNavigationButton = '<div class=\"bz-button--rigth\"><svg class=\"ico_16x16\" ><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-arrow-rigth\"></use></svg></div>';\r\n        var leftNavigationButton = '<div class=\"bz-button--left\"><svg class=\"ico_16x16\" ><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-arrow-left\"></use></svg></div>';       \r\n        \r\n        $element.empty();\r\n        $element.addClass('bz-buttons--navigation');\r\n\r\n        var $container = $(containerTemplate);\r\n        $container.appendTo($element);    \r\n                   \r\n        \r\n        var processButtons = function(){                      \r\n            var result = MARGIN;\r\n            for (var index = 0; index < buttons.length; index++) {\r\n                (function(button){\r\n                    var caption = button.properties.caption;                            \r\n                    var $elementButton =  $(buttonTemplate.replace(\"{0}\", caption));\r\n                    var height = 0;    \r\n\r\n                    var handlerOnClickButton = function(){                                                \r\n                        $container.trigger('onSelectButton', {\r\n                            $element: $elementButton,\r\n                            button: button\r\n                        });\r\n                        \r\n                        var targetElement = $container.get(0);\r\n                        var clientWidth = targetElement.clientWidth; \r\n                        var offset = isDesign ? 35 : 0;\r\n\r\n                        if (targetElement.scrollWidth > clientWidth){\r\n                            if (height > clientWidth) { targetElement.scrollLeft = (height - clientWidth) + offset }\r\n                            else {\r\n                                if ((height - targetElement.scrollLeft) < targetElement.scrollLeft) { targetElement.scrollLeft = (height - (targetElement.scrollLeft + offset)); }\r\n                            }                            \r\n                        }\r\n                    };\r\n                    \r\n                    $elementButton    \r\n                        .on('click', handlerOnClickButton)\r\n                        .appendTo($container);\r\n                    \r\n                    height = result = result + $elementButton.get(0).offsetWidth + MARGIN;    \r\n\r\n                }(buttons[index].button), result)                                                                                                                                                      \r\n            };\r\n                             \r\n            \r\n            if (isDesign) {\r\n                var $addButton = $(addButtonTemplate);\r\n                \r\n                if (allowAddButtons){\r\n                    $addButton.click(function(){                   \r\n                        $container.trigger('onAddButton');                                                            \r\n                    });\r\n        \r\n                    $addButton.appendTo($element);\r\n                }\r\n                \r\n                var htmlButtons = $container.get(0);\r\n\r\n                var heightAddButton = $addButton.get(0).scrollWidth;\r\n                var heightWrapper = $element.get(0).scrollWidth;\r\n                var heightButtons =  htmlButtons.scrollWidth;          \r\n                \r\n                \r\n                var $rightNavigationButton = $(rightNavigationButton);\r\n                var rightNavigationButtonIsLocated = heightButtons > (heightWrapper - heightAddButton);\r\n\r\n                if (rightNavigationButtonIsLocated) { $rightNavigationButton.insertAfter($container); }\r\n\r\n                $rightNavigationButton.on(\"click\", function(){\r\n                    htmlButtons.scrollLeft += 40;\r\n                });\r\n                \r\n                var leftNavigationButtonIsLocated = false;\r\n                var $leftNavigationButton = $(leftNavigationButton);\r\n                                \r\n\r\n                $leftNavigationButton.on(\"click\", function(){                    \r\n                    htmlButtons.scrollLeft -= 40;                    \r\n                });\r\n\r\n                $container.on(\"scroll\", function(ev){\r\n                    var targetElement = ev.target;                     \r\n                    var maxScrollLeft = targetElement.scrollWidth - targetElement.clientWidth;\r\n                    var scrollLeft = targetElement.scrollLeft;\r\n\r\n                    if ( scrollLeft === 0 && leftNavigationButtonIsLocated) {\r\n                        leftNavigationButtonIsLocated = false;\r\n                        $leftNavigationButton.detach();\r\n                    }\r\n\r\n                    if (rightNavigationButtonIsLocated && scrollLeft === maxScrollLeft) {\r\n                        rightNavigationButtonIsLocated = false;\r\n                        $rightNavigationButton.detach();\r\n                    }\r\n                                        \r\n                    if (!leftNavigationButtonIsLocated && scrollLeft > 0){\r\n                       \r\n                        $leftNavigationButton.prependTo($element);     \r\n                        leftNavigationButtonIsLocated = true;\r\n                    }\r\n                    \r\n                    if (!rightNavigationButtonIsLocated && scrollLeft < maxScrollLeft){\r\n                        rightNavigationButtonIsLocated = true;\r\n                        $rightNavigationButton.insertAfter($container);       \r\n                    }                    \r\n                });\r\n                \r\n                if (lastActionExecuted === \"addButton\") {\r\n                    if (rightNavigationButtonIsLocated){\r\n                        htmlButtons.scrollLeft = (htmlButtons.scrollWidth - htmlButtons.clientWidth);  \r\n                    }                    \r\n                }\r\n            }\r\n        }              \r\n\r\n        processButtons();\r\n        \r\n        return  $container; \r\n    }\r\n\r\n})(jQuery);    ","/*\r\nAdd the Material Design Style Ripple Effect on Click / Touch.\r\n*/\r\n(function ($) { \r\n    var transparent;\r\n    //only run this once. this addes an empty elment in boody root and gets the defintion of the browsers transparent color scheme.\r\n    if (typeof (transparent) == \"undefined\") {\r\n        // Get this browser's definition of no back ground / transprent, rgba(0,0,0,0) etc..\r\n        // Must be appended else Chrome etc return 'initial'\r\n        var $temp = $('<div style=\"background:none;display:none;\"/>').appendTo('body');\r\n        //now we just get the value given back to use by the browser for its spcific transparent color scheme.\r\n        transparent = $temp.css('backgroundColor');\r\n        //remove the temp object since were done with it.\r\n        $temp.remove();\r\n    }\r\n\r\n\r\n    //add Material desing style rippple effect to a given element that animates on click / touch.\r\n    $.fn.rippleEffect = function (options) {\r\n        // Extend our default options with those provided.\r\n        var opts = $.extend({}, $.fn.rippleEffect.defaults, options);\r\n\r\n\r\n        return this.each(function () {\r\n            $(this).on(\"click\", function (e) {\r\n                var $thisElement = $(this),\r\n                eventPageX,\r\n                eventPageY,\r\n                inkX,\r\n                inkY,\r\n                maxDiameter,\r\n                eventType = e.type,\r\n                rippleColor,\r\n                $inkSpan,\r\n                $inkparent;\r\n\r\n                //default append\r\n                $inkparent = $thisElement;\r\n\r\n                function getRippleColorFromTraverse() {\r\n                    if (opts.inkColor != \"\") {\r\n                        return opts.inkColor;\r\n                    } else {\r\n                        //try and get from elemnt or parent what ever has a bg color and it will lighten or dark based on color.\r\n                        return getInkColor($inkparent, opts.inkDefaultColor);\r\n                    }\r\n                }\r\n                //check to see if were appending ink to a parent element other than the trigger\r\n                //if you append to a parent item that item will have the ripple span and it may block access to links\r\n                //all i had to do was give any of the siblings of the ripple a z-index of 1, some i had to set position to relative.\r\n                if (opts.appendInkTo != \"\") {\r\n                    $inkparent = $thisElement.closest(opts.appendInkTo);\r\n                }\r\n                // check to se if we have an ink, if not we need to add it in, we only need to do this once.\r\n                if ($inkparent.find(\".\" + opts.inkClass).length == 0) {\r\n                    //add ink \r\n                    $inkparent.append('<span class=\"' + opts.inkContainerClass + '\"><span class=\"' + opts.inkClass + '\"></span></span>');\r\n                }\r\n                //set the ink var targeting the ink within the element to prevent dup ink animates.\r\n                $inkSpan = $inkparent.find(\".\" + opts.inkContainerClass + \" > \" + \" .\" + opts.inkClass);\r\n                //incase of quick double click or animate is present. remove the animation\r\n                $inkSpan.removeClass(\"animate\");\r\n\r\n                //now if the ink has no height set we need to add it in.\r\n                if (!$inkSpan.height() && !$inkSpan.width()) {\r\n                    //use $thisElement width or height whichever is larger for the diameter to make a circle which can cover the entire element.\r\n                    maxDiameter = Math.max($inkparent.outerWidth(), $inkparent.outerHeight());\r\n                    //set width and height and get bg color for the\r\n                    //see if ripple color was provided via data attr.\r\n                    if (typeof ($thisElement.data(\"ripple\")) != \"undefined\" && $thisElement.data(\"ripple\") != \"\") {\r\n                        rippleColor = $thisElement.data(\"ripple\");\r\n                    } else {\r\n                        //check if a target element id to get a ripple color from is provided\r\n                        if (typeof ($thisElement.data(\"ripple-getcolorfromid\")) != \"undefined\" && $thisElement.data(\"ripple-getcolorfromid\") != \"\") {\r\n                            var idToUse = $thisElement.data(\"ripple-getcolorfromid\");\r\n                            //make sure element is on page.\r\n                            if ($(idToUse).length > 0) {\r\n                                //set from given elmements bgcolor.\r\n                                rippleColor = $(idToUse).css(\"background-color\");\r\n                            } else {\r\n                                //get from default ways\r\n                                rippleColor = getRippleColorFromTraverse();\r\n                            }\r\n                        } else {\r\n                            //get from default ways\r\n                            rippleColor = getRippleColorFromTraverse();\r\n                        }\r\n                    }\r\n                    //set h and w and ripple color.\r\n                    $inkSpan.css({ height: maxDiameter, width: maxDiameter, \"background-color\": rippleColor });\r\n                }\r\n                \r\n                //now that the ink is taken care of we need to set the position where it starts, which if from click.\r\n                //get event type.\r\n                if(eventType === \"click\"){\r\n                    eventPageX = e.pageX; \r\n                    eventPageY = e.pageY;\r\n                } else if(eventType === \"touchstart\") {\r\n                    var touch = (e.originalEvent.touches[0] || e.originalEvent.changedTouches[0]);\r\n                    eventPageX = touch.pageX;\r\n                    eventPageY = touch.pageY\r\n                }\r\n               \r\n                inkX = (eventPageX - $inkparent.offset().left - $inkSpan.width() / 2);\r\n                inkY = (eventPageY - $inkparent.offset().top - $inkSpan.height() / 2);\r\n                $inkSpan.css({ top: inkY + 'px', left: inkX + 'px' }).addClass(\"animate\");\r\n                //remove animation after a little bit.\r\n                setTimeout(function () {\r\n                    $inkSpan.removeClass(\"animate\")\r\n                }, 400);\r\n\r\n            });\r\n        });\r\n    };\r\n    // Plugin defaults – added as a property on our plugin function.\r\n    $.fn.rippleEffect.defaults = {\r\n        inkContainerClass: \"ripple\",\r\n        inkClass: \"ink\",\r\n        //to avoid a global default you can add data-ripple=\"#ff00ff\" to the element that will have the ripple and that color will be used.\r\n        //or to use a tagrget elements background color for the ripple you can set the data-ripple=\"\" and data-ripple-getcolorfromid=\"#elmentWIthBGColorToUSe\"\r\n        inkDefaultColor: \"#F0F0F0\", //falback color to use if using parent traversing to get a bg color.\r\n        inkColor: \"\", //the ink color you want the element to use, this will override any bg checks for element and parent traversing, but if the ement has data-ripple=\"#fff\" the #fff will be used above all else\r\n        //if you append to a parent item that item will have the ripple span and it may block access to links and child elements\r\n        //all i had to do was give any of the children of the appended element a z-index of 1, some i had to set position to relative.\r\n        appendInkTo: \"\" //append ink to a diffrent element. will find closest element matching.\r\n    };\r\n\r\n    //Now users can include a line like this in their scripts:\r\n    //$.fn.rippleEffect.defaults.inkDefaultColor = \"#0000FF\";\r\n\r\n    // Define our get background color function.\r\n    //this will try and get a background color for the ink color manipulation \r\n    //by starting with the element provided and going as far back to the body unless a value is found.\r\n    //providing a falback value will make sure that an actual color is returned\r\n    function getBackgroundColorForInk($element, fallback) {\r\n        function getBgColor($elementToCheckForBg) {\r\n            //here we check against the @transparent var that is set on load.\r\n            if ($elementToCheckForBg.css('backgroundColor') == transparent) {\r\n                //here we check if were not at body, if not, then run again on the elments parent, if were at body use fallback or the browers take on transparent.\r\n                return !$elementToCheckForBg.is('body') ? getBgColor($elementToCheckForBg.parent()) : fallback || transparent;\r\n            } else {\r\n                //it was not transparent return this color.\r\n                return $elementToCheckForBg.css('backgroundColor');\r\n            }\r\n        }\r\n        //run the function which will repeate as long as it needs until it hits body to find a color to use.\r\n        return getBgColor($element);\r\n    };\r\n\r\n    //create as a property so users can set make there own lum check.\r\n    //returns the direction lumination should go for ink contrast.\r\n    //get the lumination value for a given color.\r\n    $.fn.rippleEffect.getLuminationValue = function (hexcolor) {\r\n        var hexcolor = hexcolor.substring(1);      // strip #\r\n        var rgb = parseInt(hexcolor, 16);   // convert rrggbb to decimal\r\n        var r = (rgb >> 16) & 0xff;  // extract red\r\n        var g = (rgb >> 8) & 0xff;  // extract green\r\n        var b = (rgb >> 0) & 0xff;  // extract blue\r\n\r\n        var luma = 0.2126 * r + 0.7152 * g + 0.0722 * b; // per ITU-R BT.709\r\n        return luma;\r\n    }\r\n\r\n    //create as property, for user override. \r\n    //this was from a site point article.\r\n    //get a new color luminance -0.15 is darker by 15% and 0.20 is lighter by 20%\r\n    $.fn.rippleEffect.getColorLuminance = function (hexcolor, lum) {\r\n        // validate hex string\r\n        hexcolor = String(hexcolor).replace(/[^0-9a-f]/gi, '');\r\n        if (hexcolor.length < 6) {\r\n            hexcolor = hexcolor[0] + hexcolor[0] + hexcolor[1] + hexcolor[1] + hexcolor[2] + hexcolor[2];\r\n        }\r\n        //set a default lum value.\r\n        lum = lum || 0;\r\n\r\n        // convert to decimal and change luminosity\r\n        var resultHex = \"#\", c, i;\r\n        for (i = 0; i < 3; i++) {\r\n            c = parseInt(hexcolor.substr(i * 2, 2), 16);\r\n            c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\r\n            resultHex += (\"00\" + c).substr(c.length);\r\n        }\r\n\r\n        return resultHex;\r\n    }\r\n\r\n    //create property for overide if wanted, this converts an rgb value to hex.\r\n    //it does not work right with rgba though it just returns the bas rgb part so the trans is not claculated in.\r\n    $.fn.rippleEffect.colorToHex = function (rgb) {\r\n        //first echeck to see if we already have a hex color, if so just return.\r\n        if (rgb.substr(0, 1) === '#') {\r\n            return color;\r\n        }\r\n        rgb = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\r\n        return (rgb && rgb.length === 4) ? \"#\" +\r\n         (\"0\" + parseInt(rgb[1], 10).toString(16)).slice(-2) +\r\n         (\"0\" + parseInt(rgb[2], 10).toString(16)).slice(-2) +\r\n         (\"0\" + parseInt(rgb[3], 10).toString(16)).slice(-2) : '';\r\n    }\r\n\r\n    //this is the base function that does all of the magic, it gets a bkg color, \r\n    //then changes the colors lumanince so the ink is visiable when being animated.\r\n    function getInkColor($element, fallBackColor) {\r\n        var backgroundOrInhreitedBackGround,\r\n            hex,\r\n            luma,\r\n            returnLumintion;\r\n        //get back ground color of element / or parent with an actual color or use fallback of a lighter gray \r\n        // Call our getBackgroundColorForInk function.\r\n\r\n        backgroundOrInhreitedBackGround = getBackgroundColorForInk($element, fallBackColor);\r\n        //convert to hex, this returns hex if it is already hex.\r\n        //call our colorToHex function\r\n        hex = $.fn.rippleEffect.colorToHex(backgroundOrInhreitedBackGround);\r\n        //now get the lumination value of this bg.\r\n        //call our getLuminationValue function\r\n        luma = $.fn.rippleEffect.getLuminationValue(hex);\r\n\r\n        //239 for lighter lumination ok \r\n        if (luma <= 239) {\r\n            //go lighter alwasy prefered.\r\n            //we need to make sure we are light enough though\r\n            if (luma <= 70) {\r\n                returnLumintion = $.fn.rippleEffect.getColorLuminance(hex, 0.80);\r\n            } else {\r\n                returnLumintion = $.fn.rippleEffect.getColorLuminance(hex, 0.20);\r\n            }\r\n        } else {\r\n            //go darker\r\n            returnLumintion = $.fn.rippleEffect.getColorLuminance(hex, -0.15);\r\n        }\r\n        return returnLumintion;\r\n    };\r\n\r\n})(jQuery);","/*\r\n*   Name: Bizagi Grid for tablet\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This widget will extend the bizagi grid widget to specialize into a tablet view\r\n*\r\n*   Markup: <div></div>\r\n*\r\n*   Styles:\r\n*   - css/bizagi/tablet/controls/bizagi.grid.css\r\n*/\r\n\r\n(function ($) {\r\n    $.widget(\"ui.bizagi_grid_tablet\", $.ui.bizagi_grid, {\r\n\r\n        /**\r\n         * Constructor\r\n         * @private\r\n         */\r\n        _init: function () {\r\n            this._super();\r\n\r\n            this.isOfflineForm = typeof (this.options.isOfflineForm) !== \"undefined\" && bizagi.util.parseBoolean(this.options.isOfflineForm);\r\n        },\r\n\r\n        /**\r\n         * Method to attach any handler to the grid\r\n         * @returns {}\r\n         */\r\n        attachHandlers: function () {\r\n            var self = this;\r\n\r\n            // Add paging events\r\n            self._getComponent(\"pager\").find(\"ul li button\").bind(\"click\", function () {\r\n                var pageNumber = parseInt($(this).attr(\"data-page-number\"));\r\n\r\n                if (pageNumber) {\r\n                    self.changePage(pageNumber);\r\n                }\r\n            });\r\n\r\n            //TODO falta implementar\r\n            self._getComponent(\"dynamicPager\").find(\"input\").bind(\"click\", function () {\r\n                self.selectDynamicPager();\r\n            });\r\n\r\n            // Add sort events\r\n            self._getComponent(\"columns\").find(\".bz-tablet-grid__label\").bind(\"click\", function () {\r\n                if (!self.isOfflineForm) {\r\n                    var columnIndex = $(this).attr(\"data-column-index\");\r\n                    self.sortBy(columnIndex);\r\n                }\r\n            });\r\n\r\n            // Bind button actions\r\n            self._getComponent(\"buttons\").find(\"[data-action]\").bind(\"click\", function () {\r\n                if ($(this).attr(\"data-action\") === \"totalizer\") {\r\n                    self.totalizer();\r\n                } else {\r\n                    self.processAction($(this).attr(\"data-action\"));\r\n                    self.unselectRow();\r\n                }\r\n            });\r\n\r\n            self._getComponent(\"rowButtons\").find(\"[data-action]\").bind(\"click\", function () {\r\n                self.processAction($(this).attr(\"data-action\"));\r\n                self.unselectRow();\r\n            });\r\n\r\n            if (this.isOfflineForm) {\r\n                self._getComponent(\"rows\").on(\"click\", \".bz-tablet-grid__cell-more [data-action=more]\", function (evt) {\r\n                    var $context = $(evt.target).parents(\"[data-bizagi-component=cells]\");\r\n\r\n                    if ($context && $context.hasClass(\"bz-tablet-grid__row\")) {\r\n                        var businessKey = $context.attr(\"data-business-key\");\r\n                        var isNewRow = bizagi.util.parseBoolean($context.attr(\"data-new-row\")) || false;\r\n\r\n                        if (isNewRow) {\r\n                            self.onRemoveNewRow(businessKey);\r\n                        } else {\r\n                            self.processAction(\"remove\", {key: businessKey});\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n\r\n                self._getComponent(\"rows\").find(\"tr\").bind(\"click\", function (evt) {\r\n                    var $context = $(evt.target).closest(\".bz-tablet-grid__cell\");\r\n\r\n                    evt.stopPropagation();\r\n\r\n                    if ($context && $context.hasClass(\"bz-tablet-grid__cell\")) {\r\n                        var key = $(this).attr(\"data-key\");\r\n                        var businessKey = $(this).attr(\"data-business-key\");\r\n\r\n                        self.selectRow(key, businessKey);\r\n                    }\r\n                });\r\n\r\n                // Bind special cell button action\r\n                self._addColumnActions();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Popup Total\r\n         * @returns {}\r\n         */\r\n        totalizer: function () {\r\n            this.options.totalData();\r\n        },\r\n        /**\r\n         * Executes the row selected handler\r\n         * @returns {}\r\n         */\r\n        onRowSelected: function () {\r\n            // Call base\r\n            $.ui.bizagi_grid.prototype.onRowSelected.apply(this, arguments);\r\n\r\n            // Show row buttons             \r\n            this._showRowButtons();\r\n        },\r\n\r\n        /**\r\n         * Executes the row un-selected handler\r\n         * @returns {}\r\n         */\r\n        onRowUnselected: function () {\r\n            // Call base\r\n            $.ui.bizagi_grid.prototype.onRowUnselected.apply(this, arguments);\r\n\r\n            // Hide row buttons           \r\n            this._hideRowButtons();\r\n        },\r\n\r\n        getCell: function (key, xpath, index) {\r\n            var self = this;\r\n            var row = self._getComponent(\"rows\").find(\"[data-business-key=\" + key + \"]\");\r\n            var allVisibleTd, cell = \"\";\r\n\r\n            if (index < 4) {\r\n                allVisibleTd = $(\"td\", $(row));\r\n                cell = allVisibleTd[index + 1];\r\n            } else {\r\n                allVisibleTd = $(\"td:visible\", $(row));\r\n                cell = allVisibleTd[index];\r\n            }\r\n\r\n            return $(cell);\r\n        },\r\n\r\n        /**\r\n         * Template method to check if buttons component must be rendered\r\n         * @returns {}\r\n         */\r\n        _canShowButtons: function () {\r\n            var actions = this.options.actions;\r\n\r\n            if (this.isOfflineForm) {\r\n                return actions[\"add\"] || actions[\"remove\"] || actions[\"edit\"] || actions[\"inlineAdd\"];\r\n            } else {\r\n                return actions[\"add\"];\r\n            }\r\n        },\r\n\r\n        /*\r\n        *   This method draws a grid pager\r\n        */\r\n        drawPager: function () {\r\n            var self = this;\r\n            var options = self.options;\r\n\r\n            // Calculate pages\r\n            var pages = [];\r\n            var renderPages = [];\r\n\r\n            for (var i = 1; i <= self.data.total; i++) {\r\n                pages.push({\r\n                    number: i,\r\n                    active: (i == self.data.page)\r\n                });\r\n            }\r\n\r\n            if (self.data.page < 3 || self.data.page > self.data.total - 2) {\r\n                renderPages = [];\r\n            } else {\r\n                renderPages = [self.data.page - 1, self.data.page, self.data.page + 1];\r\n            }\r\n\r\n            var pagination = {\r\n                renderPages: renderPages,\r\n                pages: pages,\r\n                pagination: {\r\n                    totalPages: self.data.total,\r\n                    currentPage: self.data.page\r\n                }\r\n            };\r\n\r\n            // Resolve pager template\r\n            return $.fasttmpl(options.template.pager, pagination);\r\n        },\r\n\r\n        /**\r\n         * Template method to check if row buttons must be displayed when the row is selected\r\n         * @returns {}\r\n         */\r\n        _canShowRowButtons: function () {\r\n            var actions = this.options.actions;\r\n\r\n            if (this.isOfflineForm) {\r\n                return false;\r\n            } else {\r\n                return actions[\"edit\"] || actions[\"details\"] || this.options.columns.length > this.options.maxColumns;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Show the row buttons\r\n         * @returns {}\r\n         */\r\n        _showRowButtons: function () {\r\n            var self = this;\r\n            var doc = window.document;\r\n            var element = self.element;\r\n\r\n            // Add selected style to row\r\n            var tr = element.find(\"[data-bizagi-component=rows] tr[data-key=\" + self.selectedRow + \"]\");\r\n            tr.addClass(\"ui-bizagi-state-selected\");\r\n        },\r\n\r\n        /**\r\n         * Hide the row buttons\r\n         * @returns {}\r\n         */\r\n        _hideRowButtons: function () {\r\n            var self = this;\r\n\r\n            // Call base\r\n            $.ui.bizagi_grid.prototype.onRowUnselected.apply(self, arguments);\r\n\r\n            var tr = self._getComponent(\"rows\").find(\"tr[data-key=\" + self.selectedRow + \"]\");\r\n            tr.removeClass(\"ui-bizagi-state-selected\");\r\n\r\n            // Hide floating buttons for the row\r\n            if (!self.isOfflineForm) {\r\n                var floatingButtons = self._getComponent(\"rowButtons\");\r\n                floatingButtons.hide();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Return the new created ids\r\n         * @param {} rows\r\n         * @returns {}\r\n         */\r\n        getNewRowKeys: function (rows) {\r\n            var self = this;\r\n\r\n            rows = rows || self._getComponent(\"rows\").find(\"[data-new-row=true]\");\r\n\r\n            return $.map(rows, function (row, i) {\r\n                return $(row).data(\"business-key\");\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Process an action in order to do something with the grid\r\n         * @param {} action\r\n         * @returns {}\r\n         */\r\n        processAction: function (action) {\r\n            var self = this;\r\n\r\n            // Call base\r\n            $.ui.bizagi_grid.prototype.processAction.apply(self, arguments);\r\n\r\n            if (action === \"save\") {\r\n                self.onSaveAddedRows();\r\n            }\r\n            if (action === \"cancel\") {\r\n                self.onCancelEdition();\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Check if row its new\r\n         * @param {} businessKey\r\n         * @returns {}\r\n         */\r\n        isNewRecord: function (businessKey) {\r\n            var self = this;\r\n            var row = self._getComponent(\"rows\");\r\n\r\n            if (row) {\r\n                businessKey = row.find(\"[data-business-key='\" + businessKey + \"']\");\r\n                if ($(businessKey).data(\"new-row\")) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        },\r\n\r\n        /**\r\n         * Add inline row\r\n         * @returns {}\r\n         */\r\n        addInlineRow: function () {\r\n            var self = this;\r\n\r\n            // Draw the new row\r\n            self._triggerHandler(\"beforeInlineAdd\");\r\n            var html = self.drawRow(self.createAddRowData(), true);\r\n            var newRow = $(html);\r\n\r\n            // Execute the postrender\r\n            self.postRenderRow(newRow);\r\n\r\n            // Append to rows component\r\n            self._getComponent(\"rows\").append(newRow);\r\n\r\n            var buttons = self._getComponent(\"buttons\");\r\n\r\n            if (self.isOfflineForm) {\r\n                buttons.find(\"[data-action=save]\").removeClass(\"bz-tablet-grid__buttons--hidden\");\r\n                buttons.find(\"[data-action=cancel]\").removeClass(\"bz-tablet-grid__buttons--hidden\");\r\n            } else {\r\n                buttons.find(\"[data-action=save]\").css(\"display\", \"inline-block\");\r\n                buttons.find(\"[data-action=cancel]\").css(\"display\", \"inline-block\");\r\n            }\r\n\r\n            // Show table component if there are no rows\r\n            if (self.data.rows.length === 0) {\r\n                self._getComponent(\"table\").show();\r\n                self._getComponent(\"emptyTable\").hide();\r\n            }\r\n\r\n            self._triggerHandler(\"afterInlineAdd\");\r\n        },\r\n\r\n        /**\r\n         * Creates a dummy data for the new row\r\n         * @returns {}\r\n         */\r\n        createAddRowData: function () {\r\n            var self = this;\r\n            var options = self.options;\r\n            var row = [];\r\n\r\n            $.each(options.columns, function (i) {\r\n\r\n                if (i === self.columnKeyIndex) {\r\n                    // Add random key so we can identify them later\r\n                    var key = Math.ceil(Math.random() * 100000);\r\n                    row.push(key);\r\n                } else {\r\n                    // Add null value\r\n                    row.push(null);\r\n                }\r\n            });\r\n\r\n            return row;\r\n        },\r\n\r\n        /**\r\n         * Executes the on add row handler\r\n         * @returns {}\r\n         */\r\n        onAddRow: function () {\r\n            var self = this;\r\n\r\n            // Allow add\r\n            if (self.options.actions.add) {\r\n                if (self.options.actions.inlineAdd) {\r\n                    return self.addInlineRow();\r\n                } else {\r\n                    // Open dialog with addform\r\n                    return self._triggerHandler(\"addRow\");\r\n                }\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Executes when the user presses the cancel button, after inline add edition\r\n         * @returns {}\r\n         */\r\n        onCancelEdition: function () {\r\n            var self = this;\r\n\r\n            // Remove zero key rows\r\n            var rows = self._getComponent(\"rows\").find(\"[data-new-row=true]\");\r\n            var savedRows = self._getComponent(\"rows\").find(\"[data-new-row=false]\");\r\n            rows.detach();\r\n\r\n            // Hide buttons\r\n            var buttons = self._getComponent(\"buttons\");\r\n\r\n            if (self.isOfflineForm) {\r\n                buttons.find(\"[data-action=save]\").addClass(\"bz-tablet-grid__buttons--hidden\");\r\n                buttons.find(\"[data-action=cancel]\").addClass(\"bz-tablet-grid__buttons--hidden\");\r\n            } else {\r\n                buttons.find(\"[data-action=save]\").hide();\r\n                buttons.find(\"[data-action=cancel]\").hide();\r\n            }\r\n\r\n            // Show table component if there are no rows\r\n            if (savedRows.length === 0) {\r\n                self._getComponent(\"table\").hide();\r\n                self._getComponent(\"emptyTable\").show();\r\n            }\r\n\r\n            return self._triggerHandler(\"cancelEdition\", {keys: self.getNewRowKeys(rows)});\r\n        },\r\n\r\n        /**\r\n         * Executes when the user presses the save button, after inline add edition\r\n         * @returns {}\r\n         */\r\n        onSaveAddedRows: function () {\r\n            var self = this;\r\n\r\n            // Retrieve key of added rows\r\n            var newRowKeys = self.getNewRowKeys();\r\n            var buttons = self._getComponent(\"buttons\");\r\n\r\n            // Hide buttons         \r\n            if (newRowKeys.length >= 1 && self.isValid()) {\r\n\r\n                var row = self._getComponent(\"rows\");\r\n\r\n                if (self.isOfflineForm) {\r\n                    $.each(newRowKeys, function (key, value) {\r\n                        var businessKey = row.find(\"[data-business-key='\" + value + \"']\");\r\n                        $(businessKey).attr(\"data-new-row\", 'false');\r\n                    });\r\n\r\n                    buttons.find(\"[data-action=save]\").addClass(\"bz-tablet-grid__buttons--hidden\");\r\n                    buttons.find(\"[data-action=cancel]\").addClass(\"bz-tablet-grid__buttons--hidden\");\r\n\r\n                    self._triggerHandler(\"saveAddedRows\", {keys: newRowKeys});\r\n\r\n                    return true;\r\n                } else {\r\n                    buttons.find(\"[data-action=save]\").hide();\r\n                    buttons.find(\"[data-action=cancel]\").hide();\r\n\r\n                    self._triggerHandler(\"saveAddedRows\", {keys: newRowKeys});\r\n\r\n                    return self._triggerHandler(\"removeNewRecords\", {keys: newRowKeys});\r\n                }\r\n\r\n            } else {\r\n                return true;\r\n            }\r\n        },\r\n\r\n        /**\r\n         * Add new column actions\r\n         * @private\r\n         */\r\n        _addColumnActions: function () {\r\n            var self = this;\r\n            var items = [];\r\n\r\n            if (self.options.actions.details || self.options.columns.length > self.options.maxColumns) {\r\n                items.push({\r\n                    name: bizagi.localization.getResource(\"render-collection-navigator-details-form\"),\r\n                    fn: function (e) {\r\n                        var businessKey = $(e).parents(\"[data-bizagi-component=cells]\").attr(\"data-business-key\");\r\n\r\n                        if (self.options.actions.details) {\r\n                            self.processAction(\"details\", {key: businessKey});\r\n                        } else {\r\n                            self.processAction(\"more\", {key: businessKey});\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (self.options.actions.edit) {\r\n                items.push({\r\n                    name: bizagi.localization.getResource(\"render-grid-edit-label\"),\r\n                    fn: function (e) {\r\n                        var businessKey = $(e).parents(\"[data-bizagi-component=cells]\").attr(\"data-business-key\");\r\n\r\n                        self.processAction(\"edit\", {key: businessKey});\r\n                    }\r\n                });\r\n            }\r\n\r\n            if (self.options.actions.remove) {\r\n                items.push({\r\n                    name: bizagi.localization.getResource(\"render-ecm-confirm-bt-delete\"),\r\n                    fn: function (e) {\r\n                        var businessKey = $(e).parents(\"[data-bizagi-component=cells]\").attr(\"data-business-key\");\r\n\r\n                        self.processAction(\"remove\", {key: businessKey});\r\n                    }\r\n                });\r\n            }\r\n\r\n            self._getComponent(\"rows\").find(\"[data-action=more]\").overflowMenu({items: items});\r\n        },\r\n\r\n        /**\r\n         * Executes when the user presses the cancel button, after inline add edition\r\n         * @param key\r\n         * @param businessKey\r\n         */\r\n        onRemoveNewRow: function (businessKey) {\r\n            var self = this;\r\n            var buttons = self._getComponent(\"buttons\");\r\n\r\n            // Remove zero key rows\r\n            var cancelNewRow = self._getComponent(\"rows\").find(\"tr[data-business-key=\" + businessKey + \"]\");\r\n            var savedRows = self._getComponent(\"rows\").find(\"[data-new-row=false]\");\r\n            var newRows = self._getComponent(\"rows\").find(\"[data-new-row=true]\");\r\n\r\n            cancelNewRow.detach();\r\n\r\n            // Hide buttons\r\n            if(newRows.length === 1) {\r\n                buttons.find(\"[data-action=save]\").addClass(\"bz-tablet-grid__buttons--hidden\");\r\n                buttons.find(\"[data-action=cancel]\").addClass(\"bz-tablet-grid__buttons--hidden\");\r\n            }\r\n\r\n            // Show table component if there are no rows\r\n            if (savedRows.length === 0) {\r\n                self._getComponent(\"table\").hide();\r\n                self._getComponent(\"emptyTable\").show();\r\n            }\r\n\r\n            return self._triggerHandler(\"cancelEdition\", {keys: self.getNewRowKeys(cancelNewRow)});\r\n        },\r\n\r\n        /**\r\n         * Replaces a matched element in the container for the specified \"replace\" element\r\n         * @param html\r\n         * @param element\r\n         * @param replace\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _replaceElement: function (html, element, replace) {\r\n            return html.replace(new RegExp(\"{{element \" + element + \"}}\", 'g'), replace);\r\n        }\r\n\r\n    });\r\n\r\n})(jQuery);\r\n","/**\r\n * Name:\r\n *   Author: Bizagi Mobile team\r\n *   Comments:\r\n * Structure to applicate plugin\r\n *  <div class=\"bz-bizagi-container-tap-popup\"> //container\r\n    <div class=\"cell bz-container-items-tabs\"> // represent item of tab\r\n    <span >${displayName}</span>// the first span always is the title                                    \r\n    <span> ........</span> // after the span can place the items you want\r\n    <div> .........</div> // etc\r\n    </div> <!-- end cell-->\r\n    </div><!-- end bz-bizagi-container-tap-popup-->\r\n**/\r\n(function ($) {\r\n    $.fn.bztabs = function (params) {\r\n\r\n        var self = $(this);\r\n\r\n        params = params || {};\r\n        params.activeTab = params.activeTab || 0;\r\n        params.tabNumber = params.tabNumber || 1;\r\n\r\n\r\n        var activate = (params.activate && typeof params.activate === \"function\") ? params.activate : function () { };\r\n        var beforeActivate = (params.beforeActivate && typeof params.beforeActivate === \"function\") ? params.beforeActivate : function () { };\r\n\r\n        // PopUp control\r\n        var popUp = self.find(\">div.bz-bizagi-container-tap-popup\").hide();\r\n        // Depending on tabNumber a percentage will be in the width of each tab\r\n        var tabCountPopup = popUp.children().length;\r\n        // Base to build the header of tabs\r\n        var tabHeader = $(\"<div class='bz-header_select'></div>\");\r\n\r\n        var tabCountReal = (params.tabNumber > tabCountPopup) ? tabCountPopup : params.tabNumber;\r\n\r\n        // round down\r\n        var widthRow = Math.floor(100 / Number(tabCountReal));\r\n\r\n        // Duplicate the tabs to create the header\r\n        popUp.children().each(function (i, item) {\r\n            tabHeader.append(\r\n                \"<div class='bz-wp-tabs-ui bz-wp-tabs-item' data-index='\" + i + \"' data-reference-tab='\" +\r\n                item.getAttribute(\"data-reference-tab\") + \"'><span>\" +\r\n                item.textContent + \"</span></div>\");\r\n        });\r\n\r\n        tabHeader.find(\"> .bz-wp-tabs-ui\").css(\"width\", widthRow + \"%\");        \r\n        tabHeader.append(\"<div class='bz-wp-tabs-arrow-container'><div class='bz-cm-icon bz-mo-icon bz-plus'></div></div>\");\r\n\r\n        self.prepend(tabHeader);\r\n\r\n        var tabCurrent = self.find(\"> .bz-bizagi-container-tap-popup > .bz-container-items-tabs\").eq(params.activeTab);\r\n        var itemCurrent = $($(tabCurrent).data(\"reference-tab\"), self);\r\n\r\n        itemCurrent.addClass(\"childrenActive\");\r\n        tabCurrent.addClass(\"tabSelected\");\r\n\r\n        // Mark the selected tab in the header\r\n        var activeTab = $(\".bz-wp-tabs-ui:nth-child(\" + (params.activeTab + 1) + \")\", tabHeader).addClass(\"tabSelected\");\r\n\r\n        // The new width will be added to the tabSelected in order to complete the 100% on tabs\r\n        var widthTabSelected = widthRow + (100 - (widthRow * tabCountReal));\r\n        activeTab.css(\"width\", widthTabSelected + \"%\");\r\n\r\n        function updateTabSize() {\r\n            if (params.tabNumber < tabCountPopup) {\r\n                // Select the current tab\r\n                $(\".bz-wp-tabs-arrow-container\", self).first().addClass(\"show-pluss\");\r\n                tabHeader.addClass(\"show-pluss\");\r\n                activeTab.trigger(\"click\", { origin: \"popUp\" });\r\n            } else {\r\n                $(\".bz-wp-tabs-arrow-container\", self).removeClass(\"show-pluss\");\r\n                tabHeader.removeClass(\"show-pluss\");\r\n                tabHeader.find(\"> .bz-wp-tabs-ui:last\").addClass(\"bz-wp-no-border\");\r\n            }\r\n        }\r\n\r\n        // Reorder tabs\r\n        function reorderTabs(dataRef) {\r\n\r\n            var tempTabs = tabHeader.find(\".bz-wp-tabs-ui\");\r\n            var moveAtTheEnd = true;\r\n\r\n            tempTabs.each(function (i, item) {\r\n                if (dataRef !== item.getAttribute(\"data-reference-tab\") && moveAtTheEnd) {\r\n                    tabHeader.remove(\"[data-reference-tab='\" + dataRef + \"']\");\r\n                    tabHeader.append(item);\r\n                } else {\r\n                    moveAtTheEnd = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        // Change tabs\r\n        function changeTab(e, params) {\r\n\r\n            params = params || {};\r\n            params.origin = params.origin || \"header\";\r\n\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            if ($(this).hasClass(\"tabSelected\") && params.origin !== \"popUp\") {\r\n                return;\r\n            }\r\n\r\n            var dataRef = e.currentTarget.getAttribute(\"data-reference-tab\");\r\n            var tabChildren = $(dataRef, self);\r\n\r\n            activeTab = $(e.currentTarget);\r\n            // Changes the visibility of the contents of the tabs\r\n            self.find(\">div.childrenActive\").removeClass(\"childrenActive\");\r\n            tabChildren.addClass(\"childrenActive\");\r\n\r\n            // Add the normal width\r\n            tabHeader.find(\">div.tabSelected\").removeClass(\"tabSelected\").css(\"width\", widthRow + \"%\");\r\n\r\n            if (popUp.css(\"display\") === \"block\") {\r\n                popUp.toggle();\r\n            }\r\n\r\n            if (params.origin && params.origin === \"popUp\") {\r\n                activeTab = $(\"[data-reference-tab='\" + dataRef + \"']\", tabHeader);\r\n                reorderTabs(dataRef);\r\n            }\r\n\r\n            // Add the new width for tabSelected to complete the 100%\r\n            activeTab.addClass(\"tabSelected\").css(\"width\", widthTabSelected + \"%\");\r\n            activate(e, params);\r\n        }\r\n\r\n        if (typeof (params.domIncluded) !== \"undefined\") {\r\n            // Until the control is added to the DOM can be known widths to add the icon popup         \r\n            $.when(params.domIncluded).done(function () {\r\n                updateTabSize();\r\n            });\r\n        } else {\r\n            updateTabSize();\r\n        }\r\n\r\n        // Attach events\r\n        self.find(\".bz-wp-tabs-arrow-container\").first().bind(\"click\", function (event) {\r\n\r\n            // Determine if an item is visible or not\r\n            var headerWidth = (tabHeader.innerWidth() - 29);\r\n            var totalWidth = 0;\r\n\r\n            // Remove the visible elements\r\n            $(\".bz-container-items-tabs\", popUp).removeClass(\"show\");\r\n\r\n            tabHeader.find(\".bz-wp-tabs-ui\").each(function (i, item) {\r\n\r\n                totalWidth += $(\":first-child\", item).outerWidth();\r\n\r\n                // If \"true\" then it is a tab to display the popup\r\n                if (totalWidth > headerWidth) {\r\n\r\n                    popUp.children().each(function (j, pop) {\r\n                        if (pop.textContent === item.textContent) {\r\n                            $(pop).addClass(\"show\");\r\n                            $(\".cell.bz-container-items-tabs\").css(\"border-bottom\", \"\");\r\n                            $(\".cell.bz-container-items-tabs.show\").last().css(\"border-bottom\", \"none\");\r\n\r\n                            return;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            popUp.toggle();\r\n        });\r\n\r\n        $(\">div.cell\", popUp).bind(\"click\", function (e) {\r\n            changeTab(e, { origin: \"popUp\" });\r\n        });\r\n\r\n        $(\".bz-wp-tabs-ui\", tabHeader).bind(\"click\", changeTab);\r\n\r\n        tabHeader.bind(\"resizeHeader\", function () {\r\n            updateTabSize();\r\n        });\r\n    };\r\n})(jQuery);","/*\r\n*   Name: BizAgi Element Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a base class with common stuff related to all renders and containers\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.element\", {\r\n    ELEMENT_TYPE_CONTAINER: 1,\r\n    ELEMENT_TYPE_RENDER: 2,\r\n    ELEMENT_TYPE_COLUMN: 3\r\n}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Set render factory\r\n        this.renderFactory = params.renderFactory;\r\n\r\n        // Set data service\r\n        this.dataService = params.dataService;\r\n\r\n        // Set reference to parent\r\n        this.parent = params.parent;\r\n\r\n        // Set l10n service\r\n        this.resources = bizagi.localization;\r\n\r\n        // Set the observable element\r\n        this.observableElement = $(\"<div />\");\r\n\r\n        // Set the dispose flag\r\n        this.disposed = false;\r\n\r\n        // Update data\r\n        this.initializeData(params.data);\r\n\r\n        // Define an object to hold the subscribe collection\r\n        this.subscribers = [];\r\n    },\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Set the internal data\r\n        this.properties = {};\r\n        if (data && data.properties) this.properties = data.properties;\r\n\r\n        // Set xpath context\r\n        this.properties.xpathContext = this.getXpathContext();\r\n\r\n        // Set page cache\r\n        this.properties.idPageCache = this.getPageCache();\r\n    },\r\n\r\n    /*\r\n    *   Returns the xpath context of the element\r\n    */\r\n    getXpathContext: function () {\r\n        // By default return parent's xpath context\r\n        // This method is overriden in form container which contains the real xpath context\r\n\r\n        return (this.parent != undefined && typeof this.parent.getXpathContext == \"function\") ? this.parent.getXpathContext() : \"\";\r\n    },\r\n\r\n    /*\r\n    *   Returns the page cache for the current element\r\n    */\r\n    getPageCache: function () {\r\n        // By default return parent's page cache\r\n        // This method is overriden in form container which contains the real page cache\r\n\r\n        return (this.parent != undefined && typeof this.parent.getPageCache == \"function\") ? this.parent.getPageCache() : \"\";\r\n    },\r\n\r\n    /*\r\n    *   Returns the form containing the element\r\n    */\r\n    getFormContainer: function () {\r\n        // By default return parent's form container\r\n        // This method is overriden in form container which returns itself\r\n        if (typeof (this.parent) != \"undefined\")\r\n        return this.parent.getFormContainer();\r\n    },\r\n\r\n\r\n    /*\r\n    *   Returns the mapped resource\r\n    */\r\n    getResource: function (key) {\r\n        return this.resources.getResource(key);\r\n    },\r\n\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () { },\r\n\r\n    /* \r\n    *   Resizes the element \r\n    */\r\n    resize: function (size) {\r\n\r\n    },\r\n\r\n    /*\r\n    *   Focus on the current element\r\n    */\r\n    focus: function () {\r\n\r\n        if (this.properties.required) {\r\n            var layout = $(\"#ui-bizagi-wp-app-render-form-content\");\r\n            // Check if element is visible into scroll\r\n            if (!bizagi.util.isScrolledIntoView(this.element, layout)) {\r\n                $(this.element).attr('tabindex', -1).focus();\r\n            }\r\n            if (this.element) {\r\n                this.element.effect('highlight', 2000);\r\n            }\r\n        }\r\n\r\n        //Check if the element has parent\r\n        if (this.parent && typeof this.parent.focus == 'function') {\r\n            this.parent.focus();\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Publish a global event that the facade will replicate\r\n    */\r\n    triggerGlobalHandler: function (eventType, data) {\r\n        if (this.disposed) return null;\r\n        if (this.parent) return this.parent.triggerGlobalHandler(eventType, data);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Triggers an event inside the control\r\n    */\r\n    trigger: function (eventType, data) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.trigger(eventType, data);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Triggers an event handler inside the control\r\n    */\r\n    triggerHandler: function (eventType, data) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.triggerHandler(eventType, data);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Binds to an event\r\n    */\r\n    bind: function (eventType, fn) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.bind(eventType, fn);\r\n        this.subscribers.push({ event: eventType });\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Un-binds to an event\r\n    */\r\n    unbind: function (eventType, fn) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.unbind(eventType, fn);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Binds a one time event\r\n    */\r\n    one: function (eventType, fn) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.one(eventType, fn);\r\n        this.subscribers.push({ event: eventType });\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Return the rendered element\r\n    */\r\n    getRenderedElement: function () { },\r\n\r\n    /*\r\n    *   Get current rendering mode\r\n    */\r\n    getMode: function () {\r\n        if (this.parent) return this.parent.getMode();\r\n    },\r\n\r\n    /*\r\n    *   Get current rendering params\r\n    */\r\n    getParams: function () {\r\n        if (this.parent) return this.parent.getParams();\r\n    },\r\n\r\n    /*\r\n    * Get current form type (ex. queryform, form)\r\n    */\r\n    getFormType: function () {\r\n        var self = this;\r\n\r\n        var form = self.getFormContainer();\r\n        return form.properties.type || \"form\";\r\n    },\r\n\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () { },\r\n\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready to save\r\n    */\r\n    isReadyToSave: function () { },\r\n\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Dispose the class so we can detect when a class is invalid already\r\n    */\r\n    dispose: function () {\r\n        var self = this;\r\n        self.disposed = true;\r\n\r\n        setTimeout(function () {\r\n            if (self.subscribers != null) {\r\n                // Remove all subcriptions\r\n                $.each(self.subscribers, function (i, item) {\r\n                    self.unbind(item.event);\r\n                });\r\n            }\r\n            delete self.subscribers;\r\n\r\n            if (self.observableElement) self.observableElement.off();\r\n            bizagi.util.dispose(self);\r\n        }, bizagi.override.disposeTime || 50);\r\n    },\r\n\r\n    /*\r\n    *   Check if the current object is disposed\r\n    */\r\n    isDisposed: function () {\r\n        return this.disposed;\r\n    },\r\n\r\n    /*\r\n    *   This method process the error or alert messages coming from the server, and adds them to the validation controller\r\n    */\r\n    processFailMessage: function(message) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\r\n\r\n        if (message.errorType === \"CustomMessageException\") {\r\n            // Clear previous validations\r\n            form.validationController.clearValidationMessages();\r\n            var error = bizagi.localization.getResource(message.message);\r\n            form.validationController.showErrorMessage(error);\r\n        } else if (message.errorType === \"InvalidCaseStateException\") {\r\n            var params = form.getParams()\r\n\r\n            form.validationController.clearValidationMessages();\r\n           \r\n            // Redirection Here\r\n            form.container.trigger(\"routing\", { idCase: params.idCase || bizagi.context.idCase });\r\n        } else {\r\n            var message = message || {};\r\n            message = typeof (message) == \"string\" ? JSON.parse(message) : message;\r\n            var type = message.type || \"error\";\r\n            var code = message.code || \"code\";\r\n            message = message.responseText || (message.message || message);\r\n\r\n            // Omit processing when the ajax didn't process\r\n            if (type === \"not-processed\") return;\r\n            if (type === \"not-shown\") return;\r\n            if (isOfflineForm && code === \"AUTH_ERROR\") return;\r\n\r\n            // Clear previous validations\r\n            form.validationController.clearValidationMessages();\r\n            if (type == \"alert\") {\r\n                form.validationController.showAlertMessage(message);\r\n            } else {\r\n                form.validationController.showErrorMessage(message);\r\n            }\r\n        }\r\n\r\n        return message;\r\n    },\r\n\r\n    /*\r\n    *   Sets a waiting overlay above the current element\r\n    */\r\n    startLoading: function () {  /* Override in implementations */ },\r\n\r\n    /*\r\n    *   Removes the waiting overlay\r\n    */\r\n    endLoading: function () { /* Override in implementations */ },\r\n\r\n    /**\r\n    *   Prepare control to remove it from the render, that allows to\r\n    *   clean all elements of the control or to do any stuff before to remove\r\n    */\r\n    beforeToRefresh: function () { /* Implement in each render and container if you need */ },\r\n\r\n    /**\r\n    *   Run before that the control has been refreshed\r\n    */\r\n    afterToRefresh: function () { /* Implement in each render and container if you need */ }\r\n});\r\n\r\n","/*\r\n *   Name: BizAgi Container Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define a base container class with common stuff related to all containers\r\n */\r\n\r\nbizagi.rendering.element.extend(\"bizagi.rendering.container\", {\r\n    TYPE_QUERY_FORM: \"queryForm\"\r\n}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Set defaults\r\n        var properties = self.properties;\r\n        properties.uniqueId = Math.ceil(Math.random() * 1000000);\r\n        properties.editable = (typeof properties.editable != \"undefined\") ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.visible = (typeof properties.visible != \"undefined\") ? bizagi.util.parseBoolean(properties.visible) : true;\r\n\r\n        // Override orientation from parent if not set\r\n        properties.orientation = properties.orientation || \"auto\";\r\n\r\n        // Save original properties\r\n        this.originalProperties = JSON.parse(JSON.encode(properties));\r\n\r\n        // Create children\r\n        this.children = [];\r\n        this.childrenHash = {};\r\n\r\n        if (data.elements) {\r\n            $.each(data.elements, function(i, element) {\r\n                if (element.render) {\r\n                    self.createRenderElement(element);\r\n                } else if (element.container) {\r\n                    self.createContainerElement(element);\r\n                } else if (element.form) {\r\n                    self.createFormElement(element);\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Creates a render element\r\n    */\r\n    createRenderElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var originalElement;\r\n\r\n        // Replicate editable property when container is not editable\r\n        if (properties.editable == false) {\r\n            element.render.properties.editable = properties.editable;\r\n            if (element.render.properties.type == \"grid\")\r\n                element.render.properties.inlineEdit = false;\r\n        }\r\n\r\n        // Replicate required property when container is not required\r\n        if (properties.required === false) {\r\n            element.render.properties.required = properties.required;\r\n        }\r\n\r\n        //clone originalElement to apply duplicate render properties correctly\r\n        if (element.render.properties.retype == \"duplicate\") {\r\n            originalElement = bizagi.clone(element);\r\n        }\r\n\r\n        var render = self.renderFactory.getRender({\r\n            type: element.render.properties.type,\r\n            data: element.render,\r\n            dataService: self.dataService,\r\n            parent: self,\r\n            mode: self.getMode()\r\n        });\r\n\r\n        // Add to children\r\n        self.children.push(render);\r\n\r\n        // Check for duplicate\r\n        if (element.render.properties.retype == \"duplicate\") {\r\n            self.processDuplicateRender(render, originalElement);\r\n        }\r\n\r\n        //TODO: at this point not posible add the retype double at this point not exist input\r\n\r\n        // Register in form container\r\n        self.getFormContainer().registerRender(render);\r\n    },\r\n    /*\r\n    *   Creates a container element\r\n    */\r\n    createContainerElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Replicate editable property when container is not editable\r\n        if (properties.editable == false) {\r\n            element.container.properties.editable = properties.editable;\r\n        }\r\n\r\n        // Replicate required property when container is not required\r\n        if (properties.required === false) {\r\n            element.container.properties.required = properties.required;\r\n        }\r\n\r\n        var container = self.renderFactory.getContainer({\r\n            type: element.container.properties.type,\r\n            data: element.container,\r\n            parent: self,\r\n            dataService: self.dataService,\r\n            mode: self.getMode(),\r\n            isDesign: self.getMode() === \"design\"\r\n        });\r\n\r\n        self.children.push(container);\r\n\r\n        // Register in form container\r\n        self.getFormContainer().registerRender(container);\r\n    },\r\n    /*\r\n    *   Creates a form element\r\n    */\r\n    createFormElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Replicate editable property when container is not editable\r\n        if (properties.editable == false) {\r\n            element.container.properties.editable = properties.editable;\r\n        }\r\n\r\n        var form = self.renderFactory.getContainer({\r\n            type: (element.form.properties.type || \"form\"),\r\n            data: element.form,\r\n            parent: self,\r\n            dataService: self.dataService,\r\n            mode: self.getMode()\r\n        });\r\n        self.children.push(form);\r\n    },\r\n    /* \r\n    *   Gets the current container \r\n    */\r\n    getElement: function () {\r\n        var self = this;\r\n        return self.container;\r\n    },\r\n    /* \r\n    *   Gets a collection for all elements matching a type \r\n    */\r\n    getElementsByType: function (type, elements) {\r\n        elements = elements || [];\r\n        var self = this;\r\n\r\n        // Iterate through elements\r\n        $.each(self.children, function (i, child) {\r\n            if (child.properties.type == type) {\r\n                elements.push(child);\r\n            }\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.getElementsByType(type, elements);\r\n            }\r\n        });\r\n\r\n        return elements;\r\n    },\r\n    /*\r\n    *   Process renders with duplicate property\r\n    */\r\n    processDuplicateRender: function (render, element) {\r\n        var self = this;\r\n        var clonedElement = JSON.parse(JSON.encode(element.render));\r\n\r\n        // Changes properties\r\n        clonedElement.properties.displayName = clonedElement.properties.displayName + \" \" + self.getResource(\"render-text-duplicate-label-sufix\");\r\n        clonedElement.properties.xpath = clonedElement.properties.xpath + \".clone\";\r\n        clonedElement.properties.isClone = true;\r\n\r\n        // Creates clone\r\n        var clone = self.renderFactory.getRender({\r\n            type: clonedElement.properties.type,\r\n            data: clonedElement,\r\n            parent: self,\r\n            mode: self.getMode()\r\n        });\r\n\r\n        // Associates with main render\r\n        render.cloneRender = clone;\r\n\r\n        // Add to collection\r\n        self.children.push(clone);\r\n    },\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () {\r\n        return bizagi.rendering.element.ELEMENT_TYPE_CONTAINER;\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    */\r\n    render: function () {\r\n        var self = this,\r\n            mode = self.getMode(),\r\n            result;\r\n\r\n        // Render container\r\n        result = self.internalRender();\r\n\r\n        // Apply container defaults\r\n        self.applyContainerDefaults();\r\n\r\n        // Add container id\r\n        result.attr(\"data-container-id\", self.properties.id);\r\n\r\n        //Add container tag property\r\n        if (self.properties.tag) {\r\n            result.attr(\"data-tag\", self.properties.tag);\r\n        }\r\n\r\n        //Add class to the requested form, to specify if is add form, edit form, or detail form\r\n        if (self.params)\r\n            if (self.params.requestedForm)\r\n                result.addClass(self.params.requestedForm);\r\n\r\n        return result;\r\n    },\r\n    /*\r\n    *   Internal  rendering\r\n    */\r\n    internalRender: function () {\r\n        var self = this;\r\n\r\n        // Render the container\r\n        var html = self.renderContainerHtml();\r\n\r\n        // Convert html string to jquery object\r\n        var container = self.container = $(html);\r\n\r\n        // Post-render\r\n        self.postRenderContainer(container);\r\n\r\n        return self.container;\r\n    },\r\n    /*\r\n    *   Renders container html\r\n    */\r\n    renderContainerHtml: function () {\r\n        var self = this;\r\n        // Start rendering deferred\r\n        self.renderingDeferred = self.renderingDeferred || new $.Deferred();\r\n\r\n        return this.renderContainer();\r\n    },\r\n    /*\r\n    *   Check if the jquery element is ready or not\r\n    */\r\n    isRendered: function () {\r\n        var self = this;\r\n        if (!self.renderingDeferred)\r\n            return false;\r\n        return self.renderingDeferred.promise();\r\n    },\r\n    /*\r\n    *   Return the rendered element\r\n    */\r\n    getRenderedElement: function () {\r\n        if (bizagi.util.isEmpty(this.container))\r\n            alert(\"container hasn't been rendered!\");\r\n\r\n        return this.container;\r\n    },\r\n    /* \r\n    *   Set container defaults\r\n    */\r\n    applyContainerDefaults: function () {\r\n        var self = this,\r\n                properties = self.properties;\r\n\r\n        // Set customizations\r\n        if (properties.backgroundColor)\r\n            self.changeBackgroundColor(properties.backgroundColor);\r\n\r\n        // Set editability and visiblity\r\n        if (!properties.visible)\r\n            self.changeVisibility(properties.visible);\r\n    },\r\n    /* \r\n    *  Changes background color \r\n    */\r\n    changeBackgroundColor: function (color) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        properties.backgroundColor = color;\r\n\r\n        // Iterate through elements\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.changeBackgroundColor(color);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                child.changeBackgroundColor(color);\r\n            }\r\n        });\r\n    },\r\n    /* \r\n    *   Hides / Show container \r\n    */\r\n    changeVisibility: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Store in properties\r\n        properties.visible = bizagi.util.parseBoolean(argument);\r\n\r\n        // Hide - show the render\r\n        if (properties.visible) {\r\n            self.container.show();\r\n\r\n        } else {\r\n            self.container.hide();\r\n        }\r\n    },\r\n    /* Changes editability */\r\n    changeEditability: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Store in properties\r\n        properties.editable = bizagi.util.parseBoolean(argument);\r\n\r\n        // Iterate through elements\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.changeEditability(argument);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                child.changeEditability(argument);\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Replaces a <x/> tag in the container for the specified \"replace\" element\r\n    */\r\n    replaceTag: function (container, tag, replace) {\r\n        bizagi.util.replaceSelector(container, tag, replace);\r\n    },\r\n    /*\r\n    *   Replaces a <children/> tag in the container for the specified \"replace\" element\r\n    */\r\n    replaceChildrenTag: function (container, replace) {\r\n        this.replaceTag(container, \".children\", replace);\r\n    },\r\n    /*\r\n    *   Replaces a {{children}} string in the specified element\r\n    */\r\n    replaceChildrenHtml: function (html, replace) {\r\n        return html.replace(\"{{children}}\", replace);\r\n    },\r\n    /*\r\n    *   Template method to render the container layout, returns a string with all the builded html,\r\n    *   must be overriden in all children\r\n    */\r\n    renderContainer: function () {\r\n    },\r\n    /*\r\n    *   Template method to process each jquery object\r\n    *   must be overriden in each container\r\n    */\r\n    postRenderContainer: function (container) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n\r\n        // Resolve rendering deferred\r\n        if (self.renderingDeferred)\r\n            self.renderingDeferred.resolve();\r\n\r\n        // Process children elements\r\n        self.container = container;\r\n        self.executeChildrenPostRender(container);\r\n\r\n        if (mode == \"execution\") {\r\n            // Apply handlers\r\n            self.configureHandlers();\r\n            self.applyPlaceHolderPolyfill();\r\n\r\n        }\r\n        if (mode == \"design\") {\r\n            // Configure view\r\n            self.configureDesignView();\r\n        }\r\n        if (mode == \"layout\") {\r\n            // Configure view\r\n            self.configureDesignView();\r\n            self.configureLayoutView();\r\n        }\r\n    },\r\n\r\n    applyPlaceHolderPolyfill: function () {\r\n        var self = this;\r\n        var config = window.placeHolderConfig || {};\r\n        if (('placeholder' in $('<input>')[0] || 'placeHolder' in $('<input>')[0]) && !config.forceApply) {\r\n            // don't run the polyfill when the browser has native support\r\n            return;\r\n        }\r\n        Placeholders.enable();\r\n    },\r\n    /*\r\n    *   Process container children\r\n    */\r\n    executeChildrenPostRender: function (container) {\r\n        var self = this;\r\n        var childrenElements = container.children();\r\n\r\n        $.each(childrenElements, function (i, childElement) {\r\n            childElement = $(childElement);\r\n            var id = Number(childElement.data(\"unique-id\"));\r\n            if (id) {\r\n                var child = self.childrenHash[id];\r\n                if (child) {\r\n                    var type = child.getElementType();\r\n                    if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER)\r\n                        child.postRenderElement(childElement);\r\n                    if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER)\r\n                        child.postRenderContainer(childElement);\r\n                }\r\n            } else {\r\n                self.executeChildrenPostRender(childElement);\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the container's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour when rendering in design mode\r\n    */\r\n    configureDesignView: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the container's behaviour to show layout\r\n    */\r\n    configureLayoutView: function () {\r\n\r\n    },\r\n    /**\r\n    *   Renders all children html\r\n    */\r\n    renderChildrenHtml: function () {\r\n        var self = this;\r\n        var temp = \"\";\r\n\r\n        $.each(self.children, function (i, child) {\r\n            var type = child.getElementType();\r\n            if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER)\r\n                temp += child.renderElement();\r\n            if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER)\r\n                temp += child.renderContainerHtml();\r\n            self.childrenHash[child.properties.uniqueId] = child;\r\n        });\r\n\r\n        return temp;\r\n    },\r\n    /*\r\n    *   Iterate through all the renders in the container and fills the hashtable\r\n    */\r\n    collectRenderValues: function (renderValues) {\r\n        var self = this;\r\n        if (self.children) {\r\n            $.each(self.children, function (i, child) {\r\n                if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                    // Go though container\r\n                    child.collectRenderValues(renderValues);\r\n\r\n                } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                    // Check if the render can be sent to the server\r\n                    if (child.canBeSent()) {\r\n                        child.collectData(renderValues);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Iterate through all the renders and check if has changed\r\n    */\r\n    hasChanged: function (result) {\r\n        var self = this;\r\n        result = result || [];\r\n\r\n        if (!result.length) {\r\n            if(self.children){\r\n                $.each(self.children, function (i, child) {\r\n                    if (result.length || child.hasChanged(result)) {\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            return result;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *    Creates a json array parameters to search result\r\n    */\r\n    collectRenderValuesQueryForm: function (renderValues) {\r\n        var self = this;\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                // Go though container\r\n                child.collectRenderValuesQueryForm(renderValues);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                // Check if the render can be sent to the server\r\n                if (child.canBeSentQueryForm()) {\r\n                    child.collectDataQueryForm(renderValues);\r\n                }\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Gets the first child\r\n    */\r\n    firstChild: function () {\r\n        return this.children[0];\r\n    },\r\n    /*\r\n    *   Method to find all the renders matching an xpath inside the container\r\n    */\r\n    getRenders: function (xpath, renders) {\r\n        var self = this;\r\n\r\n        renders = renders || [];\r\n\r\n        // Remove [] filters for grid columns xpaths to fully identify the grid as the xpath target\r\n        if (xpath.indexOf(\"[\") > 0) {\r\n            xpath = xpath.substring(0, xpath.indexOf(\"[\"));\r\n        }\r\n\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                // Go though container\r\n                child.getRenders(xpath, renders);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                if (xpath == child.properties.xpath) {\r\n                    renders.push(child);\r\n                }\r\n            }\r\n        });\r\n\r\n        return renders;\r\n    },\r\n    /* \r\n    *   Gets the first editable render \r\n    */\r\n    getRender: function (xpath) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        var result = null;\r\n        $.each(renders, function (i, render) {\r\n            if (render.properties.editable) {\r\n                if (result == null)\r\n                    result = render;\r\n            }\r\n        });\r\n\r\n        // if no render has been found, skip editable condition\r\n        if (result == null) {\r\n            $.each(renders, function (i, render) {\r\n                result = render;\r\n            });\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n     *   Gets all renders by xpath\r\n     */\r\n    getRendersByXpath: function (xpath) {\r\n        var self = this;\r\n        return self.getRenders(xpath);\r\n    },\r\n\r\n    /* \r\n    *   Gets a container by the id\r\n    */\r\n    getContainer: function (id) {\r\n        var self = this;\r\n\r\n        if (self.properties.id == id)\r\n            return this;\r\n\r\n        var result;\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                // Go though container\r\n                var o = child.getContainer(id);\r\n                if (o != null) {\r\n                    result = o;\r\n                    return false;\r\n                }\r\n            }\r\n        });\r\n\r\n        return result;\r\n    },\r\n    /* \r\n    *   Validate all renders in the container \r\n    */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n\r\n        $.each(self.children, function (i, child) {\r\n            if (child.properties.visible) {\r\n                if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                    // Go though container\r\n                    child.isValid(invalidElements);\r\n\r\n                } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                    // Go to the render\r\n                    child.isValid(invalidElements);\r\n                }\r\n            }\r\n        });\r\n\r\n        return invalidElements.length == 0;\r\n    },\r\n\r\n        /*\r\n       *   Validate all grids in the container\r\n       */\r\n    hasValidGrids: function (invalidElements) {\r\n        var self = this;\r\n\r\n        $.each(self.children, function (i, child) {\r\n            if (child.properties.visible) {\r\n                if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                    // Go though container\r\n                    child.hasValidGrids(invalidElements);\r\n\r\n                } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER && typeof (child.grid) != \"undefined\") {\r\n                    // Go to the render\r\n                    child.isValid(invalidElements);\r\n                }\r\n            }\r\n        });\r\n\r\n        return invalidElements.length == 0;\r\n    },\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n        return $.when(self.parent.ready(), self.isRendered());\r\n    },\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready to save\r\n    */\r\n    isReadyToSave: function () {\r\n        var self = this;\r\n        var childrenPromises = $.map(self.children, function (child) {\r\n            return child.isReadyToSave();\r\n        });\r\n        return $.when.apply($, childrenPromises);\r\n    },\r\n    /*  \r\n    *   Return the current focuses container\r\n    */\r\n    getFocus: function () {\r\n        var self = this;\r\n        var focus;\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                var result = child.getFocus();\r\n                if (!bizagi.util.isEmpty(result)) {\r\n                    focus = result;\r\n                }\r\n            }\r\n        });\r\n\r\n        return focus;\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n\r\n        if (form) {\r\n            return form.getCustomHandlers();\r\n        }\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandler: function (key) {\r\n        var self = this;\r\n        var customHandlers = self.getCustomHandlers();\r\n\r\n        if (customHandlers) {\r\n            return customHandlers[key];\r\n        }\r\n    },\r\n    /*\r\n    *   Dispose the class so we can detect when a class is invalid already\r\n    */\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        // Iterate through elements\r\n        setTimeout(function () {\r\n            if (self.children) {\r\n                $.each(self.children, function (i, child) {\r\n                    child.dispose();\r\n                });\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    },\r\n\r\n    /*\r\n    *   Refresh the current container\r\n    */\r\n    refreshContainer: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Start waiting\r\n        self.startLoading();\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh();\r\n\r\n        // Call the service\r\n        return $.when(self.dataService.multiaction().refreshControl({\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: (properties.xpathContext || args.xpathContext),\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (data) {\r\n\r\n            if (!self.isDisposed()) {\r\n\r\n                // Unregister children of container to replace in hash self.rendersById and self.rendersByXpath\r\n                self.unregisterChildren();\r\n                delete self.children;\r\n                delete self.childrenHash;\r\n\r\n                self.getFormContainer().removeActions();\r\n\r\n                // update editable\r\n                if (self.properties.editable === false) {\r\n                    data.container && data.container.properties ? (data.container.properties.editable = false) : \"\";\r\n                }\r\n\r\n                // Update the data\r\n                self.initializeData(data.container);\r\n\r\n                // Render the container again\r\n                var currentContainer = self.container;\r\n                var result = self.render();\r\n\r\n                if (self.properties.type == \"tabItem\") {\r\n                    $(result).addClass(\"childrenActive\");\r\n                }\r\n\r\n                currentContainer.replaceWith(result);\r\n\r\n                // Rebind the actions\r\n                var actions = data.container && data.container.actions ? data.container.actions : [];\r\n                self.getFormContainer().refreshActions(actions);\r\n\r\n                self.triggerChildrenActions();\r\n\r\n                // Execute personalized stuff after to refresh it\r\n                self.afterToRefresh();\r\n\r\n            }\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n\r\n        }).always(function () {\r\n            self.endLoading();\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Refresh the current container\r\n     */\r\n    refreshDesignContainer: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh(data);\r\n        //self.setActiveTab(data.elements);\r\n\r\n        $.extend(data.properties, {\r\n            editable: properties.editable,\r\n            contexttype: (properties.contexttype || \"\"),\r\n            idPageCache: properties.idPageCache,\r\n            idRender: properties.id,\r\n            messageValidation: properties.messageValidation,\r\n            uniqueId: properties.uniqueId,\r\n            visible:properties.visible,\r\n            xpath: properties.xpath,\r\n            mode: \"design\",\r\n            xpathContext: properties.xpathContext || \"\"\r\n        });\r\n\r\n\r\n        if (!self.isDisposed()) {\r\n            // Unregister children of container to replace in hash self.rendersById and self.rendersByXpath\r\n            self.unregisterChildren();\r\n            delete self.children;\r\n            delete self.childrenHash;\r\n\r\n            // update editable\r\n            if (self.properties.editable === false) {\r\n                data.container && data.container.properties ? (data.container.properties.editable = false) : \"\";\r\n            }\r\n\r\n            // Update the data\r\n            self.initializeData(data.container);\r\n\r\n            // Render the container again\r\n            var currentContainer = self.container;\r\n            var result = self.render();\r\n\r\n            if (self.properties.type == \"tabItem\") {\r\n                $(result).addClass(\"childrenActive\");\r\n            }\r\n\r\n            currentContainer && currentContainer.replaceWith(result);\r\n\r\n            // Execute personalized stuff after to refresh it\r\n            self.afterToRefresh();\r\n        }\r\n    },\r\n\r\n    beforeToRefresh: function () {\r\n        var self = this;\r\n\r\n        // Call beforeToRefresh of each children\r\n        for (var i = 0; i < self.children.length; i++) {\r\n            self.children[i].beforeToRefresh();\r\n        }\r\n    },\r\n\r\n    afterToRefresh: function () {\r\n        var self = this;\r\n\r\n        // Call beforeToRefresh of each children\r\n        for (var i = 0; i < self.children.length; i++) {\r\n            self.children[i].afterToRefresh();\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Re-execute children actions\r\n    */\r\n    triggerChildrenActions: function () {\r\n        var self = this;\r\n\r\n        var form = self.getFormContainer();\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n            var type = child.getElementType();\r\n\r\n            if (type === bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.triggerChildrenActions();\r\n            }\r\n            else if (type === bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                child.triggerRenderChange({ changed: false });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /*\r\n    * register actions container\r\n    */\r\n    registerActions: function (actions) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n\r\n        if (actions) {\r\n            form.actionController.buildActions(actions);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * unregister children container\r\n    */\r\n    unregisterChildren: function () {\r\n        var self = this;\r\n\r\n        var form = self.getFormContainer();\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n            var type = child.getElementType();\r\n\r\n            if (type === bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.unregisterChildren();\r\n            }\r\n            else if (type === bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                form.unregisterRender(child);\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    * Replace child\r\n    */\r\n    replaceChild: function (element) {\r\n        var self = this;\r\n\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n\r\n            if (child.properties.uniqueId == element.properties.uniqueId) {\r\n                children.splice(i, 1);\r\n                children.splice(i, 0, element);\r\n                break;\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    * Gets child\r\n    */\r\n    getChildById: function (id) {\r\n\r\n        var self = this;\r\n\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n\r\n            if (child.properties.id == id) {\r\n                return child;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: Bizagi Render Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a base render class with common stuff related to all renders\r\n */\r\n\r\nbizagi.rendering.element.extend(\"bizagi.rendering.render\", {\r\n    postRenderTimeout: 0,\r\n    maxRendersPerScreen: 50,\r\n    rendersExecuted: 0,\r\n    renderOptimization: false,\r\n    TYPE_QUERY_FORM: \"queryForm\",\r\n    startOptimization: function () {\r\n        bizagi.rendering.render.postRenderTimeout = 500;\r\n        bizagi.rendering.render.rendersExecuted = 0;\r\n        // Cancelled optimization temporally, because its on experimental stage\r\n        bizagi.rendering.render.renderOptimization = false;\r\n    },\r\n    stopOptimization: function () {\r\n        bizagi.rendering.render.postRenderTimeout = 0;\r\n        bizagi.rendering.render.rendersExecuted = 0;\r\n        bizagi.rendering.render.renderOptimization = false;\r\n    }\r\n}, {\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        var form = self.getFormContainer();\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n\r\n        properties.included = (typeof properties.included != \"undefined\") ? bizagi.util.parseBoolean(properties.included) : false;\r\n        properties.uniqueId = Math.ceil(Math.random() * 1000000);\r\n        properties.displayName = properties.displayName || \"\";\r\n        properties.editable = (typeof properties.editable != \"undefined\") ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.visible = (typeof properties.visible != \"undefined\") ? bizagi.util.parseBoolean(properties.visible) : true;\r\n        properties.includedInResult = (typeof properties.includedInResult != \"undefined\") ? bizagi.util.parseBoolean(properties.includedInResult) : false;\r\n\r\n        var renderType = bizagi.util.normalizeType(properties.type);\r\n        if (/^hidden$/i.test(renderType)) {\r\n            properties.visible = false;\r\n        }\r\n\r\n        properties.required = (typeof properties.required != \"undefined\") ? bizagi.util.parseBoolean(properties.required) : false;\r\n        properties.submitOnChange = (typeof properties.submitOnChange != \"undefined\") ? bizagi.util.parseBoolean(properties.submitOnChange) : false;\r\n        properties.maxLength = properties.maxLength || 0;\r\n        properties.helpText = bizagi.util.trim(properties.helpText) || \"\";\r\n        properties.textFormat = properties.textFormat || {};\r\n        properties.valueFormat = properties.valueFormat || {};\r\n        properties.isHidden = (typeof properties.isHidden != \"undefined\") ? bizagi.util.parseBoolean(properties.isHidden) : false;\r\n        properties.visible = (properties.isHidden) ? false : properties.visible;\r\n\r\n        // Old color and background color\r\n        if (properties.color) {\r\n            properties.textFormat.color = properties.color;\r\n        }\r\n\r\n        if (properties.backgroundColor) {\r\n            properties.textFormat.backgroundColor = properties.backgroundColor;\r\n        }\r\n\r\n        // Non-editable fields cannot be required\r\n        properties.required = properties.editable ? properties.required : false;\r\n\r\n        // Override orientation from parent if not set\r\n        properties.orientation = properties.orientation || \"auto\";\r\n\r\n        // Check contexttype\r\n        properties.contexttype = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : \"\";\r\n\r\n        // Save original properties\r\n        self.originalProperties = {\r\n            textFormat: {\r\n                color: properties.textFormat.color,\r\n                backgroundColor: properties.textFormat.backgroundColor\r\n            },\r\n            valueFormat: {\r\n                color: properties.textFormat.color,\r\n                backgroundColor: properties.textFormat.backgroundColor\r\n            },\r\n            visible: properties.visible,\r\n            editable: properties.editable,\r\n            required: properties.required,\r\n            labelAlign: properties.labelAlign,\r\n            valueAlign: properties.valueAlign\r\n        };\r\n\r\n        // Create value property\r\n        self.value = typeof (properties.value) !== \"undefined\" ? properties.value : null;\r\n\r\n        // Register original value property\r\n        self.properties.originalValue = self.value;\r\n        self.properties.previousValue = self.value;\r\n\r\n        // Calculate layout properties\r\n        self.calculateInitialLayoutProperties();\r\n    },\r\n    /*\r\n    *   Calculate aligns, display types, rtl and widths\r\n    */\r\n    calculateInitialLayoutProperties: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set visual defaults\r\n        properties.displayType = properties.displayType || \"normal\";\r\n        properties.labelAlign = properties.labelAlign || self.getDefaultLabelAlign(properties.displayType);\r\n        properties.valueAlign = properties.valueAlign || self.getDefaultValueAlign(properties.displayType);\r\n\r\n        // Check rtl orientation\r\n        if (properties.orientation === \"rtl\") {\r\n            properties.labelAlign = self.getRTLAlign(properties.labelAlign);\r\n            properties.valueAlign = self.getRTLAlign(properties.valueAlign);\r\n        }\r\n\r\n        // Calculate render with\r\n        var renderWidth = self.calculateRenderWidth(properties.labelWidth, properties.valueWidth, properties.displayType);\r\n        properties.labelWidth = renderWidth.label;\r\n        properties.valueWidth = renderWidth.control;\r\n\r\n        if (properties.layoutType === \"percentage\") {\r\n            properties.valueWidth = renderWidth.control;\r\n        }\r\n\r\n        if (properties.labelWidth == 0) {\r\n            properties.displayType = \"value\";\r\n            properties.valueWidth = renderWidth.control;\r\n        }\r\n\r\n        if (properties.valueWidth == 0) {\r\n            properties.displayType = \"label\";\r\n        }\r\n\r\n        if (properties.type === \"userfield\") {\r\n            if (properties.displayType === \"both\") {\r\n                properties.valueWidth = properties.valueWidth || 50;\r\n                properties.labelWidth = properties.labelWidth || 50;\r\n            } else if (properties.displayType === \"vertical\") {\r\n                properties.valueWidth = 100;\r\n                properties.labelWidth = 100;\r\n            } else {\r\n                properties.valueWidth = 100;\r\n                properties.labelWidth = 0;\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () {\r\n        return bizagi.rendering.element.ELEMENT_TYPE_RENDER;\r\n    },\r\n    /*\r\n    *   Returns the html templated element\r\n    */\r\n    render: function (renderTemplateName) {\r\n        return this.renderElement(renderTemplateName);\r\n    },\r\n    /*\r\n    *   Returns the html templated element\r\n    */\r\n    renderElement: function (renderTemplateName) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        // Start rendering deferred\r\n        self.renderingDeferred = new $.Deferred();\r\n\r\n        // Set render template\r\n        renderTemplateName = renderTemplateName || \"render\";\r\n        var renderTemplate = self.renderFactory.getTemplate(renderTemplateName);\r\n\r\n        // Resolve render label\r\n        var label = properties.displayName;\r\n        if (typeof label == \"string\") {\r\n            label = label.replaceAll(\"&\", \"&amp;\");\r\n            label = label.replaceAll(\"$\", \"&#36;\");\r\n            label = label.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\r\n            label = label.replaceAll(\"\\\"\", \"&#34;\").replaceAll(\"'\", \"&#39;\").replaceAll(\"/\", \"&#47;\");\r\n            label = label.replaceAll(\"\\\\n\", \"<br/>\");\r\n            label = label.replaceAll(\"\\n\", \"<br/>\");\r\n        }\r\n\r\n        var isFullRender = bizagi.util.detectDevice() !== \"desktop\" && (properties.type === \"association\" || properties.type === \"uploadecm\" || ((properties.type === \"actionLauncher\" || properties.type === \"polymorphicLauncher\") && bizagi.util.isTabletDevice()) || (properties.type === \"grid\" && !bizagi.util.isTabletDevice()));\r\n        var labelWidth = parseFloat(properties.labelWidth);\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(renderTemplate, {\r\n            label: label, helpText: properties.helpText,\r\n            editable: properties.editable,\r\n            isExtendedText: (properties.type == \"text\" && properties.isExtended),\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            tag: properties.tag,\r\n            displayType: properties.displayType,\r\n            displayOptionClass: self.getDisplayOptionClass(properties.displayType),\r\n            labelAlignClass: self.getAlignClass(properties.labelAlign),\r\n            valueAlignClass: self.getAlignClass(properties.valueAlign),\r\n            labelWidth: labelWidth,\r\n            stringLabelWidth: labelWidth + (properties.layoutType == 'pixels' ? 'px' : '%'),\r\n            valueWidth: parseFloat(properties.valueWidth),\r\n            stringValueWidth: parseFloat(properties.valueWidth) + (properties.layoutType == 'pixels' ? 'px' : '%'),\r\n            layoutType: properties.layoutType,\r\n            isDesign: self.getMode() === \"design\",\r\n            messageValidation: properties.messageValidation,\r\n            printVersion: form.params.printversion,\r\n            cssClass: properties.cssclass || \"\",\r\n            includedInResult: properties.includedInResult,\r\n            included: properties.included,\r\n            type: properties.type,\r\n            showFullRender: isFullRender,\r\n            required: properties.required,\r\n            helpText: properties.helpText\r\n        });\r\n\r\n        // Render internal control html\r\n        var result = self.internalRenderControl();\r\n        if (!result) {\r\n            result = \"\";\r\n        }\r\n\r\n        // Check if this is an async element or not\r\n        var async = typeof (result) === \"object\" && result.done;\r\n        if (!async) {\r\n            html = self.replaceControlHtml(html, result);\r\n\r\n        } else {\r\n            if (result.state() === \"resolved\") {\r\n                // Fetch resolved result\r\n                html = self.replaceControlHtml(html, self.resolveResult(result));\r\n                self.asyncRenderDeferred = null;\r\n            } else {\r\n                // Wait for result\r\n                self.asyncRenderDeferred = result;\r\n                html = self.replaceControlHtml(html, \"\");\r\n            }\r\n        }\r\n\r\n        return html;\r\n    },\r\n    /*\r\n    *   Returns the resolved result from a promise when the promise has been executed already\r\n    */\r\n    resolveResult: function (promise) {\r\n        return bizagi.resolveResult(promise);\r\n    },\r\n    /*\r\n    *   Check if the jquery element is ready or not\r\n    */\r\n    isRendered: function () {\r\n        var self = this;\r\n        if (!self.renderingDeferred) {\r\n            return false;\r\n        }\r\n        return self.renderingDeferred.promise();\r\n    },\r\n    /*\r\n    *   Renders the control html\r\n    */\r\n    internalRenderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        self.control = null;\r\n\r\n        if (self.renderFactory.printVersion) {\r\n            properties.editable = false;\r\n            return self.renderControl();\r\n        } else if (properties.editable) {\r\n            return self.renderControl();\r\n        }\r\n\r\n        return self.renderReadOnly();\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    postRenderElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set element variable\r\n        self.element = element;\r\n\r\n        if (properties.submitOnChange)\r\n            self.configureSubmitOnChange();\r\n\r\n        // Process internal layout\r\n        isLabelFormat = true;\r\n\r\n        var executePostRender = function (_element) {\r\n            if (bizagi.rendering.render.renderOptimization &&\r\n                bizagi.rendering.render.rendersExecuted > bizagi.rendering.render.maxRendersPerScreen) {\r\n\r\n                // Execute post-render control\r\n                setTimeout(function () {\r\n                    self.internalPostRender(_element);\r\n                    bizagi.rendering.render.postRenderTimeout += 50;\r\n                }, bizagi.rendering.render.postRenderTimeout);\r\n\r\n            } else {\r\n                self.internalPostRender(_element);\r\n            }\r\n            bizagi.rendering.render.rendersExecuted++;\r\n        };\r\n\r\n        if (self.asyncRenderDeferred) {\r\n            // Wait for async result\r\n            $.when(self.asyncRenderDeferred)\r\n                .done(function (html) {\r\n                    var control = self.getControl();\r\n                    if (typeof self.emptyControlByAsyncRenderDeferred == \"function\") {\r\n                        self.emptyControlByAsyncRenderDeferred();\r\n                    }\r\n                    control.append(html);\r\n\r\n                    // Execute post-render control\r\n                    executePostRender(element);\r\n                    self.processLayout(!isLabelFormat, self.properties.valueFormat || {});\r\n                });\r\n        } else {\r\n            // Execute post-render control\r\n            executePostRender(element);\r\n        }\r\n    },\r\n    /*\r\n    *   Executes the post render handlers\r\n    */\r\n    internalPostRender: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n\r\n        self.control = self.getControl();\r\n\r\n        // Resolve rendering deferred\r\n        if (self.renderingDeferred) {\r\n            self.renderingDeferred.resolve();\r\n        }\r\n\r\n        // Execute post-renders\r\n        if (properties.editable) {\r\n            // Post-render editable version\r\n            if (self.renderFactory.printVersion && self.postRenderPrintVersion) {\r\n                self.postRenderPrintVersion();\r\n            } else {\r\n                self.postRender();\r\n            }\r\n\r\n        } else {\r\n            // Post-render readonly version\r\n            self.postRenderReadOnly(element);\r\n        }\r\n\r\n        // Perform execution mode methods\r\n        if (mode == \"execution\") {\r\n            self.performExecutionModeMethods();\r\n        } else {\r\n            self.performDesignModeMethods();\r\n        }\r\n\r\n        self.processLayout(isLabelFormat, self.properties.textFormat || {});\r\n        self.processLayout(!isLabelFormat, self.properties.valueFormat || {});\r\n    },\r\n    /*\r\n    *   Execute runtime only methods\r\n    */\r\n    performExecutionModeMethods: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (self.getFormType() == self.Class.TYPE_QUERY_FORM) {\r\n            self.configureHandlersQueryForm();\r\n        }\r\n\r\n        // Apply handlers\r\n        if (properties.editable) {\r\n            self.configureHandlers();\r\n        } else {\r\n            self.configureHandlersReadOnly();\r\n        }\r\n\r\n        // Set initial value\r\n        self.internalSetInitialValue();\r\n    },\r\n    /**\r\n     * Execute design only methods\r\n     */\r\n    performDesignModeMethods: function () {\r\n        var self = this;\r\n\r\n        // Execute custom code for each render\r\n        self.configureDesignView();\r\n\r\n        // Set initial value\r\n        self.internalSetInitialValue();\r\n    },\r\n    /*\r\n    *   Replaces a {{control}} string in the specified element\r\n    */\r\n    replaceControlHtml: function (html, replace) {\r\n        html = html || \"\";\r\n        replace = replace || \"\";\r\n        return html.replace(\"{{control}}\", replace);\r\n    },\r\n    /*\r\n    *   Return the rendered element\r\n    */\r\n    getRenderedElement: function () {\r\n        if (bizagi.util.isEmpty(this.element)) {\r\n            bizagi.log(\" render hasn't been rendered!\", this, \"error\");\r\n        }\r\n\r\n        return this.element;\r\n    },\r\n    /*\r\n    *   Sets the initial value for the renders\r\n    */\r\n    internalSetInitialValue: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        self.internalSetInitialValueFlag = true;\r\n\r\n        // Set the initial value\r\n        if (properties.editable) {\r\n            if (!bizagi.util.isEmpty(self.value)) {\r\n                self.setDisplayValue(self.value);\r\n            }\r\n        } else {\r\n            if (!bizagi.util.isEmpty(self.value)) {\r\n                self.setDisplayValue(self.value);\r\n            }\r\n        }\r\n        self.internalSetInitialValueFlag = false;\r\n    },\r\n    /*\r\n    * Public method to determine if a value is valid or not\r\n    */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n        var inlineAdd = self.grid && self.grid.properties && self.grid.properties.inlineAdd;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) === false) {\r\n            return true;\r\n        }\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) === false && !inlineAdd) {\r\n            return true;\r\n        }\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (bizagi.util.parseBoolean(properties.required)) {\r\n            var form = self.getFormContainer();\r\n            var hasValue = false;\r\n            var renders = self.grid ? [self] : form.getRenders(properties.xpath);\r\n            var isQueryForm = /^query/i.test(properties.type);\r\n\t               \r\n            renders.filter(function (render) {\r\n                return render.properties.id == properties.id;\r\n            }).forEach(function (render) {\r\n                if (render.hasValue() && (render.properties.editable || inlineAdd)) {\r\n                    hasValue = true;\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            if (!hasValue && !self.properties.isClone) {\r\n                message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                var messageData = {xpath: properties.xpath, message: message};\r\n\r\n                if (isQueryForm) {\r\n                    messageData = $.extend({}, messageData, {\r\n                        id: properties.id,\r\n                        isQuery: isQueryForm\r\n                    });\r\n                }\r\n\r\n                invalidElements.push(messageData);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // Check retypes\r\n        if (properties.retype == \"duplicate\") {\r\n            // Don't process cloned renders, just originals\r\n            if (self.cloneRender) {\r\n                if (self.cloneRender.getValue() != self.getValue()) {\r\n                    message = self.getResource(\"render-text-retype-error\");\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    return false;\r\n                }\r\n            }\r\n        } else if (properties.retype == \"double\") {\r\n            var control = $(\"input\", self.element);\r\n\r\n            //Waits until the control has the second value written\r\n            if (control && control.data(\"oldValue\")) {\r\n                if (control.val() === \"\") {\r\n\r\n                    message = self.getResource(\"render-text-retype-error\");\r\n                    invalidElements.push({\r\n                        xpath: properties.xpath,\r\n                        message: message\r\n                    });\r\n\r\n                    return false;\r\n                } else if (control.val() != control.data(\"oldValue\")) {\r\n                    message = self.getResource(\"render-text-retype-error\");\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Check maxlength\r\n        var columnEditable = self.grid && self.grid.getColumn ? self.grid.getColumn(self.properties.xpath).properties.editable : true;\r\n        if (properties.type !== \"userPassword\" && properties.maxLength !== undefined && properties.maxLength > 0 && bizagi.util.isNumeric(properties.maxLength)) {\r\n            if (columnEditable || (!columnEditable && self.controlValueIsChanged())) {\r\n                var maxLength = new Number(properties.maxLength);\r\n                var value = self.getValue();\r\n\r\n                if (value && value.toString().length > maxLength) {\r\n                    message = self.getResource(\"render-text-maxLength-error\").replaceAll(\"#maxLength#\", maxLength);\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Check if a render has no value for required validation\r\n    */\r\n    hasValue: function () {\r\n        var self = this;\r\n        // Next line decides if only spaces are accepted as valid texts or not. Anyway the spaces are still saved as self.value has not changed\r\n        var value = self.getValue();\r\n        value = (value && self.properties.type === \"text\") ? value.trim() : value;\r\n        return !bizagi.util.isEmpty(value);\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    postRender: function () {       \r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed in read-only mode\r\n    */\r\n    postRenderReadOnly: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers when the control is readonly\r\n    */\r\n    configureHandlersReadOnly: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour when rendering in design mode\r\n    */\r\n    configureDesignView: function () {\r\n    },\r\n    /*\r\n    *   Method to process the render the layout\r\n    */\r\n    processLayout: function (isLabelFormat, format) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (self.getControl() == null) return;\r\n\r\n        // Set customizations\r\n        format = format || {};\r\n\r\n        if (format.color) {\r\n            self.changeColor(format.color, isLabelFormat);\r\n        }\r\n        if (format.background) {\r\n            self.changeBackgroundColor(format.background);\r\n        }\r\n        //if bold is true in modeler, we receive nothing in execution (!formal.bold)\r\n        if (format.bold || !format.bold || !isLabelFormat) {\r\n            self.changeFontBold(format.bold, isLabelFormat);\r\n        }\r\n        if (format.italic) {\r\n            self.changeFontItalic(format.italic, isLabelFormat);\r\n        }\r\n        if (format.underline) {\r\n            self.changeFontUnderline(format.underline, isLabelFormat);\r\n        }\r\n        if (format.strikethru) {\r\n            self.changeFontStrikethru(format.strikethru, isLabelFormat);\r\n        }\r\n        if (format.size) {\r\n            self.changeFontSize(format.size, isLabelFormat);\r\n        }\r\n\r\n        // Set required and visiblity\r\n        properties.required = properties.required != undefined ? bizagi.util.parseBoolean(properties.required) : false;\r\n        var visible = properties.visible != undefined ? bizagi.util.parseBoolean(properties.visible) : true;\r\n        if (properties.required) {\r\n            self.changeRequired(properties.required);\r\n        }\r\n        if (!visible) {\r\n            self.changeVisibility(visible);\r\n        }\r\n    },\r\n    /*\r\n    *   Sets the internal value\r\n    */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n        triggerEvents = triggerEvents !== undefined ? triggerEvents : true;\r\n\r\n        if (!(bizagi.util.identicalObjects(value, self.value))) {\r\n            // set previous value\r\n            self.properties.previousValue = self.properties.originalValue = self.value;\r\n\r\n            // Change internal value\r\n            self.value = self.properties.value = value;\r\n            if (self.properties.required && self.getMode() == \"execution\") {\r\n\r\n                if (self.checkRequired([])) {\r\n                    self.changeRequiredLabel(false);\r\n                } else {\r\n                    self.changeRequiredLabel(true);\r\n                }\r\n            }\r\n\r\n            // Trigger events\r\n            if (triggerEvents && !self.internalSetInitialValueFlag) {\r\n                self.triggerRenderChange();\r\n                self.triggerRenderValidate();\r\n            }\r\n        }\r\n    },\r\n\r\n    checkRequired: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (bizagi.util.parseBoolean(properties.required)) {\r\n            if (!self.hasValue()) {\r\n                message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                invalidElements.push({\r\n                    xpath: properties.xpath,\r\n                    message: message\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n\r\n    validateInputRetype: function () {\r\n        var self = this;\r\n        if (self.properties.retype && self.cloneRender) {\r\n            return self.getValue() == self.cloneRender.getValue();\r\n        }\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Triggers the render change event\r\n    */\r\n    triggerRenderChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        params.changed = params.changed !== undefined ? params.changed : true;\r\n        self.triggerHandler(\"renderchange\", {render: self, changed: params.changed});\r\n    },\r\n    /*\r\n    *   Triggers the render validate event\r\n    */\r\n    triggerRenderValidate: function () {\r\n        var self = this;\r\n        self.triggerHandler(\"rendervalidate\", {render: self});\r\n    },\r\n    /*\r\n    *   Sets the value in the rendered control\r\n    */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n\r\n        if (!self.properties.editable && (self.properties.display !== \"check\" || (self.properties.display === \"check\" && bizagi.override.enableCheck === true))) {\r\n            // Render as simple value\r\n            var displayValue = self.getDisplayValue(value);\r\n            if (typeof (displayValue) == \"string\" || typeof (displayValue) == \"number\") {\r\n                displayValue = bizagi.util.sanitizeHTML(displayValue);\r\n                $(control).html(\"<label class='readonly-control'>\" + displayValue + \"</label>\");\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *   Returns the internal value\r\n    */\r\n    getValue: function () {\r\n        return this.value;\r\n    },\r\n    /*\r\n    *   Returns the value to display, ex. non-editable renders\r\n    */\r\n    getDisplayValue: function () {\r\n        return this.getValue();\r\n    },\r\n    /*\r\n    *   Template method to get the label element\r\n    */\r\n    getLabel: function () {\r\n        bizagi.util.mustImplement(\"getLabel\");\r\n    },\r\n    /*\r\n    *   Template method to get the control element\r\n    */\r\n    getControl: function () {\r\n        bizagi.util.mustImplement(\"getControl\");\r\n    },\r\n    /*\r\n    *   Template method to get the control filler element\r\n    */\r\n    getControlFiller: function () {\r\n        bizagi.util.mustImplement(\"getControlFiller\");\r\n    },\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n    },\r\n    /*\r\n    *   Adds a validation message to the render\r\n    */\r\n    setValidationMessage: function (message) {\r\n        this.validationMessage = message;\r\n    },\r\n    /*\r\n    *   Method to render non editable values\r\n    */\r\n    renderReadOnly: function () {\r\n        var result = this.getValue();\r\n        var readOnlyValue = \"\";\r\n\r\n        if (bizagi.util.isObject(result) && typeof (result.value) !== \"undefined\") {\r\n            readOnlyValue = bizagi.util.sanitizeHTML(result.value);\r\n        } else if (!bizagi.util.isEmpty(result)) {\r\n            if (bizagi.util.isString(result)) {\r\n                readOnlyValue = bizagi.util.decodedDisplayValue(result);\r\n            } else {\r\n                readOnlyValue = result;\r\n            }\r\n        }\r\n\r\n        return readOnlyValue;\r\n    },\r\n\r\n    /*\r\n    *  Method to render print version\r\n    */\r\n    postRenderPrintVersion: function () {\r\n    },\r\n\r\n    /*\r\n    *   Customizes render display type with custom css classes\r\n    */\r\n    changeDisplayOption: function (displayType) {\r\n        this.properties.displayType = displayType;\r\n    },\r\n\r\n    /*\r\n    *   Return the right display option class\r\n    */\r\n    getDisplayOptionClass: function (displayType) {\r\n        return \"\";\r\n    },\r\n\r\n    /*\r\n    *   Customizes render label align\r\n    */\r\n    changeLabelAlign: function (alignType) {\r\n        this.properties.labelAlign = alignType;\r\n    },\r\n\r\n    /*\r\n    *   Customizes render value align\r\n    */\r\n    changeValueAlign: function (alignType) {\r\n        this.properties.valueAlign = alignType;\r\n    },\r\n\r\n    /*\r\n    *   Return the right align class\r\n    */\r\n    getAlignClass: function (alignType) {\r\n        return \"\";\r\n    },\r\n\r\n    /*\r\n    *   Customizes render label and value width\r\n    */\r\n    customizeRenderWidth: function () {\r\n    },\r\n\r\n    /* Customizes render color*/\r\n    changeColor: function (color, isLabelFormat) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var label = self.getLabel();\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        if (control && label) {\r\n            if (color != 'none') {\r\n                // Hide - show the render\r\n                if (self.properties.displayType === \"value\" || !isLabelFormat) {\r\n                    self.getElementsToStylize(self.getControl()).css(\"color\", color, \"!important\");\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"color\", color, \"!important\");\r\n                    });\r\n                } else {\r\n                    self.element.each(function () {\r\n                        this.style.setProperty('color', color, 'important');\r\n                    });\r\n\r\n                    if (self.properties.type == \"grid\") {\r\n                        self.getControl().find(\".bz-mobile-grid__header-title\").each(function () {\r\n                            this.style.setProperty('color', color, 'important');\r\n                        });\r\n                    }\r\n\r\n                    self.getLabel().find(\"label\").css(\"color\", color, \"!important\");\r\n                    if (self.properties.editable === false) {\r\n                        self.getElementsToStylize(self.getControl()).css(\"color\", color, \"!important\");\r\n                        self.getElementsToStylize($(\"label\", self.getControl()).css(\"color\", color, \"!important\"));\r\n                    }\r\n                }\r\n            } else {\r\n                self.element.css(\"color\", \"\");\r\n                self.getLabel().find(\"label\").css(\"color\", \"\");\r\n                self.getControl().css(\"color\", \"\");\r\n\r\n                self.getControl().find(\"input, textarea\").each(function (i, element) {\r\n                    var originalColor = $(element).data(\"originalColor\") || \"\";\r\n                    self.getElementsToStylize(element).css(\"color\", originalColor);\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes render background color*/\r\n    changeBackgroundColor: function (color) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var label = self.getLabel();\r\n\r\n        if (control && label) {\r\n            if (color != 'none') {\r\n                self.element.each(function () {\r\n                    this.style.setProperty('background-color', color, 'important');\r\n                });\r\n\r\n                if (typeof (label.find('label').style) !== \"undefined\") {\r\n                    self.getLabel().find(\"label\").style(\"background-color\", color, \"important\");\r\n                } else {\r\n                    self.getLabel().find(\"label\").css(\"background-color\", color, \"!important\");\r\n                }\r\n\r\n                var currentStyle = self.getLabel().attr(\"style\");\r\n                currentStyle += \"; background-color:\" + color + \"!important\";\r\n                self.getLabel().attr(\"style\", currentStyle);\r\n            } else {\r\n                self.element.css(\"background-color\", \"\");\r\n                self.getLabel().find(\"label\").css(\"background-color\", \"\");\r\n                self.getControl().css(\"background-color\", \"\");\r\n                self.getControl().find(\"input, textarea\").each(function (i, element) {\r\n                    var originalColor = $(element).data(\"originalColor\") || \"\";\r\n                    $(element).css(\"background-color\", originalColor);\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Returns the formatting label to be used for bold, italic, underline, strikethrough and size*/\r\n    getFormattingLabel: function () {\r\n        var self = this;\r\n        return self.getLabel().find(\"label\");\r\n    },\r\n\r\n    /* Customizes the font weight */\r\n    changeFontBold: function (bold, isLabelFormat) {\r\n        var self = this;\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(bold) != false && isLabelFormat) {\r\n            self.getFormattingLabel().css(\"font-weight\", \"bold\", \"!important\");\r\n            self.getControl().each(function (i, element) {\r\n                $(element).css(\"font-weight\", \"bold\", \"!important\");\r\n            });\r\n\r\n        } else {\r\n            if (isLabelFormat)\r\n                self.getFormattingLabel().css(\"font-weight\", \"normal\", \"!important\");\r\n        }\r\n        if (!isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(bold) == true) {\r\n                self.getControl().find(\"*\").each(function (i, element) {\r\n                    $(element).css(\"font-weight\", \"bold\", \"!important\");\r\n                });\r\n            } else {\r\n                self.getControl().find(\"*\").each(function (i, element) {\r\n                    $(element).css(\"font-weight\", \"normal\", \"!important\");\r\n                });\r\n                self.getControl().css(\"font-weight\", \"normal\", \"!important\");\r\n            }\r\n        }\r\n    },\r\n\r\n    controlValueIsChanged: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var value = self.getValue();\r\n        var compareValue = properties.originalValue;\r\n        var baseValue = properties.defaultValue;\r\n        var result = true;\r\n        var renderType = bizagi.util.normalizeType(properties.type);\r\n\r\n        // Flag to force to collect data\r\n        if ($.forceCollectData) {\r\n            return true;\r\n        }\r\n\r\n        // Verify if control has been ready\r\n        if (renderType === \"grid\" && self.ready().state() === \"pending\") {\r\n            return false;\r\n        }\r\n\r\n        if ([\"combo\", \"queryCombo\", \"list\", \"queryList\",\"radio\", \"queryRadio\"].includes(renderType) || /^cascadingcombo$/i.test(renderType)) {\r\n            if (value && value.length !== undefined) {\r\n                value = value[0];\r\n            }\r\n            if (compareValue && compareValue.length !== undefined) {\r\n                compareValue = compareValue[0];\r\n            }\r\n            if (baseValue && baseValue.length !== undefined) {\r\n                baseValue = baseValue[0];\r\n            }\r\n            value = value && value.id ? value.id : value;\r\n            compareValue = compareValue && compareValue.id ? compareValue.id : compareValue;\r\n            baseValue = baseValue && baseValue.id ? baseValue.id : baseValue;\r\n            if (typeof baseValue != \"undefined\" && baseValue != null) {\r\n                result = (compareValue == value) && (compareValue != baseValue) ? false : true;\r\n            } else {\r\n                result = (compareValue == value) ? false : true;\r\n            }\r\n        } else if (renderType === \"boolean\" || renderType === \"queryBoolean\" || renderType === \"queryCheck\") {\r\n            result = (bizagi.util.parseBoolean(compareValue) == bizagi.util.parseBoolean(value)) ? false : true;\r\n        } else if (renderType === \"searchNumber\") {\r\n            result = !!(value);\r\n        } else if (renderType === \"number\") {\r\n            if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue === value) ? false : true;\r\n            }\r\n        } else if (renderType === \"text\") {\r\n            if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue === value) ? false : true;\r\n            }\r\n        } else if (renderType === \"date\") {\r\n            if (!compareValue && !value) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue == value) ? false : true;\r\n            }\r\n        } else if (renderType === \"actionLauncher\") {\r\n            //Object must be an array\r\n            result = false;\r\n            var compareValueObj = [];\r\n            try {\r\n                if (typeof compareValue === \"string\") {\r\n                    compareValueObj = JSON.parse(compareValue);\r\n                } else {\r\n                    compareValueObj = compareValue;\r\n                }\r\n            } catch (e) {\r\n            }\r\n\r\n            var _findAction = function (guid, targetObj) {\r\n                guid = guid || \"\";\r\n                targetObj = targetObj || [];\r\n                var result = false;\r\n                for (var i = 0, l = targetObj.length; i < l; i++) {\r\n                    if (targetObj[i].guidAction == guid) {\r\n                        result = true;\r\n                        break;\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n\r\n            if (compareValueObj.length == value.length) {\r\n                for (var i = 0, l = compareValueObj.length; i < l; i++) {\r\n                    if (!_findAction(compareValueObj[i].guidAction, value)) {\r\n                        result = true;\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                result = true;\r\n            }\r\n        } else if (renderType === \"polymorphicLauncher\" || renderType === \"entityTemplate\") {\r\n            //Object must be an array\r\n            if (compareValue.length != value.length) {\r\n                result = true;\r\n            } else {\r\n                result = (JSON.encode(value) == JSON.encode(compareValue)) ? false : true;\r\n            }\r\n        } else if (renderType === \"image\") {\r\n            if (compareValue == null && value.indexOf(true) < 0) {\r\n                result = false;\r\n            } else {\r\n                result = true;\r\n            }\r\n        } else if (renderType === \"searchList\") {\r\n            var objectValue = {};\r\n            try {\r\n                objectValue = JSON.parse(value);\r\n            } catch (e) {\r\n                console.log(\"Error when detect change value on searchList control\")\r\n            }\r\n            result = (JSON.encode(compareValue) == JSON.encode(objectValue.value)) ? false : true;\r\n        } else {\r\n            result = (compareValue === value) ? false : true;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /* Customizes the font italic style */\r\n    changeFontItalic: function (italic, isLabelFormat) {\r\n        var self = this;\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(italic) == true) {\r\n                if (isLabelFormat)\r\n                    self.getFormattingLabel().css(\"font-style\", \"italic\", \"!important\");\r\n\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"font-style\", \"italic\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"font-style\", \"italic\", \"!important\");\r\n                }\r\n            } else {\r\n                if (isLabelFormat)\r\n                    self.getFormattingLabel().css(\"font-style\", \"normal\", \"!important\");\r\n\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"font-style\", \"normal\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"font-style\", \"normal\", \"!important\");\r\n                }\r\n            }\r\n        } else {\r\n            if (bizagi.util.parseBoolean(italic) == true) {\r\n                self.getFormattingLabel().css(\"font-style\", \"italic\", \"!important\");\r\n            } else {\r\n                self.getFormattingLabel().css(\"font-style\", \"normal\", \"!important\");\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes the font underline */\r\n    changeFontUnderline: function (underline, isLabelFormat) {\r\n        var self = this;\r\n        var textFormat = self.properties.textFormat || {};\r\n        var valueFormat = self.properties.valueFormat || {};\r\n        var strikethru = bizagi.util.parseBoolean(textFormat.strikethru) ? \"line-through \" : \"\";\r\n        var valuestrikethru = bizagi.util.parseBoolean(valueFormat.strikethru) ? \"line-through \" : \"\";\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(underline) == true && isLabelFormat) {\r\n            self.getFormattingLabel().css(\"text-decoration\", strikethru + \"underline\", \"!important\");\r\n            self.getControl().each(function (i, element) {\r\n                self.getElementsToStylize(element).css(\"text-decoration\", strikethru + \"underline\");\r\n            });\r\n        } else {\r\n            if (isLabelFormat)\r\n                self.getFormattingLabel().css(\"text-decoration\", strikethru, \"!important\");\r\n        }\r\n        if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(underline) == true) {\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"text-decoration\", valuestrikethru + \"underline\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"text-decoration\", valuestrikethru + \"underline\", \"!important\");\r\n                }\r\n            } else {\r\n                self.getControl().find(\"*\").each(function (i, element) {\r\n                    self.getElementsToStylize(element).css(\"text-decoration\", valuestrikethru, \"!important\");\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes the font Strikethrough property */\r\n    changeFontStrikethru: function (strikethru, isLabelFormat) {\r\n        var self = this;\r\n        var textFormat = self.properties.textFormat || {};\r\n        var valueFormat = self.properties.valueFormat || {};\r\n        var underline = bizagi.util.parseBoolean(textFormat.underline) ? \"underline \" : \"\";\r\n        var valueunderline = bizagi.util.parseBoolean(valueFormat.underline) ? \"underline \" : \"\";\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(strikethru) == true && isLabelFormat) {\r\n            self.getFormattingLabel().css(\"text-decoration\", underline + \"line-through\", \"!important\");\r\n        } else {\r\n            if (isLabelFormat)\r\n                self.getFormattingLabel().css(\"text-decoration\", underline, \"!important\");\r\n        }\r\n\r\n        if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(strikethru) == true) {\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"text-decoration\", valueunderline + \"line-through\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"text-decoration\", valueunderline + \"line-through\", \"!important\");\r\n                }\r\n            } else {\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"text-decoration\", valueunderline, \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"text-decoration\", valueunderline, \"!important\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes the font size property */\r\n    changeFontSize: function (size, isLabelFormat) {\r\n        var self = this;\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (size != \"0\") {\r\n            var label = self.getFormattingLabel();\r\n            var newFontSize = (100 + Number(size) * 10) + \"%\";\r\n            if (isLabelFormat) {\r\n                label.css(\"font-size\", newFontSize, \"!important\");\r\n            }\r\n            if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n                var control = self.getControl();\r\n                if (typeof control.children() == \"object\" && control.children().length > 0) {\r\n                    self.getElementsToStylize(control.children()).css(\"font-size\", newFontSize, \"!important\");\r\n                } else {\r\n                    self.getElementsToStylize(control).css(\"font-size\", newFontSize, \"!important\");\r\n                    // Next line applies to Cascading combo and combo in order to increase the control space with large value fonts\r\n                    if (self.properties.type.indexOf(\"ombo\") != -1 && size > 4) (\".ui-selectmenu\", control).children(0).height(2 * size + 20);\r\n                }\r\n\r\n                self.getElementsToStylize(control.find(\".ui-bizagi-render-date\")).css(\"line-height\", \"normal\");\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * in mobiles, don't apply styles to icon's elements\r\n     */\r\n    getElementsToStylize: function (context) {\r\n        return $(context);\r\n    },\r\n\r\n    /* Changes the render visibility*/\r\n    changeVisibility: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(argument) == true) {\r\n            if (properties.type !== \"hidden\") {\r\n                self.element.show();\r\n                self.element.css(\"display\", \"\");\r\n\r\n                if (properties.required) {\r\n                    if (!self.hasValue()) {\r\n                        self.changeRequiredLabel(true);\r\n                    }\r\n                }\r\n            }\r\n        } else if (self.element) {\r\n            self.element.hide();\r\n        }\r\n\r\n        // Update properties\r\n        properties.visible = argument;\r\n    },\r\n    /* Changes the render editability*/\r\n    changeEditability: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        // Renders again\r\n        properties.editable = bizagi.util.parseBoolean(argument);\r\n\r\n        // Clears control\r\n        control.empty();\r\n\r\n        if (typeof self.internalRenderControl == \"function\") {\r\n            $.when(self.internalRenderControl()).done(function (html) {\r\n                if (typeof self.emptyControlByChangeEditability == \"function\")\r\n                    self.emptyControlByChangeEditability();\r\n                if (!self.asyncRenderDeferred)\r\n                    control.append(html);\r\n                self.postRenderElement(self.element);\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    * change cell editability and attach bindings\r\n    */\r\n    changeEditabilityCellControl: function (argument, key, xpath) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        var renderColumn = self.grid.getColumn(xpath);\r\n        var decorated = renderColumn.getDecorated(key);\r\n\r\n        // Renders again\r\n        properties.editable = bizagi.util.parseBoolean(argument);\r\n\r\n        // Clears control\r\n        control.empty();\r\n        if (typeof self.internalRenderControl == \"function\") {\r\n            $.when(self.internalRenderControl()).done(function (html) {\r\n                if (!self.asyncRenderDeferred) {\r\n                    control.append(html);\r\n                }\r\n\r\n                self.postRenderElement(self.element);\r\n\r\n                if (properties.editable) {\r\n\r\n                    renderColumn.bind(\"rendered\", function () {\r\n                        renderColumn.readyDeferred.resolve();\r\n                    });\r\n\r\n                    decorated.unbind(\"renderchange\");\r\n\r\n                    // If the render changes set the flag on\r\n                    decorated.bind(\"renderchange\", function (render, args) {\r\n                        renderColumn.changed = true;\r\n                        self.grid.onCellChange(renderColumn, null, key, args);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    changeRequired: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var label = properties.displayName || \"\";\r\n        var labelElement = $(\"label\", self.getLabel());\r\n        var controlElement = self.getControl();\r\n\r\n        // Update properties\r\n        properties.required = argument;\r\n\r\n        // Changes label\r\n        if (self.getMode() == \"execution\" && self.checkRequired([])) {\r\n            self.changeRequiredLabel(false);\r\n        } else if (bizagi.util.parseBoolean(argument) == true && properties.editable) {\r\n            if (self.properties.orientation == \"rtl\") {\r\n                controlElement.prepend('<div class=\"ui-bizagi-render-control-required-rtl\"></div>');\r\n            } else {\r\n                controlElement.addClass('control-required');\r\n                controlElement.prepend('<div class=\"ui-bizagi-render-control-required\"></div>');\r\n            }\r\n        } else {\r\n            // if element has required label and through action change it, remove element.\r\n            if (self.properties.orientation == \"rtl\") {\r\n                $(\".ui-bizagi-render-control-required-rtl\", controlElement).remove();\r\n            } else {\r\n                controlElement.removeClass('control-required');\r\n                $(\".ui-bizagi-render-control-required\", controlElement).remove();\r\n            }\r\n        }\r\n\r\n        // Set text, HTML is more suitable for the content\r\n        labelElement.html(label);\r\n\r\n        // Perform validations again to check if the form is valid after this change\r\n        self.triggerRenderValidate();\r\n    },\r\n    /**\r\n     * This method just make a toggle of red label indicator\r\n     * Does't change internal value of control, if you need it\r\n     * please use changeRequired method\r\n     *\r\n     * @argument {boolean} argument\r\n     */\r\n    changeRequiredLabel: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var label = properties.displayName || \"\";\r\n        var labelElement = $(\"label\", self.getLabel());\r\n        var controlElement = self.getControl();\r\n\r\n        // Changes label\r\n        if (bizagi.util.parseBoolean(argument) == true && properties.editable) {\r\n            if (self.properties.orientation == \"rtl\") {\r\n                controlElement.prepend('<div class=\"ui-bizagi-render-control-required-rtl\"></div>');\r\n            } else {\r\n                controlElement.addClass('control-required');\r\n                controlElement.append('<div class=\"ui-bizagi-render-control-required\"></div>');\r\n            }\r\n        } else {\r\n            // if element has required label and through action change it, remove element.\r\n            if (self.properties.orientation == \"rtl\") {\r\n                $(\".ui-bizagi-render-control-required-rtl\", controlElement).remove();\r\n            } else {\r\n                controlElement.removeClass('control-required');\r\n                $(\".ui-bizagi-render-control-required\", controlElement).remove();\r\n            }\r\n        }\r\n\r\n        // Set text, HTML is more suitable for the content\r\n        labelElement.html(label);\r\n\r\n        // Perform validations again to check if the form is valid after this change\r\n        self.triggerRenderValidate();\r\n    },\r\n    /*\r\n    *   Refresh the control with a new data\r\n    */\r\n    refreshControl: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var originalValue = self.value;\r\n        var form = self.getFormContainer();\r\n        var idForm = form.properties.id || \"\";\r\n\r\n        args = args || {};\r\n\r\n        // Start waiting\r\n        self.startLoading();\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh();\r\n\r\n        // Call the ajax service\r\n        return $.when(self.dataService.multiaction().refreshControl({\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: (properties.xpathContext || args.xpathContext),\r\n            idForm: idForm\r\n        })).pipe(function (data) {\r\n            // Clear variables\r\n            self.control = self.controlFiller = self.label = null;\r\n\r\n            // Update properties data\r\n            var currentElement = self.element;\r\n            self.initializeData(data.render);\r\n\r\n            // Render the control again\r\n            return $.when(self.render()).pipe(function (html) {\r\n                var result = $(html);\r\n                //Dont remove unused rendered var\r\n                var rendered = self.postRenderElement(result);\r\n                self.properties.originalValue = self.value;\r\n                return result;\r\n            }).pipe(function (result) {\r\n                // When the content has been post-renderized, replace it\r\n                currentElement.replaceWith(result);\r\n\r\n                // Prevent multiple refresh on grid\r\n                if (!self.grid) {\r\n                    self.triggerRenderChange({changed: false});\r\n                }\r\n\r\n                // Execute personalized stuff before to refresh it\r\n                self.afterToRefresh();\r\n            });\r\n\r\n        }).fail(function (message) {\r\n            var message = self.processFailMessage(message);\r\n\r\n        }).always(function () {\r\n            self.endLoading();\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Refresh the control with a new data\r\n     */\r\n    refreshDesignControl: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh();\r\n\r\n        // Clear variables\r\n        self.control = self.controlFiller = self.label = null;\r\n\r\n        $.extend(data.render.properties, {\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: (properties.xpathContext || \"form\"),\r\n            idPageCache: properties.idPageCache\r\n        });\r\n\r\n        // Update properties data\r\n        var currentElement = self.element;\r\n        self.initializeData(data.render);\r\n\r\n        // Render the control again\r\n        return $.when(self.render()).pipe(function (html) {\r\n            var result = $(html);\r\n            //Dont remove unused rendered var\r\n            var rendered = self.postRenderElement(result);\r\n            self.properties.originalValue = self.value;\r\n            return result;\r\n        }).pipe(function (result) {\r\n            // When the content has been post-renderized, replace it\r\n            currentElement.replaceWith(result);\r\n            self.triggerRenderChange();\r\n\r\n            // Execute personalized stuff before to refresh it\r\n            self.beforeToRefresh();\r\n        });\r\n    },\r\n\r\n    /*\r\n    * Cleans current value\r\n    */\r\n    cleanData: function () {\r\n        var self = this;\r\n\r\n        self.setValue(\"\");\r\n        self.clearDisplayValue();\r\n    },\r\n\r\n    /*\r\n     *   Sets the value in the rendered control\r\n     */\r\n    clearDisplayValue: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var input = control.find(\"input\");\r\n\r\n        if (input.length > 0) {\r\n            input.val(self.getValue());\r\n        } else if (self.properties.editable === false) {\r\n            $(control).html(\"<label class='readonly-control'></label>\");\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Updates original value for some comparisons\r\n    */\r\n    updateOriginalValue: function () {\r\n        var self = this;\r\n        self.properties.originalValue = self.value;\r\n    },\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Add the render value\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            if (!bizagi.util.isEmpty(xpath)) {\r\n                if (!bizagi.util.isEmpty(value)) {\r\n                    renderValues[properties.xpath] = value;\r\n                } else if (value === \"\" || value === null) {\r\n                    renderValues[properties.xpath] = \"\";\r\n                }\r\n            }\r\n        }\r\n\r\n        //Validate if the input has a retype configured and check that both values matches, otherwise delete the original value\r\n        if (!self.validateInputRetype()) {\r\n            renderValues[properties.xpath] = \"\";\r\n        }\r\n    },\r\n\r\n    hasChanged: function (result) {\r\n        var self = this;\r\n        if (self.controlValueIsChanged()) {\r\n            result.push(true);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *  Configure aditional Handlers for queryForm type\r\n    */\r\n    configureHandlersQueryForm: function () {\r\n        var self = this;\r\n        var checkIncluded = self.element.find(\".ui-bizagi-render-control-included\");\r\n        checkIncluded.change(function () {\r\n            self.properties.included = $(this).is(\":checked\");\r\n        });\r\n    },\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectDataQueryForm: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n        var queryValue = null;\r\n        if (!bizagi.util.isEmpty(xpath)) {\r\n            if (value !== null && typeof (value) !== \"undefined\") {\r\n                var isObject = typeof (value.id) !== \"undefined\";\r\n                if (isObject) {\r\n                    queryValue = (!bizagi.util.isEmpty(value.id)) ? [value] : null;\r\n                } else {\r\n                    queryValue = (value !== \"\") ? value : null;\r\n                }\r\n            }\r\n            if (queryValue !== null || properties.included) {\r\n\r\n                if (!(properties.display == \"check\" && properties.value == false)) {\r\n\r\n                    var searchType = self.properties.typeSearch || self.properties.rangeQuery || \"NONE\";\r\n                    searchType = searchType.toUpperCase();\r\n                    var newParameter = {\r\n                        \"value\": queryValue,\r\n                        \"included\": self.properties.included,\r\n                        \"xpath\": properties.xpath,\r\n                        \"searchType\": searchType,\r\n                        \"orderType\": \"NONE\"\r\n                    };\r\n                    if (typeof properties.displayXpath !== \"undefined\" && properties.displayXpath !== \"\") {\r\n                        //newParameter.displayXpath= properties.xpath+\".\"+properties.displayXpath;\r\n                        newParameter.displayXpath = properties.displayXpath;\r\n                    }\r\n                    renderValues.push(newParameter);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *  Method to determine if the render value can be sent to the server or not\r\n    */\r\n    canBeSent: function () {\r\n        var self = this, force;\r\n        var properties = self.properties;\r\n        var displayOnly = bizagi.util.parseBoolean(properties.displayOnly) || false;\r\n        var editable = properties.editable;\r\n\r\n        // The render can be sent if it is editable and is not \"display only\"\r\n        if (!displayOnly && editable) {\r\n            return true;\r\n        }\r\n\r\n        // Don't send the clones\r\n        if (properties.isClone) {\r\n            return false;\r\n        }\r\n\r\n        if (properties.xpath) {\r\n            var form = self.getFormContainer();\r\n            if (form.getRenders(properties.xpath).length == 1) {\r\n                force = $.forceCollectData ? $.forceCollectData.toString() : false;\r\n                $.forceCollectData = force ? undefined : $.forceCollectData;\r\n                if (self.controlValueIsChanged()) {\r\n                    $.forceCollectData = force ? bizagi.util.parseBoolean(force) : $.forceCollectData;\r\n                    return true;\r\n                }\r\n                $.forceCollectData = force ? bizagi.util.parseBoolean(force) : $.forceCollectData;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n    /*\r\n    *  Method to determine if the render value can be sent to search\r\n    */\r\n    canBeSentQueryForm: function () {\r\n        var self = this, force;\r\n        var properties = self.properties;\r\n        // Don't send the clones\r\n        if (properties.isClone) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    /*\r\n    *   Focus on the current element\r\n    */\r\n    focus: function (time) {\r\n        var self = this;\r\n\r\n        // Focus is only allowed when the render is visible\r\n        if (!self.properties.visible) return;\r\n\r\n        // Call base\r\n        this._super();\r\n        var layout = $(\"#ui-bizagi-wp-app-render-form-content\");\r\n\r\n        // Configures effect\r\n        var effect = function () {\r\n            var control = self.getControl();\r\n            var defaultControl = (self.properties.type != \"grid\") ? $(\"input, select, option, textarea\", control) : $(\"input, select, option, textarea\", control).first();\r\n            if (defaultControl.length > 0) {\r\n\r\n                // Focus control\r\n                $.each(defaultControl, function (i) {\r\n                    var innerControl = defaultControl[i];\r\n                    if ($(innerControl).attr(\"type\") != \"hidden\" && $(innerControl).css(\"display\") != \"none\" && $(innerControl).css(\"visibility\") != \"hidden\") {\r\n\r\n                        try {\r\n                            if (!bizagi.util.isIE()) {\r\n                                bizagi.util.autoScrollBottom(layout);\r\n                            }\r\n                            innerControl.focus();\r\n                        } catch (e) {\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        // Wait until the render is ready to apply the focus effect\r\n        $.when(self.ready())\r\n            .done(function () {\r\n                // Run effect\r\n                if (time > 0) {\r\n                    setTimeout(effect, time);\r\n                } else {\r\n                    effect();\r\n                }\r\n            });\r\n    },\r\n\r\n    /*\r\n    *   Resolves default align for each display type\r\n    */\r\n    getDefaultLabelAlign: function (displayType) {\r\n        return \"default\";\r\n    },\r\n\r\n    /*\r\n    *   Resolves default value align for each display type\r\n    */\r\n    getDefaultValueAlign: function (displayType) {\r\n        return \"default\";\r\n    },\r\n    /*\r\n    *   Transform the align type when using RTL orientation\r\n    */\r\n    getRTLAlign: function (align) {\r\n        /* if (align === \"default\"){ \r\n            return \"right\";\r\n        } */\r\n        return align;\r\n    },\r\n\r\n    /*\r\n    *   Enables submit on change feature for the current render\r\n    */\r\n    configureSubmitOnChange: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = \"\";\r\n\r\n        if (!properties.editable) return;\r\n\r\n        // Build action\r\n        properties.dependencies = properties.dependencies || 'all';\r\n\r\n        if (properties.xpath) {\r\n            if (properties.submitOnChangexpathContext) {\r\n                xpath = properties.submitOnChangexpathContext + \".\" + properties.xpath;\r\n            } else {\r\n                xpath = properties.xpath;\r\n            }\r\n        } else {\r\n            if (properties.submitOnChangexpathContext) {\r\n                xpath = properties.submitOnChangexpathContext + \".\" + properties.id;\r\n            } else {\r\n                xpath = properties.id;\r\n            }\r\n        }\r\n\r\n        var action = {\r\n            \"conditions\": {\r\n                \"expressions\": [\r\n                    {\r\n                        \"simple\": {\r\n                            \"xpath\": xpath,\r\n                            \"operator\": \"changes\",\r\n                            \"argumentType\": \"const\"\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            \"commands\": [\r\n                {\r\n                    \"xpath\": xpath,\r\n                    \"command\": 'submit-value',\r\n                    \"argument\": properties.dependencies\r\n                }\r\n            ],\r\n            \"dependencies\": [xpath],\r\n            \"elseCommands\": []\r\n        };\r\n\r\n        // Add action when form ends its rendering\r\n        $.when(self.ready()).done(function () {\r\n            var form = self.getFormContainer();\r\n            form.addSubmitAction(xpath, action);\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Sends all the info to the server then refreshes the form\r\n    *   Returns a deferred\r\n    */\r\n    submitOnChange: function (data, bRefreshForm, notCollect) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n\r\n        // Add context parameter\r\n        if (self.properties.contexttype != \"\" && data) {\r\n            data[self.dataService.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = self.properties.contexttype;\r\n        }\r\n\r\n        $.when(self.isReadyToSave()).done(function () {\r\n            self.internalSubmitOnChange(data, bRefreshForm, notCollect).done(function () {\r\n                defer.resolve();\r\n            }).fail(function () {\r\n                defer.reject();\r\n            });\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    getCacheIdCase: function () {\r\n        var self = this;\r\n        var idCase = self.getParams().idCase;\r\n\r\n        if (bizagi.cache === undefined) {\r\n            bizagi.cache = {};\r\n            bizagi.cache.idCaseObject = {\r\n                idCase: idCase !== undefined ? idCase : (bizagi.cache.idCase !== undefined ? bizagi.cache.idCase : undefined)\r\n            };\r\n        } else {\r\n            if (idCase !== undefined && bizagi.cache.idCaseObject !== undefined) {\r\n                bizagi.cache.idCaseObject.idCase = idCase;\r\n            } else {\r\n                if (idCase !== undefined && bizagi.cache.idCaseObject === undefined) {\r\n                    bizagi.cache.idCaseObject = {};\r\n                    bizagi.cache.idCaseObject.idCase = idCase;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (idCase === undefined) {\r\n            if (bizagi.cache.idCaseObject === undefined) {\r\n                idCase = undefined;\r\n            } else {\r\n                idCase = bizagi.cache.idCaseObject.idCase;\r\n            }\r\n        } else {\r\n            idCase = idCase;\r\n        }\r\n\r\n        return idCase;\r\n    },\r\n    /*\r\n    *   Internal method\r\n    *   Sends all the info to the server then refreshes the form\r\n    *   Returns a deferred\r\n    */\r\n    internalSubmitOnChange: function (data, bRefreshForm, notCollect) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n        var parameters = {\r\n            data: data,\r\n            bRefreshForm: bRefreshForm,\r\n            notCollect: notCollect,\r\n            properties: {\r\n                idCase: self.getCacheIdCase(),\r\n                id: properties.id,\r\n                xpath: properties.xpath,\r\n                idPageCache: properties.idPageCache,\r\n                contexttype: properties.contexttype\r\n            }\r\n        }\r\n\r\n        return form.internalSubmitOnChange(parameters);\r\n    },\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n        return $.when(self.parent.ready(), self.isRendered());\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n\r\n        if (form) {\r\n            return form.getCustomHandlers();\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandler: function (key) {\r\n        var self = this;\r\n        var customHandlers = self.getCustomHandlers();\r\n\r\n        if (customHandlers) {\r\n            return customHandlers[key];\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n    *   Calculates render label and value width\r\n    */\r\n    calculateRenderWidth: function (labelWidth, valueWidth, displayType) {\r\n        var self = this;\r\n        // Read values\r\n        // If the label width or the value width are 0, the BAS means that no value is used, so we need to adjust them to 50%\r\n        if (valueWidth == \"100\" && typeof labelWidth === \"undefined\") {\r\n            labelWidth = \"0\";\r\n        } else {\r\n            labelWidth = labelWidth ? (labelWidth != \"0\" ? labelWidth : \"50\") : \"50%\";\r\n        }\r\n        valueWidth = valueWidth ? (valueWidth != \"0\" ? valueWidth : \"50\") : \"50%\";\r\n\r\n        if (displayType == \"normal\" || displayType == \"both\" || displayType == \"reversed\") {\r\n\r\n            // Special case with lower values, so they want both fields in \"auto\" width\r\n            if (labelWidth && bizagi.util.percent2Number(labelWidth) < 5 &&\r\n                valueWidth && bizagi.util.percent2Number(valueWidth) < 5) {\r\n                return {label: 0, control: 100};\r\n            }\r\n            // Normalize percentages\r\n            if (labelWidth && !valueWidth) {\r\n                labelWidth = bizagi.util.percent2Number(labelWidth);\r\n                valueWidth = 100 - labelWidth;\r\n\r\n            } else if (!labelWidth && valueWidth) {\r\n                valueWidth = bizagi.util.percent2Number(valueWidth);\r\n                labelWidth = 100 - valueWidth;\r\n            } else {\r\n                labelWidth = bizagi.util.percent2Number(labelWidth);\r\n                valueWidth = bizagi.util.percent2Number(valueWidth);\r\n\r\n                // Check 100% percentage\r\n                if ((labelWidth + valueWidth) != 100 && typeof (self.properties) != \"undefined\" && self.properties.layoutType != \"pixels\") {\r\n                    valueWidth = 100 - labelWidth;\r\n                }\r\n            }\r\n        } else {\r\n            labelWidth = 100;\r\n            valueWidth = 100;\r\n        }\r\n\r\n        return {label: labelWidth, control: valueWidth};\r\n    },\r\n    /*\r\n    *   Get param value idCase\r\n    */\r\n    getIdCase: function () {\r\n        var self = this;\r\n        return self.getFormContainer().params.idCase || bizagi.context.idCase;\r\n    },\r\n    /*\r\n    *   Get param value idWorkitem\r\n    */\r\n    getIdWorkitem: function () {\r\n        var self = this;\r\n        return self.getFormContainer().params.idWorkitem || bizagi.context.idWorkitem;\r\n    },\r\n    /*\r\n    *   Get param value idTask\r\n    */\r\n    getidTask: function () {\r\n        var self = this;\r\n        return self.getFormContainer().params.idTask || bizagi.context.idTask;\r\n    },\r\n    /*\r\n    *   Get param value sessionId\r\n    */\r\n    getSessionId: function () {\r\n        var self = this;\r\n        return self.getFormContainer().properties.sessionId;\r\n    },\r\n\r\n    /*\r\n    *   CELL STUFF\r\n    *   TODO: Move to other place\r\n    */\r\n\r\n    /* Customizes cell color*/\r\n    changeCellColor: function (color) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        if (control) {\r\n            if (color != 'none') {\r\n                control.css(\"color\", color);\r\n                control.find(\"input, textarea, label\").each(function (i, element) {\r\n                    $(element).css(\"color\", color);\r\n                });\r\n            } else {\r\n                control.css(\"color\", \"\");\r\n                control.find(\"input, textarea, label\").each(function (i, element) {\r\n                    $(element).css(\"color\", \"\");\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Customizes cell background color\r\n     * @param color\r\n     */\r\n    changeCellBackgroundColor: function (color) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var backgroundColor = \"\";\r\n        var backgroundImage = \"\";\r\n\r\n        if (control) {\r\n            if (color != 'none') {\r\n                backgroundColor = color;\r\n                backgroundImage = \"none\";\r\n            }\r\n\r\n            if (self.properties.editable) {\r\n                var needBGPaint = false;\r\n\r\n                control.find(\"input, textarea, .ui-selectmenu\").each(function (i, element) {\r\n\r\n                    if (((element.type == \"text\") || (element.type == \"textarea\")) && !($(element).hasClass('ui-select-data')))\r\n                        needBGPaint = true;\r\n\r\n                    $(element).css({\r\n                        \"background-color\": backgroundColor,\r\n                        \"background-image\": backgroundImage\r\n                    });\r\n                });\r\n\r\n                if (!needBGPaint) {\r\n                    control.closest(\"td\").each(function (i, element) {\r\n                        $(element).css({\r\n                            \"background-color\": backgroundColor,\r\n                            \"background-image\": backgroundImage\r\n                        });\r\n                    });\r\n                }\r\n\r\n            } else {\r\n                control.each(function (i, element) {\r\n                    //TODO: Validar si se aplican los estilos en tablet aun sin esta linea, cuidado con desktop\r\n                    var item = ($(element).hasClass(\"ui-bizagi-cell-readonly\")) ? control.closest(\"td\") : $(element);\r\n                    item.css({\r\n                        \"background-color\": backgroundColor,\r\n                        \"background-image\": backgroundImage\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n    },\r\n\r\n    /**\r\n     * Changes the cell visibility\r\n     * @param argument\r\n     */\r\n    changeCellVisibility: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        if (control) {\r\n            // Hide - show the render\r\n            if (bizagi.util.parseBoolean(argument) == true) {\r\n                //control.show();\r\n                control.css(\"visibility\", \"visible\");\r\n                control.css(\"display\", \"\");\r\n\r\n                self.element && self.element.show();\r\n            } else {\r\n                //control.hide();\r\n                control.css(\"visibility\", \"hidden\");\r\n            }\r\n        }\r\n\r\n        // Update properties\r\n        properties.visible = argument;\r\n    },\r\n\r\n    /**\r\n     * Changes the cell required\r\n     * @param argument\r\n     */\r\n    changeCellRequired: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        if (control) {\r\n            // Check if argument is true and control donot have any value\r\n            if (bizagi.util.parseBoolean(argument) == true && bizagi.util.isEmpty(self.value)) {\r\n                control.addClass('control-required');\r\n                control.append('<div class=\"ui-bizagi-render-control-required\"></div>');\r\n            } else {\r\n                control.removeClass('control-required');\r\n                $(\".ui-bizagi-render-control-required\", control).remove();\r\n            }\r\n            // Update properties\r\n            properties.required = argument;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to create deferred at the moment to start multiaction\r\n     */\r\n    startActionExecution: function () {\r\n        var self = this;\r\n        self.startLoading();\r\n        self.actionExecutionDeferred = new $.Deferred();\r\n    },\r\n\r\n    /**\r\n     * method to resolve the deferred when multiaction finish\r\n     */\r\n    endActionExecution: function () {\r\n        var self = this;\r\n        self.endLoading();\r\n        if (self.actionExecutionDeferred) self.actionExecutionDeferred.resolve();\r\n        delete self.actionExecutionDeferred;\r\n    },\r\n\r\n    /**\r\n     * Method to return the promise to anyone that needs to know if multiaction ended\r\n     * @returns {*}\r\n     */\r\n    readyActionExecution: function () {\r\n        var self = this;\r\n        if (!self.actionExecutionDeferred) return $.when(true);\r\n        return self.actionExecutionDeferred.promise();\r\n    },\r\n\r\n    /**\r\n     * Verifies is the elements was inside a new row in a grid\r\n     * @returns {boolean}\r\n     */\r\n    isFromCreatedRow: function () {\r\n        var self = this;\r\n\r\n        if (self.grid) {\r\n            var i = self.grid.columns.length;\r\n\r\n            while (i-- > 0) {\r\n                if (self.grid.columns[i].properties.xpath == self.properties.xpath) {\r\n                    if (self.grid.columns[i].isNewRow == true) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    /**\r\n     * Submits a invalidate page cache request\r\n     * @param params\r\n     */\r\n    submitInvalidatePageCacheRequest: function (params) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var pageCacheToInvalidate = params ? params.idPageCache : properties.idPageCache;\r\n\r\n\r\n        self.dataService.invalidatePageCache({idPageCache: pageCacheToInvalidate});\r\n    },\r\n\r\n    /**\r\n     * Check is design mode\r\n     */\r\n    isDesignMode: function () {\r\n        return this.getMode() === \"design\";\r\n    },\r\n\r\n    /**\r\n     * Check is design mode\r\n     */\r\n    isExecutionMode: function () {\r\n        return this.getMode() === \"execution\";\r\n    },\r\n\r\n    /***/\r\n    preventDefaultForAnchorTag: function(){        \r\n        if (bizagi.util.isSharepointContext()){\r\n            $(\"a\", this.getControl()).click(function(ev){\r\n                ev.preventDefault();          \r\n            });\r\n        }    \r\n    }\r\n});","/*\r\n *   Name: Bizagi Render Base Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a base render class with common stuff related to all renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.render.base\", {}, {\r\n\r\n    /**\r\n     * Method to process the render the layout\r\n     * @param {boolean} isLabelFormat\r\n     * @param {string} format\r\n     */\r\n    processLayout: function (isLabelFormat, format) {\r\n        var properties = this.properties;\r\n\r\n        if (typeof isLabelFormat !== \"boolean\") {\r\n            console.warm(\"error calling processLayout, 'isLabelFormat' is not boolean\");\r\n            return;\r\n        }\r\n\r\n        if (isLabelFormat) {\r\n            this.processLabelLayout(format);\r\n        } else {\r\n            this.processControlLayout(format);\r\n\r\n            // Set required and visiblity\r\n            properties.required = typeof (properties.required) !== \"undefined\" ? bizagi.util.parseBoolean(properties.required) : false;\r\n            var visible = typeof (properties.visible) !== \"undefined\" ? bizagi.util.parseBoolean(properties.visible) : true;\r\n\r\n            if (properties.required) {\r\n                this.changeRequired(properties.required);\r\n            }\r\n\r\n            if (!visible) {\r\n                this.changeVisibility(visible);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to process the label in the layout\r\n     * @param {} format\r\n     * @returns {}\r\n     */\r\n    processLabelLayout: function (format) {\r\n        var $label = this.getLabel();\r\n        if ($label == null) return;\r\n\r\n        // Set customizations\r\n        format = format || {};\r\n        if (typeof format.bold === \"undefined\") {\r\n            format.bold = true; // Default value\r\n        }\r\n\r\n        this.changeBackgroundColor(format.background)\r\n            .changeFontColor($label, format.color)\r\n            .changeFontBold($label, format.bold)\r\n            .changeFontSize($label, format.size)\r\n            .changeFontItalic($label, format.italic)\r\n            .changeTextDecoration($label, (format.underline ? \"underline\" : \"\") + (format.strikethru ? \" line-through\" : \"\"));\r\n    },\r\n\r\n    /**\r\n     * Method to process the control in the layout\r\n     * @param {} format\r\n     * @returns {}\r\n     */\r\n    processControlLayout: function (format) {\r\n        var $control = this.getControl();\r\n        var $elements = this.getElementsToStylize($control);\r\n\r\n        // Set customizations\r\n        format = format || {};\r\n\r\n        this.changeFontColor($elements, format.color)\r\n            .changeFontBold($elements, format.bold)\r\n            .changeFontItalic($elements, format.italic)\r\n            .changeFontSize($elements, format.size)\r\n            .changeTextDecoration($elements, (format.underline ? \"underline\" : \"\") + (format.strikethru ? \" line-through\" : \"\"));\r\n    },\r\n\r\n    /**\r\n     * Customizes render color\r\n     * @param {} color\r\n     * @returns {}\r\n     */\r\n    changeColor: function (color) {\r\n        var $label = this.getLabel();\r\n        var $control = this.getControl();\r\n        var $elements = this.getElementsToStylize($control);\r\n\r\n        return this\r\n            .changeFontColor($label, color)\r\n            .changeFontColor($elements, color);\r\n    },\r\n\r\n    /**\r\n     * Customizes render color\r\n     * @param {} $element\r\n     * @param {} color\r\n     * @returns {}\r\n     */\r\n    changeFontColor: function ($element, color) {\r\n        if ($element === undefined) return this;\r\n        if (color === undefined) return this;\r\n\r\n        var style = color !== \"none\" ? color : \"\";\r\n        $element.css(\"color\", style);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font size property\r\n     * @param {} $element\r\n     * @param {} size\r\n     * @returns {}\r\n     */\r\n    changeFontSize: function ($element, size) {\r\n        if (size === undefined) return this;\r\n        if ($element === undefined) return this;\r\n\r\n        if (size !== \"0\") {\r\n            var newFontSize = 100 + Number(size) * 10 + \"%\";\r\n            $element.css(\"font-size\", newFontSize);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font Strikethrough or underline property\r\n     * @param {} $element\r\n     * @param {} textDecoration\r\n     * @returns {}\r\n     */\r\n    changeTextDecoration: function ($element, textDecoration) {\r\n        if (textDecoration === undefined) return this;\r\n        if ($element === undefined) return this;\r\n\r\n        textDecoration && $element.css(\"text-decoration\", textDecoration);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font italic style\r\n     * @param {} $element\r\n     * @param {} italic\r\n     * @returns {}\r\n     */\r\n    changeFontItalic: function ($element, italic) {\r\n        var style = bizagi.util.parseBoolean(italic) ? \"italic\" : \"normal\";\r\n\r\n        $element.css(\"font-style\", style);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font weight\r\n     * @param {} $label\r\n     * @param {} bold\r\n     * @returns {}\r\n     */\r\n    changeFontBold: function ($label, bold) {\r\n        var style = bizagi.util.parseBoolean(bold) ? \"bold\" : \"normal\";\r\n\r\n        $label.css(\"font-weight\", style);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes render background color\r\n     * @param {} color\r\n     * @returns {}\r\n     */\r\n    changeBackgroundColor: function (color) {\r\n        if (typeof color === \"undefined\") return this;\r\n\r\n        if (color !== \"none\") {\r\n            this.element.css(\"background-color\", color);\r\n        } else {\r\n            this.element.css(\"background-color\", \"\");\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * This method just make a toggle of red label indicator\r\n     * @argument {boolean} argument\r\n     */\r\n    changeRequiredLabel: function () {\r\n    },\r\n\r\n    /**\r\n     * Change cell required and attach bindings\r\n     * @param argument\r\n     */\r\n    changeCellRequired: function (argument) {\r\n        this.changeRequired(argument);\r\n    },\r\n\r\n    /**\r\n     * \r\n     */\r\n    getRTLAlign: function (align) {\r\n        if (typeof align == \"undefined\" || align == \"\") {\r\n            return \"default\";\r\n        }\r\n        return align;\r\n    },\r\n\r\n    /**\r\n     * TODO: This override should be removed after genome, just because the align shoudnt be depend of the display type\r\n     */\r\n    getDefaultLabelAlign: function(){\r\n        return \"default\";\r\n    },\r\n\r\n    /**\r\n     * TODO: This override should be removed after genome, just because the align shoudnt be depend of the display type\r\n     */\r\n    getDefaultValueAlign: function(){\r\n        return \"default\";\r\n    }\r\n});","/**\r\n *   Name: Bizagi Form Container Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a form container class that defines basic stuff regarding the device\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.form\", {}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n        var data = params.data;\r\n        var device = bizagi.util.detectDevice();\r\n\r\n        // Creates a hashtable to maintain references by id\r\n        self.rendersById = {};\r\n        self.rendersByXpath = {};\r\n        self.rendersByType = {};\r\n\r\n        // Set page cache id\r\n        self.idPageCache = data.pageCacheId;\r\n\r\n        // Set default mode\r\n        self.mode = params.mode || \"execution\";\r\n        self.focus = params.focus;\r\n\r\n        // Set rendering params\r\n        self.params = params;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Define confirmation message \r\n        var message = \"\";\r\n\r\n        if (device !== \"desktop\") {\r\n            message = this.getResource(\"render-form-user-confirmation-message\").replace(/<br(\\/| \\/)>/g, \"\\n\");\r\n        } else {\r\n            message = this.getResource(\"render-form-user-confirmation-message\");\r\n        }\r\n\r\n        // Default properties\r\n        var properties = self.properties;\r\n        properties.sessionId = data.sessionId;\r\n        properties.displayAsReadOnly = bizagi.util.parseBoolean(data.displayAsReadOnly) || false;\r\n        properties.userConfirmationMessage = properties.userConfirmationMessage || message;\r\n        properties.orientation = properties.orientation || \"ltr\";\r\n        properties.hasRule = bizagi.util.parseBoolean(properties.hasRule) || false;\r\n        properties.contexttype = params.contexttype || \"\";\r\n        properties.paramsRender = params.paramsRender || {};\r\n        properties.processPath = params.data.processPath ? params.data.processPath.replaceAll(\"|/|\", \"  &rsaquo;  \") : \"\";\r\n        properties.breadCrumb = params.data.processPath ? params.data.processPath.split(\"|/|\") : [];\r\n\r\n        // Set validations & actions\r\n        this.validations = data.validations;\r\n        this.actions = data.actions;\r\n\r\n        // Enable the \"Validate and Save\" action for Form Buttons\r\n        self.allowValidateAndSaveAction = bizagi.override && bizagi.override.enableActionValidateAndSave === true;\r\n\r\n        // Initialize buttons\r\n        self.initializeButtons(data);\r\n\r\n        // Define transitions to Complex Gateway\r\n        if (data.transitions) {\r\n            self.transitions = data.transitions;\r\n        }\r\n\r\n        this.originalProcessButton = this.processButton;\r\n\r\n        //Custom behaviour for application parent activated.\r\n        self.isRoutingDisabled = false;\r\n        if (params.applicationParent) {\r\n            switch (params.applicationParent) {\r\n                case 'NEWWORKPORTAL':\r\n                    self.isRoutingDisabled = true;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        self.isOfflineFormsV2Supported =  bizagi.util.isMobileDevice() && bizagi.util.isOfflineFormsV2Supported();\r\n\r\n    },\r\n    /*\r\n    *   Initializes button metadata\r\n    */\r\n    initializeButtons: function (data) {\r\n        var self = this;\r\n\r\n        self.buttons = [];\r\n\r\n        // Process buttons\r\n        if (data.buttons) {\r\n            $.each(data.buttons, function (i, item) {\r\n                var button = item.button.properties;\r\n\r\n                // Process caption\r\n                button.caption = !bizagi.util.isEmpty(button.caption) && self.getResource(button.caption) != button.caption ? self.getResource(button.caption) : button.caption;\r\n\r\n                // Process actions\r\n                if (button.actions) {\r\n                    $.each(button.actions, function (i, action) {\r\n                        button[action] = true;\r\n                    });\r\n                }\r\n\r\n                // Add other properties\r\n                button.ordinal = i;\r\n                button.action = button.next ? \"next\" :\r\n                    button.nextWithoutValidations ? \"nextWithoutValidations\" :\r\n                        button.submitData ? \"save\" :\r\n                            button.cancel ? \"cancel\" :\r\n                                button.back ? \"back\" :\r\n                                    button.createnewcase ? \"createnewcase\" :\r\n                                        button.validate ? \"validate\" : \"\";\r\n\r\n                // Explicit add save operation\r\n                button.save = (button.action === \"save\");\r\n\r\n                // Add inherent behaviours\r\n                if (button.next || button.back || button.nextWithoutValidations) {\r\n                    button.routing = true;\r\n                }\r\n\r\n                if (button.hasRule) {\r\n                    button.executeRule = true;\r\n                }\r\n\r\n                if (self.allowValidateAndSaveAction && button.validate) {\r\n                    button.submitData = true;\r\n                    button.refresh = true;\r\n                    button.save = true;\r\n                    if (button.action === \"next\" || button.action === \"createnewcase\") {\r\n                        button.refresh = false;\r\n                    }\r\n                }\r\n\r\n                // Prepare button style\r\n                button.style = self.buildButtonStyle(button);\r\n\r\n                // Add to button array\r\n                if (self.properties.orientation === \"rtl\" && !self.properties.useCustomButtons) {\r\n                    self.buttons.unshift(button);\r\n                } else {\r\n                    self.buttons.push(button);\r\n                }\r\n\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Get the original params used to fetch the form\r\n    */\r\n    getParams: function () {\r\n        return this.params;\r\n    },\r\n\r\n    setParam: function (property, value) {\r\n        if (this.params) {\r\n            this.params[property] = value;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Get current rendering mode\r\n    */\r\n    getMode: function () {\r\n        return this.mode;\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        var self = this;\r\n        if (self.params) {\r\n            return self.params.customHandlers;\r\n        }\r\n    },\r\n    /*\r\n    * Method to index renders\r\n    */\r\n    registerRender: function (render) {\r\n        var self = this;\r\n\r\n        self.rendersById[render.properties.id] = render;\r\n        if (render.properties.xpath) {\r\n            if (!self.rendersByXpath[render.properties.xpath]) {\r\n                self.rendersByXpath[render.properties.xpath] = [];\r\n            }\r\n            self.rendersByXpath[render.properties.xpath].push(render);\r\n        }\r\n\r\n        if (!self.rendersByType[render.properties.type]) {\r\n            self.rendersByType[render.properties.type] = [];\r\n        }\r\n        self.rendersByType[render.properties.type].push(render);\r\n    },\r\n    /*\r\n    * Method to unregister render\r\n    */\r\n    unregisterRender: function (render) {\r\n        var self = this;\r\n\r\n        if (self.rendersById[render.properties.id]) {\r\n            delete self.rendersById[render.properties.id];\r\n        }\r\n\r\n        if (render.properties.xpath) {\r\n            if ($.isArray(self.rendersByXpath[render.properties.xpath])\r\n                && self.rendersByXpath[render.properties.xpath].length > 1) {\r\n                for (var i = 0, l = self.rendersByXpath[render.properties.xpath].length; i < l; i++) {\r\n                    var element = self.rendersByXpath[render.properties.xpath][i];\r\n                    if (element.properties.id === render.properties.id) {\r\n                        self.rendersByXpath[render.properties.xpath].splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                delete self.rendersByXpath[render.properties.xpath];\r\n            }\r\n        }\r\n\r\n        // Unregister from renders by type\r\n        if (render.properties.type) {\r\n            var listRendesByType = self.getRenderByType(render.properties.type);\r\n            var listRendesByTypeLength = listRendesByType.length;\r\n            var renderKey = render.properties.id || render.properties.xpath;\r\n\r\n            for (var i = 0; i < listRendesByTypeLength; i++) {\r\n                var listRender = listRendesByType[i];\r\n                if ((typeof listRender.properties.id != \"undefined\" && listRender.properties.id == renderKey) ||\r\n                    (typeof listRender.properties.xpath != \"undefined\" && listRender.properties.xpath == renderKey)) {\r\n                    // Unregister element\r\n                    self.rendersByType[render.properties.type].splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    * Method to access a render by id\r\n    */\r\n    getRenderById: function (id) {\r\n        var self = this;\r\n\r\n        return self.rendersById[id];\r\n    },\r\n\r\n    getGridByColumn: function (id) {\r\n        var self = this;\r\n        var grids = self.getRenderByType('grid');\r\n        var i = 0, columnIndex;\r\n\r\n        for (; i < grids.length; i++) {\r\n            columnIndex = grids[i].columnsIds.indexOf(id);\r\n            if (columnIndex != -1) {\r\n                return grids[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Method to find all the renders matching an xpath inside the container\r\n    */\r\n    getRenders: function (xpath) {\r\n        var self = this;\r\n\r\n        // Remove [] filters for grid columns xpaths to fully identify the grid as the xpath target\r\n        if (xpath && xpath.indexOf)\r\n            if (xpath.indexOf(\"[\") > 0) {\r\n                xpath = xpath.substring(0, xpath.indexOf(\"[\"));\r\n            }\r\n\r\n        return self.rendersByXpath[xpath] ? self.rendersByXpath[xpath] : [];\r\n    },\r\n    /**\r\n     * Get all render with the same type\r\n     */\r\n    getRenderByType: function (type) {\r\n        var self = this;\r\n\r\n        // Check that type is defined\r\n        if (typeof type == \"string\" && type.length > 0) {\r\n            // Search controls by type\r\n            return (self.rendersByType[type]) ? self.rendersByType[type] : [];\r\n        }\r\n        return [];\r\n    },\r\n\r\n    /*\r\n    *   Build the container html\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"form\");\r\n        var idCase = \"\";\r\n\r\n        // Render the form\r\n        var html = $.fasttmpl(template, {\r\n            buttons: self.buttons,\r\n            transitions: self.transitions,\r\n            uniqueId: properties.uniqueId,\r\n            helptext: properties.helpText,\r\n            mode: self.getMode(),\r\n            queryForm: self.getFormType() == \"queryForm\",\r\n            summaryForm: self.params.summaryForm || false,\r\n            globalForm: self.properties.displayAsReadOnly || false,\r\n            idCase: idCase,\r\n            displayName: self.params.displayName || idCase,\r\n            processPath: properties.processPath,\r\n            breadCrumb: properties.breadCrumb,\r\n            orientation: properties.orientation\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n    /*\r\n    *   Process the html rendering object\r\n    */\r\n    postRenderContainer: function (form) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        // Add a mode class\r\n        form.addClass(\"ui-bizagi-rendering-mode-\" + mode);\r\n\r\n        // Call base\r\n        this._super(form);\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the container's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var complexGatewayContainer;\r\n        var form = self.container;\r\n\r\n        if (form.length > 1) {\r\n            $(form).each(function () {\r\n                if ($(this).hasClass('ui-bizagi-container-complexgateway')) {\r\n                    complexGatewayContainer = this;\r\n                }\r\n            });\r\n        } else {\r\n            complexGatewayContainer = $(\".ui-bizagi-container-complexgateway\", form);\r\n        }\r\n\r\n        // activeTransitions is used to store ids of activities in Complex Gateway\r\n        self.activeTransitions = {};\r\n\r\n        // Process buttons\r\n        self.processButtons(form);\r\n\r\n        // Check for dom included event\r\n        self.bind(\"ondomincluded\", function (e, mainForm) {\r\n            // Creates validation controller after the form is ready\r\n            self.validationController = new bizagi.command.controllers.validation(self, self.validations, mainForm);\r\n            // Creates action controller after the form is ready\r\n            self.actionController = new bizagi.command.controllers.action(self, self.actions);\r\n\r\n            // Resolve this deferred to start executing DOM dependant plugins\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n        // Set events for complex gateway interface\r\n        $(complexGatewayContainer).find(\".ui-checkbox\").bind(\"click\", function () {\r\n            var checkboxLabel = $(\"label\", this);\r\n\r\n            var transitionId = checkboxLabel.data(\"value\") || \"\";\r\n            if (typeof self.activeTransitions[transitionId] == \"undefined\") {\r\n                self.activeTransitions[transitionId] = false;\r\n            }\r\n\r\n            if (bizagi.util.parseBoolean(checkboxLabel.data(\"checked\"))) {\r\n                // Uncheck element\r\n                checkboxLabel.removeClass(\"ui-checkbox-state-checked\");\r\n                checkboxLabel.removeClass(\"bz-check\").addClass(\"bz-full-ball\");\r\n                checkboxLabel.data(\"checked\", false);\r\n                self.activeTransitions[transitionId] = false;\r\n            } else {\r\n                // Check element\r\n                checkboxLabel.addClass(\"ui-checkbox-state-checked\");\r\n                checkboxLabel.addClass(\"bz-mo-icon\").addClass(\"bz-check\").removeClass(\"bz-full-ball\");\r\n                checkboxLabel.data(\"checked\", true);\r\n                self.activeTransitions[transitionId] = true;\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour when rendering in design mode\r\n    */\r\n    configureDesignView: function () {\r\n        var self = this;\r\n\r\n\r\n        // Check for dom included event\r\n        self.bind(\"ondomincluded\", function () {\r\n            // Resolve this deferred to start executing DOM dependant plugins\r\n            self.readyDeferred.resolve();\r\n        });\r\n    },\r\n    /*\r\n    *   Format form buttons to allow further customization\r\n    */\r\n    buildButtonStyle: function (button) {\r\n\r\n        var style = {};\r\n        if (button.format) {\r\n            if (button.format.size) {\r\n                if (button.format.size != \"0\") {\r\n                    var newFontSize = (100 + Number(button.format.size) * 10) + \"%\";\r\n                    style[\"font-size\"] = newFontSize + \" !important\";\r\n                }\r\n            }\r\n            if (button.format.bold) {\r\n                style[\"font-weight\"] = \"bold !important\";\r\n                if (bizagi.util.isIE()) {\r\n                    style[\"font-family\"] = \"'Open Sans', 'Helvetica Neue', Arial, Helvetica, sans-serif !important\";\r\n                }\r\n            }\r\n            if (button.format.italic) {\r\n                style[\"font-style\"] = \"italic !important\";\r\n            }\r\n            if (button.format.underline || button.format.strikethru) {\r\n                var strikethru = bizagi.util.parseBoolean(button.format.strikethru) ? \"line-through \" : \"\";\r\n                var underline = bizagi.util.parseBoolean(button.format.underline) ? \"underline \" : \"\";\r\n                style[\"text-decoration\"] = strikethru + underline + \" !important\";\r\n            }\r\n            if (button.format.background) {\r\n                style[\"background-color\"] = button.format.background + \" !important\";\r\n                style[\"background-image\"] = \"none !important\";\r\n            }\r\n            if (button.format.color) {\r\n                style[\"color\"] = button.format.color + \" !important\";\r\n            }\r\n        }\r\n\r\n        var strStyle = \"\";\r\n        for (key in style) {\r\n            strStyle += key + \":\" + style[key] + \";\";\r\n        }\r\n        return strStyle;\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    *   Returns a promise\r\n    */\r\n    render: function () {\r\n        var self = this;\r\n\r\n        // Creates a deferred, so we can check when form has been included in dom\r\n        if (!self.readyDeferred)\r\n            self.readyDeferred = new $.Deferred();\r\n\r\n        // Call base\r\n        var result = this._super();\r\n\r\n        return result;\r\n    },\r\n    /*\r\n    *   Sets a promise that the form will be included in the DOM\r\n    *   so we can apply some tedious plugins that require that\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n\r\n        return self.readyDeferred.promise();\r\n    },\r\n    /*\r\n    *   Returns the xpath context of the element\r\n    */\r\n    getXpathContext: function () {\r\n        return this.properties.xpathContext || \"\";\r\n    },\r\n    /*\r\n    *  Return context type, when the parent form is entity\r\n    */\r\n    getContextType: function () {\r\n        return this.properties.contexttype || \"\";\r\n    },\r\n\r\n    /*\r\n    * Return the endpoint action, when the form will be refresh\r\n    */\r\n    getEndPointAction: function () {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        if (properties.formtype == \"startform\")\r\n            return \"LOADSTARTFORM\";\r\n\r\n        return undefined;\r\n\r\n    },\r\n\r\n    /*\r\n    *   Returns the page cache id for the element\r\n    */\r\n    getPageCache: function () {\r\n        return this.idPageCache;\r\n    },\r\n    /*\r\n    *   Returns the form containing the element\r\n    */\r\n    getFormContainer: function () {\r\n        return this;\r\n    },\r\n    /*\r\n    *   Method to process button actions in the form\r\n    */\r\n    processButtons: function () {\r\n        var self = this;\r\n        var buttons = self.getButtons();\r\n\r\n        // Don't process buttons if they are undefined in the template\r\n        if (!buttons || buttons.length == 0) {\r\n            return;\r\n        }\r\n\r\n        // Attach a handler for each button\r\n        buttons.on(\"click\", function (e) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n\r\n            self.startLoading();\r\n\r\n            var button = $(this);\r\n            var ordinal = button.attr(\"ordinal\");\r\n            var buttonProperties = self.buttons[ordinal];\r\n\r\n            self.lastActionButton = buttonProperties;\r\n            if (buttonProperties.action === \"next\") {\r\n                buttonProperties.routingDisabled = self.isRoutingDisabled;\r\n            }\r\n\r\n            button.prop(\"disabled\", true); //disable button to prevent multiple click actions\r\n\r\n            if(button.hasOwnProperty('disabled')) {\r\n                button.button(\"disable\"); //Setting styles\r\n            }\r\n\r\n            // External Events\r\n            self.propagateExternalEvents(e);\r\n\r\n            // Execute button\r\n            //QAF-1418 - add setTimeout\r\n            setTimeout(function () {\r\n                $.when(self.processButton(buttonProperties)).always(function () {\r\n                    self.processDefer = undefined;\r\n                    self.endLoading();\r\n                    if ($.contains(document.documentElement, button.get(0))) { //check if button is still in DOM\r\n                        button.prop(\"disabled\", false);  //enable button\r\n\r\n                        if(button.hasOwnProperty('enable')) {\r\n                            button.button(\"enable\"); //Setting styles\r\n                        }\r\n                    }\r\n                });\r\n            }, 100);\r\n        });\r\n    },\r\n    /*\r\n    * Execute codes just before sending information to server\r\n    */\r\n    preProcessButton: function (buttonProperties) {\r\n        return true;\r\n    },\r\n    /*\r\n    * Execute codes just after sending information to server\r\n    */\r\n    postProcessButton: function (responses, buttonProperties) {\r\n        return true; // true means continue\r\n    },\r\n\r\n    setLoaderDeferred: function() {\r\n        var self = this;\r\n\r\n        self.loaderDeferred = $.Deferred().resolve();\r\n    },\r\n\r\n    deleteLoaderDeferred: function () {\r\n        var self = this;\r\n\r\n        if (self.isLoaderDeferredSet()) {\r\n            $.when(self.loaderDeferred.promise()).done(function() {\r\n                delete self.loaderDeferred;\r\n            });\r\n        }\r\n    },\r\n\r\n    useOrSetLoaderDeferred: function () {\r\n        var self = this;\r\n\r\n        if (!self.isLoaderDeferredSet()) {\r\n            self.setLoaderDeferred();\r\n        }\r\n    },\r\n\r\n    getLoaderPromise: function () {\r\n        var self = this;\r\n\r\n        if (self.isLoaderDeferredSet()) {\r\n            return self.loaderDeferred.promise();\r\n        } else {\r\n            return;\r\n        }\r\n    },\r\n\r\n    isLoaderDeferredSet: function () {\r\n        var self = this;\r\n\r\n        if (self.loaderDeferred) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    appendWaitForLoader: function (params) {\r\n        var self = this;\r\n        var promise = params.promise;\r\n        var create = params.create || false;\r\n\r\n        if (!self.isLoaderDeferredSet()) {\r\n            if (create) {\r\n                self.setLoaderDeferred();\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n\r\n        self.loaderDeferred = self.loaderDeferred.then(function () {\r\n            return (function () {\r\n                return promise;\r\n            })();\r\n        });\r\n    },\r\n\r\n\r\n    /*\r\n    *   Executes a single button action\r\n    */\r\n    processButton: function (buttonProperties) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n        var properties = self.properties;\r\n        if (!buttonProperties.routing) {\r\n            bizagi.chrono.initAndStart(\"submitForm\");\r\n        }\r\n        bizagi.chrono.init(\"waiting\");\r\n\r\n        // First hide and clear validation box\r\n        self.validationController.clearValidationMessages();\r\n\r\n        // Resolve asynchronous tabItems\r\n        var form = self.getFormContainer();\r\n        var getAllTabs = form.getRenderByType(\"tabItem\");\r\n        var getAllTabsLength = getAllTabs.length;\r\n\r\n        form.innerTabsLoading = true;\r\n\r\n\r\n        self.useOrSetLoaderDeferred();\r\n\r\n        // Check\r\n        for (var i = 0; i < getAllTabsLength; i++) {\r\n            var render = getAllTabs[i];\r\n            // Resolve internal deferred\r\n            if (render.loadingDeferred && render.parent.container) {\r\n                render.loadingDeferred.resolve();\r\n            }\r\n        }\r\n\r\n        delete form.innerTabsLoading;\r\n\r\n        $.when(self.ready(), self.getLoaderPromise()).done(function () {\r\n            self.deleteLoaderDeferred();\r\n            // Validate the form\r\n            var valid = bizagi.util.parseBoolean(buttonProperties.validate) ? self.validationController.performValidations() : true;\r\n            if (valid) {\r\n\r\n                if ([\"save\", \"next\", \"back\", \"createnewcase\", \"nextWithoutValidations\"].includes(buttonProperties.action)) {\r\n                    $(document).data('auto-save', '');\r\n                }\r\n\r\n                // Check for user confirmation if configured and the button is configured to enroute\r\n                if (bizagi.util.parseBoolean(self.properties.needsUserConfirmation) && bizagi.util.parseBoolean(buttonProperties.routing)) {\r\n                    self.endLoading();\r\n                    $.when(bizagi.showConfirmationBox(properties.userConfirmationMessage, null, false)).done(function () {\r\n                        // Submits the form\r\n                        if (self.preProcessButton(buttonProperties)) {\r\n                            //Trigger the event after ProcessButton\r\n                            self.triggerGlobalHandler(\"renderActionButton\", buttonProperties);\r\n                            $.when(self.submitForm(buttonProperties)).done(function () {\r\n                                defer.resolve();\r\n                            }).fail(function() {\r\n                                defer.reject(arguments);\r\n                            });\r\n                        }\r\n                    }).fail(function () {\r\n                        defer.reject();\r\n                    });\r\n\r\n                } else {\r\n                    if (self.preProcessButton(buttonProperties)) {\r\n                        //Trigger the event after ProcessButton\r\n                        self.triggerGlobalHandler(\"renderActionButton\", buttonProperties);\r\n                        $.when(self.submitForm(buttonProperties)).done(function () {\r\n                            $(document).trigger(\"FORMACTION\", buttonProperties);\r\n                            defer.resolve();\r\n                        }).fail(function () {\r\n                            defer.reject(arguments);\r\n                        });\r\n                    }\r\n                }\r\n\r\n            } else {\r\n\r\n                self.endLoading();\r\n                if (buttonProperties.submitData) {\r\n                    $.when(self.submitData()).done(function () {\r\n                        defer.reject();\r\n                    });\r\n                }\r\n                else {\r\n                    defer.reject();\r\n                }\r\n\r\n                self.validationController.expandNotificationBox();\r\n            }\r\n\r\n            var customHandler = self.getCustomHandler(\"afterFormButtonClick\");\r\n            if (customHandler) {\r\n                customHandler(buttonProperties);\r\n            }\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n    /*\r\n    *   Public method to perform validations externally\r\n    */\r\n    validateForm: function () {\r\n        var self = this;\r\n\r\n        // First hide and clear validation box\r\n        self.validationController.clearValidationMessages();\r\n\r\n        // Validate the form\r\n        return self.validationController.performValidations();\r\n    },\r\n    /*\r\n    *   Submits all the form to the server and returns a deferred to check when the process finishes\r\n    */\r\n    saveForm: function () {\r\n        var self = this;\r\n\r\n        // Check is offline form        \r\n        var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\r\n\r\n        // Collect data\r\n        var data = self.collectRenderValuesForSubmit();\r\n\r\n        // Check if there are deferreds to wait\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        // Wait for deferreds\r\n        return $.when(deferredsToWait).pipe(function () {\r\n            self.startLoading();\r\n\r\n            // Submit the form\r\n            return $.when(self.dataService.submitData({\r\n                action: \"SAVE\",\r\n                data: data,\r\n                idCase: self.params.idCase,\r\n                idWorkitem: self.params.idWorkitem,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                isOfflineForm: isOfflineForm || false\r\n            })).always(function () {\r\n                self.endLoading();\r\n            });\r\n        });\r\n    },\r\n    /*\r\n    *   Creates a json array with key values to send to the server\r\n    */\r\n    submitForm: function (buttonProperties) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n\r\n        // Check is offline form                \r\n        var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\r\n\r\n        $.when(self.isReadyToSave())\r\n            .done(function () {\r\n                if (isOfflineForm) {\r\n                    self.internalSubmitFormOffline(buttonProperties);\r\n                    return;\r\n                }\r\n                $.when(self.internalSubmitForm(buttonProperties)).done(function () {\r\n                    defer.resolve();\r\n                }).fail(function () {\r\n                    defer.reject(arguments);\r\n                });\r\n\r\n            }).fail(function () {\r\n            self.endLoading();\r\n            bizagi.log(\"The form is not saved, no changes were found\");\r\n            defer.reject();\r\n        });\r\n        return defer.promise();\r\n    },\r\n    checkWidgetsData: function () {\r\n        //\r\n    },\r\n    isComplexGatewayPainted: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Get last action button\r\n     * @returns {*}\r\n     */\r\n    getLastActionButton: function () {\r\n        var self = this;\r\n        return self.lastActionButton;\r\n    },\r\n\r\n    /**\r\n     * Internal - Creates a json array with key values to send to the database\r\n     * @param {} buttonProperties\r\n     * @returns {}\r\n     */\r\n    internalSubmitFormOffline: function (buttonProperties) {\r\n        var self = this;\r\n        var message = \"\";\r\n        var data;\r\n\r\n        // Check is offline form                \r\n        var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\r\n\r\n        if (isOfflineForm && (self.properties && !self.properties.idPageCache)) {\r\n            self.properties.idPageCache = \"\";\r\n        }\r\n\r\n        // Fill data hash\r\n        if (buttonProperties.submitData || buttonProperties.executeRule) {\r\n            // Collect data\r\n            data = self.collectRenderValuesForSubmit();\r\n        }\r\n\r\n        if (self.transitions) {\r\n            var transitions = [];\r\n            $.each(this.activeTransitions, function (key, value) {\r\n                (value) ? transitions.push(key) : \"\";\r\n            });\r\n\r\n            if (bizagi.util.countProps(transitions) == 0) {\r\n                bizagi.showMessageBox(\r\n                    bizagi.localization.getResource(\"render-widget-complexgateway-path\"),\r\n                    bizagi.localization.getResource(\"render-widget-complexgateway-error\"), \"info\", false\r\n                );\r\n                self.endLoading();\r\n                return \"\";\r\n            }\r\n        }\r\n\r\n        $.when(self.dataService.submitData({\r\n            action: buttonProperties.action,\r\n            data: data,\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache,\r\n            idForm: self.properties.id,\r\n            prepare: true,\r\n            transitions: transitions || \"\",\r\n            idCase: self.params.idCase,\r\n            idWorkitem: self.params.idWorkitem,\r\n            isOfflineForm: isOfflineForm || false,\r\n            offlineType: self.params.offlineType || \"\"\r\n        })).done(function (responses) {\r\n\r\n            if (!self.postProcessButton(responses, buttonProperties)) {\r\n                return;\r\n            }\r\n\r\n            if (buttonProperties.routing) {\r\n                var waitForOnlineResponse = false;\r\n                if(isOfflineForm && self.isOfflineFormsV2Supported && self.params.online) {\r\n                    waitForOnlineResponse = true;\r\n                    var tryPushResponsePromise = new $.Deferred();\r\n                    self.params.responsePromise = tryPushResponsePromise;\r\n                    $(document).trigger(\"tryPushCase.offline\", self.params);\r\n                }\r\n                else if( isOfflineForm && !self.isOfflineFormsV2Supported){\r\n                    $(document).trigger(\"tryPushData.offline\");\r\n                }\r\n\r\n                if(!waitForOnlineResponse){\r\n                    self.triggerHandler(\"routing\", {\r\n                        offlineAction: buttonProperties.action,\r\n                        idCase: self.params.idCase,\r\n                        idWorkitem: self.params.idWorkitem\r\n                    });\r\n                }\r\n                else {\r\n                    $.when(tryPushResponsePromise)\r\n                    .then( function(result){\r\n                        self.triggerHandler(\"routing\", {\r\n                            idCase: result.IdCase,\r\n                            caseNumber: result.CaseNumber\r\n                        });\r\n                    })\r\n                    .fail( function(error){\r\n                        self.failHandler(error);\r\n                    });\r\n                }\r\n\r\n            } else {\r\n                message = bizagi.util.isValidResource(\"workportal-mobile-offline-form-successful\")\r\n                    ? bizagi.localization.getResource(\"workportal-mobile-offline-form-successful\")\r\n                    : \"Saved\";\r\n\r\n                bizagi.util.showNotification({ text: message, type: \"success\" });\r\n            }\r\n\r\n        }).fail(function (error) {\r\n            message = bizagi.util.isValidResource(\"workportal-mobile-offline-successful-fail\")\r\n                ? bizagi.localization.getResource(\"workportal-mobile-offline-successful-fail\")\r\n                : \"Not saved\";\r\n\r\n            bizagi.util.showNotification({ text: message, type: \"error\" });\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Internal - Creates a json array with key values to send to the server\r\n    */\r\n    internalSubmitForm: function (buttonProperties) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n        var data;\r\n\r\n        // Fill data hash\r\n        if (buttonProperties.submitData || buttonProperties.executeRule || buttonProperties.createnewcase) {\r\n            // Collect data\r\n            data = self.collectRenderValuesForSubmit();\r\n        }\r\n\r\n        // Start asynchronous operation\r\n        $.when(self.startLoading()).done(function () {\r\n            $('html, body').animate({ scrollTop: $('.ui-bizagi-loading-icon') }, 'slow');\r\n        });\r\n\r\n        var submitDataAction = null;\r\n        var executeButtonAction = null;\r\n        var performAction = null;\r\n        var checkpointAction = null;\r\n        var commitAction = null;\r\n        var waitingDeferreds = [];\r\n        var deferredsToWait = null;\r\n\r\n        // Prepare actions\r\n        if (buttonProperties.executeRule) {  // When the button has to execute any rule (MUST SUBMIT DATA BEFORE ALWAYS)\r\n\r\n            if (data.deferreds) {\r\n                deferredsToWait = $.when.apply($, data.deferreds);\r\n                waitingDeferreds.push(deferredsToWait);\r\n                delete data.deferreds;\r\n            }\r\n\r\n            submitDataAction = self.dataService.submitData({\r\n                action: \"SUBMITDATA\",\r\n                data: data,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true\r\n            });\r\n            submitDataAction.tag = \"submitData\";\r\n\r\n            checkpointAction = self.prepareCheckpointAction(buttonProperties.id);\r\n\r\n            // Reset data because when an execute rule operation has been performed, it saved already all the data\r\n            data = {};\r\n            executeButtonAction = self.dataService.executeButton({\r\n                idRender: buttonProperties.id,\r\n                xpathContext: self.properties.xpathContext || \"\",\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true\r\n            });\r\n            executeButtonAction.tag = \"executeRule\";\r\n\r\n            commitAction = self.prepareCommitAction(buttonProperties.id);\r\n        }\r\n\r\n        if (buttonProperties.next || buttonProperties.back || buttonProperties.save || buttonProperties.createnewcase || buttonProperties.nextWithoutValidations) {\r\n            // Verify transitions\r\n            if (self.transitions) {\r\n                var transitions = [];\r\n                $.each(this.activeTransitions, function (key, value) {\r\n                    (value) ? transitions.push(key) : \"\";\r\n                });\r\n\r\n                if (bizagi.util.countProps(transitions) == 0) {\r\n                    bizagi.showMessageBox(bizagi.localization.getResource(\"render-widget-complexgateway-path\"), bizagi\r\n                        .localization.getResource(\"render-widget-complexgateway-error\"), \"info\", false);\r\n                    self.endLoading();\r\n                    defer.reject();\r\n                    return defer.promise();\r\n                }\r\n            }\r\n\r\n            if (data.deferreds) {\r\n                deferredsToWait = $.when.apply($, data.deferreds);\r\n                waitingDeferreds.push(deferredsToWait);\r\n                delete data.deferreds;\r\n            }\r\n\r\n\r\n            performAction = self.dataService.submitData({\r\n                action: self.getButtonAction(buttonProperties.action),\r\n                forcePlanCompletion: buttonProperties.forcePlanCompletion,\r\n                data: data,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true,\r\n                transitions: transitions || \"\",\r\n                contexttype: self.properties.contextType,\r\n                surrogatekey: self.properties.surrogateKey\r\n            });\r\n            performAction.tag = \"performAction\";\r\n        }\r\n\r\n        // Assemble the actions\r\n        var actions = [];\r\n\r\n        if (executeButtonAction) {\r\n            actions.push(submitDataAction);\r\n            actions.push(checkpointAction);\r\n            actions.push(executeButtonAction);\r\n            actions.push(commitAction);\r\n        }\r\n\r\n        if (performAction) {\r\n            actions.push(performAction);\r\n        }\r\n\r\n        // Execute the batch\r\n        bizagi.chrono.initAndStart(\"submitForm-ajax\");\r\n\r\n\r\n        //Evaluate if there are deferreds to evaluate, like inline add in grid, that must send a ADDRELATIONWITHDATA before to savedata\r\n        var flowControlDeferred = new $.Deferred();\r\n        if (data && data.deferreds) {\r\n            $.when.apply(this, data.deferreds)\r\n                .done(function (response) {\r\n                    flowControlDeferred.resolve(response);\r\n                })\r\n                .fail(function () {\r\n                    flowControlDeferred.reject();\r\n                    console.log(\"Error: It was not possible resolve async actions on form \")\r\n                })\r\n        } else {\r\n            flowControlDeferred.resolve();\r\n        }\r\n\r\n        waitingDeferreds.push(flowControlDeferred);\r\n\r\n        $.when.apply($, waitingDeferreds).done(function() {\r\n            $.when(self.dataService.multiaction().execute({ actions: actions })).done(function (responses) {\r\n                bizagi.chrono.stop(\"submitForm-ajax\");\r\n                // End asynchronous operation\r\n                self.endLoading();\r\n                // Find validations\r\n                var bHasValidations;\r\n                var alertMessage = \"\";\r\n                $.each(responses, function (i, response) {\r\n\r\n                    var propertiesToDisplayMessages = self.validationToDisplayMessages(bHasValidations, response.result.type, response.result.messages, alertMessage);\r\n                    bHasValidations = propertiesToDisplayMessages.bHasValidations;\r\n                    alertMessage = propertiesToDisplayMessages.alertMessage;\r\n\r\n                });\r\n\r\n                if (!bHasValidations) {\r\n                    // Everything went ok .. succesfully response from the server\r\n                    if (!self.postProcessButton(responses, buttonProperties)) {\r\n                        return;\r\n                    }\r\n\r\n                    // After successfully response refresh the form\r\n                    if (buttonProperties.refresh) {\r\n                        self.refreshForm();\r\n                    }\r\n\r\n                    // If needs routing publish an event\r\n                    if (buttonProperties.routing) {\r\n                        bizagi.jqxhrList.abortAll(\"rendering_\" + self.dataService.guid);\r\n                        self.triggerHandler(\"routing\", {\r\n                            idCase: self.params.idCase,\r\n                            routingDisabled: buttonProperties.routingDisabled\r\n                        });\r\n                    }\r\n\r\n                    // Create case\r\n                    if (buttonProperties.createnewcase) {\r\n                        if (responses.length > 0) {\r\n                            bizagi.jqxhrList.abortAll(\"rendering_\" + self.dataService.guid);\r\n                            self.triggerHandler(\"routing\", {\r\n                                idCase: responses[0].result.IdCase,\r\n                                caseNumber: responses[0].result.CaseNumber\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if(alertMessage !== \"\"){ /*If there is an alertMessage show in a modal error*/\r\n                        bizagi.modalError.show(alertMessage, 'workportal-general-word-information', false);\r\n                    }\r\n                    if (buttonProperties.executeRule) {\r\n                        self.sendRollbackAction(buttonProperties.id);\r\n                    }\r\n                }\r\n\r\n                defer.resolve();\r\n            }).fail(function (_, _, response) {\r\n                if (buttonProperties.executeRule) {\r\n                    self.sendRollbackAction(buttonProperties.id);\r\n                }\r\n\r\n                if (response && response.error && (response.error.errorType === \"WaitForCompletionPlanException\" ||\r\n                    response.error.errorType === \"InvalidPlanStateException\" || response.error.errorType === \"CustomMessageException\")) {\r\n                    self.endLoading();\r\n                    $.when(bizagi.showConfirmationBox(bizagi.localization.getResource(response.error.message), null, false)).then(function () {\r\n                        return $.when(self.internalSubmitForm($.extend({}, buttonProperties, { forcePlanCompletion: true })));\r\n                    }).done(function () {\r\n                        defer.resolve();\r\n                    }).fail(function () {\r\n                        defer.reject();\r\n                    });\r\n                } else {\r\n                    self.failHandler(response);\r\n                    defer.reject(response);\r\n                }\r\n            });\r\n        });\r\n        return defer.promise();\r\n    },\r\n    validationToDisplayMessages: function(bHasValidations, messageType, message, alertMessage){\r\n        var self = this;\r\n\r\n        if (messageType == \"validationMessages\") {\r\n            // Something went wrong, we gotta display messages in notifications grid\r\n            self.addValidationMessage(message);\r\n            bHasValidations = true;\r\n        }\r\n        if(bizagi.detectDevice() == \"desktop\" && messageType == \"alertMessages\"){\r\n            // Something went wrong, we gotta display alert message\r\n            if(alertMessage === \"\"){\r\n                alertMessage = message;\r\n            }else{\r\n                alertMessage = alertMessage + \"\\n\\n\" + message;\r\n            }\r\n\r\n            bHasValidations = true;\r\n        }\r\n\r\n        return {\"bHasValidations\": bHasValidations, \"alertMessage\": alertMessage};\r\n    },\r\n\r\n    /*\r\n    *   Add a validation message to the form\r\n    */\r\n    addValidationMessage: function (validationMessage, focus, icon, itemAdditionalClass, autofocus, type) {\r\n        var self = this;\r\n\r\n        if (!self.validationController) {\r\n            self.validationController = new bizagi.command.controllers.validation(self);\r\n        }\r\n\r\n        if (typeof (validationMessage) == \"string\") {\r\n            self.validationController.showValidationMessage(validationMessage, focus, icon, itemAdditionalClass, type);\r\n        } else {\r\n            $.each(validationMessage, function (i, message) {\r\n                self.validationController.showValidationMessage(message, focus, icon, itemAdditionalClass, type);\r\n            });\r\n        }\r\n        self.validationController.expandNotificationBox(autofocus);\r\n    },\r\n    /*\r\n    *   Public method to perform validations externally\r\n    */\r\n    clearValidationMessages: function (params) {\r\n        var self = this;\r\n\r\n        // First hide and clear validation box\r\n        if (self.validationController) {\r\n            self.validationController.clearValidationMessages(params);\r\n        }\r\n\r\n    },\r\n    /*\r\n    *   Add an error message to the form\r\n    */\r\n    addErrorMessage: function (errorMessage) {\r\n        var self = this;\r\n\r\n        self.validationController.showErrorMessage(errorMessage);\r\n        self.validationController.expandNotificationBox();\r\n    },\r\n    /*\r\n    *   Refresh the current form\r\n    */\r\n    refreshForm: function (focus) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var deferred = $.Deferred();\r\n\r\n        focus = focus || self.getFocus();\r\n\r\n        // Normalize new focus structure if not present\r\n        if (focus && !focus.id) {\r\n            focus = {\r\n                id: focus\r\n            };\r\n        }\r\n\r\n        var options = {\r\n            idCase: self.params.idCase || \"\",\r\n            idWorkitem: self.params.idWorkitem || \"\",\r\n            idTask: self.params.idTask || \"\",\r\n            focus: focus,\r\n            selectedTabs: self.getSelectedTabs(),\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            isRefresh: true,\r\n            contextType: self.getContextType() || \"\",\r\n            action: self.getEndPointAction(),\r\n            idStartScope: self.properties.idStartScope || \"\"\r\n        };\r\n\r\n        // Notify the refresh event so the consumer takes the decision about what to do\r\n        self.startLoading();\r\n        $.when(self.triggerHandler(\"refresh\", options)).done(function () {\r\n            self.endLoading();\r\n            deferred.resolve();\r\n        }).fail(function () {\r\n            self.endLoading();\r\n            deferred.reject();\r\n        });\r\n        return deferred.promise();\r\n    },\r\n    /*\r\n    *   Get opened tabs configuration\r\n    */\r\n    getSelectedTabs: function () {\r\n        var self = this;\r\n        var tabContainers = self.getElementsByType(\"tab\");\r\n        var tabs = $.map(tabContainers, function (tabContainer) {\r\n            return { tab: tabContainer.properties.id, selected: tabContainer.activeTab };\r\n        });\r\n        var selectedTabs = {};\r\n        for (var i = 0, length = tabs.length; i < length; i++) {\r\n            selectedTabs[tabs[i].tab] = tabs[i].selected;\r\n        }\r\n        return selectedTabs;\r\n    },\r\n    /*\r\n    *   Template method to get the buttons objects\r\n    */\r\n    getButtons: function () {\r\n    },\r\n    /*\r\n    *   Adds an action on the fly to process the submit on change\r\n    */\r\n    addSubmitAction: function (xpath, action) {\r\n        var self = this;\r\n        self.actionController.processInternalSubmitAction(xpath, action);\r\n    },\r\n    /**\r\n     *   Adds an overlay to the form, and sets a waiting message\r\n     *\r\n     *   @argument {bool} delay Apply delay\r\n     */\r\n    startLoading: function () {\r\n        var self = this;\r\n        var waitingTemplate = self.renderFactory.getTemplate(\"form-waiting\");\r\n\r\n        if (self.waitingOverlay && self.waitingMessage)\r\n            return;\r\n\r\n        // This hack is only for desktop\r\n        if (!bizagi.util.isTabletDevice()) {\r\n            // Detect canvas parent with scroll\r\n            var isSharePoint = self.params.context === \"sharepoint\";\r\n            var canvas = self.params.canvas;\r\n            if (isSharePoint) {\r\n                canvas = bizagi.util.scrollTop(canvas);\r\n\r\n                if (!!!canvas.context) {\r\n                    canvas = $(\"body\", $(document));\r\n                }\r\n            } else {\r\n                canvas = $(\"body\", $(document));\r\n            }\r\n\r\n            // Configures overlay\r\n            var size = this.getSize();\r\n            var position = this.getOffset();\r\n            if (size.height == $(window).height()) {\r\n                position.top = 0;\r\n            }\r\n            self.waitingOverlay = $('<div class=\"ui-widget-overlay\" />').appendTo(canvas);\r\n            self.waitingMessage = $.tmpl(waitingTemplate).appendTo(canvas);\r\n            self.waitingOverlay.css({\r\n                \"height\": \"100%\",\r\n                \"width\": \"100%\",\r\n                \"min-height\": size.height,\r\n                \"min-width\": size.width\r\n            });\r\n            self.waitingMessage.css({\r\n                \"top\": (position.top + Math.ceil((size.height - self.waitingMessage.outerHeight()) / 2)) + \"px\",\r\n                \"left\": (Math.ceil((size.width - self.waitingMessage.outerWidth()) / 2)) + \"px\"\r\n            });\r\n            canvas.css(\"position\", \"relative\");\r\n\r\n        } else {\r\n            // Configures overlay\r\n            self.waitingOverlay = $('<div class=\"ui-widget-overlay\" />').appendTo(\"body\", $(document));\r\n            self.waitingMessage = $.tmpl(waitingTemplate).appendTo(\"body\", $(document));\r\n        }\r\n    },\r\n    /*\r\n    *   Removes the overlay and restores the form edition\r\n    */\r\n    endLoading: function () {\r\n        var self = this;\r\n        if (self.waitingOverlay && self.waitingMessage) {\r\n            self.waitingOverlay.remove();\r\n            self.waitingMessage.remove();\r\n            self.waitingOverlay = null;\r\n            self.waitingMessage = null;\r\n\r\n            var canvas = self.params.canvas;\r\n\r\n            if (canvas != undefined)\r\n                canvas.css(\"position\", \"\");\r\n        }\r\n    },\r\n    /*\r\n    *   Get the focused render in the current request\r\n    */\r\n    getFocusedElement: function () {\r\n        var self = this;\r\n        return self.focus;\r\n    },\r\n    /*\r\n    *   Set the focused render in the current request\r\n    */\r\n    setFocusedElement: function (focus) {\r\n        var self = this;\r\n        self.focus = focus;\r\n    },\r\n    /*\r\n    *   Publish a global event that the facade will replicate\r\n    */\r\n    triggerGlobalHandler: function (eventType, data) {\r\n        return this.triggerHandler(\"globalHandler\", { eventType: eventType, data: data });\r\n    },\r\n    /*\r\n    *   Generic handler to attach fail workflow for some operations\r\n    */\r\n    failHandler: function (error) {\r\n        var self = this;\r\n\r\n        // Check if the error is in multiaction format\r\n        try {\r\n            error = JSON.parse(error);\r\n        } catch (e) {\r\n        }\r\n\r\n        //This double validation has the purpose to get the real error object from two different levels ( error.error or error.error.error )\r\n        if (error & error.length && error.length > 1) error = error[0];\r\n        if (error.error) error = error.error;\r\n        if (error.error) error = error.error;\r\n\r\n        // Handle normal messages\r\n        if (typeof error == \"object\" && error.message) {\r\n            if (error.errorType === \"WaitForCompletionPlanException\" || error.errorType === \"InvalidPlanStateException\" || error.errorType === \"CustomMessageException\") {\r\n                error = bizagi.localization.getResource(error.message);\r\n            }\r\n            else {\r\n                error = error.message;\r\n            }\r\n\r\n        } else if (typeof error == \"string\") {\r\n            // Parse to json\r\n            try {\r\n                var errorJson = JSON.parse(error);\r\n                if (errorJson.errorType === \"WaitForCompletionPlanException\" || errorJson.errorType === \"InvalidPlanStateException\" || error.errorType === \"CustomMessageException\") {\r\n                    errorJson.message = bizagi.localization.getResource(errorJson.message);\r\n                }\r\n                error = errorJson.message;\r\n            } catch (e) {\r\n            }\r\n        }\r\n\r\n        // Workflow engine error, we gotta show it with error\r\n        self.addErrorMessage(error);\r\n        self.endLoading();\r\n    },\r\n    /* \r\n    *   Resizes the element\r\n    */\r\n    resize: function (size) {\r\n        // Just save the size, for reference\r\n        this.setSize(size);\r\n    },\r\n    /*\r\n    *   Sets the internal size for the form\r\n    */\r\n    setSize: function (size) {\r\n        this.size = size;\r\n    },\r\n    /*\r\n    *   Gets the internal size for the form\r\n    */\r\n    getSize: function () {\r\n        if (this.size) {\r\n            return this.size;\r\n        }\r\n        var canvas = (this.params.canvas) ? this.params.canvas : this.getFormContainer().container;\r\n\r\n        var canvasWidth = canvas.width();\r\n        var canvasHeight = canvas.height();\r\n\r\n        return {\r\n            width: canvasWidth,\r\n            height: canvasHeight\r\n        };\r\n    },\r\n    getOffset: function () {\r\n        var canvas = this.getFormContainer().container;\r\n\r\n        return canvas.offset();\r\n    },\r\n    /**\r\n     * This function execute action to save all data of render, but\r\n     * the server service dont execute any rule on the server\r\n     */\r\n    submitData: function (args) {\r\n        var self = this;\r\n\r\n        // Collect data\r\n        var data = self.collectRenderValuesForSubmit();\r\n\r\n        // Check is offline form        \r\n        var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\r\n\r\n        if (isOfflineForm && (self.properties && !self.properties.idPageCache)) {\r\n            self.properties.idPageCache = \"\";\r\n        }\r\n\r\n        // Mark data collected as original values\r\n        $.each(data, function (key, value) {\r\n            var renders = self.getRenders(key);\r\n            $.each(renders, function (i, render) {\r\n                render.updateOriginalValue();\r\n            });\r\n        });\r\n\r\n        // Don't do anything if there is no data\r\n        if ($.isEmptyObject(data)) {\r\n            return;\r\n        }\r\n\r\n        // Call the service\r\n        return $.when(self.dataService.multiaction().submitData({\r\n            action: \"SUBMITDATA\",\r\n            data: data,\r\n            idPageCache: self.properties.idPageCache,\r\n            xpathContext: self.properties.xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n    },\r\n    /**\r\n     * This function send a request to the server to execute a rule\r\n     */\r\n    executeRule: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties.xpathContext;\r\n        }\r\n\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeRule({\r\n            idPageCache: properties.idPageCache,\r\n            rule: args.rule,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages({ clearOnlyServer: true });\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage.apply(self, [message.messages, undefined, undefined, undefined, false, \"serverMessage\"]);\r\n            }\r\n            if(bizagi.detectDevice() == \"desktop\" && message.type == \"alertMessages\"){\r\n                bizagi.modalError.show(message.messages.join(\"\\n\\n\"), 'workportal-general-word-information', false);\r\n            }\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n    },\r\n    /**\r\n     * This function send a request to the server to execute an interface\r\n     */\r\n    executeInterface: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties.xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeInterface({\r\n            idPageCache: properties.idPageCache,\r\n            interface: args.interface,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages();\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage(message.messages);\r\n            }\r\n\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n    },\r\n    executeSAPConnector: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties.xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeSAPConnector({\r\n            idPageCache: properties.idPageCache,\r\n            guidsap: args.guidsap,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages();\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage(message.messages);\r\n            }\r\n\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n\r\n    },\r\n\r\n    executeConnector: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties\r\n                .xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeConnector({\r\n            idPageCache: properties.idPageCache,\r\n            guidConnector: args.guidConnector,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages();\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage(message.messages);\r\n            }\r\n\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n\r\n    },\r\n\r\n    /*\r\n    *   Re-binds pending actions that could not be set because the renders did not exist when the form loaded\r\n    */\r\n    refreshActions: function (actions) {\r\n        var self = this;\r\n        self.actionController.refreshActions(actions);\r\n    },\r\n    /*\r\n    *   Re-binds pending actions that could not be set because the renders did not exist when the form loaded\r\n    */\r\n    removeActions: function () {\r\n        var self = this;\r\n        self.actionController.unbindActions();\r\n    },\r\n    /*\r\n    *   Iterate through all renders and collect the data to send, then update original values for each render\r\n    */\r\n    collectRenderValuesForSubmit: function (data) {\r\n        var self = this;\r\n        data = data || {};\r\n\r\n        // Collect data\r\n        self.collectRenderValues(data);\r\n\r\n        // Mark data collected as original values\r\n        $.each(data, function (key, value) {\r\n            var renders = self.getRenders(key);\r\n            $.each(renders, function (i, render) {\r\n                render.updateOriginalValue();\r\n            });\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param params {data, bRefreshForm,properties}\r\n     * @returns {*}\r\n     */\r\n    internalSubmitOnChange: function (params) {\r\n        params = params || {};\r\n        var self = this, idCase;\r\n        var properties = params.properties;\r\n        // var form = self.getFormContainer();\r\n        var defer = new $.Deferred();\r\n        var data = params.data || {};\r\n        var bRefreshForm = typeof (params.bRefreshForm) != \"undefined\" ? params.bRefreshForm : true;\r\n        var notCollect = params.notCollect ? params.notCollect : undefined;\r\n\r\n        // Collect data\r\n        if (!(notCollect && !$.isEmptyObject(data))) {\r\n            self.collectRenderValuesForSubmit(data);\r\n        }\r\n        self.startLoading();\r\n\r\n        //idCase = self.getCacheIdCase();\r\n\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        $.when(deferredsToWait).then(function () {\r\n            // Submit the form\r\n            self.dataService.submitData({\r\n                action: \"SUBMITONCHANGE\",\r\n                data: data,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: properties.idPageCache,\r\n                contexttype: properties.contexttype\r\n            }).done(function (response) {\r\n                // Cancel previous multiactions and process property value\r\n                self.cancelPreviousRequest();\r\n                // After successfully response refresh the form\r\n                self.endLoading();\r\n                // If response message has error in validation, do not refresh the form\r\n                // and show validation message\r\n                if (response && response.type == \"validationMessages\") {\r\n                    if (typeof self.clearValidationMessages == \"function\") {\r\n                        self.clearValidationMessages();\r\n                    }\r\n\r\n                    self.addValidationMessage(response.messages);\r\n                    defer.resolve();\r\n                } else if (bRefreshForm) {\r\n                    var focusIdentifier = {\r\n                        id: properties.id,\r\n                        xpath: properties.xpath\r\n                    };\r\n                    if (properties.idCase !== undefined) {\r\n                        $.extend(focusIdentifier, {\r\n                            idCaseObject: bizagi.cache.idCaseObject\r\n                        });\r\n                    }\r\n                    if (response.IdScope) {\r\n                        self.properties.idStartScope = response.IdScope;\r\n                    }\r\n                    $.when(self.refreshForm(focusIdentifier)).done(function () {\r\n                        defer.resolve();\r\n                    }).fail(function () {\r\n                        defer.resolve();\r\n                    });\r\n                } else {\r\n                    defer.resolve();\r\n                }\r\n            }).fail(function (message) {\r\n                self.endLoading();\r\n                var objMessage = JSON.parse((typeof message == 'object' && message.responseText) ? message.responseText : {}) || {};\r\n                var strMessage = objMessage.message || message;\r\n                // Clear previous validations\r\n                self.validationController.clearValidationMessages();\r\n                if (objMessage.type == \"alert\") {\r\n                    self.validationController.showAlertMessage(strMessage);\r\n                } else {\r\n                    self.validationController.showErrorMessage(strMessage);\r\n                }\r\n                defer.resolve();\r\n            });\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    cancelPreviousRequest: function () {\r\n        if (bizagi.multiactionConnection && bizagi.multiactionConnection.length) {\r\n            var length = bizagi.multiactionConnection.length;\r\n            var i = 0, connection;\r\n            for (; i < length; i++) {\r\n                connection = bizagi.multiactionConnection.pop();\r\n                if (connection && connection.abort) {\r\n                    bizagi.showErrorAlertDialog = false;\r\n                    connection.abort();\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    prepareCheckpointAction: function (buttonId) {\r\n        var self = this;\r\n\r\n        var checkpointAction = self.dataService.sendCheckpoint({\r\n            url: self.properties.checkpointUrl,\r\n            idRender: buttonId,\r\n            xpath: \"\",\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache,\r\n            prepare: true\r\n        });\r\n\r\n        checkpointAction.tag = \"checkpoint\";\r\n\r\n        return checkpointAction;\r\n    },\r\n\r\n    prepareCommitAction: function (buttonId) {\r\n        var self = this;\r\n\r\n        var commitAction = self.dataService.commitLinkForm({\r\n            url: self.properties.commitUrl,\r\n            idRender: buttonId,\r\n            xpath: \"\",\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache,\r\n            prepare: true\r\n        });\r\n\r\n        commitAction.tag = \"commit\";\r\n\r\n        return commitAction;\r\n    },\r\n\r\n    sendRollbackAction: function (buttonId) {\r\n        var self = this;\r\n\r\n        self.dataService.rollbackLinkForm({\r\n            url: self.properties.rollbackUrl,\r\n            idRender: buttonId,\r\n            xpath: \"\",\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache\r\n        });\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n        self.endLoading();\r\n\r\n        setTimeout(function () {\r\n            if (self.params) {\r\n                delete self.params.canvas;\r\n            }\r\n            delete self.params;\r\n            delete self.control;\r\n            if (self.validationController) {\r\n                self.unbind(\"rendervalidate\");\r\n                delete self.validationController;\r\n            }\r\n\r\n            if (self.actionController) {\r\n                self.actionController.unbindActions();\r\n                delete self.actionController;\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    },\r\n    getButton: function (guid) {\r\n        return $(\".ui-bizagi-button[data-id='\" + guid + \"']\", this.container);\r\n    },\r\n\r\n    getFloatingButton: function (guid) {\r\n        return $(\"li[data-id='\" + guid + \"']\", this.container);\r\n    },\r\n\r\n    propagateExternalEvents: function (evt) {\r\n        // Menu-Overflow\r\n        var $menuOverflow = $(\".bz-overflow-menu\");\r\n        if ($menuOverflow)\r\n            $(document).trigger('click.overflow');\r\n\r\n        // ECM with preview image\r\n        var zoomIsOpen = $(\".jquery-image-zoom\") && $(\".jquery-image-zoom\").css(\"display\") == \"block\";\r\n\r\n        if (zoomIsOpen)\r\n            $(\"div.jquery-image-zoom a\").click();\r\n    },\r\n\r\n    getButtonAction: function (action) {\r\n        return this.allowValidateAndSaveAction && action === \"validate\" ? \"save\" : action;\r\n    }\r\n\r\n});\r\n","/**\r\n * Render a new type of form called template\r\n *\r\n * @author Edward Morales\r\n */\r\n$.Class.extend(\"bizagi.rendering.formTemplate\", {\r\n\r\n    /**\r\n     *   Constructor\r\n     */\r\n    init: function (params) {\r\n        this._super(params);\r\n        if(params.paramsRender && params.paramsRender.contextEvent){\r\n            self.contextEvent = params.paramsRender.contextEvent;\r\n        }\r\n    },\r\n\r\n\t/**\r\n\t * Process controls on template\r\n\t * @param template\r\n\t * @param controls\r\n\t * @return {*}\r\n\t */\r\n\tprocessTemplate: function(template, controls) {\r\n\t    var regexControl = /\\{\\{([\\w:]*)\\s*(\\{[\"':,-\\[\\]\\w\\s]*\\})\\}\\}/g;\r\n\t\tvar regexRepeater = /\\{\\{(((repeater)\\s*(\\{[\"':,-\\[\\]\\w\\s]*\\}))|([\\/repeater]+:item)|(\\/repeater)|(repeater)|(separator))\\}\\}/g;\r\n\r\n\t\t// Remove all repeaters key words\r\n\t\tvar processedTemplate = template.replace(regexRepeater, \"\");\r\n\r\n\t\t// replace controls\r\n\t\tprocessedTemplate = processedTemplate.replace(regexControl, function(match, g1, g2, offset, string) {\r\n\t\t    var parameters = JSON.parse(g2);\r\n            \r\n\t\t\treturn controls[parameters.id] || '';\r\n\t\t});\r\n\r\n\t    processedTemplate = processedTemplate.replace(/{{([\\w:]*)\\s*}}/g, function() {\r\n\t        return '';\r\n\t    });\r\n\r\n\r\n\t\treturn processedTemplate;\r\n\t},\r\n\r\n\t/**\r\n\t * Render layout container\r\n\t * @return {*}\r\n\t */\r\n\trenderContainer: function() {\r\n\t\tvar self = this;\r\n\t\tvar layoutCollection = self.getRenderByType(\"layout\");\r\n\t\tvar layout = (layoutCollection.length > 0) ? layoutCollection[0] : {};\r\n\t\tvar template = (typeof layout.getTemplate == \"function\") ? layout.getTemplate() : \"\";\r\n\t\tvar css = (typeof layout.getCss == \"function\") ? layout.getCss() : \"\";\r\n\t\tvar mode = self.getMode();\r\n\t\tvar layoutGuid = self.properties.layoutguid || Math.guid();\r\n\r\n\t\tvar controls = {};\r\n\r\n\t\t/**\r\n\t\t * Render all elements within first layout container\r\n\t\t */\r\n\t\tif(layout.children) {\r\n\t\t\t$.each(layout.children, function(i, child) {\r\n\t\t\t    // ignore layoutPlaceholder control in execution\r\n\t\t\t    if (!(mode == 'execution' && child.properties.type == 'layoutPlaceholder')) {\r\n\r\n\t\t\t        var type = child.getElementType();\r\n\t\t\t        if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n\t\t\t            controls[child.properties.id] = child.renderElement();\r\n\t\t\t        }\r\n\t\t\t        if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n\t\t\t            controls[child.properties.id] = child.renderContainerHtml();\r\n\t\t\t        }\r\n\t\t\t        self.childrenHash[child.properties.uniqueId] = child;\r\n\t\t\t    }\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Load css\r\n\t\tbizagi.util.loadStyle(css, layoutGuid);\r\n\r\n\t\treturn self.processTemplate(template, controls);\r\n\t},\r\n\r\n    /**\r\n     * Get the context in which loads the formTemplate\r\n     *\r\n     */\r\n    getContextEvent: function(){\r\n        return self.contextEvent;\r\n    }\r\n});\r\n","$.Class.extend(\"bizagi.rendering.layout\", {}, {\r\n\r\n\t/**\r\n\t * Get html template\r\n\t * @return {*}\r\n\t */\r\n\tgetTemplate: function() {\r\n\t    var self = this;\r\n\t    var mode = self.getMode();\r\n\t    var html = self.properties.html || \"\";\r\n\r\n        // Add a container, this is important in design to calculate the scroll \r\n\t    if (mode == 'design' && html) {\r\n            html = \"<div class='bz-design-template'>\" + html + \"</div>\"\r\n\t    }\r\n\t\t\r\n\t\treturn bizagi.util.stripslashes(html);\r\n\t},\r\n\r\n\t/**\r\n\t * Get string css of layout container\r\n\t * @return {*}\r\n\t */\r\n\tgetCss: function() {\r\n\t    var self = this;\r\n\t\tvar css = self.properties.css || \"\";\r\n\r\n\t\tvar mode = self.getMode();\r\n\t\tif (mode == \"design\") {\r\n\t\t    css = css && css.desktop;\r\n\t\t}\r\n\r\n\t\treturn bizagi.util.stripslashes(css);\r\n\t},\r\n\r\n\r\n\t/*\r\n\t *   Template method to process each jquery object\r\n\t *   must be overriden in each container\r\n\t */\r\n\tpostRenderContainer: function(container) {\r\n\t\tvar self = this;\r\n\t\tvar mode = self.getMode();\r\n\r\n\t\t// Resolve rendering deferred\r\n\t\tif(self.renderingDeferred)\r\n\t\t\tself.renderingDeferred.resolve();\r\n\r\n\t\t// Process children elements\r\n\t\tself.container = container;\r\n\t\tself.executeChildrenPostRender(container);\r\n\r\n\t\tif(mode == \"execution\") {\r\n\t\t\t// Apply handlers\r\n\t\t\tself.configureHandlers();\r\n\t\t}\r\n\t\tif(mode == \"design\") {\r\n\t\t\t// Configure view\r\n\t\t\tself.configureDesignView();\r\n\t\t}\r\n\t\tif(mode == \"layout\") {\r\n\t\t\t// Configure view\r\n\t\t\tself.configureDesignView();\r\n\t\t\tself.configureLayoutView();\r\n\t\t}\r\n\t}\r\n});","/*\r\n*   Name: BizAgi Accordion Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a accordion container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.accordion\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Enumerate the children appending a property\r\n        $.each(self.children, function (i, child) {\r\n            child.properties.ordinal = i;\r\n        });\r\n    },\r\n\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"accordion\");\r\n\r\n        // Render the accordion\r\n        var html = $.fasttmpl(template, {\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Accordion Item Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a accordion item class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.accordionItem\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"accordionItem\");\r\n\r\n        // Render the accordionItem\r\n        var html = $.fasttmpl(template, {\r\n            id: properties.id,\r\n            ordinal: properties.ordinal,\r\n            displayName: properties.displayName,\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Fires when the accordionItem is selected \r\n    */\r\n    activate: function () {\r\n        var self = this;\r\n        self.active = true;\r\n    },\r\n\r\n    /*  \r\n    *   Return the current focuses container\r\n    */\r\n    getFocus: function () {\r\n        var self = this;\r\n        var focus = self._super();\r\n        if (bizagi.util.isEmpty(focus) && self.active) {\r\n            focus = self.properties.id;\r\n        }\r\n\r\n        return focus;\r\n    }\r\n\r\n\r\n});\r\n\r\n","/*\r\n*   Name: Bizagi Render CollectionNavigator\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define basic stuff for collection navigator renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.collectionnavigator\", {}, {\r\n\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        self._super(params);\r\n\r\n        var properties = self.properties;\r\n        properties.allowAdd = (typeof properties.allowAdd != \"undefined\") ? bizagi.util.parseBoolean(properties.allowAdd) : true;\r\n        properties.withAddForm = properties.withAddForm && properties.allowAdd;\r\n        properties.allowEdit = (typeof properties.allowEdit != \"undefined\") ? bizagi.util.parseBoolean(properties.allowEdit) : true;\r\n        properties.withEditForm = properties.withEditForm && properties.allowEdit;\r\n        properties.allowDetail = (typeof properties.allowDetail != \"undefined\") ? bizagi.util.parseBoolean(properties.allowDetail) : false;\r\n        properties.inlineAdd = (typeof properties.inlineAdd != \"undefined\") ? bizagi.util.parseBoolean(properties.inlineAdd) : true;\r\n        properties.inlineAdd = properties.inlineAdd && properties.allowAdd;\r\n        properties.inlineEdit = (typeof properties.inlineEdit != \"undefined\") ? bizagi.util.parseBoolean(properties.inlineEdit) : true;\r\n        properties.inlineEdit = properties.inlineEdit && properties.allowEdit;\r\n        properties.allowDelete = (typeof properties.allowDelete != \"undefined\") ? bizagi.util.parseBoolean(properties.allowDelete) : true;\r\n\r\n        self.orientation = self.properties.orientation || \"ltr\",\r\n        self.data = self.properties.data;\r\n        self.keys = self.data ? self.getKeys(self.data.rows) : [];\r\n        self.pointer = 0;\r\n        self.totalRows = 0;\r\n        self.inlineAddRecords = [];\r\n\r\n        if (self.data) {\r\n            self.totalRows = self.data.rows.length;\r\n        }\r\n    },\r\n    /*\r\n    * Normalize keys\r\n    */\r\n    getKeys: function (rows) {\r\n        rows = rows || [];\r\n        var keys = [];\r\n\r\n        for (var i = 0, l = rows.length; i < l; i++) {\r\n            var row = rows[i];\r\n            keys.push(row[0]);\r\n        }\r\n        return keys;\r\n    },\r\n\r\n    /*\r\n    *   Render the control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var templateItem = \"collectionnavigator\";\r\n        var template = self.renderFactory.getTemplate(templateItem);\r\n        var mode = self.getMode();\r\n\r\n        // Render the container\r\n        var html = $.fasttmpl(template, {\r\n            uniqueId: properties.uniqueId,\r\n            displayName: properties.displayName ? properties.displayName : \"\",\r\n            id: properties.id,\r\n            guid: properties.guid,\r\n            showPreview: self.showPreview(),\r\n            mode: mode,\r\n            orientation: self.getFormContainer().properties.orientation\r\n        });\r\n\r\n        html = self.drawControls(html);\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    * Render version readonly of control\r\n    */\r\n    renderReadOnly: function () {        \r\n        return this.renderControl();\r\n    },\r\n\r\n    /*\r\n    * Draw navigation controls\r\n    */\r\n    drawControls: function (html) {\r\n\r\n    },\r\n\r\n    /*\r\n    *  render several actions in the navigation palete\r\n    *  ex. save, cancel \r\n    */\r\n    drawActions: function (controls) {\r\n\r\n    },\r\n\r\n    /*\r\n    * Render navigation controls (next, previous, last, first. etc )\r\n    */\r\n    drawControl: function (controls) {\r\n\r\n    },\r\n\r\n    /*\r\n    * Draw forms options (add form, edit form, navigation form)\r\n    */\r\n    drawForms: function (controls) {\r\n\r\n    },\r\n\r\n    /*\r\n    * Draw a preview views, it will be show when the collection hasn't records\r\n    */\r\n    drawPreview: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var templateItem = (mode === \"execution\") ? \"collectionnavigator-execution\" : \"collectionnavigator-preview\";\r\n        var template = self.renderFactory.getTemplate(templateItem);\r\n        var html = $.tmpl(template);\r\n\r\n        self.canvas.append(html);\r\n\r\n    },\r\n\r\n    /*\r\n    * Returns true if the collection has data\r\n    */\r\n    hasData: function () {        \r\n        return this.getTotalRows() > 0;\r\n    },\r\n\r\n    /*\r\n    * Returns the key of current row\r\n    */\r\n    getRow: function () {        \r\n        return this.keys[this.pointer];\r\n    },\r\n\r\n    /*\r\n    * Returns the key of next row\r\n    */\r\n    getNextRow: function () {\r\n        var self = this;\r\n\r\n        if (self.getTotalRows() > (self.pointer + 1))\r\n            self.pointer += 1;\r\n\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the key of previous row\r\n    */\r\n    getPreviousRow: function() {\r\n        var self = this;\r\n\r\n        if (self.pointer > 0)\r\n            self.pointer -= 1;\r\n\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the key of first row\r\n    */\r\n    getFirstRow: function () {\r\n        var self = this;\r\n\r\n        self.pointer = 0;\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the key of last row\r\n    */\r\n    getLastRow: function () {\r\n        var self = this;\r\n\r\n        self.pointer = self.keys.length - 1;\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the total numbers of rows in collection\r\n    */\r\n    getTotalRows: function () {        \r\n        return this.keys.length;\r\n    },\r\n\r\n    getIndexes: function () {        \r\n        return this.properties.data.rows;\r\n    },\r\n\r\n    /*\r\n    * Sets the pointer to a specific position\r\n    */\r\n    setPointer: function (index) {        \r\n        this.pointer = index - 1;\r\n    },\r\n\r\n    /*\r\n    * Returns true is there is a inline row pending to save\r\n    */\r\n    isTherePendingInlineRow: function() {\r\n        return this.inlineAddRecords.length > 0;\r\n    },\r\n\r\n    /*\r\n    * Adds new row to collection\r\n    */\r\n    addKey: function (newId) {        \r\n        this.keys.push(newId);\r\n    },\r\n\r\n    /*\r\n    * Removes row in collection\r\n    */\r\n    removeKey: function () {\r\n        var self = this;\r\n        var index = self.pointer;\r\n\r\n        if (index >= 0) {\r\n            self.keys.splice(index, 1);\r\n\r\n            var totalRows = self.getTotalRows();\r\n            if (totalRows > 0 && index >= totalRows) {\r\n                self.setPointer(totalRows);\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Returns true if the control should show the preview view\r\n    * ex. if the collection is empty \r\n    */\r\n    showPreview: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var properties = self.properties;\r\n\r\n        if (mode == \"execution\") {\r\n            return !self.hasData();\r\n        } else {\r\n            return !bizagi.util.parseBoolean(properties.navigationform);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Returns the parameters needed for the request\r\n    */\r\n    getParameters: function (params) {\r\n        var self = this;\r\n\r\n        var parameters = {};\r\n        var properties = self.properties;\r\n        var recordXpath = properties.xpath + \"[id=\" + params.id + \"]\";\r\n\r\n        parameters.idRender = properties.id;\r\n        parameters.recordXPath = recordXpath;\r\n        parameters.xpathContext = properties.xpathContext;\r\n        parameters.idPageCache = properties.idPageCache;\r\n        parameters.requestedForm = params.requestedForm;\r\n        parameters.contextType = properties.contextType || properties.contexttype;\r\n        parameters.url = params.url;\r\n        parameters.editable = params.editable;\r\n        orientation: properties.orientation || \"ltr\";\r\n\r\n\r\n        return parameters;\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection navigator add record request\r\n    *   Returns a deferred when done, the server returns an id for the new record\r\n    */\r\n    submitAddRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var request = self.dataService.addGridRecord({\r\n            url: properties.addUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType || properties.contexttype,\r\n            idPageCache: properties.idPageCache,\r\n            orientation: properties.orientation || \"ltr\"\r\n        });\r\n\r\n        var filterResponse = request.pipe(function (data) {\r\n            // Parses response\r\n            return data.idEntity;\r\n        });\r\n\r\n        return filterResponse.promise();\r\n    },\r\n\r\n    /*\r\n    *   Submits a edit record request for the given id \r\n    *   Returns a deferred\r\n    */\r\n    submitEditRequest: function (id) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n        return self.dataService.editGridRecord({\r\n            url: properties.editUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType || properties.contexttype || '',\r\n            orientation: properties.orientation || \"ltr\"\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection delete record request for the given id \r\n    *   Returns a deferred\r\n    */\r\n    submitDeleteRequest: function (id) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n        return self.dataService.deleteGridRecord({\r\n            url: properties.deleteUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType || properties.contexttype\r\n        }).pipe(function (data) {\r\n            if (data.type == \"validationMessages\") {\r\n                var form = self.getFormContainer();\r\n                var message = data.messages.join(\" \");\r\n                form.failHandler({ message: message });\r\n            }\r\n\r\n            return data;\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection navigator edit record request for the given id \r\n    *   Returns a deferred\r\n    */\r\n    submitSaveRequest: function (id, data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = $.Deferred();\r\n\r\n        // Calculate xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + properties.xpath + \"[id=\" + id + \"]\" : properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        $.when(deferredsToWait).then(function() {\r\n\r\n            self.dataService.saveGridRecord({\r\n                url: properties.saveUrl,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: xpathContext,\r\n                contexttype: properties.contextType || properties.contexttype || \"\",\r\n                submitData: data\r\n            }).done(function(response) {\r\n                defer.resolve(response);\r\n            }).fail(function (dataFail) {\r\n                var form = self.getFormContainer();\r\n                var message = (dataFail.responseText) ? dataFail.responseText : ((typeof dataFail == \"string\") ? dataFail : dataFail.toString());\r\n                //Convert String to object\r\n                if (typeof message == \"string\") {\r\n                    try {\r\n                        message = JSON.parse(message).message;\r\n                    } catch (e) {\r\n                        message = message.match(/\"message\":(.*)\",/)[0];\r\n                        message = message.substr(11, message.length - 13);\r\n                    }\r\n    \r\n                } else if (!message.message) {\r\n                    message = dataFail;\r\n                }\r\n                form.validateForm();\r\n                form.clearValidationMessages();\r\n                form.addValidationMessage(message);\r\n            });\r\n\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection navigator rollback request\r\n    *   Returns a deferred when done\r\n    */\r\n    submitRollbackRequest: function (error) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.rollbackGridAction({\r\n            url: properties.rollbackUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: error.idPageCache,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        });\r\n    },\r\n    /*\r\n    *   Fetch the data into a deferred\r\n    */\r\n    getRemoteData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set params\r\n        params = params || {};\r\n        $.extend(params, {\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType || properties.contexttype,\r\n            idPageCache: properties.idPageCache\r\n\r\n        });\r\n\r\n        return self.dataService.getData(params);\r\n    },\r\n\r\n    isValid: function (invalidElements) {\r\n        var form = this.form;\r\n\r\n        if (typeof (form) !== \"undefined\") {\r\n            (form.children || []).forEach(function (child) {\r\n                if (child.properties.visible) {\r\n                    if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                        // Go though container\r\n                        child.isValid(invalidElements);\r\n\r\n                    } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                        // Go to the render\r\n                        if (!child.isValid(invalidElements)) {\r\n                            var content = invalidElements[invalidElements.length - 1];\r\n                            invalidElements[invalidElements.length - 1] = $.extend(content, {\r\n                                id: child.properties.id\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        return invalidElements.length === 0;\r\n    },\r\n\r\n    validateControls: function(invalidElements) {\r\n        if (!this.form) return false;\r\n        return this.form.validationController.performValidations(invalidElements);\r\n    }\r\n\r\n});","/*\r\n*   Name: Bizagi Group Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a group container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.group\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Default properties\r\n        var properties = self.properties;\r\n\r\n        properties.helpText = properties.helpText || properties.displayName;\r\n\r\n        // Extend css property \r\n        properties.cssclass = properties.cssclass || \"cssClassContainer\";\r\n\r\n        properties.collapse = (typeof properties.collapse != \"undefined\" && bizagi.util.parseBoolean(properties.collapse)) ? true : false;\r\n    },\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"group\");\r\n\r\n        // Define icons\r\n        self.expandedIcon = self.getExpandedIcon();\r\n        self.collapsedIcon = self.getCollapsedIcon();\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            expandedClassIcon: self.expandedIcon,\r\n            displayName: properties.displayName,\r\n            editable: properties.editable,\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            collapse: properties.collapse,\r\n            isDesign: (self.getMode() !== \"execution\"),            \r\n            messageValidation: properties.messageValidation,\r\n            cssclass: properties.cssclass,\r\n            guid: properties.guid\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Returns the expanded icon\r\n    */\r\n    getExpandedIcon: function () { },\r\n\r\n    /*\r\n    *   Returns the collapsed icon\r\n    */\r\n    getCollapsedIcon: function () { },\r\n\r\n    /* \r\n    *   Expands or collapse the container \r\n    */\r\n    toogleContainer: function (argument, bImmediate) { }\r\n\r\n});","/*\r\n*   Name: BizAgi Horizontal Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a tab item class for all devices\r\n*/\r\n\r\n\r\n$.Class.extend(\"bizagi.rendering.horizontal\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"horizontal\");\r\n\r\n        // Render the container\r\n        var html = $.fasttmpl(template, {\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi Panel Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a panel container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.panel\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function(params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Override properties\r\n        var properties = self.properties;\r\n        properties.displayName = properties.displayName || \"\";\r\n    },\r\n\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function() {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"panel\");\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            displayName: properties.displayName,\r\n            loading: properties.loading,\r\n            message: properties.message,\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            cssClass: properties.cssclass\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Process the html rendering object\r\n    */\r\n    postRenderContainer: function(panel) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set height\r\n        if (properties.height) {\r\n            panel.height(properties.height);\r\n        }\r\n\r\n        // Call base\r\n        self._super(panel);\r\n    }\r\n\r\n});","/*\r\n*   Name: Bizagi Panel Container Class\r\n*   Author: David Romero\r\n*   Comments:\r\n*   -   This script will define a panel container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.contentPanel\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Override properties\r\n        var properties = self.properties;\r\n        properties.displayName = properties.displayName || \"\";\r\n    },\r\n\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"contentPanel\");\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            displayName: properties.displayName,\r\n            mode: self.getMode(),\r\n            uniqueId: properties.uniqueId,\r\n            isDesign: self.getMode() === \"design\",\r\n            messageValidation: properties.messageValidation,\r\n            cssClass: properties.cssclass,\r\n            guid: properties.guid\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Process the html rendering object\r\n    */\r\n    postRenderContainer: function (panel) {\r\n        // Call base\r\n        this._super(panel);\r\n    }\r\n\r\n});","/*\r\n*   Name: BizAgi Panel Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a panel container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.searchForm\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"searchForm\");\r\n\r\n\r\n        if (properties.contexttype != \"entity\" && self.parent) {\r\n            properties.contexttype = (typeof self.parent.getContextType == 'function') ? self.parent.getContextType() : \"\";\r\n        } \r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            displayName: properties.displayName,\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n\r\n        // Render result\r\n        html = html.replace(\"{{result}}\", self.renderResult());\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Perform a search and render the results\r\n    */\r\n    performSearch: function (searchParams) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set parameter to search\r\n        properties.searchParams = searchParams;\r\n\r\n        // Submit the search to the server\r\n        self.submitSearch();\r\n    },\r\n\r\n    /*\r\n    *   Submits the query to the server\r\n    */\r\n    submitSearch: function () {\r\n        var self = this;\r\n\r\n        // Makes the results to update its contents\r\n        self.refreshResults();\r\n    },\r\n\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n        return self.parent.ready();\r\n    },\r\n\r\n    /*\r\n    *   Method to fill the result data\r\n    *   (THIS IS CALLED WITHIN GRID RENDER SCOPE)\r\n    */\r\n    getRemoteData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n\r\n        // Collect data\r\n        var data = self.collectSearchValues();\r\n\r\n        if (bizagi.util.isMapEmpty(data)) {\r\n            bizagi.showMessageBox(this.getResource(\"render-search-advanced-no-filters\"), this.getResource(\"render-form-dialog-box-search\"), \"error\");\r\n            return null;\r\n        }\r\n\r\n        params.rows = (properties.searchParams && properties.searchParams.maxRecords && properties.searchParams.maxRecords > 0) ? properties.searchParams.maxRecords : params.rows;\r\n\r\n        // The Grid only support one row per page in smartphone (DRAGON-41733 / QAF-3916)         \r\n        if (properties.searchParams && typeof(properties.searchParams.maxRows) !== \"undefined\") {\r\n            params.rows = properties.searchParams.maxRows || params.rows;\r\n        }\r\n\r\n        // Resolve with remote data\r\n        self.dataService.submitSearch($.extend(params, {\r\n            url: properties.dataUrl,\r\n            idRender: properties.idRender,\r\n            idPageCache: properties.idPageCache,\r\n            idSearchForm: properties.id,\r\n            allowFullSearch: (properties.searchParams.allowFullSearch ? properties.searchParams.allowFullSearch : null),\r\n            maxRecords: (properties.searchParams.maxRecords > 0 ? properties.searchParams.maxRecords : null),\r\n            criteria: data\r\n\r\n        })).done(function (response) {\r\n\r\n            // Resolve with fetched data    \r\n            properties.page = response.page;\r\n            properties.records = response.records;\r\n            properties.totalPages = response.totalPages || 0;\r\n\r\n            //In tablets are allowed about 10000 records as maximum\r\n            if (response.records > 10000) {\r\n                properties.deviceMaxRecordsExceeded = true;\r\n                response.deviceMaxRecordsExceeded = true;\r\n            } else {\r\n                delete properties.deviceMaxRecordsExceeded;\r\n            }\r\n            \r\n            defer.resolve(response);\r\n\r\n            // Call virtual method\r\n            self.onSearchFinished();\r\n        }).fail(function (errorObject) {\r\n            bizagi.showErrorAlertDialog = false;\r\n            if (errorObject.responseText) {\r\n                try {\r\n                    var message = JSON.parse(errorObject.responseText).message;\r\n                    bizagi.showMessageBox(message, \"\", \"error\");\r\n                } catch (e) { }\r\n            }\r\n            defer.reject();\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Iterate through all the renders in the container and fills the hashtable\r\n    *   - Overriden because server needs this in array\r\n    */\r\n    collectSearchValues: function () {\r\n        var self = this;\r\n\r\n        // Collect data\r\n        var data = {};\r\n        this.collectRenderValues(data);\r\n\r\n        // Changes to array\r\n        var submitArray = [];\r\n        for (key in data) {\r\n            var xpath = key;\r\n            var value = data[key];\r\n            var operation = self.getCriteriaOperation(self.getRender(xpath));\r\n            var criteriaData = {};\r\n            if (!bizagi.util.isEmpty(value)) {\r\n                criteriaData[\"xpath\"] = xpath;\r\n                criteriaData[\"value\"] = value;\r\n                criteriaData[\"operation\"] = operation;\r\n                submitArray.push(criteriaData);\r\n            }\r\n        }\r\n\r\n        return submitArray;\r\n    },\r\n\r\n    /*\r\n    *   This method find out the criterial operation to be executed according to\r\n    *   data type. Text renders use LIKE operation, but other data types such like\r\n    *   numerics use exact match operatiors\r\n    */\r\n    getCriteriaOperation: function (render) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var operation = \"EQUALS\";\r\n        if (render.properties.dataType == \"15\") {\r\n            if (typeof render.properties.typeSearch === \"undefined\" || render.properties.typeSearch === \"approx\"){\r\n                if (properties.allowFullSearch) {\r\n                    operation = \"FULLLIKE\";\r\n                }\r\n                else {\r\n                    operation = \"LIKE\";\r\n                }\r\n            }\r\n        }\r\n        return operation;\r\n    },\r\n\r\n    /*\r\n    *   Render the result controls for the query\r\n    *   Resolved in each device\r\n    */\r\n    renderResult: function () { },\r\n\r\n    /*\r\n    *   Refresh the result panel, making it to query data with current criteria\r\n    */\r\n    refreshResults: function () { },\r\n\r\n    /*\r\n    *   Function to parse the dataType\r\n    */\r\n    parseAdditionalProperties: function (dataType) {\r\n\r\n        // Number\r\n        if (dataType == 1 || dataType == 2 || dataType == 3 ||\r\n            dataType == 4 || dataType == 6 || dataType == 7 ||\r\n            dataType == 10 || dataType == 11 ) {\r\n\r\n            return { type: \"columnNumber\" };\r\n        }\r\n\r\n\r\n        // Oracle Number\r\n        if (dataType == 29) {\r\n\r\n            return { type: \"columnNumberScientificNotation\" };\r\n        }\r\n\r\n        // Money\r\n        if (dataType == 8) {\r\n\r\n            return { type: \"columnMoney\" };\r\n        }\r\n\r\n        // Date\r\n        if (dataType == 12 || dataType == 13) {\r\n\r\n            return { type: \"columnDate\" };\r\n        }\r\n\r\n        // Boolean\r\n        if (dataType == 5) {\r\n\r\n            return { type: \"columnBoolean\" };\r\n        }\r\n\r\n        // Text\r\n        return { type: \"columnText\" };\r\n    },\r\n\r\n    /*\r\n    *\r\n    */\r\n    onSearchFinished: function () {\r\n        // Empty function, overrided for Tablet version for now\r\n    }\r\n\r\n\r\n});\r\n\r\n","/*\r\n *   Name: BizAgi Tab Container Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define a tab container class for all devices\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.tab\", {}, {\r\n\r\n    /*\r\n     *   Constructor\r\n     */\r\n    initializeData: function(params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Default properties\r\n        var properties = self.properties;\r\n        properties.helpText = properties.helpText || properties.displayName;\r\n\r\n        // Extend css property\r\n        properties.cssclass = properties.cssclass || \"\";\r\n    },\r\n\r\n    /*\r\n     *   Render the container layout\r\n     */\r\n    renderContainer: function() {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var tabItems = $.map(self.children, function(child, key) {\r\n            child.properties.counter = key;\r\n            child.properties.tooltip =  child.properties.tooltip || child.properties.displayName || \"\";\r\n            return child.properties;\r\n        });\r\n        var template = self.renderFactory.getTemplate(\"tab\");\r\n        var mode = self.getMode();\r\n\r\n        // Render the tab\r\n        var html = $.fasttmpl(template, {\r\n            id: properties.id,\r\n            tabs: tabItems,\r\n            mode: mode,\r\n            isDesign: (self.getMode() !== \"execution\"),\r\n            editable: properties.editable,\r\n            tabOrientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            cssclass: properties.cssclass\r\n        });\r\n\r\n        // Get active container based on focus\r\n        var activeTab = self.activeTab = self.getActiveTab();\r\n\r\n        // Render children\r\n        for (var i = 0, length = self.children.length; i < length; i++) {\r\n            // Load on demand other tabs besides the first one\r\n            self.children[i].properties.loadOnDemand = (i != activeTab);\r\n        }\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     *   Return the active tab containing the focus, or the first tab\r\n     */\r\n    getActiveTab: function() {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var formParams = this.getFormContainer().getParams();\r\n        var mode = self.getMode();\r\n\r\n        if (mode === \"execution\") {\r\n            if (!formParams.isRefresh && properties.activeTab) {\r\n                self.getFormContainer().setFocusedElement(properties.activeTab);\r\n            }\r\n        }\r\n\r\n        var selectedTabs = formParams && formParams.selectedTabs ? formParams.selectedTabs : {};\r\n\r\n        // Fetch from selected tabs collection\r\n        if (selectedTabs[self.properties.id] >= 0) {\r\n            return selectedTabs[self.properties.id];\r\n        }\r\n\r\n        // Check for focused elements\r\n        for (var i = 0, length = self.children.length; i < length; i++) {\r\n            // Load on demand other tabs besides the first one\r\n            if (self.children[i].containsFocusedElement()) return i;\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    /**\r\n     * Update position of tab\r\n     * @param index\r\n     */\r\n    setActiveTab: function (index) {\r\n        var self = this;\r\n\r\n        self.triggerHandler(\"selected\", { index: index, tab: self.children[index] });\r\n\r\n        if (self.children[index]) {\r\n            var form = self.getFormContainer();\r\n\r\n            self.children[index].activate();\r\n            self.activeTab = index;\r\n\r\n            var selectedTab = {};\r\n            selectedTab[self.children[index].parent.properties.id] = index;\r\n            form.setParam(\"selectedTabs\", selectedTab);\r\n        }\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tab Item Container Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a tab item class for all devices\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.tabItem\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"tabItem\");\r\n\r\n        // Render the tabItem\r\n        var html = $.fasttmpl(template, {\r\n            id: properties.id,\r\n            uniqueId: properties.uniqueId,\r\n            counter: properties.counter,\r\n            isDesign: (self.getMode() !== \"execution\")\r\n        });\r\n\r\n        // Render content\r\n        html = self.renderTabContent(html);\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    * Renders the tab content\r\n    */\r\n    renderTabContent: function (html) {\r\n        // Render children\r\n        return this.replaceChildrenHtml(html, this.renderChildrenHtml());\r\n    },\r\n\r\n    /*\r\n    *   Fires when the tab is selected \r\n    */\r\n    activate: function () {\r\n        this.active = true;\r\n    },\r\n\r\n    /*  \r\n    *   Return the current focuses container\r\n    */\r\n    getFocus: function () {\r\n        var self = this;\r\n        var focus = self._super();\r\n        if (bizagi.util.isEmpty(focus) && self.active) {\r\n            focus = self.properties.id;\r\n        }\r\n\r\n        return focus;\r\n    },\r\n\r\n    /*\r\n    *   Return true if this tab contains the active focused element\r\n    */\r\n    containsFocusedElement: function () {\r\n        var self = this;\r\n        var focus = self.getFormContainer().getFocusedElement();\r\n\r\n        if (focus) {\r\n\r\n            // Locate element\r\n            if (focus.xpath) {\r\n                // Search by xpath and id\r\n                var elements = self.getFormContainer().getRenders(focus.xpath);\r\n                var element;\r\n\r\n                $.each(elements, function (i, item) {\r\n                    // Just select editable control\r\n                    if (item.properties.id == focus.id && item.properties.editable) {\r\n                        element = item;\r\n                    }\r\n                });\r\n            } else {\r\n                // Search just using id\r\n                var element = self.getFormContainer().getContainer(focus) || self.getFormContainer().getRenderById(focus);\r\n            }\r\n\r\n            // Search element parent\r\n            if (element) {\r\n                while (element.parent) {\r\n                    if (element.properties.id == self.properties.id || element.parent.properties.id == self.properties.id) return true;\r\n                    element = element.parent;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n});\r\n\r\n","/*\r\n*   Name: BizAgi Nested Form Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a nested form container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.nestedForm\", {}, {\r\n\r\n});","/**\r\n *   Name: Bizagi Render Combo Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for combo renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.combo\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        properties.hasLocalData = properties.data || false;\r\n        // TODO: Review additional value in radio control\r\n        properties.value = properties.value && properties.value.length > 0 ? properties.value[0] : (properties.defaultValue && properties.defaultValue.length > 0 ? properties.defaultValue[0] : null);\r\n\r\n        if (typeof (properties.enableTyping) === \"undefined\") properties.enableTyping = true;\r\n        if (properties.value && properties.value.id === undefined) properties.value = null;\r\n        this.value = properties.value;\r\n\r\n        // Add empty node if configured\r\n        if (properties.hasLocalData) {\r\n            properties.data = this.complementData(properties.data);\r\n        }\r\n\r\n        // This line is to set a flag to fetch the data when rendering, or on demand, by default is false, overriding it on desktop implementation\r\n        properties.loadOnDemand = false;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var params = {};\r\n        var renderType = bizagi.util.normalizeType(self.properties.type);\r\n\r\n        if (self.isDependant && self.properties && /^cascadingcombo$/i.test(renderType) && self.getParentCombo) {\r\n            var valueControl = self.getParentCombo().getValue();\r\n            if (valueControl && valueControl.id) {\r\n                params[self.Class.BA_ACTION_PARAMETER_PREFIX + \"parent\"] = valueControl.id;\r\n            }\r\n        }\r\n\r\n        return self.renderCombo(params);\r\n    },\r\n\r\n    /*\r\n    *   Renders the combo\r\n    */\r\n    renderCombo: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (properties.loadOnDemand) {\r\n            // Render the combo without data\r\n            var html = self.renderComboTemplate();\r\n            return html;\r\n        } else {\r\n\r\n            // Set data promise \r\n            var defer = new $.Deferred();\r\n            var dataPromise = self.getData(params);\r\n\r\n            // Attach callback \r\n            $.when(dataPromise).done(function (data) {\r\n                // Render combo\r\n                var html = self.renderComboTemplate(data);\r\n                self.properties.data = data;\r\n                defer.resolve(html);\r\n\r\n            }).fail(function (data) {\r\n                var html = self.renderComboTemplate({});\r\n                defer.resolve(html);\r\n            });\r\n\r\n            // Returns a promise so we can hold post-render method until this is done\r\n            return defer.promise();\r\n        }\r\n    },\r\n\r\n    renderComboTemplate: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(self.getTemplateName());\r\n        var emptyValue = bizagi.override.emptyLabelForCombo || self.getResource(\"render-combo-empty-selection\");\r\n        var value = properties.value ? \"\" : emptyValue;\r\n        data = data || self.properties.data || {};\r\n\r\n        if (self.properties.type === \"columnCombo\" && value === \"\" && typeof properties.value === \"object\" && properties.value.id === \"\" && (properties.value.value === \"\" || properties.value.value === self.getResource(\"render-combo-empty-value\"))) {\r\n            value = self.getResource(\"render-combo-empty-selection\");\r\n        }\r\n\r\n        var html = $.fasttmpl(template, $.extend(self.getTemplateParams(), {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            unique: bizagi.util.randomNumber(10000, 1000000),\r\n            idPageCache: properties.idPageCache,\r\n            items: data,\r\n            align: properties.valueAlign,\r\n            value: value,\r\n            editable: properties.editable\r\n        }));\r\n\r\n\r\n        return html;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed in read-only mode\r\n    */\r\n    postRenderReadOnly: function () {\r\n        var self = this;\r\n        self._super();\r\n        var item = self.getValue();\r\n        var control = self.getControl();\r\n\r\n        if (self.control && self.control.parent()) {\r\n            self.control.parent().addClass(\"ui-bizagi-noneditable-\" + self.properties.displayType);\r\n        }\r\n        if (item) {\r\n\r\n            if (item.value != null && typeof (item.value) === \"boolean\") {\r\n                if (bizagi.util.parseBoolean(item.value) === true) {\r\n                    item.value = this.getResource(\"render-boolean-yes\");\r\n\r\n                } else if (bizagi.util.parseBoolean(item.value) == false) {\r\n                    item.value = this.getResource(\"render-boolean-no\");\r\n                }\r\n            }\r\n\r\n            // Returns the cached value from the properties to avoid server side fetching\r\n            if (self.getResource(\"render-combo-empty-value\") === item.value || self.getResource(\"render-combo-empty-selection\") === item.value) {\r\n                control.text(\"\");\r\n            } else {\r\n                control.html(\"<label class='readonly-control'>\" + self.formatItem(item.value) + \"</label>\");\r\n            }\r\n        } else {\r\n            // Render empty \r\n            control.text(\"\");\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Gets the template used by the combo render\r\n    *   can be overriden in subclasses to reuse logic and just change the template\r\n    */\r\n    getTemplateName: function () {\r\n        return \"combo\";\r\n    },\r\n\r\n    /*\r\n    *   Determines if we need to show the empty node or not\r\n    *   Can be overriden to change behaviour\r\n    */\r\n    showEmpty: function () {\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Determines if we need to show the current data regardless if it belongs to data or not\r\n    *   Can be overriden to change behaviour\r\n    */\r\n    showCurrentData: function () {\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Fetch the data into a deferred\r\n    */\r\n    getData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n        var mode = self.getMode();\r\n\r\n        // Just execute ajax calls when rendering in execution mode\r\n        if (mode !== \"execution\") return self.getDummyData();\r\n\r\n        if (properties.hasLocalData) {\r\n\r\n            // Resolve with local data    \r\n            defer.resolve(properties.data);\r\n\r\n        } else {\r\n            var renderType = bizagi.util.normalizeType(properties.type);\r\n\r\n            // Check if the data has been cached\r\n            if (properties.remoteDataLoaded && !(/^cascadingcombo$/i.test(renderType))) {\r\n                defer.resolve(properties.data);\r\n            } else {\r\n                // Go to server\r\n                self.dataService.multiaction().getData({\r\n                    url: properties.dataUrl,\r\n                    xpath: properties.xpath,\r\n                    idRender: properties.id,\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache,\r\n                    extra: params,\r\n                    contexttype: self.properties.contexttype || null\r\n                }).done(function (data) {\r\n\r\n                    // Resolve the data\r\n                    if (!properties.recalculate) {\r\n                        properties.remoteDataLoaded = true;\r\n                    }\r\n                    properties.data = self.complementData(data);\r\n                    defer.resolve(properties.data);\r\n\r\n                }).fail(function (data) {\r\n\r\n                    if (data.type === \"not-processed\")\r\n                        return;\r\n\r\n                    // Show error from server\r\n                    var form = self.getFormContainer();\r\n                    var msgObj = self.properties.displayName + \": \";\r\n\r\n                    if (typeof data === \"string\") {\r\n                        var auxMsg = JSON && JSON.parse(data) || $.parseJSON(data);\r\n                    } else {\r\n                        var auxMsg = data;\r\n                    }\r\n\r\n                    msgObj += auxMsg.message;\r\n\r\n                    form.addValidationMessage(msgObj);\r\n\r\n                    defer.reject(data);\r\n                });\r\n            }\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Creates a set of dummy data in order to display it when rendering in design or layout mode\r\n    */\r\n    getDummyData: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (properties.data) {\r\n            return properties.data;\r\n\r\n        } else {\r\n            properties.data = [];\r\n            properties.data = self.complementData(properties.data);\r\n\r\n            // Add another data\r\n            properties.data.push({id: \"\", value: \"Item 1\"});\r\n            properties.data.push({id: \"\", value: \"Item 2\"});\r\n\r\n            return properties.data;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Resets the data in order to fetch it again when needed\r\n    */\r\n    resetData: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        properties.hasLocalData = false;\r\n        properties.data = null;\r\n        properties.remoteDataLoaded = false;\r\n    },\r\n\r\n    /* \r\n    *   Gets the display value of the render\r\n    */\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n\r\n        if (self.combo && self.combo.length > 0) {\r\n            // When there is a combo painted, we fetch the selected value from it\r\n            return self.getSelectedValue();\r\n        } else {\r\n            var displayValue = \"\";\r\n            var item = self.getValue();\r\n\r\n            if (item) {\r\n                // Check on cached propert from server first if the key exists\r\n                displayValue = self.formatItem(item.value);\r\n            }\r\n\r\n            return displayValue;\r\n        }\r\n    },\r\n\r\n\r\n    /*\r\n    *   Returns the selected value in the template\r\n    */\r\n    getSelectedValue: function () {\r\n    },\r\n\r\n    /*\r\n    *   Adds custom parameters to process the template\r\n    */\r\n    getTemplateParams: function () {\r\n        return {};\r\n    },\r\n\r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n\r\n        if (value !== undefined && value !== null) {\r\n            if ($.isArray(value)) {\r\n\r\n                for (var i = 0, length = value.length; i < length; i++) {\r\n                    if (value[i] != null && typeof (value[i]) === \"boolean\") {\r\n                        if (bizagi.util.parseBoolean(value[i]) === true) {\r\n                            value[i] = this.getResource(\"render-boolean-yes\");\r\n                        } else if (bizagi.util.parseBoolean(value[i]) === false) {\r\n                            value[i] = this.getResource(\"render-boolean-no\");\r\n                        }\r\n                    }\r\n                }\r\n                return value.join(\" - \");\r\n            } else {\r\n                return value;\r\n            }\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Add the render value\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            // Remove empty validation for value for combos        \r\n            if (!bizagi.util.isEmpty(xpath) && value !== null && typeof (value) !== \"undefined\") {\r\n                // Add a validation because sometimes value contains an empty not null object\r\n                if (typeof (value) === \"object\" && (value.id === undefined || value.id === \"\")) {\r\n                    renderValues[properties.xpath] = \"\";\r\n                } else {\r\n                    // Add the value to the server\r\n                    renderValues[properties.xpath] = typeof (value.id) !== \"undefined\" ? value.id : \"\";\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    controlValueIsChanged: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var currentValue = self.getValue();\r\n        var originalValue = properties.originalValue;\r\n        var defaultValue = properties.defaultValue;\r\n\r\n        var result = true;\r\n\r\n        if ($.forceCollectData) {\r\n            return result;\r\n        }\r\n\r\n        currentValue = currentValue && currentValue.length !== undefined ? currentValue[0] : currentValue;\r\n        originalValue = originalValue && originalValue.length !== undefined ? originalValue[0] : originalValue;\r\n        defaultValue = defaultValue && defaultValue.length !== undefined ? defaultValue[0] : defaultValue;\r\n\r\n        currentValue = currentValue && currentValue.id !== undefined ? currentValue.id : currentValue;\r\n        originalValue = originalValue && originalValue.id !== undefined ? originalValue.id : originalValue;\r\n        defaultValue = defaultValue && defaultValue.id !== undefined ? defaultValue.id : defaultValue;\r\n\r\n        if (defaultValue !== undefined) {\r\n            if (defaultValue != originalValue || defaultValue != currentValue) {\r\n                result = true;\r\n            } else {\r\n                result = false;\r\n            }\r\n        } else {\r\n            result = currentValue != originalValue ? true : false;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    * Parses additional values info in order to format them correctly\r\n    */\r\n    parseAdditionalValues: function (data) {\r\n        var self = this;\r\n\r\n        return $.map(data, function (item) {\r\n            var value = item.value ? self.formatItem(item.value) : item;\r\n            var newItem = {id: item.id, value: value};\r\n\r\n            if (item.hidden) newItem.hidden = true;\r\n            return item;\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Complement data from server before control implementation\r\n    */\r\n    complementData: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var bCurrentDataFound = false;\r\n        $.each(data, function (i, item) {\r\n\r\n            if (item.value !== undefined && item.value !== null) {\r\n                item.value = self.formatItem(item.value);\r\n                if (properties.value) {\r\n                    if (item.id == properties.value.id) {\r\n                        bCurrentDataFound = true;\r\n                    }\r\n                }\r\n            } else {\r\n                item.value = \"\";\r\n            }\r\n        });\r\n\r\n        // Add empty node if configured\r\n        if (self.showEmpty()) {\r\n            var emptyFound = false;\r\n            for (var i = 0, length = data.length; i < length; i++) {\r\n                if (data[i].id === \"\") {\r\n                    emptyFound = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!emptyFound) {\r\n                var dataValue = bizagi.override.emptyLabelForCombo || bizagi.localization.getResource(\"render-combo-empty-value\")\r\n                data.unshift({id: \"\", value: dataValue});\r\n            }\r\n        }\r\n\r\n        if (properties.value) {\r\n            if (!bCurrentDataFound && self.showCurrentData()) {\r\n                data.unshift({id: properties.value.id, value: properties.value.value, hidden: true});\r\n            }\r\n        }\r\n\r\n        // Add additional value\r\n        return self.parseAdditionalValues(data);\r\n    },\r\n\r\n    /*\r\n    *   Check if a render has no value for required validation\r\n    */\r\n    hasValue: function () {\r\n        var self = this;\r\n        var currentValue = self.getValue();\r\n\r\n        if (bizagi.util.isEmpty(currentValue)) return false;\r\n        if (Object.prototype.toString.apply(currentValue) === \"[object Object]\" && (bizagi.util.isEmpty(currentValue.id) || currentValue.id == 0)) return false;\r\n\r\n        // Else\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    * Cleans current data\r\n    */\r\n    cleanData: function () {\r\n        var self = this;\r\n        var value = {id: \"\", label: \"\"};\r\n\r\n        self.setDisplayValue(value);\r\n        self.setValue(value, false);\r\n    },\r\n\r\n    beforeToRefresh: function () {\r\n        this.column && !this.column.comboData && this.getData();\r\n    },\r\n\r\n    isExtraItem: function () {\r\n        var self = this;\r\n        var data = self.value || {};\r\n        var value = data.value || \"\";\r\n\r\n        return value === \"\" || value === self.getResource(\"render-combo-empty-selection\") || value === self.getResource(\"render-combo-empty-value\");\r\n    },\r\n\r\n    escapeValue: function (value) {\r\n        if (bizagi.util.isString(value)) {\r\n            var valueToReturn = value.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\r\n            return valueToReturn;\r\n        } else {\r\n            return value;\r\n        }\r\n    },\r\n\r\n    /**\r\n     *  Maps the value, when this one comes from actions\r\n     * @param value\r\n     * @returns {*}\r\n     */\r\n    mapValue: function (value) {\r\n        if (value && value.fromAction) {\r\n            return {\r\n                id: value.value,\r\n                value: value.label,\r\n                label: value.label\r\n            }\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    validateValue: function (value) {\r\n        if ((value.id != undefined) && ((typeof value.id === \"number\" && value.id !== null) || (typeof value.id === \"string\" && value.id.length > 0))) {\r\n            if (value.value !== null && typeof value.value === \"boolean\") {\r\n                translated = true;\r\n                if (bizagi.util.parseBoolean(value.value) === true) {\r\n                    value.value = bizagi.localization.getResource(\"render-boolean-yes\");\r\n                } else if (bizagi.util.parseBoolean(value.value) === false) {\r\n                    value.value = bizagi.localization.getResource(\"render-boolean-no\");\r\n                }\r\n            } else if (value.value != null && typeof value.value === \"object\") {\r\n                for (var i = 0, length = value.value.length; i < length; i++) {\r\n                    if (value.value[i] != null && typeof (value.value[i]) === \"boolean\") {\r\n                        if (bizagi.util.parseBoolean(value.value[i]) === true) {\r\n                            value.value[i] = bizagi.localization.getResource(\"render-boolean-yes\");\r\n                        } else if (bizagi.util.parseBoolean(value.value[i]) === false) {\r\n                            value.value[i] = bizagi.localization.getResource(\"render-boolean-no\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    /**\r\n     * Finds an element in the combo data values by id\r\n     * @param {int} id\r\n     * @returns {Object}\r\n     */\r\n    findDataValueById: function (id) {\r\n        return (this.properties.data || []).find(function (e) {\r\n            return e.id == id;\r\n        });\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Render Check Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for check renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.check\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.value = typeof (properties.value) != \"undefined\" ? bizagi.util.parseBoolean(properties.value) : null;\r\n\r\n        properties.showLetters = (bizagi.override && bizagi.override.enableCheck === true) && !properties.editable;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"check\");\r\n        var randomId = bizagi.util.randomNumber(100, 10000000);\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            id: randomId,\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     * Gets the display value of the render\r\n     */\r\n    getDisplayValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.parseBoolean(value) === true) {\r\n            return this.getResource(\"render-boolean-yes\");\r\n        } else if (bizagi.util.parseBoolean(value) === false) {\r\n            return this.getResource(\"render-boolean-no\");\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if a render has no value for required validation\r\n     */\r\n    hasValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.isEmpty(value)) return false;\r\n\r\n        var booleanValue = bizagi.util.parseBoolean(value);\r\n\r\n        return !(booleanValue === false && this.properties.required);\r\n    }\r\n\r\n});","/*\r\n*   Name: Bizagi Render Number Class\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define basic stuff for numbers\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.number\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var format = this.getResource(\"numericFormat\");\r\n\r\n        properties.allowDecimals = (typeof (properties.allowDecimals) !== \"undefined\") ? bizagi.util.parseBoolean(properties.allowDecimals) : this.getDefaultAllowDecimals(properties.dataType);\r\n        properties.numDecimals = properties.allowDecimals ? (properties.numDecimals ? properties.numDecimals : (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalDigits : 2)) : 0;\r\n        properties.symbol = '';\r\n        properties.positiveFormat = format.positiveFormat;\r\n        properties.negativeFormat = format.negativeFormat;\r\n        properties.decimalSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator : format.decimalSymbol;\r\n        properties.digitGroupSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.groupSeparator : format.digitGroupSymbol;\r\n        properties.groupDigits = this.setGroupDigits();\r\n        properties.colorize = properties.colorizeOnNegative || false;\r\n        properties.dataTypeMinValue = this.calculateMinValue(properties.dataType);\r\n        properties.dataTypeMaxValue = this.calculateMaxValue(properties.dataType);\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"number\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            editable: self.properties.editable,\r\n            value: bizagi.isMobile() ? self.getDisplayValue() : \"\", // Only apply to mobile because in the template value is required (Bug: 11624)\r\n            type: bizagi.util.isAndroidDevice() ? \"tel\" : \"text\", // Change type control for android device\r\n            isDesign: self.getMode() !== \"execution\"\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n\r\n        self._super();\r\n\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n\r\n        self.numericInput = control.find(\"input\");\r\n\r\n        // Add numeric plugin to avoid invalid keystrokes\r\n        self.numericInput.numeric(self.properties.decimalSymbol);\r\n\r\n        // Attach event for retype double\r\n        if (properties.retype === \"double\") {\r\n            self.attachRetypeDouble();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        // Attach Format Currency Plugin to format the input\r\n        this.attachFormatCurrency();\r\n    },\r\n\r\n    /**\r\n     * Removes Validation Messages\r\n     */\r\n    removeValidations: function () {\r\n        var form = this.getFormContainer().parent || this.getFormContainer();\r\n\r\n        form.clearValidationMessages();\r\n    },\r\n\r\n    /**\r\n     * Function virtual implements on children (desktop,smartphone...).\r\n     * @returns {}\r\n     */\r\n    attachRetypeDouble: function () {\r\n    },\r\n\r\n    /**\r\n     * Adds the format currency plugin\r\n     * @returns {}\r\n     */\r\n    attachFormatCurrency: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message = bizagi.localization.getResource(\"render-number-retype-fail\");\r\n        self.isValidRender = self.isValidRender || true;\r\n\r\n        // Extend formatCurrency language\r\n        if ($.formatCurrency.regions[bizagi.language] == null)\r\n            $.formatCurrency.regions[bizagi.language] = this.getResource(\"numericFormat\");\r\n\r\n        // Attach events\r\n        self.numericInput.blur(function () {\r\n            if (typeof (self.getFormContainer().validationController) == \"undefined\") self.getFormContainer().validationController = new bizagi.command.controllers.validation(self.getFormContainer(), self.validations);\r\n            var validationController = self.getFormContainer().validationController || self.getFormContainer().parent.validationController;\r\n            var decimalSeparator = \".\";\r\n            var digitGroupSeparator = \",\";\r\n            if (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) == \"undefined\") {\r\n                decimalSeparator = self.getResource(\"numericFormat\").decimalSymbol || \".\";\r\n                digitGroupSeparator = self.getResource(\"numericFormat\").digitGroupSymbol || \",\";\r\n            }\r\n            else {\r\n                decimalSeparator = BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator;\r\n                digitGroupSeparator = BIZAGI_DEFAULT_CURRENCY_INFO.groupSeparator;\r\n            }\r\n\r\n            var minValue = self.getMinValue();\r\n            var maxValue = self.getMaxValue();\r\n\r\n            if(properties.percentage)self.numericInput.val(self.numericInput.val().replace(\"%\", \"\"));\r\n            var inputValue = self.numericInput.val();\r\n            inputValue = (decimalSeparator == \",\") ? inputValue.replace(/\\,0+$/, '') : inputValue.replace(/\\.0+$/, '');\r\n            inputValue = inputValue.replace(properties.symbol, \"\");\r\n            //Replace all the ocurrences of the digitGroupSeparator\r\n            inputValue = bizagi.util.replaceAll(inputValue, digitGroupSeparator, \"\");\r\n            if (inputValue.toString().indexOf(decimalSeparator) != -1) {\r\n                if (decimalSeparator == \",\") inputValue = inputValue.replace(/([0-9]+(\\,[0-9]+[1-9])?)(\\,?0+$)/, '$1');\r\n                if (decimalSeparator == \".\") inputValue = inputValue.replace(/([0-9]+(\\.[0-9]+[1-9])?)(\\.?0+$)/, '$1');\r\n            }\r\n\r\n            if (inputValue != undefined && inputValue.length > 0) self.numericInput.val(inputValue);\r\n\r\n            if (/(.+)-$/.test(inputValue)) {\r\n                inputValue = inputValue.replace(/(.+)-$/, '-$1');\r\n                self.numericInput.val(inputValue);\r\n            }\r\n\r\n            var inputLength = inputValue.replace(/[^0-9]+/g, \"\").length;\r\n            var xPath = self.properties.xpath;\r\n            var oldVal = self.numericInput.val();\r\n\r\n\r\n            if ((self.isInvalidFormat != null && self.isInvalidFormat == true)\r\n                || (inputValue != \"\" && [\"$\", \"£\", \"€\", \"¥\", properties.symbol].indexOf(inputValue) != -1)) {\r\n                self.setValue(\"\");\r\n                self.getControl().find(\"input\").val(\"\");\r\n                self.numericInput.val(\"\");\r\n                return;\r\n            }\r\n\r\n            if (bizagi.util.trim(inputValue) == \"\") {\r\n                self.setValue(\"\");\r\n                return;\r\n            }\r\n\r\n            //The \",\" is changed to \".\" For the correct operation of \"parseFloat ()\"\r\n            var tempValue = parseFloat(inputValue.replace(\",\", \".\"));\r\n            if (isNaN(tempValue)) {\r\n                tempValue = self.numericInput.asNumber();\r\n            }\r\n\r\n            if (minValue !== undefined && minValue != null && tempValue < minValue) {\r\n                message = bizagi.localization.getResource(\"render-numeric-minimum-validation\")\r\n                    .replaceAll(\"#label#\", properties.displayName + \" (\" + oldVal + \")\")\r\n                    .replaceAll(\"#minValue#\", minValue.toString());\r\n            }\r\n            else if (maxValue !== undefined && maxValue !== null && tempValue > maxValue) {\r\n                message = bizagi.localization.getResource(\"render-numeric-maximum-validation\")\r\n                    .replaceAll(\"#label#\", properties.displayName + \" (\" + oldVal + \")\")\r\n                    .replaceAll(\"#maxValue#\", maxValue.toString());\r\n            } else\r\n                message = message + \" \" + oldVal + \"\";\r\n\r\n\r\n            // Do datatype validations\r\n            if (\r\n                (minValue !== undefined && minValue !== null && tempValue < minValue)\r\n                || (maxValue !== undefined && maxValue !== null && tempValue > maxValue)\r\n                || (self.properties.dataType == 10 && inputLength > 15)\r\n                || (self.properties.dataType == 1 && inputLength > 19)\r\n                || (self.properties.dataType == 11 && inputLength > 7)\r\n                || (self.properties.dataType == 11 && inputLength > 7)\r\n                || (oldVal.match(/[^$£€¥,-.()\\d]/))\r\n            ) {\r\n                if (typeof validationController != \"undefined\" && validationController != null) {\r\n                    self.removeValidations();\r\n\r\n                    var messageToShow = message;\r\n                    if(messageToShow.indexOf(oldVal) === -1){\r\n                        messageToShow = message + \" \" + oldVal + \"\";\r\n                    }\r\n\r\n                    validationController.showValidationMessage(messageToShow, xPath);\r\n                    self.isValidRender = false;\r\n                    self.isValidRenderMessage = messageToShow;\r\n                }\r\n                message = message.replace(oldVal, \"\");\r\n                return;\r\n            }\r\n            else {\r\n                self.isValidRender = true;\r\n                self.isValidRenderMessage = \"\";\r\n            }\r\n\r\n            // Fix decimals specially when it starts with 0 (0000234 -> 234, 00000 -> 0)\r\n            if (this.value.toString().length > 0 && !properties.allowDecimals && !properties.groupDigits) {\r\n                this.value = this.value.toString().replace(/^0+/, '');\r\n                if (properties.symbol.length > 0) this.value = this.value.toString().replace(properties.symbol + \"0\", properties.symbol);\r\n                this.value = this.value.toString().replace(/^0+/, '');\r\n                if (this.value.replaceAll('0', '').length == 0)\r\n                    this.value = properties.symbol + \"0\";\r\n                else if (this.value.toString() == parseInt(this.value)) this.value = properties.symbol + this.value;\r\n            } else {\r\n                //Fix type money when number start with 0 (0000234 -> 234, 00000 -> 0)\r\n                if(self.properties.type === \"money\" || self.properties.type === \"number\" || self.properties.type === \"columnMoney\" || self.properties.type === \"columnNumber\"){\r\n                    this.value = this.value.toString().replace(/^0+/, '');\r\n                    if(this.value === \"\"){\r\n                        this.value = 0;\r\n                    }\r\n                }\r\n            }\r\n            self.executeFormatCurrencyPlugin();\r\n\r\n            // Updates internal value\r\n            self.setValue(self.numericInput.asNumber({\r\n                symbol: properties.symbol,\r\n                positiveFormat: properties.positiveFormat,\r\n                negativeFormat: properties.negativeFormat,\r\n                decimalSymbol: properties.decimalSymbol,\r\n                digitGroupSymbol: properties.digitGroupSymbol,\r\n                groupDigits: properties.groupDigits\r\n            }));\r\n\r\n            if (properties.percentage) {\r\n                if (self.numericInput && self.numericInput.val().indexOf(\"%\") == -1)\r\n                    self.numericInput.val(self.numericInput.val() + '%');\r\n            }\r\n            message = message.replace(oldVal, \"\");\r\n        })\r\n\r\n        // Avoiding pasting invalid characters\r\n            .bind('paste', function (e) {\r\n                try {\r\n                    var tmpData = (bizagi.util.isIE() || bizagi.util.isIE11()) ? window.clipboardData.getData(\"text\") : e.originalEvent.clipboardData.getData(\"Text\");\r\n\r\n\r\n\r\n                    // Next lines checks if there is something different to numbers symbol, decimalSymbol and digitGroupSybol\r\n                    var totalVal = \"/[^0-9\";\r\n                    if (properties.decimalSymbol.length > 0) {\r\n                        totalVal += properties.decimalSymbol;\r\n                    }\r\n                    // Next lines only for currency type\r\n                    if (properties.dataType == 8) {\r\n                        if (properties.symbol.length > 0) {\r\n                            totalVal += properties.symbol;\r\n                        }\r\n                        if (properties.digitGroupSymbol.length > 0) {\r\n                            totalVal += properties.digitGroupSymbol;\r\n                        }\r\n                    }\r\n                    totalVal += \"\\\\-\\\\s]/gi\";\r\n                    try {\r\n                        if (tmpData.replace(eval(totalVal), '').length != tmpData.length)\r\n                            e.preventDefault();\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    bizagi.log(\"Error to pasting content\");\r\n                    self.isInvalidFormat = true;\r\n                }\r\n            })\r\n            // Now we implement keydown instead of keyup in order to include preventDefault\r\n            .keydown(function (e) {\r\n                self.previousValue = this.value;\r\n                e = (window.event && window.event.preventDefault) ? window.event : e;\r\n                var keyUnicode = e.charCode || e.keyCode;\r\n                // Validation for currency info\r\n                if (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) != \"undefined\")\r\n                    if (BIZAGI_DEFAULT_CURRENCY_INFO.decimalDigits == 0) properties.allowDecimals = false;\r\n                if (properties.dataType < 5 || (properties.dataType == 8 && properties.allowDecimals == false))\r\n                    if (keyUnicode == 188 || keyUnicode == 190 || keyUnicode == 110)\r\n                        e.preventDefault();\r\n                if (this.value)\r\n                    if (e !== undefined && this.value.length > 0 && (properties.dataType == 8 || properties.dataType == 10)) {\r\n                        // Just numbers\r\n                        if (keyUnicode > 47 && keyUnicode < 58) {\r\n                            if (self.formatTimeout) {\r\n                                clearTimeout(self.formatTimeout);\r\n                            }\r\n\r\n                            var floatPart = this.value + \"\";\r\n                            //var  floatPart = stringPart.replaceAll(properties.digitGroupSymbol, \"\").replaceAll(properties.symbol,\"\").trim().replaceAll(properties.decimalSymbol,\".\");\r\n                            if (properties.digitGroupSymbol && properties.digitGroupSymbol.length > 0) {\r\n                                floatPart = floatPart.replaceAll(properties.digitGroupSymbol, \"\");\r\n                            }\r\n                            if (properties.symbol.length > 0) {\r\n                                floatPart = floatPart.replaceAll(properties.symbol, \"\");\r\n                            }\r\n\r\n                            floatPart = $.trim(floatPart);\r\n                            if (properties.decimalSymbol && properties.decimalSymbol.length > 0) {\r\n                                floatPart = floatPart.replaceAll(properties.decimalSymbol, \".\");\r\n                            }\r\n                            // If increasing one digit (x10) will overtake the maxValue\r\n                            if (floatPart * 10 > properties.dataTypeMaxValue) {\r\n                                e.preventDefault();\r\n                            }\r\n                        }                  \r\n                        else if (keyUnicode == 109 || keyUnicode == 189) {\r\n                            if (this.selectionStart != 0 || this.selectionEnd != this.value.length) {\r\n                                var currentPosition = this.selectionEnd;\r\n                                this.value = properties.symbol + \"-\" + this.value.replace(properties.symbol, \"\");\r\n                                this.selectionStart = this.selectionEnd = currentPosition + 1;\r\n                            } else if (this.selectionStart == 0 && this.selectionEnd == this.value.length) {\r\n                                this.value = \"-\";\r\n                                this.selectionStart = this.selectionEnd = this.value.length;\r\n                            }\r\n                        }\r\n                    }                    \r\n            })\r\n\r\n            .keyup(function (e) {\r\n                e = window.event || e;\r\n                var keyUnicode = e.charCode || e.keyCode;\r\n                if (e !== undefined) {\r\n                    switch (keyUnicode) {\r\n                        case 16:\r\n                            break; // Shift\r\n                        case 17:\r\n                            break; // Ctrl\r\n                        case 13:\r\n                            break; // Intro\r\n                        case 18:\r\n                            break; // Alt\r\n                        case 27:\r\n                            this.value = '';\r\n                            break; // Esc: clear entry\r\n                        case 35:\r\n                            break; // End\r\n                        case 36:\r\n                            break; // Home\r\n                        case 37:\r\n                            break; // cursor left\r\n                        case 38:\r\n                            break; // cursor up\r\n                        case 39:\r\n                            break; // cursor right\r\n                        case 40:\r\n                            break; // cursor down\r\n                        case 78:\r\n                            break; // N (Opera 9.63+ maps the \".\" from the number key section to the \"N\" key too!) (See: http://unixpapa.com/js/key.html search for \". Del\")\r\n                        case 110:\r\n                            break; // . number block (Opera 9.63+ maps the \".\" from the number block to the \"N\" key (78) !!!)\r\n                        case 188:\r\n                            break; // , comma\r\n                        case 190:\r\n                            break; // .\r\n                        default:\r\n                        {\r\n\r\n                        }\r\n                    }\r\n                }                \r\n            }).keypress(function (e) {\r\n            e = (window.event && window.event.preventDefault) ? window.event : e;\r\n            var keyUnicode = e.charCode || e.keyCode;\r\n            if (typeof (e) !== \"undefined\") {\r\n                if (keyUnicode == 35 || keyUnicode == 37 || keyUnicode == 39) {\r\n                    e.preventDefault();\r\n                } else if (properties.dataType != 8 && keyUnicode == 36) {\r\n                    e.preventDefault();\r\n                }\r\n\r\n                // When no decimals are permited\r\n                var character = String.fromCharCode(keyUnicode);\r\n                if (properties.allowDecimals === false && properties.numDecimals === 0 && character === properties.decimalSymbol)\r\n                    e.preventDefault();\r\n            }\r\n        });\r\n\r\n    },\r\n\r\n    executeFormatCurrencyPlugin: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (self.numericInput) {\r\n            self.numericInput.formatCurrency({\r\n                symbol: properties.symbol,\r\n                positiveFormat: properties.positiveFormat,\r\n                negativeFormat: properties.negativeFormat,\r\n                decimalSymbol: properties.decimalSymbol,\r\n                digitGroupSymbol: properties.digitGroupSymbol,\r\n                groupDigits: properties.groupDigits,\r\n                roundToDecimalPlace: properties.numDecimals,\r\n                colorize: properties.colorize\r\n            });\r\n        }\r\n\r\n        if (properties.dataType !== 8 && bizagi.override.removeTrailingZeros === true) {\r\n            var value = self.numericInput.val();\r\n            var positive = true;\r\n\r\n            if (value.indexOf(\")\") !== -1) {\r\n                positive = false;\r\n                value = value.replace(\"(\", \"\").replace(\")\", \"\")\r\n            }\r\n\r\n            var regExp = new RegExp(\"(\" + properties.decimalSymbol + \"\\\\d*?[1-9])0+$\", \"g\");\r\n            value = value.replace(regExp, \"$1\")\r\n\r\n            regExp = new RegExp(\"\\\\\" + properties.decimalSymbol + \"0+$\", \"g\");\r\n            value = value.replace(regExp, \"\");\r\n            self.numericInput.val(value);\r\n\r\n            if (!positive) self.numericInput.val(\"(\" + value + \")\");\r\n        }\r\n\r\n        if (properties.percentage)\r\n            self.numericInput.val(self.numericInput.val() + '%');\r\n    },\r\n\r\n    /**\r\n     * Returns the display value of the render\r\n     * @returns {*}\r\n     */\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n        var value = self.getValue() !== undefined ? self.getValue() : $(\"input\", control).val() || \"\";\r\n\r\n        // Workaround to get the display value by the format currency plugin, because it requires a control\r\n        var label = $('<label/>').html(value);\r\n\r\n        label.formatCurrency({\r\n            symbol: properties.symbol,\r\n            positiveFormat: properties.positiveFormat,\r\n            negativeFormat: properties.negativeFormat,\r\n            decimalSymbol: properties.decimalSymbol,\r\n            digitGroupSymbol: properties.digitGroupSymbol,\r\n            groupDigits: properties.groupDigits,\r\n            roundToDecimalPlace: properties.numDecimals,\r\n            colorize: properties.colorize\r\n        });\r\n\r\n        if (properties.percentage)\r\n            label = $('<label/>').html(label.text() + '%');\r\n\r\n        // Removing unrequired zeros as requested by BA26331\r\n        if (!properties.editable && properties.dataType !== 8 && bizagi.override.removeTrailingZeros === true) {\r\n            value = label.text();\r\n            var positive = true;\r\n\r\n            if (value.toString().indexOf(\")\") !== -1) {\r\n                positive = false;\r\n                value = value.replace(\"(\", \"\").replace(\")\", \"\");\r\n            }\r\n\r\n            var re = new RegExp(\"(\" + properties.decimalSymbol + \"\\\\d*?[1-9])0+$\", \"g\");\r\n            value = value.replace(re, \"$1\");\r\n\r\n            re = new RegExp(\"\\\\\" + properties.decimalSymbol + \"0+$\", \"g\");\r\n            value = value.replace(re, \"\");\r\n\r\n            if (!positive) value = \"(\" + value + \")\";\r\n            return value;\r\n        }\r\n\r\n        return label.text();\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @returns {*}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        var message;\r\n        var minValue = self.getMinValue();\r\n        var maxValue = self.getMaxValue();\r\n\r\n        if (typeof (value) == \"string\" && value != \"\") {\r\n            value = Number(value);\r\n        }\r\n\r\n        // Check min value\r\n        if (self.hasValue()) {\r\n            if (!bizagi.util.isEmpty(minValue)) {\r\n                if (value < minValue) {\r\n                    message = this.getResource(\"render-numeric-minimum-validation\").replaceAll(\"#label#\", properties.displayName.toString() + \" (\" + value + \")\").replaceAll(\"#minValue#\", minValue.toString());\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n            // Check max value\r\n            if (!bizagi.util.isEmpty(maxValue)) {\r\n                if (value > maxValue) {\r\n                    message = this.getResource(\"render-numeric-maximum-validation\").replaceAll(\"#label#\", properties.displayName.toString() + \" (\" + value + \")\").replaceAll(\"#maxValue#\", maxValue.toString());\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (self.isValidRender === false && !(bValid && bizagi.util.isMobileDevice())) {\r\n            bValid = false;\r\n            var validMessage = self.isValidRenderMessage ? self.isValidRenderMessage : \"error\";\r\n            invalidElements.push({xpath: properties.xpath, message: validMessage});\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Get minimum value\r\n     * @returns {*}\r\n     */\r\n    getMinValue: function () {\r\n        var minValue = this.properties.minValue;\r\n\r\n        if (minValue !== undefined && minValue !== null)\r\n            return minValue;\r\n\r\n        return this.properties.dataTypeMinValue;\r\n    },\r\n\r\n    /**\r\n     * Get maximum value\r\n     * @returns {*}\r\n     */\r\n    getMaxValue: function () {\r\n        var maxValue = this.properties.maxValue;\r\n\r\n        if (maxValue !== undefined && maxValue !== null)\r\n            return maxValue;\r\n\r\n        return this.properties.dataTypeMaxValue;\r\n    },\r\n\r\n    /**\r\n     * Return the allow decimals default property based on the datatype\r\n     * @param dataType\r\n     * @returns {boolean}\r\n     */\r\n    getDefaultAllowDecimals: function (dataType) {\r\n        if (dataType) {\r\n            // Integer data types\r\n            if (dataType === 1 || dataType === 2 || dataType === 3 || dataType === 4 || dataType === 7) {\r\n                return false;\r\n            }\r\n            // Decimal and money data types\r\n            if (dataType === 6 || dataType === 8 || dataType === 10 || dataType === 11) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    /**\r\n     * Return the group digits default property based on the datatype\r\n     * @param dataType\r\n     * @returns {boolean}\r\n     */\r\n    getDefaultGroupDigits: function (dataType) {\r\n        if (dataType) {\r\n            // Integer data types\r\n            if (dataType === 1 || dataType === 2 || dataType === 3 || dataType === 4 || dataType === 7) {\r\n                return false;\r\n            }\r\n\r\n            // Decimal data types\r\n            if (dataType === 6 || dataType === 8 || dataType === 10 || dataType === 11) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Return the group digits default property based on digitGroupSymbol\r\n     * @returns {*}\r\n     */\r\n    setGroupDigits: function () {\r\n        var self = this;\r\n        if (typeof (self.properties.thousands) !== \"undefined\") {\r\n            if (self.properties.digitGroupSymbol) { //some cultures\r\n                return bizagi.util.parseBoolean(self.properties.thousands);\r\n            } else {\r\n                return false;\r\n            }\r\n        } else if (self.properties.digitGroupSymbol) { //some cultures\r\n            return this.getDefaultGroupDigits(self.properties.dataType);\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Calculate Minimum Value\r\n     * @param dataType\r\n     * @returns {*}\r\n     */\r\n    calculateMinValue: function (dataType) {\r\n        if (dataType === 8 || dataType === 10) {\r\n            return -922337203685477; // Money\r\n        }\r\n        if (dataType === 4) {\r\n            return 0; // tinyint\r\n        }\r\n        if (dataType === 3) {\r\n            return -32768; // smallint\r\n        }\r\n        if (dataType === 2) {\r\n            return -2147483648; // int\r\n        }\r\n        if (dataType === 1) {\r\n            return -999999999999999; // bigint\r\n        }\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * Calculate Maximum Value\r\n     * @param dataType\r\n     * @returns {*}\r\n     */\r\n    calculateMaxValue: function (dataType) {\r\n        if (dataType === 8 || dataType === 10) {\r\n            return 922337203685477; // Money\r\n        }\r\n        if (dataType === 4) {\r\n            return 255; // tinyint\r\n        }\r\n        if (dataType === 3) {\r\n            return 32767; // smallint\r\n        }\r\n        if (dataType === 2) {\r\n            return 2147483647; // int\r\n        }\r\n        if (dataType === 1) {\r\n            return 999999999999999; // bigint\r\n        }\r\n        return null;\r\n    },\r\n\r\n    changeMinValue: function (value) {\r\n        var self = this;\r\n        var newValue = Number(value);\r\n\r\n        self.properties.minValue = self.properties.dataTypeMinValue = Number.isNaN(newValue) ? self.calculateMinValue(self.properties.dataType) : newValue;\r\n    },\r\n\r\n    changeMaxValue: function (value) {\r\n        var newValue = Number(value);\r\n\r\n        this.properties.maxValue = this.properties.dataTypeMaxValue = Number.isNaN(newValue) ? this.calculateMaxValue(this.properties.dataType) : newValue;\r\n    },\r\n\r\n    createTooltip: function (control, currentValue, currentTitle) {\r\n        control.data(\"oldValue\", currentValue);\r\n        control.val(\"\");\r\n\r\n        try {\r\n            // Destroy tooltips\r\n            control.tooltip(\"destroy\");\r\n        } catch (e) {\r\n        }\r\n\r\n        control.attr(\"title\", currentTitle);\r\n        control.tooltip();\r\n\r\n        var toolTipZindex = $.getMaxZindex();\r\n        control.tooltip().on(\"tooltipopen\", function (event, ui) {\r\n            ui.tooltip.zIndex(toolTipZindex);\r\n        });\r\n\r\n        // Create new tooltip\r\n        control.tooltip(\"open\");\r\n\r\n        setTimeout(function () {\r\n            control.focus();\r\n        }, 100);\r\n    }\r\n});\r\n\r\n","\r\n/*\r\n*   Name: Bizagi Render Number Scientific notation Class\r\n*   Author: Laura Ariza\r\n*   Comments:\r\n*   -   This script will define basic stuff for scientific notation numbers\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.numberScientificNotation\", {\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n\r\n        properties.decimalSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\"\r\n            ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator : format.decimalSymbol;\r\n    },\r\n\r\n    renderControl: function() {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"numberScientificNotation\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {});\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function() {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        self.numericInput = control.find(\"input\");\r\n        // Add numeric plugin to avoid invalid keystrokes\r\n        self.numericInput.numericSN(self.properties.decimalSymbol);\r\n\r\n    },\r\n\r\n    getDisplayValue: function() {\r\n        var self = this;\r\n        return self.getValue().replace('.', self.properties.decimalSymbol);\r\n    },\r\n\r\n    setValue: function(value) {\r\n        var self = this;\r\n        value = (value || '').toString().replace(self.properties.decimalSymbol, '.');\r\n        self._super(value);\r\n    },\r\n    controlValueIsChanged: function() {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var value = self.getValue() || \"\";\r\n        var compareValue = properties.originalValue || \"\";\r\n        var result = true;\r\n\r\n        // Flag to force to collect data\r\n        if ($.forceCollectData) {\r\n            return true;\r\n        }\r\n        result = (compareValue.toLowerCase() == value.toLowerCase()) ? false : true;\r\n        return result;\r\n    }\r\n\r\n});","/*\r\n*   Name: BizAgi Render Date Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for date renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.date\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var dateFormat = this.getResource(\"dateFormat\");\r\n        var timeFormat = this.getResource(\"timeFormat\");\r\n\r\n        // We will hold here the value to display\r\n        properties.displayValue = \"\";\r\n        properties.showTime = properties.showTime !== undefined ? bizagi.util.parseBoolean(properties.showTime) : false;\r\n        properties.dateFormat = properties.dateFormat || dateFormat;\r\n        properties.timeFormat = properties.timeFormat || timeFormat;\r\n        properties.fullFormat = properties.dateFormat;\r\n\r\n        // Check if it has the showtime property\r\n        if (properties.showTime) {\r\n            if (properties.fullFormat.search(/[h|H]+/ig) === -1) {\r\n                properties.fullFormat = properties.fullFormat + ' ' + properties.timeFormat;\r\n            }\r\n        }\r\n\r\n        // Read always parameter from server in invariant format\r\n        if (properties.value) {\r\n\r\n            var date = bizagi.util.dateFormatter.getDateFromInvariant(properties.value, properties.showTime);\r\n            // Format date to current format\r\n            if (date != 0) {\r\n                // Value must always hold the value with invariant format\r\n                self.value = properties.value;\r\n                var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n                properties.displayValue = bizagi.util.dateFormatter.formatDate(date, properties.fullFormat, datePickerRegional);\r\n            } else {\r\n                self.value = null;\r\n            }\r\n        }\r\n    },\r\n    \r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"date\");\r\n        var indexDateTimeSeparation = properties.dateFormat.substring(0, properties.dateFormat.indexOf(\":\")).lastIndexOf(\" \");\r\n        var dateFormat = (indexDateTimeSeparation > 0) ? properties.dateFormat.substring(0, indexDateTimeSeparation) : properties.dateFormat;\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            showTime: properties.showTime,\r\n            value: properties.value,\r\n            editable: properties.editable,\r\n            dateFormat: bizagi.override && bizagi.override.uppercaseDatePlaceholder === true ? dateFormat.toUpperCase() : dateFormat,\r\n            timeFormat: (properties.showTime && indexDateTimeSeparation > 0) ? properties.dateFormat.substring(indexDateTimeSeparation) : \"\",\r\n            rtl: (properties.orientation == \"rtl\")\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n    */\r\n    configureHandlers: function (intHandler, isNow) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set control references\r\n        var dateControl = self.getDateControl();\r\n        var timeControl = self.getTimeControl();\r\n\r\n        // Set mask\r\n        if (properties.mask) {\r\n            dateControl.mask({\r\n                mask: properties.mask\r\n            });\r\n        }\r\n\r\n        // Attach change event\r\n        dateControl.bind(\"change\", function () {\r\n            self.onChangeHandler();\r\n        });\r\n        if (properties.showTime) {\r\n            timeControl.bind(\"change\", function (e, isNow) {\r\n                if (self.updatingTime) {\r\n                    delete self.updatingTime;\r\n                    return;\r\n                }\r\n                self.onChangeHandler(isNow);\r\n            });\r\n        }\r\n    },\r\n\r\n    /* \r\n    *   Formats the date time value to the hidden control\r\n    */\r\n    onChangeHandler: function () {\r\n    },\r\n\r\n    getDisplayValue: function (value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var displayValue;\r\n\r\n        if (!properties.displayValue && value) {\r\n            var date = bizagi.util.dateFormatter.getDateFromInvariant(value, properties.showTime);\r\n            var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n            displayValue = bizagi.util.dateFormatter.formatDate(date, properties.fullFormat, datePickerRegional);\r\n        } else {\r\n            displayValue = \"\";\r\n        }\r\n\r\n        // We can return the display value isntance\r\n        return properties.displayValue || displayValue || \"\";\r\n    },\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Add the render value\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            if (!bizagi.util.isEmpty(xpath)) {\r\n                if (!bizagi.util.isEmpty(value)) {\r\n                    // Formats the value in full invariant (with time) in order to send to the server\r\n                    var date = bizagi.util.dateFormatter.getDateFromInvariant(value, properties.showTime);\r\n                    if (typeof (date) != \"undefined\")\r\n                        if (date !== 0) {\r\n                            if (!properties.showTime) {\r\n                                date.setHours(0, 0, 0, 0);\r\n                            }\r\n                            renderValues[properties.xpath] = bizagi.util.dateFormatter.formatInvariant(date, true);\r\n                        }\r\n                } else if (value === \"\") {\r\n                    renderValues[properties.xpath] = \"\";\r\n                }\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Gets the date control\r\n    */\r\n    getDateControl: function () { },\r\n\r\n    /*\r\n    *   Gets the time control\r\n    */\r\n    getTimeControl: function () { },\r\n\r\n    /* \r\n    * Public method to determine if a value is valid or not\r\n    */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n        properties = self.properties;\r\n\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        if (value) {\r\n            if (bizagi.util.parseBoolean(properties.editable) === true) {\r\n                value = bizagi.util.dateFormatter.getDateFromInvariant(value, properties.showTime);\r\n                var message;\r\n\r\n                // Check that we have a valid data\r\n                if (value != 0) {\r\n                    // Clear seconds and milliseconds for validations\r\n                    value.setSeconds(0);\r\n                    value.setMilliseconds(0);\r\n\r\n                    // Check min value\r\n                    if (properties.minValue && (typeof properties.minValue === 'string' || typeof properties.minValue == 'number')) {\r\n                        var minValue = typeof properties.minValue == 'string' ? bizagi.util.dateFormatter.getDateFromInvariant(properties.minValue, properties.showTime) : new Date(properties.minValue);\r\n                        minValue.setSeconds(0);\r\n                        minValue.setMilliseconds(0);\r\n\r\n                        if (value < minValue) {\r\n                            message = this.getResource(\"render-date-minimum-validation\").replaceAll(\"#label#\", properties.displayName).replaceAll(\"#minValue#\", bizagi.util.dateFormatter.formatDate(minValue, properties.fullFormat));\r\n                            invalidElements.push({\r\n                                xpath: properties.xpath,\r\n                                message: message\r\n                            });\r\n                            bValid = false;\r\n                        }\r\n                    }\r\n\r\n                    // Check max value\r\n                    if (properties.maxValue && (typeof properties.maxValue == 'string' || typeof properties.maxValue == 'number')) {\r\n                        var maxValue = typeof properties.maxValue == 'string' ? bizagi.util.dateFormatter.getDateFromInvariant(properties.maxValue, properties.showTime) : new Date(properties.maxValue);\r\n                        maxValue.setSeconds(0);\r\n                        maxValue.setMilliseconds(0);\r\n\r\n                        if (value > maxValue) {\r\n                            message = this.getResource(\"render-date-maximum-validation\").replaceAll(\"#label#\", properties.displayName).replaceAll(\"#maxValue#\", bizagi.util.dateFormatter.formatDate(maxValue, properties.fullFormat));\r\n                            invalidElements.push({\r\n                                xpath: properties.xpath,\r\n                                message: message\r\n                            });\r\n                            bValid = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Check that both controls (data and time) are filled out\r\n        if (properties.showTime) {\r\n            if (bizagi.util.parseBoolean(properties.editable) === true) {\r\n                // Check required\r\n                if (properties.required && self.hasValue()) {\r\n\r\n                    // Check both controls\r\n                    var dateControl = self.getDateControl();\r\n                    var timeControl = self.getTimeControl();\r\n\r\n                    // If date is filled but time is not ... show validation\r\n                    if (dateControl.length > 0 && timeControl.length > 0) {\r\n                        if (dateControl.val().length > 0 && timeControl.val().length == 0) {\r\n                            message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                            invalidElements.push({\r\n                                xpath: properties.xpath,\r\n                                message: message\r\n                            });\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Text Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for text renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.extendedText\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Check if offline forms is supported\r\n        this.isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n        this.hasMaxLines = this.properties.maxLines ? true : false;\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        // Fill default properties\r\n        properties.maxLines = this.properties.maxLines || 6;\r\n\r\n        if (properties.regularExpressionExpression) {\r\n            var message = properties.regularExpressionMessage || self.getResource(\"render-text-regular-expression-default-message\");\r\n\r\n            properties.regularExpression = {\"expression\": properties.regularExpressionExpression, \"message\": message};\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"extendedText\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            isEmptyField: typeof (this.properties.value) === \"undefined\",\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        self._super();\r\n\r\n        var control = self.getControl();\r\n        self.textarea = control.find(\"textarea\");\r\n\r\n        // If is textarea, then enable resize element.\r\n        if (self.textarea) {\r\n            self.textarea.css({resize: \"both\"});\r\n        } else {\r\n            self.textarea.css({resize: \"none\"});\r\n        }\r\n\r\n        // Attach event for retype double\r\n        if (self.properties.retype === \"double\")\r\n            self.attachRetypeDouble();\r\n    },\r\n\r\n    /**\r\n     * Function virtual implements on children (desktop,samrtphone...).\r\n     */\r\n    attachRetypeDouble: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set the default maxlength for the input if is 0 or undefined set to infinity\r\n        // this resolve issue with scope strings that don't have maxlength\r\n        if (properties.maxLength)\r\n            self.textarea.prop('maxlength', properties.maxLength);\r\n\r\n        if (properties.maxLines) {\r\n            self.textarea.prop('rows', properties.maxLines)\r\n        } else {\r\n            self.textarea.prop('rows', 6);\r\n        }\r\n\r\n        // Attach change event\r\n        self.textarea.bind(\"change\", function () {\r\n\r\n            // Updates internal value\r\n            self.setValue(self.textarea.val());\r\n\r\n            // Check that the value is valid\r\n            var validationMessages = [];\r\n            if (properties.retype !== \"duplicate\") {\r\n                if (self.isValid(validationMessages) || typeof (properties.regularExpression) === \"undefined\") {\r\n                    // Update value again triggering handlers\r\n                    self.setValue(self.textarea.val(), true);\r\n                } else {\r\n                    // Set error message\r\n                    var message = validationMessages[0].message;\r\n                    bizagi.showMessageBox(message, \"Bizagi\", \"error\");\r\n                }\r\n            }\r\n        });\r\n\r\n        // Attach blur event\r\n        self.textarea.bind(\"blur\", function () {\r\n            // Updates internal value\r\n            self.setValue(self.textarea.val());\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param {} invalidElements\r\n     * @returns {}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        var regEx = new RegExp(\".*?(<|\\\\u003C)(.+?)(>|\\\\u003E)(.?)|eval\\\\(|eval\\\\u0028\", \"g\");\r\n\r\n        // Offline capability\r\n        if (this.isOfflineForm && bizagi.util.isMobileDevice()) {\r\n            value = value && typeof (value) === \"object\" && value.value ? value.value : value;\r\n        }\r\n\r\n        // Check regular expression\r\n        if (properties.regularExpression) {\r\n\r\n            if (value && ((value.match(regEx)) || (!value.match(new RegExp(properties.regularExpression.expression)) && (self.properties && self.properties.xpath === \"userName\")))) {\r\n                message = properties.regularExpression.message;\r\n                invalidElements.push({xpath: properties.xpath, message: message});\r\n                bValid = false;\r\n            } else {\r\n                if (value && ((value.match(regEx)) || (!value.match(new RegExp(properties.regularExpression.expression))))) {\r\n                    message = properties.regularExpression.message;\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n        } else {\r\n            if (value && (value.match(new RegExp(\".*?eval\\\\(\", \"g\"))) && (value.match(new RegExp(\".*?eval\\\\u0028\", \"g\")))) {\r\n                if (properties.editable) {\r\n                    message = this.getResource(\"render-text-regular-expression-default-message\");\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n\r\n        if (self.properties.editable == false) {\r\n            // Render as simple value\r\n            if (typeof (value) == \"string\") {\r\n\r\n                // Replace line breaks for html line breaks\r\n                var valueToDisplay = bizagi.util.decodedDisplayValue(self.getDisplayValue());\r\n\r\n                control.html(valueToDisplay);\r\n            }\r\n        }\r\n\r\n        // Set internal value\r\n        self.setValue(decodedValue, false);\r\n    },\r\n\r\n    /**\r\n     * Add the render data to the given collection in order to send data to the server\r\n     * @param {} renderValues\r\n     * @returns {}\r\n     */\r\n    collectData: function (renderValues) {\r\n        // Call base\r\n        this._super(renderValues);\r\n    },\r\n\r\n    /**\r\n     * Extend setValue to fix all encode data from database\r\n     * More information SUITE-9407\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setValue: function (value) {\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n\r\n        this._super(decodedValue);\r\n    },\r\n\r\n    /**\r\n     * Helptext tooltip\r\n     * @param {} control\r\n     * @param {} currentValue\r\n     * @param {} currentTitle\r\n     */\r\n    createTooltip: function (control, currentValue, currentTitle) {\r\n        control.data(\"oldValue\", currentValue);\r\n        control.val(\"\");\r\n\r\n        try {\r\n            // Destroy tooltips\r\n            control.tooltip(\"destroy\");\r\n        } catch (e) {\r\n        }\r\n\r\n        control.attr(\"title\", currentTitle);\r\n        control.tooltip();\r\n\r\n        var toolTipZindex = $.getMaxZindex();\r\n        control.tooltip().on(\"tooltipopen\", function (event, ui) {\r\n            ui.tooltip.zIndex(toolTipZindex);\r\n        });\r\n\r\n        // Create new tooltip\r\n        control.tooltip(\"open\");\r\n\r\n        setTimeout(function () {\r\n            control.focus();\r\n        }, 100);\r\n    },\r\n\r\n    //#region No side effects funtions    \r\n    /**\r\n     * Gets the string with the correct size\r\n     * @param {string} value String value to validate\r\n     * @param {Int} maxLength Maximum size of the string\r\n     * @returns {string} String value validated\r\n     */\r\n    validateValue: function (value, maxLength) {\r\n        if(maxLength<1 || value.length<=maxLength)return value;\r\n        return value.substr(0, maxLength)\r\n    }\r\n    //#endregion No side effects funtions\r\n});\r\n","/*\r\n *   Name: Bizagi Render Grid Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for grids\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.grid\", {}, {\r\n\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        self.originalData = bizagi.clone(data.properties);\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        self.initProperties();\r\n\r\n        // Set columns\r\n        var areThereEditableColumns;\r\n        var areThereTotalizedColumns;\r\n        self.columns = [];\r\n        self.columnsIds = [];\r\n        self.enabledChecks = {};\r\n        self.exclusiveChanges = {};\r\n        self.originalEnabledChecks = [];\r\n        $.each(data.elements, function (i, column) {\r\n            var columnProperties = column.render.properties;\r\n\r\n            // the groupby property is taken of column\r\n            if (columnProperties.groupBy) {\r\n                properties.groupBy = columnProperties.xpath || \"\";\r\n                properties.allowGrouping = !bizagi.util.isEmpty(properties.groupBy) ? true : false;\r\n            }\r\n            if (columnProperties.type === \"columnLabel\") {\r\n                self.spliceRowData(data.properties.data, i + 1);\r\n            }\r\n\r\n            if (columnProperties.type === \"columnBoolean\" && columnProperties.isExclusive) {\r\n                var params = {\r\n                    xpath: columnProperties.xpath\r\n                };\r\n                if (data.properties.data) {\r\n                    self.enabledChecks[columnProperties.xpath] = [];\r\n                    for (var j = 0; j < data.properties.data.rows.length; j++) {\r\n                        var row = data.properties.data.rows[j];\r\n                        var item = row[i + 1];\r\n                        if (item) {\r\n                            self.originalEnabledChecks.push(row[0]);\r\n                            self.enabledChecks[columnProperties.xpath].push([row[0], item]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // If inlineEdit is false then all columns must be read only\r\n            if (!self.properties.inlineEdit) {\r\n                column.render.properties.editable = false;\r\n            }\r\n\r\n            // Create renderColumns\r\n            var columnRender = self.renderFactory.getColumn({\r\n                type: columnProperties.type,\r\n                data: column.render,\r\n                parent: self,\r\n                singleInstance: properties.singleInstance\r\n            });\r\n\r\n            self.columns.push(columnRender);\r\n            self.columnsIds.push(column.render.properties.id);\r\n\r\n            if (columnProperties.editable) {\r\n                areThereEditableColumns = true;\r\n            }\r\n\r\n            if (columnProperties.totalize && columnProperties.totalize.operation) {\r\n                areThereTotalizedColumns = true;\r\n\r\n                // Default summary format\r\n                columnProperties.totalize.format = columnProperties.totalize.format || {};\r\n                columnProperties.totalize.format.bold = columnProperties.totalize.format.bold !== undefined ? columnProperties.totalize.format.bold : true;\r\n            }\r\n        });\r\n\r\n        // Reverse columns when using right to left orientation\r\n        if (properties.orientation === \"rtl\")\r\n            self.columns = self.columns.reverse();\r\n\r\n        // Turn off inline edit if there are any editable columns        \r\n        if (properties.inlineEdit && !areThereEditableColumns) {\r\n            properties.inlineEdit = false;\r\n            properties.allowEdit = false;\r\n        }\r\n\r\n        // Check if the grid has totalizers\r\n        if (areThereTotalizedColumns) {\r\n            properties.showSummary = true;\r\n            properties.rowsPerPage = 0;\r\n        }\r\n    },\r\n\r\n    initProperties: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        /** Edit properties\r\n         * @default editable true\r\n         */\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) || false;\r\n        properties.allowEdit = bizagi.util.parseBoolean(properties.allowEdit) != null ? bizagi.util.parseBoolean(properties.allowEdit) : true;\r\n        properties.inlineEdit = bizagi.util.parseBoolean(properties.inlineEdit) != null ? bizagi.util.parseBoolean(properties.inlineEdit) : true;\r\n        properties.withEditForm = bizagi.util.parseBoolean(properties.withEditForm) != null ? bizagi.util.parseBoolean(properties.withEditForm) : false;\r\n\r\n        /** Add properties\r\n         * @default  allowAdd true\r\n         */\r\n        properties.allowAdd = bizagi.util.parseBoolean(properties.allowAdd) != null ? bizagi.util.parseBoolean(properties.allowAdd) : true;\r\n        properties.inlineAdd = (properties.allowAdd) ? (bizagi.util.parseBoolean(properties.inlineAdd) != null) ? bizagi.util.parseBoolean(properties.inlineAdd) : true : false;\r\n\r\n        /* Define Delete properties */\r\n        properties.allowDelete = bizagi.util.parseBoolean(properties.allowDelete) != null ? bizagi.util.parseBoolean(properties.allowDelete) : true;\r\n\r\n        /* Define details properties*/\r\n        properties.allowDetail = bizagi.util.parseBoolean(properties.allowDetail) != null ? bizagi.util.parseBoolean(properties.allowDetail) : false;\r\n\r\n        /* Define general properties */\r\n        properties.keyColumn = \"\";\r\n        properties.data = properties.data || null;\r\n        properties.displayType = \"value\";\r\n        properties.skipInitialLoad = properties.skipInitialLoad || false;\r\n        properties.allowMore = bizagi.util.parseBoolean(properties.allowMore) || false;\r\n        properties.allowFilter = bizagi.util.parseBoolean(properties.allowFilter) || false;\r\n        properties.allowGrouping = false;\r\n        properties.groupBy = \"\";\r\n        properties.groupSummary = properties.groupSummary || null;\r\n        properties.groupText = this.getResource(\"render-grid-group-text\");\r\n        properties.groupCollapsed = bizagi.util.parseBoolean(properties.groupCollapsed) || false;\r\n        properties.groupOrder = properties.groupOrder || \"asc\";\r\n        properties.formShowMode = bizagi.util.parseBoolean(properties.formShowMode) || \"popup\";\r\n        properties.floatingHeader = bizagi.util.parseBoolean(properties.floatingHeader) || false;\r\n\r\n        properties.sortBy = properties.sortBy ? properties.sortBy : properties.data && properties.data.sort ? properties.data.sort : properties.keyColumn;\r\n        properties.sortOrder = properties.sortOrder !== undefined && properties.sortOrder !== null ? (properties.sortOrder === \"True\" ? \"asc\" : \"desc\") : properties.data && properties.data.order ? properties.data.order : \"asc\";\r\n        properties.sort = properties.sortBy + \" \" + properties.sortOrder;\r\n\r\n        properties.rowsPerPage = properties.allowGrouping ? 1000 : (properties.rowsPerPage || 20);\r\n        properties.page = 1;\r\n        properties.records = 0;\r\n        properties.totalPages = 0;\r\n\r\n        properties.addLabel = properties.addLabel || this.getResource(\"render-grid-add-label\") + properties.displayName;\r\n        properties.editLabel = properties.editLabel || $.trim(this.getResource(\"render-grid-edit-label\")) + \" \" + properties.displayName;\r\n        properties.deleteLabel = properties.deleteLabel || this.getResource(\"render-ecm-confirm-bt-delete\") + \" \" + properties.displayName;\r\n        properties.exportOptionsLabel = properties.exportOptionsLabel || this.getResource(\"render-grid-export-options-label\") + properties.displayName;\r\n        properties.detailLabel = properties.detailLabel || this.getResource(\"render-collection-navigator-details-form\");\r\n\r\n\r\n        // Apply style to entire table\r\n        properties.tableCssClass = properties.cssClass || \"\";\r\n\r\n        properties.alreadySaved = false;\r\n\r\n        // When grid open in modal window and the parent is entity\r\n        if (properties.contexttype != \"entity\") {\r\n            properties.contexttype = (typeof self.parent.getContextType == 'function') ? self.parent.getContextType() : \"\";\r\n        }\r\n\r\n        // Define if it is editable or not        \r\n        /* This part change all cells in the table to no editable,\r\n         * you must use it when the parent container has noeditable property,\r\n         * so this table is noeditable too.\r\n         */\r\n        try {\r\n            if ((self.parent && typeof self.parent.properties.editable == \"boolean\" && !self.parent.properties.editable) || !properties.editable) {\r\n                properties.allowAdd = false;\r\n                properties.allowEdit = false;\r\n                properties.allowDelete = false;\r\n                properties.inlineEdit = false;\r\n                properties.inlineAdd = false;\r\n                properties.editable = false;\r\n            }\r\n        } catch (e) {\r\n        }\r\n\r\n\r\n        // If grid has not allowEdit property in true, all fields within the grid\r\n        // must be no editables, so these lines changes this behavior\r\n        if (!properties.allowEdit || (!properties.inlineEdit && !properties.withEditForm)) {\r\n            properties.editable = false;\r\n        }\r\n\r\n        // Calculate render width\r\n        properties.labelWidth = 0;\r\n        properties.valueWidth = \"100%\";\r\n\r\n        // This property will be used to make custom grids with another data source\r\n        properties.overrideGetRemoteData = properties.overrideGetRemoteData || undefined;\r\n        //this property use to create a single decorated or a array of decorated\r\n        properties.singleInstance = bizagi.util.isEmpty(properties.singleInstance) ? true : properties.singleInstance;\r\n\r\n        // Check if the grid its opened whitin dialog form and has contextType\r\n        properties.contextType = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : null;\r\n\r\n        // Create a collection to collect changes\r\n        self.changes = {};\r\n\r\n        // Create a collection to override properties per cell\r\n        self.cellOverrides = {};\r\n\r\n\r\n        // Check orientation and change order of data if its necesary (rtl)\r\n        if (self.isRTL() && properties.data != null) {\r\n            properties.data.rows = self.changeOrderData(properties.data.rows);\r\n        }\r\n    },\r\n\r\n    /*\r\n   *   Check if a render has no value for required validation\r\n   */\r\n    hasValue: function () {\r\n        return this.properties.data && this.properties.data.rows.length > 0;\r\n    },\r\n\r\n    isRTL: function () {\r\n        var properties = this.properties;\r\n        if (!properties) return true;\r\n        return (typeof properties.orientation == \"string\" && properties.orientation.toUpperCase() == \"RTL\") ? true : false;\r\n    },\r\n    changeOrderData: function (data) {\r\n        var reverseDataRows = [];\r\n        var rows = data || [];\r\n        var rowKey;\r\n\r\n        $.each(rows, function (key, value) {\r\n            // Extract row key\r\n            rowKey = value.shift();\r\n            reverseDataRows = value.reverse();\r\n            // add element in the start\r\n            reverseDataRows.unshift(rowKey);\r\n\r\n            rows[key] = reverseDataRows;\r\n        });\r\n\r\n        return rows;\r\n    },\r\n\r\n    /**\r\n     * Specific fix RTL with localizated\r\n     * @param data\r\n     * @returns {*|Array}\r\n     */\r\n    removeRemainingColumns: function (data, numColumns) {\r\n        var rows = data || [];\r\n        var remainingColumns = 0;\r\n        if (rows.length > 0) {\r\n            // \"- 1\" because the first column represent id row\r\n            remainingColumns = rows[0].length - numColumns - 1;\r\n        }\r\n        if (remainingColumns > 0) {\r\n            $.each(rows, function (key, value) {\r\n                // Remove remaining columns\r\n                for (var i = 0; i < remainingColumns; i++) {\r\n                    value.pop();\r\n                }\r\n            });\r\n        }\r\n        return rows;\r\n    },\r\n\r\n    /* \r\n     *   Gets a column definition by xpath\r\n     */\r\n    getColumn: function (xpath) {\r\n        var self = this;\r\n        var result = null;\r\n        $.each(self.columns, function (i, column) {\r\n            if (column.properties.xpath == xpath || column.properties.id == xpath) {\r\n                result = column;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    },\r\n\r\n    getColumnType: function (id) {\r\n        var self = this;\r\n        var columnIndex = self.columnsIds.indexOf(id);\r\n\r\n        if (columnIndex != -1) {\r\n            return self.columns[columnIndex].properties.type;\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    /*\r\n     *   Template method to implement in each children to customize each control\r\n     *   Returns a promise that will be resolved when all the columns has been loaded\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var defer = new $.Deferred();\r\n\r\n        // Set dummy data when not in execution mode\r\n        var mode = self.getMode();\r\n        if (mode !== \"execution\") {\r\n            properties.data = self.getDummyData();\r\n        }\r\n\r\n        var template = self.getGridTemplate();\r\n\r\n        // Render template\r\n        var html = self.applyTemplate(template);\r\n\r\n        // Initialize columns\r\n        var columnInitializers = [];\r\n        $.each(self.columns, function (i, column) {\r\n\r\n            // Add to column initializer array so we can synch out the promises\r\n            var result = column.initialize();\r\n            if (result)\r\n                columnInitializers.push(result);\r\n        });\r\n\r\n        // Resolve when all columns has been loaded\r\n        $.when.apply($, columnInitializers).done(function () {\r\n            defer.resolve(html);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n    /*\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Call base\r\n        this._super();\r\n\r\n        // Make control to behave as a block container\r\n        // TODO: Move to instances. This does not apply to mobiles\r\n        control.addClass(\"ui-bizagi-render-grid-container\")\r\n            .addClass(\"ui-bizagi-render-display-block\");\r\n    },\r\n\r\n    /*\r\n     *   Returns the grid template to be used\r\n     */\r\n    getGridTemplate: function () {\r\n        return this.renderFactory.getTemplate(\"grid\");\r\n    },\r\n\r\n    /*\r\n     *   Applies the template to the render and returns the resolved element\r\n     */\r\n    applyTemplate: function (template) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        orientation = self.properties.orientation;\r\n\r\n        return $.fasttmpl(template, {\r\n            id: bizagi.util.encodeXpath(properties.xpath),\r\n            displayName: bizagi.util.encodeXpath(properties.displayName),\r\n            allowAdd: properties.allowAdd,\r\n            addLabel: properties.addLabel\r\n        });\r\n    },\r\n    /*\r\n     *   Method to render non editable values\r\n     *   Returns a promise that will be resolved when all the columns has been loaded\r\n     */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n\r\n        // Override read-only presets\r\n        //  properties.allowAdd = false;\r\n        // Render the same, just change some presets\r\n        return self.renderControl();\r\n    },\r\n    /*\r\n     *   Fetch the data into a deferred\r\n     */\r\n    getRemoteData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set params\r\n        params = params || {};\r\n        $.extend(params, {\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType,\r\n            idPageCache: properties.idPageCache,\r\n            sort: properties.sortBy,\r\n            order: properties.sortType,\r\n            page: properties.page,\r\n            rows: properties.rowsPerPage,\r\n            searchFilter: properties.searchFilter,\r\n            orientation: properties.orientation || \"ltr\"\r\n        });\r\n\r\n        // Check if a custom method has been given\r\n        if (properties.overrideGetRemoteData) {\r\n            return properties.overrideGetRemoteData(params);\r\n        } else {\r\n            // Resolve with remote data\r\n            return self.dataService.multiaction().getGridData(params).then(function (data) {\r\n                self.originalData = self.originalData || {};\r\n                self.originalData.data = bizagi.clone(data);\r\n\r\n                // Resolve with fetched data\r\n                properties.page = data.page;\r\n                properties.records = data.records;\r\n                properties.totalPages = data.totalPages;\r\n\r\n                return data;\r\n            });\r\n        }\r\n    },\r\n    /*\r\n     insert a blank item in the selected column in the data matrix\r\n     */\r\n    spliceRowData: function (data, index) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        if (mode === \"execution\" && (data && data.rows)) {\r\n            $.each(data.rows, function (key, value) {\r\n                var spliceIndex = index || data.rows[key].length;\r\n                data.rows[key].splice(spliceIndex, 0, \"\");\r\n            });\r\n        }\r\n    },\r\n\r\n    spliceRowDataVisible: function(data, index) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        if (mode === \"execution\" && (data && data.visible)) {\r\n            $.each(data.visible, function (key, value) {\r\n                var spliceIndex = index || data.visible[key].length;\r\n                data.visible[key].splice(spliceIndex, 0, true);\r\n            });\r\n        }\r\n    },\r\n\r\n    spliceRowDataEditable: function(data, index) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        if (mode === \"execution\" && (data && data.editable)) {\r\n            $.each(data.editable, function (key, value) {\r\n                var spliceIndex = index || data.editable[key].length;\r\n                data.editable[key].splice(spliceIndex, 0, true);\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n     *   Creates a set of dummy data in order to display it when rendering in design or layout mode\r\n     */\r\n    getDummyData: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (properties.data) {\r\n            return properties.data;\r\n\r\n        } else {\r\n            var rowTemplate = [\"1\"];\r\n\r\n            // Add a value for each column\r\n            for (var i = 0; i < self.columns.length; i++) {\r\n                rowTemplate.push(\"\");\r\n            }\r\n\r\n            var data = {\r\n                \"page\": 1,\r\n                \"total\": 1,\r\n                \"records\": 1,\r\n                \"rows\": [rowTemplate]\r\n            };\r\n\r\n            return data;\r\n        }\r\n    },\r\n    /*\r\n     *   Submits a grid edit record request for the given id\r\n     *   Returns a deferred\r\n     */\r\n    submitEditRequest: function (id) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var xpath = properties.xpath + self.buildCellXpathFilter(id);\r\n\r\n        return self.dataService.editGridRecord({\r\n            url: properties.editUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType\r\n        });\r\n    },\r\n    /*\r\n     *   Submits a grid edit record request for the given id\r\n     *   Returns a deferred\r\n     */\r\n    submitSaveRequest: function (id, data) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        // Check if there are deferreds to wait\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        // Calculate xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + properties.xpath + self.buildCellXpathFilter(id) : properties.xpath + self.buildCellXpathFilter(id);\r\n\r\n        return $.when(deferredsToWait).pipe(function () {\r\n            self.startLoading();\r\n            return self.dataService.saveGridRecord({\r\n                url: properties.saveUrl,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: xpathContext,\r\n                submitData: data,\r\n                contexttype: properties.contextType,\r\n                disableServerGridValidations: data.disableServerGridValidations || false\r\n            }).pipe(function (dataResp) {\r\n                self.endLoading();\r\n                return dataResp;\r\n            }).fail(function (dataFail) {\r\n                var form = self.getFormContainer();\r\n                var message = (dataFail.responseText) ? dataFail.responseText : ((typeof dataFail == \"string\") ? dataFail : dataFail.toString());\r\n                //Convert String to object\r\n                if (typeof message == \"string\") {\r\n                    try {\r\n                        message = JSON.parse(message).message;\r\n                    } catch (e) {\r\n                        message = message.match(/\"message\":(.*)\",/)[0];\r\n                        message = message.substr(11, message.length - 13);\r\n                    }\r\n\r\n                } else if (!message.message) {\r\n                    message = dataFail;\r\n                }\r\n                form.validateForm();\r\n                form.clearValidationMessages();\r\n                form.addValidationMessage(message);\r\n            });\r\n        });\r\n    },\r\n    /*\r\n     *   Submits a grid delete record request for the given id\r\n     *   Returns a deferred\r\n     */\r\n    submitDeleteRequest: function (id) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var xpath = properties.xpath + self.buildCellXpathFilter(id);\r\n\r\n        return self.dataService.deleteGridRecord({\r\n            url: properties.deleteUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType\r\n        }).pipe(function (data) {\r\n            if (data.type == \"validationMessages\") {\r\n                var form = self.getFormContainer();\r\n                var message = data.messages.join(\" \");\r\n                form.failHandler({message: message});\r\n            }\r\n\r\n            return data;\r\n        });\r\n    },\r\n    /*\r\n     *   Submits a grid add record request\r\n     *   Returns a deferred when done, the server returns an id for the new record\r\n     */\r\n    submitAddRequest: function () {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var request = self.dataService.addGridRecord({\r\n            url: properties.addUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType,\r\n            idPageCache: properties.idPageCache\r\n        });\r\n\r\n        var filterResponse = request.pipe(function (data) {\r\n            // Parses response\r\n            return data.idEntity;\r\n        });\r\n\r\n        return filterResponse.promise();\r\n    },\r\n    /*\r\n     *   Submits a grid rollback request\r\n     *   Returns a deferred when done\r\n     */\r\n    submitRollbackRequest: function (params) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        return self.dataService.rollbackGridAction({\r\n            url: properties.rollbackUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: params ? params.idPageCache : properties.idPageCache,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        });\r\n    },\r\n    /*\r\n     *   Collect a single cell change made in the grid to send the data when the user saves the form\r\n     */\r\n    collectGridChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        var id = params.id;\r\n        var xpath = params.xpath;\r\n        var value = params.value;\r\n        var trigger = typeof (params.trigger) !== \"undefined\" ? params.trigger : true;\r\n        var isPressed = params.pressed || false;\r\n\r\n        self.changes[id] = self.changes[id] || {};\r\n        self.changes[id][xpath] = value;\r\n\r\n        if (trigger)\r\n            self.triggerRenderChange({key: id, column: xpath, pressed: isPressed});\r\n    },\r\n    /*\r\n     *   Configures a column to perform a submit on change when the user changes a cell\r\n     */\r\n    configureColumnSubmitOnChange: function (xpath) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Build action\r\n        var action = {\r\n            commands: [{\r\n                xpath: properties.xpath,\r\n                command: 'submit-value',\r\n                argument: 'all'\r\n            }],\r\n            conditions: {\r\n                operator: 'and',\r\n                expressions: [\r\n                    {\r\n                        simple: {\r\n                            operator: 'cell-change',\r\n                            xpath: properties.xpath + '[].' + xpath,\r\n                            argumentType: 'text',\r\n                            argument: xpath\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            dependencies: [properties.xpath]\r\n        };\r\n\r\n        // Add action when form ends its rendering\r\n        $.when(self.ready())\r\n            .done(function () {\r\n                var form = self.getFormContainer();\r\n                form.addSubmitAction(xpath, action);\r\n            });\r\n    },\r\n    /*\r\n     *   Add the render data to the given collection in order to send data to the server\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var keysToDelete = [];\r\n\r\n        for (var id in self.changes) {\r\n            // Dont collect data from totalizers \r\n            if (id != \"summary\") {\r\n                for (var columnXpath in self.changes[id]) {\r\n                    // Check if the render can submit data\r\n                    if (self.canColumnBeSent(id, columnXpath)) {\r\n                        var xpath = properties.xpath + self.buildCellXpathFilter(id) + \".\" + columnXpath;\r\n                        var columnSimpleXpath = properties.xpath + self.buildCellXpathFilter(id) + \".\" + (columnXpath.substr(columnXpath.lastIndexOf('.') + 1, columnXpath.length) || columnXpath);\r\n                        var value = self.changes[id][columnXpath];\r\n\r\n                        renderValues[xpath] = value;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Clean changes \r\n            keysToDelete.push(id);\r\n\r\n        }\r\n\r\n        if (self.exclusiveChanges) {\r\n            for (var id in self.exclusiveChanges) {\r\n\r\n                var columnExclusiveChanges = self.exclusiveChanges[id];\r\n                var columnEnabledChecks = self.enabledChecks[id];\r\n                var lengthEnabledChecks = columnEnabledChecks.length;\r\n                if (columnExclusiveChanges && columnEnabledChecks) {\r\n                    for (var i = 0; i < lengthEnabledChecks; i++) {\r\n                        var columnSimpleXpathEnabled = properties.xpath + self.buildCellXpathFilter(self.enabledChecks[id].shift()[0]) + \".\" + id;\r\n                        renderValues[columnSimpleXpathEnabled] = false;\r\n                    }\r\n\r\n                    var columnSimpleXpath = properties.xpath + self.buildCellXpathFilter(columnExclusiveChanges.key) + \".\" + columnExclusiveChanges.xpath;\r\n                    renderValues[columnSimpleXpath] = columnExclusiveChanges.value;\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // Clean changes array in order to prevent duplicate data\r\n        // when execute SUBMITDATA in multiaction, that make and error\r\n        // in circular dependencies, specially when we add inline record\r\n        $.each(keysToDelete, function (key, v) {\r\n            delete self.changes[v];\r\n        });\r\n    },\r\n\r\n    hasChanged: function (result) {\r\n        var self = this;\r\n        if (!$.isEmptyObject(self.changes)) {\r\n            result.push(true);\r\n            return true;\r\n        } else {\r\n            if (!$.isEmptyObject(self.exclusiveChanges)) {\r\n                result.push(true);\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n     *   Check if a column data can be sent to the server\r\n     */\r\n    canColumnBeSent: function (id, columnXpath) {\r\n        var self = this, i, j, xpath;\r\n        for (i in self.columns) {\r\n            if (self.columns.hasOwnProperty(i)) {\r\n                var column = self.columns[i];\r\n                if (column.properties.type !== \"columnUserfield\") {\r\n                    if (column.properties.xpath == columnXpath) {\r\n                        var cellOverride = self.getCellOverride(id, column.columnIndex - 1);\r\n                        return column.canBeSent(id, cellOverride);\r\n                    }\r\n                } else {\r\n                    for (j in column.properties) {\r\n                        if (column.properties.hasOwnProperty(j)) {\r\n                            if (Object.prototype.toString.apply(column.properties[j]) === \"[object String]\") {\r\n                                xpath = column.properties[j].substr(column.properties[j].lastIndexOf(\".\") + 1);\r\n                                if (xpath === columnXpath) {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n    /* \r\n     *  Method to determine if the render value can be sent to the server or not\r\n     */\r\n    canBeSent: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var displayOnly = bizagi.util.parseBoolean(properties.displayOnly) || false;\r\n\r\n        // The render can be sent if it is \"display only\" and inline Edit is available\r\n        if (!displayOnly && (properties.inlineEdit || properties.inlineAdd || !$.isEmptyObject(self.changes))) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    /*\r\n     *   Return the value for a requested cell\r\n     */\r\n    getCellValue: function (key, xpath) {\r\n        var self = this;\r\n        var data = self.properties.data.rows;\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (data[i][0] == key) {\r\n                for (var j = 0; j < self.columns.length; j++) {\r\n                    if (self.columns[j].properties.xpath == xpath) {\r\n                        var result = data[i][j + 1];\r\n                        return result;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n     *\r\n     */\r\n    getCellCurrentValue: function (key, xpath) {\r\n        var self = this;\r\n\r\n        var control = self.getControlCell(key, xpath);\r\n        if (control && typeof control.getValue === \"function\") {\r\n            return control.getValue();\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n     *   Gets control\r\n     */\r\n    getControlCell: function (key, xpath) {\r\n        var self = this;\r\n        var control = null;\r\n        if (typeof (self.columns) != \"undefined\")\r\n            for (var j = 0; j < self.columns.length; j++) {\r\n                if (self.columns[j].properties.xpath == xpath || self.columns[j].properties.id == xpath) {\r\n                    control = self.columns[j].getDecorated(key);\r\n                    break;\r\n                }\r\n            }\r\n\r\n\r\n        return control;\r\n    },\r\n\r\n    changeRequired: function (argument) {\r\n        this.properties.required = argument;\r\n        this.changeRequiredLabel(argument);\r\n    },\r\n\r\n    changeRequiredLabel: function (argument) {\r\n        var control = this.getControl();\r\n\r\n        if (control.length > 0) {\r\n            if (this.getMode() !== \"execution\") {\r\n                if (bizagi.util.parseBoolean(argument) == true && this.properties.editable) {\r\n                    control.addClass(\"grid-control-required\");\r\n                } else {\r\n                    control.removeClass(\"grid-control-required\");\r\n                }\r\n            } else {\r\n                if (bizagi.util.parseBoolean(argument) == true && !this.hasValue() && this.properties.editable) {\r\n                    control.addClass(\"grid-control-required\");\r\n                } else {\r\n                    control.removeClass(\"grid-control-required\");\r\n                }\r\n            }\r\n        }\r\n\r\n        this.triggerRenderValidate();\r\n    },\r\n\r\n    /*\r\n     *   Fetch the data again and updates the content\r\n     */\r\n    refresh: function () {\r\n    },\r\n    /*\r\n     *   Sets an error on the cell\r\n     */\r\n    setError: function (key, columnXpath) {\r\n    },\r\n    /*\r\n     *   Changes the background for a cell\r\n     */\r\n    changeCellBackgroundColor: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *   Changes the background for a cell\r\n     */\r\n    changeCellColor: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *   Changes the visibility for a cell\r\n     */\r\n    changeCellVisibility: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *   Changes the editability for a cell\r\n     */\r\n    changeCellEditability: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *  Changes the required for cell\r\n     */\r\n    changeCellRequired: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *  Refresh behaviors of cell\r\n     */\r\n    changeCellProperties: function (key, xpath, argument) {\r\n\r\n    },\r\n    /*\r\n     *  Changes the max value for a cell\r\n     */\r\n    changeCellMaxValue: function (key, xpath, argument) {\r\n\r\n    },\r\n    /*\r\n     *  Changes the min value for a cell\r\n     */\r\n    changeCellMinValue: function (key, xpath, argument) {\r\n\r\n    },\r\n    /*\r\n     *  Clean data of cell\r\n     */\r\n    cleanCellData: function (key, xpath) {\r\n    },\r\n\r\n    changeEditability: function (argument) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        self.saveGrid().done(function () {\r\n\r\n            // Renders again\r\n            var properties = {properties: $.extend({editable: bizagi.util.parseBoolean(argument)}, self.originalData)};\r\n\r\n            // Clears control\r\n            control.empty();\r\n\r\n            bizagi.rendering.render.prototype.initializeData.apply(self, [properties]);\r\n\r\n            self.initProperties();\r\n            self.changeColumnsEditability(argument);\r\n\r\n            if (typeof self.internalRenderControl == \"function\") {\r\n                $.when(self.internalRenderControl()).done(function (html) {\r\n                    control.append(html);\r\n                    self.postRenderElement(self.element);\r\n                });\r\n\r\n            }\r\n\r\n        });\r\n\r\n    },\r\n\r\n    saveGrid: function () {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n\r\n        var rows = $(\"[data-bizagi-component=rows]\", self.element).find(\"[data-new-row=true]\");\r\n        if (rows.length > 0) {\r\n            rows = $.map(rows, function (row, i) {\r\n                return $(row).data(\"business-key\");\r\n            });\r\n            self.saveInlineAddedRows(rows).done(function () {\r\n                defer.resolve();\r\n            });\r\n        } else {\r\n            defer.resolve();\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    changeColumnsEditability: function (value) {\r\n        var self = this;\r\n        var columns = self.columns || [];\r\n\r\n        $.each(columns, function (i, column) {\r\n            column.properties.editable = value;\r\n        });\r\n    },\r\n\r\n    /**\r\n     *   Refresh behaviors of cell\r\n     */\r\n    refreshCell: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var key = params.key;\r\n        var column = params.column;\r\n        var xpathContext = (params.xpathContext !== \"\") ? params.xpathContext + \".\" + self.properties.xpath + self.buildCellXpathFilter(key) : self.properties.xpath + self.buildCellXpathFilter(key);\r\n        var cell = self.getControlCell(key, params.column);\r\n        var form = self.getFormContainer();\r\n        var idForm = form.properties.id;\r\n\r\n        if (!cell) {\r\n            return;\r\n        }\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        cell.beforeToRefresh();\r\n\r\n        // Call service\r\n        return $.when(self.dataService.multiaction().refreshGridCell({\r\n            idRender: properties.id,\r\n            column: cell.properties.id,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: xpathContext,\r\n            idForm: idForm,\r\n            typeRender: cell.properties.type\r\n        })).done(function (data) {\r\n            // Extract values\r\n            var getDepthData = function (target) {\r\n                if (target && typeof target == \"object\" && target.length >= 1) {\r\n                    return (target[0].length >= 1) ? target[0][0] : target[0];\r\n                }\r\n                return \"\";\r\n            };\r\n            var newValue = getDepthData(data.rows);\r\n            var editable = getDepthData(data.editable);\r\n            if (!bizagi.util.isBoolean(editable)) {\r\n                editable = editable || true;\r\n            }\r\n            var visible = getDepthData(data.visible);\r\n            if (!bizagi.util.isBoolean(visible)) {\r\n                visible = visible || true;\r\n            }\r\n            \r\n            // Change Visibility & Editability\r\n            self.changeCellVisibility(key, column, visible);\r\n            self.changeCellEditability(key, column, editable);\r\n\r\n            // Change control value\r\n            cell.setValue(newValue);\r\n            cell.setDisplayValue(newValue);\r\n\r\n            // Trigger grid change\r\n            self.triggerRenderChange({key: key, column: column, changed: false});\r\n\r\n            // Update the affected cell manually after a refresh\r\n            //TODO:temporary solution\r\n            //review the DRAGON-5982 \r\n            if (cell.column != undefined && bizagi.util.detectDevice() == \"desktop\") {\r\n                self.updateAffectedCellManually(key, newValue, cell.column.columnIndex);\r\n            }\r\n\r\n\r\n            // Execute personalized stuff after to refresh it\r\n            cell.afterToRefresh();\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Triggers the render change event\r\n     */\r\n    triggerRenderChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        // Property to verify exporting updated grids\r\n        if (!bizagi.util.isEmpty(params) && params.changed != false)\r\n            self.properties.canBeExported = false;\r\n        self.triggerHandler(\"renderchange\", {\r\n            render: self,\r\n            surrogateKey: params.key,\r\n            column: params.column,\r\n            changed: params.changed,\r\n            rowDeleted: params.rowDeleted,\r\n            pressed: params.pressed\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Validate the grid\r\n     */\r\n    validate: function () {\r\n        this.isValid([]);\r\n    },\r\n    /* \r\n     * Public method to determine if a value is valid or not\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var bValid = true;\r\n\r\n        // Clear error message\r\n        self.hasErrors = false;\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check for required columns and null values\r\n        if (self.properties.data && self.properties.data.rows) {\r\n            var newRows = self.getDataNewRows();\r\n            // Preserve elements in data.rows\r\n            // Check required\r\n            if (newRows.length == 0 && bizagi.util.parseBoolean(self.properties.required)) {\r\n                if (!self.hasValue()) {\r\n                    message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", self.properties.displayName);\r\n                    invalidElements.push({\r\n                        xpath: self.properties.xpath,\r\n                        message: message\r\n                    });\r\n                    bValid = false;\r\n                }\r\n            }\r\n\r\n            var data = $.merge($.merge([], self.properties.data.rows), newRows);\r\n\r\n            for (var i = 0; i < self.columns.length; i++) {\r\n                var messages = [];\r\n                var uniqueMessages = {};\r\n\r\n                for (var j = 0; j < data.length; j++) {\r\n                    var value = data[j][i + 1];\r\n                    var key = data[j][0];\r\n                    var xpath = self.columns[i].properties.xpath;\r\n                    if (self.changes[key] !== undefined && self.changes[key][self.columns[i].properties.xpath] !== undefined) {\r\n                        value = self.changes[key][self.columns[i].properties.xpath];\r\n                    }\r\n\r\n                    // Check if the column is valid\r\n                    var valueValid = self.columns[i].isValueValid(key, value, messages, self.getCellOverride(key, i));\r\n                    if (!valueValid) {\r\n                        bValid = false;\r\n\r\n                        self.hasErrors = true;\r\n                        self.setError(key, self.columns[i].properties.xpath);\r\n                    }\r\n                }\r\n                for (var k = 0, messagesLength = messages.length; k < messagesLength; k++) {\r\n                    if (uniqueMessages[messages[k]] == null) {\r\n                        uniqueMessages[messages[k]] = messages[k];\r\n                    }\r\n                }\r\n\r\n                if (messages.length > 0) {\r\n                    var gridValidationMessage = self.getResource(\"render-grid-validation\").replaceAll(\"#grid#\", self.properties.displayName);\r\n                    for (key in uniqueMessages) {\r\n                        invalidElements.push({\r\n                            xpath: self.properties.xpath,\r\n                            message: gridValidationMessage + \" \" + key\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n    /*\r\n     *   Enables submit on change feature for the current render\r\n     */\r\n    configureSubmitOnChange: function () {\r\n        // Don't do anything we will trigger submit on change manually only when the grid add or edit form has been edited   \r\n    },\r\n    /*\r\n     *   Get cell override\r\n     */\r\n    getCellOverride: function (key, column) {\r\n        var self = this;\r\n\r\n        // Convert to numbers\r\n        key = Number(key);\r\n        column = Number(column);\r\n\r\n        // Find overrides\r\n        var columnProperties = self.columns[column].properties;\r\n        if (!self.cellOverrides[key])\r\n            self.cellOverrides[key] = {};\r\n        if (!self.cellOverrides[key][column]) {\r\n            self.cellOverrides[key][column] = {\r\n                visible: columnProperties.visible,\r\n                editable: columnProperties.editable,\r\n                required: columnProperties.required\r\n            };\r\n        }\r\n\r\n        return self.cellOverrides[key][column];\r\n    },\r\n\r\n    /*\r\n     * Set cell overrides based on the data\r\n     */\r\n    setCellOverrides: function (data, columns) {\r\n        var self = this;\r\n        var key;\r\n\r\n        // Init visibility overrides\r\n        if (data.visible) {\r\n            for (var i = 0, len = data.visible.length; i < len; i++) {\r\n                key = data.visible[i][0];\r\n                for (var j = 0, len_v = data.visible[i].length; j < len_v; j++) {\r\n                    // Skip key columns\r\n                    if (j > 0)\r\n                        self.getCellOverride(key, j - 1).visible = bizagi.util.parseBoolean(data.visible[i][j]);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Init editability overrides\r\n        if (data.editable) {\r\n            for (var i = 0, len = data.editable.length; i < len; i++) {\r\n                key = data.editable[i][0];\r\n                for (var j = 0, len_v = data.editable[i].length; j < len_v; j++) {\r\n                    // Skip key columns\r\n                    if (j > 0) {\r\n                        var columnEditable = columns ? bizagi.util.parseBoolean(columns[j - 1].properties.editable) : true;\r\n                        self.getCellOverride(key, j - 1).editable = columnEditable ? bizagi.util.parseBoolean(data.editable[i][j]) : false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Init required overrides\r\n        if (data.required) {\r\n            for (var i = 0, len = data.required.length; i < len; i++) {\r\n                key = data.required[i][0];\r\n                for (var j = 0, len_v = data.required[i].length; j < len_v; j++) {\r\n                    // Skip key columns\r\n                    if (j > 0)\r\n                        self.getCellOverride(key, j - 1).required = bizagi.util.parseBoolean(data.required[i][j]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /*\r\n     *   Returns the row indexes for the data\r\n     */\r\n    getIndexes: function () {\r\n        var self = this;\r\n        var data = $.merge(self.properties.data.rows, self.getDataNewRows());\r\n        return $.map(data, function (item, i) {\r\n            return item[0];\r\n        });\r\n    },\r\n    /**\r\n     *  Return object with value of all new records unsaved within the grid\r\n     *  @return {object} all new records\r\n     */\r\n    getDataNewRows: function () {\r\n        var self = this;\r\n        var newRows = [];\r\n\r\n        if (typeof self.newRecords == \"object\" && !$.isEmptyObject(self.newRecords)) {\r\n            $.each(self.newRecords, function (rowKey) {\r\n                var cellValue = [];\r\n                cellValue.push(Number(rowKey));\r\n                for (var i = 0, length = self.columns.length; i < length; i++) {\r\n                    cellValue.push(self.getCellCurrentValue(rowKey, self.columns[i].properties.xpath));\r\n                }\r\n                // Add cell value row to new rows\r\n                newRows.push(cellValue);\r\n            });\r\n        }\r\n        return newRows;\r\n    },\r\n\r\n    /*\r\n     * Return the object with the required url to access the exported grid to the desired format\r\n     *  @return {object} render attributes, including id, xpathContext, idPagecache, disposition (inline or attachment), and exportType (XLS or PDF)\r\n     */\r\n    getGridExportUrl: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.getGridExportUrl({\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext || \"\",\r\n            idPageCache: properties.idPageCache,\r\n            disposition: params.disposition,\r\n            exportType: params.exportType,\r\n            sort: properties.sort,\r\n            sessionId: self.getSessionId(),\r\n            idForm: self.getFormContainer().properties.id\r\n\r\n        });\r\n    },\r\n\r\n    submitForGridChange: function () {\r\n        var self = this;\r\n        return self.submitOnChange(null, false);\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self.columns) {\r\n                $.each(self.columns, function (i, column) {\r\n                    column.dispose();\r\n                });\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    },\r\n\r\n    getEnabledChecks: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        params = params || {};\r\n        $.extend(params, {\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType,\r\n            idPageCache: properties.idPageCache,\r\n            rows: properties.rowsPerPage,\r\n            xpathfilter: params.xpath\r\n        });\r\n        // Default ajax call\r\n        var defer = new $.Deferred();\r\n        // Resolve with remote data\r\n        self.dataService.multiaction().getGridDataExclusivesSelected(params).done(function (data) {\r\n            // Resolve with fetched data\r\n            properties.page = data.page;\r\n            properties.records = data.records;\r\n            properties.totalPages = data.totalPages;\r\n\r\n            // Check RTL\r\n            if (self.isRTL()) {\r\n                data.rows = self.changeOrderData(data.rows);\r\n            }\r\n            defer.resolve(data);\r\n        });\r\n        return defer.promise();\r\n    },\r\n\r\n    buildCellXpathFilter: function (key) {\r\n        if (bizagi.util.isNumeric(key)) return \"[id=\" + key + \"]\";\r\n        return \"[id='\" + key + \"']\";\r\n    },\r\n\r\n    cleanNewRecords: function () {\r\n        // Mark it as saved\r\n        this.newRecords = {};\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Customizes render background color\r\n     *\r\n     * This method is called when the backgroud color is setted by Form Designer\r\n     *\r\n     * @param color\r\n     */\r\n    changeBackgroundColor: function (color) {\r\n        this._super(color);\r\n\r\n        var control = this.getControl();\r\n        control.find(\".bz-rn-grid-header-title\").css(\"background-color\", color, \"!important\");\r\n        control.find(\".bz-rn-grid-container-foother\").css(\"background-color\", color, \"!important\");\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Check has header format\r\n     * @returns {boolean}\r\n     */\r\n    hasColorHeader: function () {\r\n        var headerFormat = this.properties.headerFormat || {};\r\n\r\n        return headerFormat ? !bizagi.util.isEmpty(headerFormat.color) : false;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Hidden Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for hiddens\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.hidden\", {}, {\r\n\r\n    /**\r\n     * Returns the in-memory processed element\r\n     */\r\n    renderControl: function () {\r\n        if (this.getMode() === \"design\") {\r\n            return \"<div>\" + bizagi.localization.getResource(\"render-hidden-displayName\") + \"</div>\";\r\n        } else {\r\n            return \"<div />\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var properties = this.properties;\r\n\r\n        // Call base\r\n        this._super();\r\n\r\n        // Set the initial value\r\n        if (properties.value !== undefined) {\r\n            this.setDisplayValue(properties.value);\r\n        }\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Label Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for labels\r\n */\r\n$.Class.extend(\"bizagi.rendering.label\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // A label itself is never \"required\" as other controls\r\n        var properties = self.properties;\r\n        properties.required = false;\r\n\r\n        // Set properties\r\n        self.properties.displayType = \"label\";\r\n        //self.properties.labelAlign = self.originalProperties.labelAlign || \"left\";\r\n        self.properties.displayName = data.properties.displayName || \"\";\r\n\r\n        if (bizagi.util.parseBoolean(self.properties.allowDinamiclabel)) {\r\n            this.properties.displayName = data.properties.displayName || bizagi.localization.getResource(\"render-label-default-display-name\");\r\n        }\r\n\r\n        self.bindingValue();\r\n\r\n        // Calculate layout properties\r\n        self.calculateInitialLayoutProperties();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this._super();\r\n        // Just apply display-type: label, align it to the left\r\n        this.changeDisplayOption(\"label\");\r\n        //this.changeLabelAlign(this.properties.labelAlign || \"left\");\r\n\r\n        if (typeof this.configureHelpText == \"function\")\r\n            this.configureHelpText();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this._super();\r\n        // Just apply display-type: label, align it to the left\r\n        this.changeDisplayOption(\"label\");\r\n        this.changeLabelAlign(this.properties.labelAlign || \"left\");\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param {} invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Automatically this render is valid, so we can't check a required label\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    bindingValue: function () {\r\n        var self = this;\r\n\r\n        if (self.properties.allowDinamiclabel && self.properties.value) {\r\n            if (typeof (self.properties.value) === \"object\" && self.properties.value[0]) {\r\n                self.properties.displayName = self.properties.value[0].value;\r\n            } else if (typeof (self.properties.value) === \"string\" && self.properties.value !== \"\") {\r\n                self.properties.displayName = self.properties.value;\r\n            }\r\n        }\r\n    },\r\n\r\n    controlValueIsChanged: function(){\r\n        //Labels never change\r\n        return false;\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: Bizagi Render Search Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for search renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.search\", {}, {\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        properties.searchForms = properties.searchForms || [];\r\n\r\n        // Default maxRecords is 20\r\n        properties.maxRecords = Number(properties.maxRecords) || 20;\r\n        properties.advancedSearch = (bizagi.util.parseBoolean(properties.advancedSearch) === null) ? false : bizagi.util.parseBoolean(properties.advancedSearch);\r\n        properties.allowSuggest = bizagi.util.parseBoolean(properties.allowSuggest) !== null ? bizagi.util.parseBoolean(properties.allowSuggest) : false;\r\n        properties.allowFullSearch = properties.allowFullSearch || false;\r\n        properties.allowAdd = bizagi.util.parseBoolean(properties.allowAdd) || false;\r\n        properties.allowTyping = bizagi.util.parseBoolean(properties.allowTyping) !== null ? bizagi.util.parseBoolean(properties.allowTyping) : false;\r\n        properties.allowTyping = bizagi.util.parseBoolean(properties.allowSuggest) ? true : properties.allowTyping;\r\n        properties.allowClear = bizagi.util.parseBoolean(properties.allowClear) !== null ? bizagi.util.parseBoolean(properties.allowClear) : false;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) !== null ? bizagi.util.parseBoolean(properties.editable) : true;\r\n\r\n        // This length defines the behavior of the suggest, 2 characters are used by default meaning after 2 characters are written the search will take place\r\n        properties.searchLength = properties.searchLength || 2;\r\n\r\n        // Expire local storage cache\r\n        properties.enableLocalStorage = false;\r\n        properties.expireCache = 1000 * 60 * 15; // 15 minutes\r\n\r\n        // QAF-3297 - Compatibility for old versions of advanced search where the \"submitOnChange\" property default is true\r\n        // New \"submitVersion\" property default is 2\r\n        if (properties.advancedSearch && self.getMode() === \"execution\") {\r\n            properties.submitOnChange = bizagi.util.parseBoolean(properties.submitOnChange) || false;\r\n            properties.submitOnChange = (properties.submitVersion || 1) > 1 ? properties.submitOnChange : true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"search\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            allowTyping: properties.allowTyping,\r\n            advancedSearch: properties.advancedSearch,\r\n            allowSuggest: properties.allowSuggest,\r\n            editable: properties.editable,\r\n            allowClear: properties.allowClear,\r\n            hasValue: self.hasValue(),\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Fetch the data into a deferred\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    getData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n        var form = self.getFormContainer();\r\n        var contextType = form.getContextType() || form.params.contexttype || false;\r\n\r\n        params = params || {};\r\n\r\n        // Verify context type\r\n        if (self.properties.contexttype) {\r\n            params.h_contexttype = self.properties.contexttype;\r\n        } else if (contextType) {\r\n            params.h_contexttype = contextType;\r\n        }\r\n\r\n        params.h_contexttype = self.properties.enableQuerySuggestBehavior ? \"metadata\" : params.h_contexttype;\r\n\r\n        // QA-471 When the contexttype is metadata it does not send xpathcontext\r\n        if (params && params.h_contexttype && params.h_contexttype === 'metadata') {\r\n            properties.xpathContext = '';\r\n        }\r\n\r\n        // BA35025 - JFA\r\n        if (properties.term.indexOf(\"\\'\") > -1) {\r\n            var regexC = new RegExp(\"\\'\", \"g\");\r\n            properties.term = properties.term.replace(regexC, \"\\\\'\\\\'\");\r\n        }\r\n\r\n        // QAF-6448 - JFA\r\n        if (properties.term.indexOf(\"\\\"\") > -1) {\r\n            var regexC = new RegExp(\"\\\"\", \"g\");\r\n            properties.term = properties.term.replace(regexC, \"\\\"\");\r\n        }\r\n\r\n        // Resolve with remote data\r\n        self.dataService.multiaction().getSearchData({\r\n            url: properties.dataUrl,\r\n            contexttype: params.h_contexttype,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            term: (properties.allowFullSearch) ? \"%\" + properties.term : properties.term,\r\n            extra: params\r\n        }).done(function (data) {\r\n            // Resolve with fetched data\r\n            properties.data = data;\r\n            defer.resolve(properties.data);\r\n        }).fail(function (data) {\r\n            var hideStatus = data.hideStatus || false;\r\n\r\n            defer.resolve({});\r\n\r\n            if (!hideStatus) {\r\n                self.trigger(\"onSearchError\", data);\r\n            }\r\n        });\r\n\r\n        return defer.promise(defer);\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param {} value\r\n     * @param {} triggerEvents\r\n     * @returns {}\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n        triggerEvents = triggerEvents !== undefined ? triggerEvents : true;\r\n\r\n        self._super(value, triggerEvents);\r\n\r\n        if (value != undefined) {\r\n            this.value = value;\r\n            this.selectedValue = value.label;\r\n        } else {\r\n            this.value = null;\r\n            this.selectedValue = null;\r\n        }\r\n    },\r\n\r\n    /* Maps the value, when this one comes from actions*/\r\n    mapValue: function (value) {\r\n        if (value && value.fromAction) {\r\n            return {\r\n                id: value.value,\r\n                value: value.label,\r\n                label: value.label\r\n            }\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var xpath = self.properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            // Remove empty validation for value for combos\r\n            if (!bizagi.util.isEmpty(xpath) && value !== null && typeof (value) !== \"undefined\") {\r\n                // Add a validation because sometimes value contains an empty not null object\r\n                if (typeof (value) == \"object\" && value.id === undefined)\r\n                    return;\r\n                // Add the value to the server\r\n                renderValues[xpath] = value;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Submits the selected data to the server in order to be saved\r\n     * @returns {}\r\n     */\r\n    submitData: function () {\r\n        var self = this;\r\n        var data = {};\r\n\r\n        // Add current data\r\n        if (!self.grid) {\r\n            data[self.properties.xpath] = self.getValue();\r\n        }\r\n\r\n        // Executes submit on change\r\n        self.submitOnChange(data, undefined, false);\r\n    },\r\n\r\n    /**\r\n     * Check if control is valid or not\r\n     * @param {} invalidElements\r\n     * @returns {}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        return this._super(invalidElements);\r\n    },\r\n\r\n    hasValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (typeof (value) == \"undefined\" || value == null) return false;\r\n\r\n        if (typeof value === \"object\" && value.id !== \"\" && typeof (value.id) !== \"undefined\") return true;\r\n        return !bizagi.util.isEmpty(value);\r\n    },\r\n\r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n        return bizagi.util.formatItem(value);\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Text Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for text renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.text\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        if (properties.regularExpressionExpression) {\r\n            var message = properties.regularExpressionMessage || this.getResource(\"render-text-regular-expression-default-message\");\r\n            properties.regularExpression = {\"expression\": properties.regularExpressionExpression, \"message\": message};\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*}\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"text\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            value: this.properties.value,\r\n            isEmptyField: typeof (this.properties.value) === \"undefined\",\r\n            helpText: this.properties.helpText,\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"text-read-only\");\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.isString(value)) {\r\n            value = value.replaceAll(\"`\", \"&#96;\");\r\n        }\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {value: value, editable: this.properties.editable});\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n\r\n        this.input = this.getControl().find(\"input\");\r\n\r\n        //Attach event for retype double\r\n        if (this.properties.retype === \"double\")\r\n            this.attachRetypeDouble();\r\n    },\r\n\r\n    /**\r\n     * function virtual implements on children (desktop,samrtphone...).\r\n     */\r\n    attachRetypeDouble: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Check mask property\r\n        if (properties.mask)\r\n            self.input.mask({mask: properties.mask});\r\n\r\n        // Attach change event\r\n        self.input.bind(\"change\", function () {\r\n\r\n            // Updates internal value\r\n            self.setValue(self.input.val(), false);\r\n\r\n            // Check that the value is valid\r\n            var validationMessages = [];\r\n            if (properties.retype !== \"duplicate\") {\r\n                if (self.isValid(validationMessages) || typeof (properties.regularExpression) === \"undefined\") {\r\n                    // Update value again triggering handlers\r\n                    self.setValue(self.input.val(), true);\r\n                }\r\n            }\r\n\r\n        }).keypress(function (e) {\r\n            e = window.event || e;\r\n            var keyUnicode = e.charCode || e.keyCode;\r\n\r\n            if (e !== undefined) {\r\n                if (keyUnicode == 13) {\r\n                    $(this).trigger(\"change\");\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @returns {*}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n\r\n        // When the form have big data, block browser executing RegExp. QAF-1418.\r\n        // Check regular expression\r\n        if (typeof value == \"string\") {\r\n            if (properties.regularExpression) {\r\n                var regex = new RegExp(\"\");\r\n                try {\r\n                    regex = new RegExp(properties.regularExpression.expression);\r\n                } catch (e) {\r\n                    if (bizagi.override.showDesignValidations) {\r\n                        bizagi.log(e);\r\n                        invalidElements.push({xpath: properties.xpath, message: e.message});\r\n                        bValid = false;\r\n                    }\r\n                }\r\n\r\n                if (value && ((value.match(new RegExp(\".*?(<|\\\\u003C)(.+?)(>|\\\\u003E)(.?)|eval\\\\(|eval\\\\u0028\", \"g\"))) || (!value.match(regex) && self.properties && self.properties.xpath === \"userName\"))) {\r\n                    var message = properties.regularExpression.message;\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                } else {\r\n                    if (value && ((value.match(new RegExp(\".*?(<|\\\\u003C)(.+?)(>|\\\\u003E)(.?)|eval\\\\(|eval\\\\u0028\", \"g\"))) || (!value.match(regex)))) {\r\n                        var message = properties.regularExpression.message;\r\n                        invalidElements.push({xpath: properties.xpath, message: message});\r\n                        bValid = false;\r\n                    }\r\n                }\r\n            } else {\r\n                // Strange behavior on IE. When matchs are united on IE have is very slow\r\n                // solution, divide matchs\r\n                //.*? means for more information search: \"Lazy matching regexp\"\r\n                if (value && (value.match(new RegExp(\".*?eval\\\\(\", \"g\"))) && (value.match(new RegExp(\".*?eval\\\\u0028\", \"g\")))) {\r\n                    if (properties.editable) {\r\n                        var message = this.getResource(\"render-text-regular-expression-default-message\");\r\n\r\n                        invalidElements.push({xpath: properties.xpath, message: message});\r\n                        bValid = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n\r\n        if (!bizagi.util.parseBoolean(self.properties.editable)) {\r\n            // Render as simple value\r\n            if (typeof (value) === \"string\") {\r\n                // Replace line breaks for html line breaks\r\n                var valueToDisplay = bizagi.util.decodedDisplayValue(self.getDisplayValue());\r\n\r\n                control.html(\"<label class='readonly-control'>\" + valueToDisplay + \"</label>\");\r\n            } else {\r\n                if (bizagi.util.isNull(value)) {\r\n                    control.html(\"\");\r\n                }\r\n            }\r\n        }\r\n\r\n        // Set internal value\r\n        self.setValue(decodedValue, false);\r\n    },\r\n\r\n    /**\r\n     * Extend setValue to fix all encode data from database\r\n     * @param value\r\n     */\r\n    setValue: function (value) {\r\n        this._super(value);\r\n    },\r\n\r\n    /**\r\n     * Helptext tooltip\r\n     * @param {} control\r\n     * @param {} currentValue\r\n     * @param {} currentTitle\r\n     */\r\n    createTooltip: function (control, currentValue, currentTitle) {\r\n        control.data(\"oldValue\", currentValue);\r\n        control.val(\"\");\r\n\r\n        try {\r\n            // Destroy tooltips\r\n            control.tooltip(\"destroy\");\r\n        } catch (e) {\r\n        }\r\n\r\n        control.attr(\"title\", currentTitle);\r\n        control.tooltip();\r\n\r\n        var toolTipZindex = $.getMaxZindex();\r\n        control.tooltip().on(\"tooltipopen\", function (event, ui) {\r\n            ui.tooltip.zIndex(toolTipZindex);\r\n        });\r\n\r\n        // Create new tooltip\r\n        control.tooltip(\"open\");\r\n\r\n        setTimeout(function () {\r\n            control.focus();\r\n        }, 100);\r\n    },\r\n\r\n\r\n    //#region No side effects funtions    \r\n    /**\r\n     * Gets the string with the correct size\r\n     * @param {string} value String value to validate\r\n     * @param {Int} maxLength Maximum size of the string\r\n     * @returns {string} String value validated\r\n     */\r\n    validateValue: function (value, maxLength) {\r\n        if(maxLength<1 || value.length<=maxLength)return value;\r\n        return value.substr(0, maxLength)\r\n    }\r\n    //#endregion No side effects funtions\r\n\r\n});","/**\r\n *   Name: Bizagi Render Button Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for button renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.button\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.caption = properties.caption || \"\";\r\n\r\n        // set default value from normal to value\r\n        properties.displayType = \"value\";\r\n\r\n        // A button cannot be required\r\n        properties.required = false;\r\n\r\n        // This flag enable/disable default behaviors of buttons\r\n        // auto save and execute rule\r\n        properties.preventDefault = properties.preventDefault || false;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"button\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {\r\n            caption: self.properties.caption,\r\n            cssClass: self.properties.cssclass || \"\",\r\n            editable: self.properties.editable\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {}\r\n     */\r\n    renderReadOnly: function () {\r\n        // Executes the same template than normal render\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        // call base\r\n        this._super();\r\n\r\n        this.getLabel().addClass('bz-form-label--hidden');\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render behaviour after to be processed\r\n     */\r\n    postRender: function () {\r\n        // call base\r\n        this._super();\r\n\r\n        this.getLabel().addClass('bz-form-label--hidden');\r\n    },\r\n\r\n    /**\r\n     * Saves the form\r\n     * @returns {}\r\n     */\r\n    saveForm: function () {\r\n        var form = this.getFormContainer();\r\n        return form.saveForm();\r\n    },\r\n\r\n    /**\r\n     * Executes the button action\r\n     * @returns {}\r\n     */\r\n    executeButton: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = properties.xpathContext || \"\";\r\n\r\n        if (properties.submitOnChangexpathContextRow) {\r\n            xpathContext = xpathContext ? xpathContext + \".\" + properties.submitOnChangexpathContextRow : properties.submitOnChangexpathContextRow;\r\n        }\r\n\r\n        // Set the loading feedback\r\n        self.getFormContainer().startLoading();\r\n\r\n        return self.dataService.multiaction().executeButton({\r\n            idRender: properties.id,\r\n            xpath: properties.xpath || \"\",\r\n            xpathContext: xpathContext || \"\",\r\n            idPageCache: properties.idPageCache\r\n        }).always(function () {\r\n            self.getFormContainer().endLoading();\r\n            return arguments ? arguments[0] : undefined;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Refresh the current form\r\n     * @returns {}\r\n     */\r\n    refreshForm: function () {\r\n        var form = this.getFormContainer();\r\n        form.refreshForm(this.properties.id);\r\n    },\r\n\r\n    /**\r\n     * Process the button actions workflow\r\n     * @returns {}\r\n     */\r\n    processButton: function () {\r\n        var self = this;\r\n\r\n        if (self.properties.editable) {\r\n            // Save the form prior opening the dialog\r\n            self.runButtonAction();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Triggers the render change event\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    triggerRenderChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n\r\n        var pressed = params.pressed || false;\r\n\r\n        self.triggerHandler(\"renderchange\", {render: self, pressed: pressed});\r\n    },\r\n\r\n    /**\r\n     * Run button actions\r\n     * @returns {}\r\n     */\r\n    runButtonAction: function () {\r\n        var self = this;\r\n\r\n        // Save the form prior opening the dialog\r\n        self.getFormContainer().clearValidationMessages();\r\n\r\n        self.saveForm().pipe(function () {\r\n            return self.executeButton();\r\n        }).done(function (result) {\r\n\r\n            if (result == null || result == true || result.result === \"success\" || result.type === \"success\") {\r\n                return self.refreshForm();\r\n            } else if (result.type === \"validationMessages\") {\r\n                try {\r\n                    // Add validation messages\r\n                    self.getFormContainer().addValidationMessage(result.messages);\r\n                } catch (e) {\r\n                    // bizagi.showMessageBox(result.messages, \"Error\"); // TODO\r\n                }\r\n            }\r\n        }).fail(function (a, b, message) {\r\n            // Add error messages\r\n            try {\r\n                self.getFormContainer().addErrorMessage(message);\r\n            } catch (e) {\r\n                // bizagi.showMessageBox(message, \"Error\"); // TODO\r\n            }\r\n        });\r\n    },\r\n\r\n    processLayout: function (isLabelFormat, format) {\r\n        if (isLabelFormat) {\r\n            this.changeBackgroundColor(format.background);\r\n            this._super(!isLabelFormat, format);\r\n        }\r\n    },\r\n\r\n    changeBackgroundColor: function (color) {\r\n        if (typeof color === \"undefined\") return this;\r\n\r\n        if (color !== \"none\") {\r\n            this.getElementsToStylize(this.getControl()).style(\"background\", color, \"important\");\r\n        } else {\r\n            this.getElementsToStylize(this.getControl()).css(\"background\", \"\");\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    getElementsToStylize: function ($context) {\r\n        return $(\"input\", $context);\r\n    },\r\n\r\n    /**\r\n     *  Method to determine if the render value can be sent to the server or not\r\n     * @returns {}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render Fileprint Class\r\n *   Author: Christian Collazos\r\n *   Comments:\r\n *   -   This script will define basic stuff for fileprint renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.fileprint\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.caption = (properties.caption && properties.caption != \" \")? properties.caption : \"render-fileprint-property-caption\";\r\n        properties.filesCount = properties.filesCount ? properties.filesCount : 0;\r\n\r\n        // set default value from normal to value\r\n        properties.displayType = \"value\";\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n\r\n        // A button cannot be required\r\n        properties.required = false;\r\n    },\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"fileprint\");\r\n\r\n        return $.fasttmpl(template, {\r\n            caption: properties.caption\r\n        });\r\n    },\r\n    /*\r\n    *   Method to render non editable values\r\n    */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n\r\n        // Executes the same template than normal render\r\n        return self.renderControl();\r\n    },\r\n\r\n    /*\r\n    *   get the fileprint url\r\n    */\r\n    getFilePrintUrl: function (disposition) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.getFilePrintUrl({\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext || \"\",\r\n            idPageCache: properties.idPageCache,\r\n            disposition: disposition,\r\n            sessionId: self.getSessionId()\r\n        });\r\n\r\n    },\r\n\r\n    /*\r\n    *   Refresh the current form\r\n    */\r\n    refreshForm: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var form = self.getFormContainer();\r\n        form.refreshForm(properties.id);\r\n    },\r\n\r\n     /*\r\n    *   Saves the form\r\n    */\r\n    saveForm: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        return form.saveForm();\r\n    }\r\n});","/**\r\n *   Name: Bizagi Render Simple Link Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for link renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.link\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Set properties\r\n        var properties = this.properties;\r\n        properties.required = false;\r\n        properties.displayType = \"value\";\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"link\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {\r\n            displayName: self.properties.displayName,\r\n            align: self.properties.valueAlign,\r\n            editable: self.properties.editable\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        // Executes the same template than normal render\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Automatically this render is valid, so we can't check a required link\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Do nothing\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        return false;\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Render Geolocation control\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for geolocation renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.geolocation\", {}, {\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {} data\r\n     */\r\n    init: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n        this.geolocation = window.navigator.geolocation;\r\n\r\n        var properties = this.properties;\r\n        properties.allowUpdate = bizagi.util.parseBoolean(properties.allowUpdate) === true;\r\n\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"geolocation\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, self.properties);\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param {} invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Call base\r\n        return this._super(invalidElements);\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Set internal value\r\n        this.setValue(value, false);\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     * @returns {}\r\n     */\r\n    configureHandlers: function () {\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} succes_callback\r\n     * @param {} fail_callback\r\n     */\r\n    getCurrentPosition: function (succes_callback, fail_callback) {\r\n        var self = this;\r\n\r\n        if (typeof (self.geolocation) === \"undefined\") {\r\n            if (fail_callback)\r\n                fail_callback(bizagi.localization.getResource(\"render-control-unsuported-by-browser\").replace(\"{0}\", self.properties.type));\r\n            return;\r\n        }\r\n\r\n        var onSuccess = function (position) {\r\n            if (succes_callback)\r\n                succes_callback(position);\r\n        };\r\n\r\n        var onError = function (error) {\r\n            var strMessage = self.getErrorMessage(error);\r\n\r\n            if (fail_callback)\r\n                fail_callback(strMessage);\r\n        };\r\n\r\n        return self.geolocation.getCurrentPosition(onSuccess, onError);\r\n    },\r\n\r\n    /**\r\n     * Get message of error\r\n     * @param error\r\n     * @returns {*|string}\r\n     */\r\n    getErrorMessage: function (error) {\r\n        var strMessage = \"\";\r\n\r\n        // Check for known errors\r\n        switch (error.code) {\r\n            case error.PERMISSION_DENIED:\r\n            case 1:\r\n                strMessage = bizagi.localization.getResource(\"render-geolocation-permission-denied\");\r\n                break;\r\n            case error.POSITION_UNAVAILABLE:\r\n            case 2:\r\n                strMessage = bizagi.localization.getResource(\"render-geolocation-position-unavailable\");\r\n                break;\r\n            case error.TIMEOUT:\r\n            case 3:\r\n                strMessage = bizagi.localization.getResource(\"render-geolocation-timeout\");\r\n                break;\r\n            default:\r\n                strMessage = \"WD: \" + bizagi.localization.getResource(\"render-geolocation-permission-denied\");\r\n                break;\r\n        }\r\n\r\n        return strMessage;\r\n    },\r\n\r\n    /**\r\n     * Change precision number of coordinates\r\n     * @param data\r\n     * @returns {*}\r\n     */\r\n    performPrecision: function (data) {\r\n        var geolocation = data.split(\" \") || \"\";\r\n\r\n        if (!geolocation) return data;\r\n\r\n        try {\r\n            var latitude = parseFloat(geolocation[0].trim());\r\n            var longitude = parseFloat(geolocation[1].trim());\r\n\r\n            return latitude.toPrecision(10) + \" \" + longitude.toPrecision(10);\r\n        } catch (e) {\r\n            return data;\r\n        }\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Render Association Class\r\n*   Author: Edward Morales\r\n*   Comments:\r\n*   -   This script will define basic stuff for association renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.association\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        var properties = self.properties;\r\n\r\n        // Fill default properties\r\n        properties.property = \"flipped\";\r\n        properties.idRender = self.properties.id;\r\n        properties.allowFlip = (typeof properties.allowFlip != \"undefined\") ? bizagi.util.parseBoolean(properties.allowFlip) : true;\r\n        properties.flipped = (typeof properties.flipped != \"undefined\") ? bizagi.util.parseBoolean(properties.flipped) : false;\r\n        properties.flipstate = properties.flipped;\r\n\r\n\r\n        // data of entities (left and right)\r\n        properties.leftData = properties.leftData || [];\r\n        properties.rightData = properties.rightData || [];\r\n\r\n        if (properties.value) {\r\n            self.processPropertyValue();\r\n        }\r\n    },\r\n\r\n\r\n\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"association\");\r\n        var def = new $.Deferred();\r\n\r\n        self.properties.property = \"flipped\";\r\n        self.properties.idRender = self.properties.id;\r\n\r\n        // Define flipped\r\n        $.when(self.getFlipAssociation())\r\n            .done(function (flip) {\r\n\r\n                // Make json base, create self.properties.formatJson\r\n                self.makeJsonBase();\r\n\r\n                self.properties.flipped = bizagi.util.parseBoolean(flip) || false;\r\n\r\n                var html = $.fasttmpl(template, self.properties, {\r\n                    getColumnData: self.getColumnData,\r\n                    getRightAssociation: self.getRightAssociation\r\n                });\r\n\r\n                /* by default need set self.properties.formatJson */\r\n                self.setValue(JSON.encode(self.properties.formatJson));\r\n\r\n                def.resolve(html);\r\n            });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n\r\n    /*\r\n    * Returns the flip state\r\n    */\r\n    getFlipAssociation: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        if (mode == \"execution\")\r\n            return self.dataService.getFlipAssociation(self.properties);\r\n\r\n        return false;\r\n    },\r\n\r\n    /* \r\n    *   Gets the display value of the render\r\n    */\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n        var value = self.getValue();\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Get the template \r\n    */\r\n    getTemplateName: function () {\r\n        return \"association\";\r\n    },\r\n\r\n\r\n    /**\r\n    * Get Left Data, verify if flipper flags sets true\r\n    * \r\n    * @param column {'0'||'1'}\r\n    */\r\n    getColumnData: function () {\r\n        var self = this;\r\n        var properties = self.data;\r\n        var data = [];\r\n        var associationData = properties.flipped ? properties.rightData : properties.leftData;\r\n\r\n        $.each(associationData, function(key, item) {\r\n            data.push({ id: item.id, value: item.value });\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n    * Association of right elements\r\n    */\r\n    getRightAssociation: function (leftId) {\r\n        var self = this;\r\n        var properties = self.data;\r\n        var association = [];\r\n\r\n\r\n        var isChecked = function (leftId, idRight) {\r\n            var checked = false;\r\n            $.each(properties.formatJson.value, function (key, value) {\r\n                if (!checked && value.id == leftId && value.value.indexOf(idRight) >= 0) {\r\n                    checked = true;\r\n                }\r\n            });\r\n\r\n            return checked;\r\n        };\r\n\r\n        // create association and check element\r\n        if (properties.flipped) {\r\n            // left element\r\n            $.each(properties.leftData, function (key, data) {\r\n                association.push({\r\n                    id: data.id,\r\n                    name: data.value,\r\n                    checked: isChecked(data.id, leftId)\r\n                });\r\n\r\n            });\r\n        } else {\r\n            $.each(properties.rightData, function (key, data) {\r\n                association.push({\r\n                    id: data.id,\r\n                    name: data.value,\r\n                    checked: isChecked(leftId, data.id)\r\n                });\r\n            });\r\n        }\r\n\r\n        return association;\r\n    },\r\n\r\n\r\n    removeElement: function (leftId, rightId) {\r\n        var self = this;\r\n\r\n        $.each(self.properties.formatJson.value, function (key, data) {\r\n            if (self.properties.flipped) {\r\n                if (data.id == rightId) {\r\n                    // Remove right element from left panel\r\n                    $.each(self.properties.formatJson.value[key][\"value\"], function (removeKey, removeValue) {\r\n                        if (leftId == removeValue) {\r\n                            // Splice from array\r\n                            self.properties.formatJson.value[key][\"value\"].splice(removeKey, 1);\r\n                        }\r\n                    });\r\n                }\r\n            } else if (data.id == leftId) {\r\n                // Remove right element from left panel\r\n                $.each(self.properties.formatJson.value[key][\"value\"], function (removeKey, removeValue) {\r\n                    if (rightId == removeValue) {\r\n                        // Splice from array\r\n                        self.properties.formatJson.value[key][\"value\"].splice(removeKey, 1);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        self.setValue(JSON.encode(self.properties.formatJson));\r\n    },\r\n\r\n\r\n    addElement: function (leftId, rightId) {\r\n        var self = this;\r\n\r\n        $.each(self.properties.formatJson.value, function (key, data) {\r\n            if (self.properties.flipped) {\r\n                if (data.id == rightId) {\r\n                    // Add right element to left panel\r\n                    self.properties.formatJson.value[key][\"value\"].push(leftId);\r\n                }\r\n            } else if (data.id == leftId) {\r\n                // Add right element to left panel\r\n                self.properties.formatJson.value[key][\"value\"].push(rightId);\r\n            }\r\n        });\r\n        self.setValue(JSON.encode(self.properties.formatJson));\r\n    },\r\n\r\n    makeJsonBase: function () {\r\n        var self = this;\r\n        self.properties.formatJson = self.properties.formatJson || {\r\n            leftXpath: self.properties.leftXpath,\r\n            rightXpath: self.properties.rightXpath,\r\n            leftFactName: self.properties.leftFactName,\r\n            rightFactName: self.properties.rightFactName,\r\n            value: self.properties.value\r\n        };\r\n    },\r\n\r\n\r\n    /*\r\n    *   Check if a render has no value for required validation\r\n    */\r\n    hasValue: function () {\r\n        var self = this;\r\n\r\n        if (self.properties.formatJson) {\r\n            var values = self.properties.formatJson.value;\r\n        } else {            \r\n            values = self.properties.value;\r\n        }\r\n       \r\n\r\n        for (var i = 0, l = values.length; i < l; i++) {\r\n            var data = values[i];\r\n            if (data && data.value.length > 0) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    /*\r\n    * This method process the value.\r\n    * changes the format to send request\r\n    */\r\n    processPropertyValue: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var values = properties.value;\r\n        var result = [];\r\n\r\n        for (var i = 0, l = values.length; i < l; i++) {\r\n            var value = values[i];\r\n            result.push({ id: value[0], value: value[1] });\r\n        }\r\n\r\n        properties.value = result;\r\n    }\r\n});","/**\r\n *   Name: Bizagi Render Upload Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for uploads\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.upload\", {}, {\r\n    /***\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        var form = self.getFormContainer();\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        var maxFileSizeOfProperty = Number(properties.maxSize) || 0;\r\n        var maxFileSizeOfUser = typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\" ? Number(BIZAGI_SETTINGS.UploadMaxFileSize) : 4091904;\r\n\r\n        properties.maxSize = maxFileSizeOfProperty || maxFileSizeOfUser;\r\n        properties.maxfiles = Number(properties.maxfiles) || 999;\r\n        properties.validExtensions = properties.validExtensions || \"\";\r\n\r\n        if (properties.validExtensions.length > 0 && properties.validExtensions.indexOf(\".\") < 0) {\r\n            var singleExtensions = properties.validExtensions.replace(/\\ /gi, '').split(\";\");\r\n            var defExtensions = [];\r\n\r\n            for (var i = 0; i < singleExtensions.length; i++) {\r\n                if (singleExtensions[i].length > 0) {\r\n                    defExtensions.push(\"*.\" + singleExtensions[i]);\r\n                } else {\r\n                    //Removes the empty element\r\n                    var index = singleExtensions.indexOf(singleExtensions[i]);\r\n                    singleExtensions.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            properties.validExtensions = defExtensions.join(\";\");\r\n        }\r\n\r\n        properties.addUrl = properties.addUrl || self.dataService.getUploadAddUrl();\r\n        properties.deleteUrl = properties.deleteUrl || undefined;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) || false;\r\n        properties.allowDelete = (bizagi.util.parseBoolean(properties.allowDelete) !== null && properties.editable) ? bizagi.util.parseBoolean(properties.allowDelete) : false;\r\n\r\n        properties.contexttype = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : \"\";\r\n        properties.allowSendInMail = properties.allowSendInMail || false;\r\n\r\n        // Set files property\r\n        self.files = properties.value || [];\r\n        self.filesCount = self.files.length;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"upload\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            xpath: bizagi.util.encodeXpath(self.getUploadXpath()),\r\n            editable: properties.editable,\r\n            haveFiles: self.filesCount !== 0,\r\n            noFiles: self.filesCount === 0,\r\n            allowSendInMail: properties.allowSendInMail\r\n        });\r\n\r\n        // Render current children\r\n        var items = \"\";\r\n        for (var i = 0; i < self.filesCount; i++) {\r\n            var file = {id: self.files[i][0], fileName: self.files[i][1]};\r\n            var item = self.renderUploadItem(file);\r\n\r\n            items += item;\r\n        }\r\n\r\n        html = self.replaceFilesHtml(html, items);\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Renders a single upload item\r\n     * @param file\r\n     * @returns {jQuery|*}\r\n     */\r\n    renderUploadItem: function (file) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var itemTemplate = self.getTemplateItemName();\r\n        var template = self.renderFactory.getTemplate(itemTemplate);\r\n\r\n        // Don't render urls when not running in execution mode\r\n        var url = !self.isExecutionMode() ? \"\" : self.buildItemUrl(file); // TODO: Review if need it: javascript:void(0);\r\n\r\n        var html = $.fasttmpl(template, {\r\n            id: file.id,\r\n            mode: mode,\r\n            url: url,\r\n            allowDelete: self.properties.allowDelete,\r\n            filename: file.fileName,\r\n            editable: self.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (file) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n\r\n        return self.dataService.getUploadFileUrl({\r\n            idRender: properties.id,\r\n            xpath: self.getUploadXpath(),\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            fileId: file.id,\r\n            sessionId: form.properties.sessionId,\r\n            contexttype: properties.contexttype\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Replaces a {{files}} tag in the container for the specified \"replace\" element\r\n     * @param html\r\n     * @param replace\r\n     * @returns {*}\r\n     */\r\n    replaceFilesHtml: function (html, replace) {\r\n        return html.replace(\"{{files}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Removes a file from the upload control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    deleteUploadItem: function (item, fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = self.getUploadXpath() + (bizagi.util.isNumeric(fileId) ? \"[id=\" + fileId + \"]\" : \"[id='\" + fileId + \"']\");\r\n\r\n        return self.dataService.deleteUploadFile({\r\n            url: properties.deleteUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contexttype\r\n        }).pipe(function () {\r\n\r\n            // Subtract counter\r\n            self.filesCount = self.filesCount - 1;\r\n\r\n            // Remove from local collection\r\n            self.files = $.grep(self.files, function (fileItem) {\r\n                return fileItem[0] != fileId;\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n\r\n        // Set files property\r\n        self.files = value || []; // Dont remove this line\r\n        self.filesCount = self.files.length;\r\n\r\n        // Call base\r\n        self._super(value, triggerEvents);\r\n    },\r\n\r\n    /**\r\n     * Returns the internal value\r\n     * @returns {*}\r\n     */\r\n    getValue: function () {\r\n        return this.files;\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @returns {boolean}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n        var bValid = true;\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (properties.required && properties.editable) {\r\n            var newRow = self.grid && self.grid.isFromCreatedRow.apply(self);\r\n\r\n            if (self.filesCount <= 0 && !newRow) {\r\n                var inlineEdit = self.grid ? self.grid.properties.inlineEdit : true;\r\n\r\n                if (inlineEdit) {\r\n                    message = self.getResource(\"render-required-upload\").replaceAll(\"#label#\", properties.displayName);\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Build add params to send to the server\r\n     */\r\n    buildAddParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var data = {};\r\n        var prefix = self.Class.BA_CONTEXT_PARAMETER_PREFIX;\r\n\r\n        data[prefix + \"xpath\"] = self.getUploadXpath();\r\n        data[prefix + \"idRender\"] = properties.id;\r\n        data[prefix + \"xpathContext\"] = properties.xpathContext;\r\n        data[prefix + self.Class.BA_PAGE_CACHE] = properties.idPageCache;\r\n        data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = form.properties.sessionId;\r\n        data[prefix + \"contexttype\"] = properties.contexttype;\r\n\r\n        try {\r\n            if (typeof (BIZAGI_SESSION_NAME) !== \"undefined\") {\r\n                data[BIZAGI_SESSION_NAME] = form.properties.sessionId\r\n            } else {\r\n                data[\"JSESSIONID\"] = form.properties.sessionId;\r\n            }\r\n        } catch (e) {\r\n            data[\"JSESSIONID\"] = form.properties.sessionId;\r\n        }\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getUploadXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    checkRequired: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (bizagi.util.parseBoolean(properties.required)) {\r\n            if (self.grid && self.grid.properties.inlineAdd === true) {\r\n                if (!self.hasValue() && !(self.getControl().parents(\"tr\").data(\"new-row\"))) {\r\n                    self.setRenderRequired(invalidElements, properties);\r\n                    return false;\r\n                }\r\n            } else {\r\n                if (!self.hasValue()) {\r\n                    self.setRenderRequired(invalidElements, properties);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    setRenderRequired: function (invalidElements, properties) {\r\n        var self = this;\r\n        var message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n        invalidElements.push({xpath: properties.xpath, message: message});\r\n    },\r\n\r\n    /**\r\n     * Templates\r\n     */\r\n    getTemplateItemName: function () {\r\n        return \"uploadItem\";\r\n    }\r\n});","/**\r\n *   Name: Bizagi Render ECM upload control\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for ECM Control\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.ecm\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        properties.maxSize = Number(properties.maxSize) || (typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\" ? Number(BIZAGI_SETTINGS.UploadMaxFileSize) : properties.maxSize = Number(properties.maxSize) || 4091904);\r\n        properties.maxFiles = Number(properties.maxfiles) || 999;\r\n        properties.validExtensions = properties.validExtensions || \"\";\r\n\r\n        if (properties.validExtensions.length > 0 && properties.validExtensions.indexOf(\".\") < 0) {\r\n            var singleExtensions = properties.validExtensions.split(\";\");\r\n            for (var i = 0; i < singleExtensions.length; i++) {\r\n                singleExtensions[i] = \"*.\" + singleExtensions[i];\r\n            }\r\n            properties.validExtensions = singleExtensions.join(\";\");\r\n        }\r\n\r\n        properties.addUrl = self.dataService.serviceLocator.getUrl(\"render-ecm-upload-url\") + \"?action=uploadECMFile\";\r\n        properties.editUrl = self.dataService.serviceLocator.getUrl(\"render-ecm-upload-url\") + \"?action=updateECMFileContent\";\r\n        properties.deleteUrl = properties.deleteUrl || undefined;\r\n        properties.allowDelete = bizagi.util.parseBoolean(properties.allowDelete) !== null ? bizagi.util.parseBoolean(properties.allowDelete) : true;\r\n        properties.q_xpath = bizagi.util.encodeXpath(properties.xpath);\r\n        properties.showMetadata = properties.showMetadata === undefined || properties.showMetadata === null ? true : bizagi.util.parseBoolean(properties.showMetadata);\r\n\r\n        var dateFormat = this.getResource(\"dateFormat\");\r\n        var timeFormat = this.getResource(\"timeFormat\");\r\n\r\n        // We will hold here the value to display\r\n        properties.displayValue = \"\";\r\n        properties.showTime = properties.showTime !== undefined ? bizagi.util.parseBoolean(properties.showTime) : false;\r\n        properties.dateFormat = properties.dateFormat || dateFormat;\r\n        properties.timeFormat = properties.timeFormat || timeFormat;\r\n        properties.fullFormat = properties.dateFormat;\r\n\r\n        // Set files property\r\n        self.files = properties.value || [];\r\n        self.filesCount = self.files.length;\r\n\r\n        properties.xpathContext = this.parent.properties.xpathContext || properties.xpathContext || \"\";\r\n\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @param listControl\r\n     * @param fileProperties\r\n     * @returns {*}\r\n     */\r\n    renderControl: function (listControl, fileProperties) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"ecm\");\r\n        var mode = self.getMode();\r\n        var defer = new $.Deferred();\r\n\r\n        properties.value = (fileProperties) ? [[fileProperties.idFileUpload, fileProperties.fileName]] : self.value;\r\n        var html = $.fasttmpl(template, properties, {\r\n            getFileExtension: self.getFileExtension,\r\n            isImage: self.isImage\r\n        });\r\n\r\n        if (self.properties.value != undefined) {\r\n\r\n            var lengthValues = self.properties.value.length;\r\n\r\n            if (lengthValues === 0) {\r\n                defer.resolve(html);\r\n            }\r\n\r\n            $.each(self.properties.value, function (key, value) {\r\n                var data = {};\r\n\r\n                data.idFileUpload = value[0];\r\n                data.fileName = value[1];\r\n                data.idPageCache = self.properties.idPageCache;\r\n                data.xpathContext = self.getXpathContext();\r\n                data.xPath = self.properties.xpath;\r\n                data.editable = self.properties.editable;\r\n                data.idAttrib = self.properties.idAttrib;\r\n\r\n                var form = self.getFormContainer();\r\n                if (form && form.properties && form.properties.sessionId) {\r\n                    data.sessionId = form.properties.sessionId;\r\n                }\r\n\r\n                if (mode === \"execution\") {\r\n                    $.when(self.renderFileLayout(data, fileProperties)).done(function (item) {\r\n                        lengthValues--;\r\n\r\n                        if (bizagi.loader.productBuildToAbout && bizagi.loader.productBuildToAbout.indexOf(\"10.4\") === 0) {\r\n                            item = item.replaceAll(\"Handlers/MetadataFile\", \"Handlers/Metadata\");\r\n                        }\r\n\r\n                        html = self.replaceItemHtml(html, self.properties.id + \"-\" + data.idFileUpload, item);\r\n                        if (lengthValues === 0) {\r\n                            defer.resolve(html);\r\n                        }\r\n                    });\r\n\r\n                }\r\n            });\r\n        } else {\r\n            defer.resolve(html);\r\n        }\r\n        return defer.promise();\r\n    },\r\n\r\n    replaceItemHtml: function (html, id, replace) {\r\n        return html.replace(\"{{\" + id + \"}}\", replace);\r\n    },\r\n\r\n    renderFileLayout: function (data, fileProperties) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var metadataTemplate = self.renderFactory.getTemplate(\"ecm-metadata\");\r\n\r\n        var deferred = $.Deferred();\r\n\r\n        $.when(self.dataService.getECMMetadata(data),\r\n            (fileProperties) ? [fileProperties] : self.dataService.getFileProperties(data)\r\n        ).done(function (metaData, fileProperties) {\r\n\r\n            fileProperties[0].data = data;\r\n\r\n            // Make xpath context\r\n            fileProperties[0].xpathContext = fileProperties[0].xpathContext || form.properties.xpathContext || \"\";\r\n            fileProperties[0].xpath = self.properties.xpath;\r\n\r\n            metaData[0].filename = data.fileName;\r\n            metaData[0].url = self.buildItemUrl(fileProperties[0]);\r\n\r\n            // Define File Properties\r\n            metaData[0].ecm_ecmStatus = fileProperties[0].ecmStatus;\r\n            metaData[0].ecm_isVisible = fileProperties[0].isVisible;\r\n            metaData[0].ecm_allowUpdateMetadata = fileProperties[0].allowUpdateMetadata;\r\n            metaData[0].ecm_allowDelete = fileProperties[0].allowDelete;\r\n            metaData[0].ecm_allowUpdateContent = fileProperties[0].allowUpdateContent;\r\n            metaData[0].ecm_allowView = fileProperties[0].allowView;\r\n            metaData[0].ecm_allowCheckOut = fileProperties[0].allowCheckOut;\r\n            metaData[0].ecm_allowCancelCheckOut = fileProperties[0].allowCancelCheckOut;\r\n            metaData[0].ecm_allowEdit = data.editable && fileProperties[0].allowEdit;\r\n            metaData[0].ecm_ecmStatus = fileProperties[0].ecmStatus;\r\n            metaData[0].idFileUploads = fileProperties[0].idFileUpload;\r\n            metaData[0].xpath = fileProperties[0].xpath;\r\n            metaData[0].value = bizagi.util.parseBoolean(fileProperties[0].value);\r\n            metaData[0].deviceType = bizagi.detectDevice();\r\n\r\n            var html = $.fasttmpl(metadataTemplate, metaData[0]);\r\n            deferred.resolve(html);\r\n        });\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    isImage: function (file) {\r\n        var extension = this.getFileExtension(file);\r\n        var image = [\"JPG\", \"JPEG\", \"GIF\", \"PNG\", \"BMP\"];\r\n\r\n        return (image.indexOf(extension.toUpperCase()) > -1) ? true : false;\r\n    },\r\n\r\n    replaceFilesHtml: function (html, replace) {\r\n        return html.replace(\"{{files}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (file) {\r\n        var self = this;\r\n        var p_sessionId = bizagi.cookie(\"JSESSIONID\");\r\n\r\n        if(!file.data) {\r\n            file.data = {fileName: file.fileName, idAttrib: file.idAttrib}\r\n        }\r\n\r\n        return self.dataService.getECMFileUrl({\r\n            idFileUpload: file.idFileUpload,\r\n            xPath: file.xpath || file.xPath,\r\n            xpathContext: file.xpathContext,\r\n            idAttrib: file.data.idAttrib,\r\n            idPageCache: self.properties.idPageCache,\r\n            fileName: file.data.fileName.replace(/ /g, \"_\"),\r\n            p_sessionId: p_sessionId,\r\n            sessionId: file.data.sessionId || \"\"\r\n        });\r\n    },\r\n\r\n    buildAddParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var data = {};\r\n\r\n        // data.fileExt = properties.validExtensions;\r\n        // data.fileDesc = properties.validExtensions ? self.getResource(\"render-upload-allowed-extensions\") + properties.validExtensions : \"\";\r\n        data.xPath = properties.xpath;\r\n        data.idAttrib = properties.idAttrib;\r\n        data.xpathContext = properties.xpathContext;\r\n        data.metaValues = [];\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = properties.idPageCache;\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Get name of file extension\r\n     * @param fileName\r\n     * @returns {*}\r\n     */\r\n    getFileExtension: function (fileName) {\r\n        fileName = fileName || \"\";\r\n        return fileName.split(\".\").pop();\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Call base\r\n        self._super(value, triggerEvents);\r\n\r\n        // Set files property\r\n        self.files = properties.value || [];\r\n        self.filesCount = (self.files.length) ? self.files.length : properties.value;\r\n    },\r\n\r\n    /**\r\n     * Gets xpath context\r\n     * @returns {*|string}\r\n     */\r\n    getXpathContext: function () {\r\n        return this.properties.xpathContext || \"\";\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getUploadXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Removes a file from the ECM control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    deleteUploadItem: function (item, fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var params = {\r\n            idFileUpload: fileId,\r\n            xPath: properties.xpath,\r\n            idAttrib: properties.idAttrib,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: self.getXpathContext()\r\n        };\r\n\r\n        return self.dataService.deleteECMFile(params).pipe(function () {\r\n\r\n            // Subtract counter\r\n            self.filesCount = self.filesCount - 1;\r\n\r\n            // Remove from local collection\r\n            self.files = $.grep(self.files, function (fileItem) {\r\n                return fileItem[0] != fileId;\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Lock a file from the ECM control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    lockUploadItem: function (fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var params = {\r\n            idFileUpload: fileId,\r\n            xPath: properties.xpath,\r\n            idAttrib: properties.idAttrib,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: self.getXpathContext()\r\n        };\r\n\r\n        return self.dataService.checkOutFile(params);\r\n    },\r\n\r\n    /**\r\n     * Unlock a file from the ECM control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    unlockUploadItem: function (fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var params = {\r\n            idFileUpload: fileId,\r\n            xPath: properties.xpath,\r\n            idAttrib: properties.idAttrib,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: self.getXpathContext()\r\n        };\r\n\r\n        return self.dataService.cancelCheckOut(params);\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Render Yes-no Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for yes-no renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.yesno\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.value = typeof (properties.value) != \"undefined\" ? bizagi.util.parseBoolean(properties.value) : null;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"yesno\");\r\n        var randomId = bizagi.util.randomNumber(100, 10000000);\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            id: randomId,\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Gets the display value of the render\r\n     */\r\n    getDisplayValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.parseBoolean(value) === true) {\r\n            return this.getResource(\"render-boolean-yes\");\r\n        } else if (bizagi.util.parseBoolean(value) === false) {\r\n            return this.getResource(\"render-boolean-no\");\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if a render has no value for required validation\r\n     * @returns {boolean}\r\n     */\r\n    hasValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.isEmptyValue(value)) return false;\r\n        return bizagi.util.parseBoolean(value) !== null;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Letter Class\r\n*   Author: Diego Parra\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for letter renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.letter\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Create a variable to check if the letter has been opened when editable\r\n        this.letterOpened = false;\r\n    },\r\n\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"letter\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template);\r\n    },\r\n\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"letter.readonly\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template);\r\n    },\r\n\r\n    /**\r\n     * Returns the letter content from the server\r\n     */\r\n    getLetterContent: function () {\r\n        // Set flag to true\r\n        this.letterOpened = true;\r\n\r\n        return this.dataService.getLetterContent({\r\n            url: this.properties.getUrl,\r\n            idRender: this.properties.id,\r\n            xpath: this.getXpath(),\r\n            xpathContext: this.getContextXpath(),\r\n            idPageCache: this.properties.idPageCache\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sends the content to the server in order to save\r\n     * @param {} content\r\n     */\r\n    saveLetterContent: function (content) {\r\n        return this.dataService.saveLetterContent({\r\n            url: this.properties.saveUrl,\r\n            idRender: this.properties.id,\r\n            xpath: this.getXpath(),\r\n            xpathContext: this.getContextXpath(),\r\n            idPageCache: this.properties.idPageCache,\r\n            content: content\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Returns the letter content from the server\r\n     */\r\n    getCanGenerateLetter: function () {\r\n        return this.dataService.getCanGenerateLetter({\r\n            idRender: this.properties.id,\r\n            xpath: this.getXpath(),\r\n            xpathContext: this.getContextXpath(),\r\n            idPageCache: this.properties.idPageCache\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Saves the form\r\n     */\r\n    saveForm: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        return form.saveForm();\r\n    },\r\n\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) == false) return true;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) == false) return true;\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (properties.required) {\r\n            if (self.letterOpened == false) {\r\n                message = self.getResource(\"render-letter-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                invalidElements.push({xpath: properties.xpath, message: message});\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns the current xpath\r\n     */\r\n    getXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Returns the current context xpath\r\n     */\r\n    getContextXpath: function () {\r\n        return this.properties.xpathContext;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Form Link Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for form link renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.formLink\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Set properties\r\n        var properties = this.properties;\r\n\r\n        properties.displayType = \"value\";\r\n        properties.maximized = bizagi.util.parseBoolean(this.properties.maximized) != null ? bizagi.util.parseBoolean(this.properties.maximized) : false;\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"formLink\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            align: properties.valueAlign,\r\n            displayName: properties.displayName,\r\n            value: properties.value,\r\n            editable: properties.editable,\r\n            likeButton: bizagi.util.parseBoolean(properties.likeButton) || false\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        // Executes the same template than normal render\r\n        return this.renderControl();\r\n\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Submits a edit request for a link display form\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    submitEditRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Don't send request when the link is not editable\r\n        if (!properties.editable && !properties.value)\r\n            return null;\r\n\r\n        return self.dataService.editLinkForm({\r\n            url: properties.editUrl,\r\n            idRender: properties.id,\r\n            xpath: self.getFormLinkXpath(),\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Submits a link save request for the displayed form\r\n     * @param data\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    submitSaveRequest: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Don't send request when the link is not editable\r\n        if (!properties.editable && !properties.value)\r\n            return null;\r\n\r\n        var xpath = self.getFormLinkXpath();\r\n        var xpathContext = xpath;\r\n\r\n        if (typeof (properties.xpathContext) !== \"undefined\" && properties.xpathContext !== \"\") {\r\n            xpathContext = xpath ? properties.xpathContext + \".\" + xpath : properties.xpathContext;\r\n        }\r\n\r\n        return self.dataService.saveLinkForm({\r\n            url: properties.saveUrl,\r\n            idRender: properties.id,\r\n            xpathContext: xpathContext,\r\n            submitData: data\r\n        }).done(function (response) {\r\n            var executeSubmitOnChange = true;\r\n\r\n            if (response && response.type === \"validationMessages\")\r\n                executeSubmitOnChange = false;\r\n\r\n            if (executeSubmitOnChange)\r\n                self.submitOnChange({});\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Submits a rollback request\r\n     * @param params\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitRollbackRequest: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function(){\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value){\r\n                return null;\r\n            }\r\n            else{\r\n                return self.dataService.rollbackLinkForm({\r\n                    url: properties.rollbackUrl,\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: params ? params.idPageCache : properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Submits a commit request\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitCommitRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function(){\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value){\r\n                return null;\r\n            } else {\r\n                return self.dataService.commitLinkForm({\r\n                    url: properties.commitUrl,\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Submits a checkpoint request\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitCheckpointRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function(){\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value){\r\n                return null;\r\n            } else {\r\n                return self.dataService.sendCheckpoint({\r\n                    url: properties.checkpointUrl,\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Submits a submitData request\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitDataRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function () {\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value) {\r\n                return null;\r\n            } else {\r\n\r\n\r\n                return self.dataService.submitData({\r\n                    url: properties.checkpointUrl,\r\n                    action: \"SUBMITDATA\",\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Automatically this render is valid, so we can't check a required link\r\n    },\r\n\r\n    /**\r\n     * Get Form Link xpath to use\r\n     * @returns {*}\r\n     */\r\n    getFormLinkXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Don't do anything\r\n    }\r\n\r\n});\r\n\r\n","/*\r\n*   Name: Bizagi Render Cascading Combo Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for cascading combo renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.cascadingCombo\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n    BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX\r\n}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Create dependency collection\r\n        self.dependants = [];\r\n        self.isDependant = false;\r\n    },\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.hasLocalData = bizagi.util.isEmpty(properties.parentCombo) ? properties.hasLocalData : false;\r\n\r\n        if (properties.value && properties.value.id === undefined)\r\n            properties.value = null;\r\n\r\n        self.value = properties.value;\r\n\r\n        // Add empty node if configured\r\n        if (properties.hasLocalData)\r\n            properties.data = self.complementData(properties.data);\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        // Check if this is a dependant combo\r\n        var parentCombo = self.parentCombo = self.getParentCombo();\r\n        if (parentCombo != null) {\r\n            var renderType = bizagi.util.normalizeType(parentCombo.properties.type);\r\n\r\n            if (/^cascadingcombo$/i.test(renderType)) {\r\n                self.isDependant = true;\r\n            }\r\n        }\r\n\r\n        // Apply element plugin, set a flag to avoid dependant combo ajax requests\r\n        self.initializingCascadingCombo = true;\r\n\r\n        // Call base\r\n        var result = this._super();\r\n\r\n        if (mode !== \"execution\") {\r\n            self.initializingCascadingCombo = false;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        self.initializingCascadingCombo = false;\r\n\r\n        // Bind with parent combo\r\n        if (self.isDependant) {\r\n            self.parentCombo.bindDependantCombo(self);\r\n        }\r\n    },\r\n\r\n    configureReadOnlyHandlers: function () {\r\n        var self = this;\r\n        self.initializingCascadingCombo = false;\r\n\r\n        // Bind with parent combo\r\n        if (self.isDependant) {\r\n            self.parentCombo.bindDependantCombo(self);\r\n        }\r\n    },\r\n    /*\r\n    *   Refresh the combo, after it has been painted\r\n    */\r\n    refresh: function (params, isInitialValue) {\r\n        var self = this;\r\n\r\n        // Wait until current element is rendered\r\n        $.when(self.isRendered()).done(function () {\r\n\r\n            // Unbind previous handler\r\n            // self.parentCombo.unbindDependantCombo(self);\r\n\r\n            // Clear current control\r\n            var control = self.getControl();\r\n            var mode = self.getMode();\r\n            control.empty();\r\n\r\n            // Render combo again\r\n            $.when(self.renderCombo(params)).then(function (html) {\r\n                // Append new element\r\n                control.html(html);\r\n\r\n                // Post-render method\r\n                self.postRender();\r\n\r\n                if (mode == \"execution\") {\r\n                    self.configureHandlers();\r\n                }\r\n\r\n                // Set current value\r\n                if (self.getValue() !== undefined) {\r\n                    self.setDisplayValue(self.getValue());\r\n                }\r\n\r\n                if (self.deferredVisible) {\r\n                    self.deferredVisible.resolve();\r\n                }\r\n\r\n                self.trigger(\"select\", [self.value, isInitialValue]);\r\n\r\n            });\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Fetch the data into a deferred\r\n    */\r\n    getData: function (params) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        // Just execute ajax calls when rendering in execution mode\r\n        if (mode != \"execution\") return self.getDummyData();\r\n\r\n        // Do not load dependant combos when there are no parent id\r\n        if (self.isDependant) {\r\n            if (self.parentCombo && params) {\r\n                self.properties.remoteDataLoaded = false;\r\n            }\r\n\r\n            // Return an empty array when there are no parent defined when the combo is dependant\r\n\r\n            var parentValue = (self.parentCombo.selectedValue) ? self.parentCombo.selectedValue.id : '';\r\n\r\n            if (parentValue != '') {\r\n                return this._super(params);\r\n            } else {\r\n                return [];\r\n            }\r\n        }\r\n\r\n        return this._super(params);\r\n    },\r\n\r\n\r\n    /* \r\n    *   Bind the combos to create the cascading feature\r\n    */\r\n    bindDependantCombo: function (dependantCombo) {\r\n        var self = this;\r\n        var renderType = bizagi.util.normalizeType(dependantCombo.properties.type);\r\n\r\n        // Check it is a cascading combo\r\n        if (/^cascadingcombo$/i.test(renderType)) {\r\n\r\n            // Append to dependant combos\r\n            self.dependants.push(dependantCombo);\r\n\r\n            // When this combo is selected we need to make the other combo to auto fill with an extra filter\r\n            dependantCombo.onChangeFunction = function (event, item, isInitialValue) {\r\n                // Fill items for next combo\r\n                self.refreshDependantCombo(dependantCombo, item.id, self.focusDependant, isInitialValue);\r\n\r\n                //if initial value is true, it prevents deleting the next combo\r\n                if (!isInitialValue) {\r\n                    // Clean next inputs\r\n                    dependantCombo.cleanInput();\r\n                }\r\n            };\r\n\r\n            if (!self.isEventBinded(\"select\")) {\r\n                self.bind(\"select\", dependantCombo.onChangeFunction);\r\n            }\r\n\r\n            // After the event binding has been made, we need to fill the new dependant render if this instance (the parent) has a value\r\n            if (!bizagi.util.isEmpty(self.getValue())) {\r\n\r\n                // Auto fill dependant items with current value\r\n                if (self.properties.hasLocalData) {\r\n                    self.refreshDependantCombo(dependantCombo, self.getValue().id);\r\n                }\r\n\r\n            }\r\n        }\r\n    },\r\n    isEventBinded: function (event) {\r\n        if (typeof $._data(this.observableElement.get(0), \"events\") === \"undefined\") {\r\n            return false;\r\n        } else {\r\n            if (typeof $._data(this.observableElement.get(0), \"events\")[event] === \"undefined\") {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /* \r\n    *   Unbind the combos that are being redrawn\r\n    */\r\n    unbindDependantCombo: function (dependantCombo) {\r\n        // When this combo is selected we need to make the other combo to auto fill with an extra filter\r\n        this.unbind(\"select\", dependantCombo.onChangeFunction);\r\n    },\r\n\r\n    /*\r\n    *   Fills the next dependant combo based on the given value\r\n    */\r\n    refreshDependantCombo: function (dependant, parentValue, focus, isInitialValue) {\r\n        var self = this;\r\n        var params = {};\r\n        params[self.Class.BA_ACTION_PARAMETER_PREFIX + \"parent\"] = parentValue;\r\n\r\n        dependant.deferredVisible = $.Deferred();\r\n\r\n        if (!isInitialValue) {\r\n            // Clear dependant value\r\n            dependant.setValue(\"\", false);\r\n        }\r\n\r\n        dependant.refresh(params, isInitialValue);\r\n\r\n        if (focus) {\r\n            $.when(dependant.deferredVisible.promise()).done(function () {\r\n                dependant.inputCombo.trigger(\"click\");\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Empty html when render from action\r\n     */\r\n\r\n    emptyControlByChangeEditability: function () {\r\n        var control = this.getControl();\r\n        control.empty();\r\n    },\r\n\r\n    /* \r\n    *   Cleans the combo value\r\n    */\r\n    cleanInput: function () {\r\n        this.triggerHandler(\"select\", {id: 0});\r\n    },\r\n\r\n    /*\r\n    *   Search for the other cascading combo refering this one, by idRender\r\n    */\r\n    getParentCombo: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Check if parentCombo is defined\r\n        if (properties.parentCombo === undefined)\r\n            return null;\r\n\r\n        // Get form reference\r\n        var form = self.getFormContainer();\r\n        var renderType = bizagi.util.normalizeType(self.properties.type);\r\n        var controls = /^cascadingcombo$/i.test(renderType) ? form.getRenderByType(properties.type) : [];\r\n\r\n        var i = 0;\r\n        var j = 0;\r\n        var parents = [];\r\n\r\n        var control = null;\r\n\r\n        for (; i < controls.length; i++) {\r\n            if (properties.parentCombo === controls[i].properties.id) {\r\n                parents.push({control: controls[i], index: i});\r\n            }\r\n        }\r\n\r\n        if (parents.length > 1) {\r\n            var parentLength, parent, xpathParent, parentArray;\r\n\r\n            for (; j < parents.length; j++) {\r\n                parent = parents[j].control;\r\n                xpathParent = parent.properties.xpath;\r\n                parentArray = xpathParent.split(\".\");\r\n                parentLength = parentArray.length;\r\n                xpathParent = parentArray.slice(0, parentLength - 1).join(\".\");\r\n\r\n                if (xpathParent === properties.xpath) {\r\n                    control = controls[parents[j].index];\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            control = form.getRenderById(properties.parentCombo);\r\n        }\r\n\r\n        // Return parent combo\r\n        return control;\r\n    },\r\n\r\n    /* \r\n    *  Method to determine if the render value can be sent to the server or not\r\n    */\r\n    canBeSent: function () {\r\n        var self = this;\r\n\r\n        // If the render has dependants we can't send to the server\r\n        return self._super() && bizagi.util.isMapEmpty(self.dependants);\r\n    },\r\n\r\n    /*\r\n    *   Determines if we need to show the current data regardless if it belongs to data or not\r\n    *   Can be overriden to change behaviour\r\n    */\r\n    showCurrentData: function () {\r\n        var mode = this.getMode();\r\n\r\n        if (mode != \"execution\") return true;\r\n        return false;\r\n    },\r\n\r\n    /*\r\n    *   Enables submit on change feature for the current render\r\n    */\r\n    configureSubmitOnChange: function () {\r\n        var self = this;\r\n\r\n        if (!self.configured) {\r\n            // Call super\r\n            self._super();\r\n            self.configured = true;\r\n        }\r\n    },\r\n\r\n    internalSubmitOnChange: function (data, bRefreshForm) {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        if (self.isDependant && self.canBeSent() && self.itemSelected !== undefined)\r\n            return self._super(data, bRefreshForm);\r\n        return defer.resolve();\r\n    },\r\n    /*\r\n    *   Sets the initial value for the renders\r\n    */\r\n    internalSetInitialValue: function () {\r\n        var self = this;\r\n        // Call original method\r\n        self._super();\r\n\r\n        if (self.value && self.isDependant == false) {\r\n            self.internalSetInitialValueFlag = true;\r\n            self.trigger(\"select\", [self.value, true]);\r\n        }\r\n\r\n        self.internalSetInitialValueFlag = false;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi Render List Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for list renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.list\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data \r\n     * @returns {} \r\n     */\r\n    initializeData: function(data) {      \r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.listSize = properties.listSize || 0;\r\n    },\r\n\r\n    /**\r\n     * Gets the template used by the combo render can be overriden in subclasses\r\n     * to reuse logic and just change the template\r\n     * @returns {} \r\n     */\r\n    getTemplateName: function() {\r\n        return \"list\";\r\n    },\r\n\r\n    /**\r\n     * Determines if we need to show the current data regardless if it belongs\r\n     * to data or not Can be overriden to change behaviour    \r\n     * @returns {} \r\n     */\r\n    showCurrentData: function() {\r\n        return false;\r\n    }\r\n\r\n});","/*\r\n *   Name: Bizagi Render MultiSelect Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for multiselect renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.multiSelect\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) !== null ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.maxRecords = Number(properties.maxRecords) || 20;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"list-multiselect\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            editable: properties.editable,\r\n            align: properties.valueAlign\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"list-multiselect\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            editable: properties.editable,\r\n            align: properties.valueAlign\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Fetch the data into a deferred\r\n     * @returns {*[]}\r\n     */\r\n    getData: function () {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n        var properties = this.properties;\r\n\r\n        // Go to server\r\n        self.dataService.multiaction().getData({\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contexttype || null,\r\n            idPageCache: properties.idPageCache\r\n        }).done(function (data) {\r\n\r\n            properties.data = data;\r\n            defer.resolve(properties.data);\r\n\r\n        }).fail(function (data) {\r\n            if (data.type === \"not-processed\")\r\n                return;\r\n\r\n            // Show error from server\r\n            var auxMsg = \"\";\r\n            var form = self.getFormContainer();\r\n            var msgObj = self.properties.displayName + \": \";\r\n\r\n            if (typeof data == \"string\") {\r\n                auxMsg = JSON && JSON.parse(data) || $.parseJSON(data);\r\n            } else {\r\n                auxMsg = data;\r\n            }\r\n\r\n            msgObj += auxMsg.message;\r\n\r\n            form.addValidationMessage(msgObj);\r\n\r\n            defer.reject(data);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        triggerEvents = triggerEvents !== undefined ? triggerEvents : true;\r\n\r\n        value = JSON.encode({\"value\": value});\r\n\r\n        this._super(value, triggerEvents);\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns the internal value\r\n     * @returns {*|Array}\r\n     */\r\n    getValue: function () {\r\n        return this.value || [];\r\n    },\r\n\r\n    /**\r\n     * Get list of data\r\n     * @returns {*|Array}\r\n     */\r\n    getDataValue: function () {\r\n        var list;\r\n\r\n        try {\r\n            list = JSON.parse(this.value);\r\n\r\n            return list.value || [];\r\n        } catch (e) {\r\n            return [];\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if a render has no value for required validation\r\n     * @returns {*|Array|boolean}\r\n     */\r\n    hasValue: function () {\r\n        var values = this.getDataValue();\r\n\r\n        return values && values.length > 0;\r\n    },\r\n\r\n    getElementsToStylize: function (context) {\r\n        return $(\".bz-multiselect .bz-multiselect__tag:not(.bz-multiselect__plus)\", context);\r\n    },\r\n\r\n    /**\r\n     * Add elements to global value\r\n     * @param value\r\n     */\r\n    addElement: function (value) {\r\n        var newValue = this.getDataValue();\r\n\r\n        newValue.push(value);\r\n\r\n        this.setValue(newValue);\r\n    },\r\n\r\n    /**\r\n     * Remove elements to global value\r\n     * @param value\r\n     */\r\n    removeElement: function (value) {\r\n        var idToRemove = value.id;\r\n        var newValue = this.getDataValue()\r\n            .filter(function (item) {\r\n                return item.id !== idToRemove;\r\n            });\r\n\r\n        this.setValue(newValue);\r\n    },\r\n\r\n    /**\r\n     * Submit the selected data to the server in order to be saved\r\n     */\r\n    submitData: function () {\r\n        var data = {};\r\n\r\n        // Add current data\r\n        data[this.properties.xpath] = this.getValue();\r\n\r\n        // Executes submit on change\r\n        this.submitOnChange(data);\r\n    },\r\n\r\n    /**\r\n     * Mark a item how checked\r\n     * @param id\r\n     * @returns {*}\r\n     */\r\n    markAsChecked: function (id) {\r\n        var self = this;\r\n\r\n        return self.selected.some(function (item, index) {\r\n            var found = item.id === id;\r\n\r\n            if (found) self.selected.splice(index, 1);\r\n            return found;\r\n        });\r\n    },\r\n\r\n    isChecked: function (values, id) {\r\n        return values.some(function (item) {\r\n            return item.id == id;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to verify if can add more items\r\n     * @param $tagsContainer\r\n     * @returns {boolean}\r\n     */\r\n    canAddMoreItems: function ($tagsContainer) {\r\n        var self = this;\r\n        var containerWidth = parseInt($tagsContainer.css(\"width\"));\r\n        var $children = $tagsContainer.children();\r\n\r\n        var childrenWidth = $children\r\n            .toArray()\r\n            .reduce(function (acc, child) {\r\n                acc += self.getElementWidth(child);\r\n                return acc;\r\n            }, 0);\r\n\r\n        return containerWidth > (childrenWidth + self.Class.MORE_OPTION_WIDTH)\r\n\r\n    },\r\n\r\n    /**\r\n     * getElementWidth\r\n     * @param element\r\n     * @returns {*}\r\n     */\r\n    getElementWidth: function (element) {\r\n        var styles = window.getComputedStyle(element);\r\n        var outerWidth = $(element).outerWidth();\r\n        return outerWidth + [\r\n            \"padding-left\",\r\n            \"padding-right\",\r\n            \"margin-left\",\r\n            \"margin-right\"\r\n        ].reduce(function (acc, property) {\r\n            acc += parseInt(styles[property]);\r\n            return acc;\r\n        }, 0);\r\n    },\r\n\r\n    /**\r\n     * Filtering list of elements\r\n     * @param query\r\n     * @param $container\r\n     */\r\n    filterList: function (query, $container) {\r\n\r\n        $container.filter(function () {\r\n            var stringContainer = $(this).text().toUpperCase();\r\n            var stringToSearch = query.toUpperCase();\r\n\r\n            if (stringContainer.indexOf(stringToSearch) >= 0) {\r\n                return $(this);\r\n            } else {\r\n                $(this).hide();\r\n            }\r\n        }).show();\r\n\r\n    },\r\n\r\n    /**\r\n     * addSelectedElements\r\n     */\r\n    addSelectedElements: function () {\r\n    },\r\n\r\n    /**\r\n     * Find item by id\r\n     * @param id\r\n     * @returns {[]}\r\n     */\r\n    findItemById: function (id) {\r\n        return (this.properties.data || []).find(function (item) {\r\n            return item.id == id;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n        return bizagi.util.formatItem(value);\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi Render Search List Control\r\n*   Author: UI Forms Team\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.searchList\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data \r\n     * @returns {} \r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.maxRecords = Number(properties.maxRecords) || 20;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) !== null ? bizagi.util.parseBoolean(properties.editable) : true;\r\n\r\n        // Set value\r\n        self.setValue(properties.value);\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {} \r\n     */\r\n    renderControl: function() {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"searchList\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            value: properties.value,\r\n            allowTyping: properties.allowTyping,\r\n            items: properties.value,\r\n            hasSearchForm: properties.searchForms ? true : false,\r\n            editable: properties.editable\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {} \r\n     */\r\n    renderReadOnly: function() {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param {} value \r\n     * @returns {} \r\n     */\r\n    setValue: function(value) {\r\n        this.value = JSON.encode({ \"value\": value });\r\n        this.triggerRenderChange();\r\n    },\r\n\r\n    /**\r\n     * Add elements to global value\r\n     * @param value = { id:integer,value:[string || array] }\r\n     * @returns {} \r\n     */\r\n    addElement: function(value) {\r\n        var list = JSON.parse(this.value);\r\n\r\n        list.value.push(value);\r\n\r\n        this.setValue(list.value);\r\n    },\r\n\r\n    /**\r\n     * Remove elements to global value\r\n     * @param value = { id:integer }\r\n     * @returns {} \r\n     */\r\n    removeElement: function(value) {\r\n        var list = JSON.parse(this.value);\r\n        var result = [];\r\n\r\n        $.each(list.value, function(key, val) {\r\n            if (val.id != value.id) {\r\n                result.push({ id: val.id, value: val.value });\r\n            }\r\n        });\r\n\r\n        this.setValue(result);\r\n    },\r\n\r\n    /**\r\n     * Remove last element to global value\r\n     * @returns {} \r\n     */\r\n    removeLastElement: function() {\r\n        var list = JSON.parse(this.value);\r\n\r\n        if (list.value.length > 0) {\r\n            list.value.pop();\r\n            this.setValue(list.value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Fetch the data into a deferred\r\n     * @param {} params \r\n     * @returns {} \r\n     */\r\n    getData: function(params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n\r\n        // Resolve with remote data\r\n        self.dataService.getSearchData({\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            term: properties.term,\r\n            extra: params\r\n        }).done(function(data) {\r\n            // Resolve with fetched data\r\n            properties.data = data;\r\n            defer.resolve(properties.data);\r\n        }).fail(function(data) {\r\n            var hideStatus = data.hideStatus || false;\r\n\r\n            defer.resolve({});\r\n\r\n            if (!hideStatus) {\r\n                self.trigger(\"onSearchError\", data);\r\n            }\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Submits the selected data to the server in order to be saved\r\n     * @returns {} \r\n     */\r\n    submitData: function() {\r\n        var data = {};\r\n\r\n        // Add current data\r\n        data[this.properties.xpath] = this.getValue();\r\n\r\n        // Executes submit on change\r\n        this.submitOnChange(data);\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {} \r\n     */\r\n    canBeSent: function() {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Check if the control has value\r\n     * @returns {} \r\n     */\r\n    hasValue: function() {\r\n        var list = this.getListItems();\r\n\r\n        return list.length > 0;\r\n    },\r\n\r\n    getListItems: function(){\r\n        var value = this.getValue();\r\n        var finalValue = typeof (value) === \"string\" ? JSON.parse(value).value : value.value;\r\n\r\n        return finalValue || [];\r\n    },\r\n    \r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n        return bizagi.util.formatItem(value);\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Money Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for money numbers\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.money\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n        var format = this.getResource(\"numericFormat\");\r\n\r\n        // Configures symbol\r\n        properties.showsymbol = typeof (properties.showsymbol) !== \"undefined\" ? properties.showsymbol : true;\r\n\r\n        if (properties.showsymbol) {\r\n            var symbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.symbol : format.symbol;\r\n            properties.symbol = properties.currencySymbol ? properties.currencySymbol : symbol;\r\n        } else {\r\n            properties.symbol = \"\";\r\n        }\r\n\r\n        properties.groupDigits = true;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Radio Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for radio renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.radio\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.horizontal = bizagi.util.parseBoolean(properties.horizontal) || false;\r\n\r\n        // Set a random identifier to fix a problem when using radio buttons inside grids and the plugin mismatch the elements because all of them have the same name\r\n        properties.unique = bizagi.util.randomNumber(1000, 1000000);\r\n    },\r\n\r\n    /**\r\n     * Gets the template used by the combo render\r\n     * Can be overridden in subclasses to reuse logic and just change the template\r\n     * @returns {string}\r\n     */\r\n    getTemplateName: function () {\r\n        return \"radio\";\r\n    },\r\n\r\n    /**\r\n     * Determines if we need to show the empty node or not\r\n     * Can be overridden to change behaviour\r\n     * @returns {boolean}\r\n     */\r\n    showEmpty: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Determines if we need to show the current data regardless if it belongs to data or not\r\n     * Can be overridden to change behaviour\r\n     * @returns {boolean}\r\n     */\r\n    showCurrentData: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Adds custom parameters to process the template\r\n     * @returns {{vertical: boolean}}\r\n     */\r\n    getTemplateParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return {\r\n            vertical: !properties.horizontal,\r\n            horizontal: properties.horizontal\r\n        };\r\n    },\r\n\r\n    /**\r\n     * Cleans current data\r\n     */\r\n    cleanData: function () {\r\n        var self = this;\r\n        var value = {id: \"\", label: \"\"};\r\n        var selectedItem = self.element.find(\".ui-radio-state-checked\");\r\n\r\n        selectedItem.removeClass(\"ui-radio-state-checked\");\r\n        self.setDisplayValue(value);\r\n        self.setValue(value, false);\r\n        self.clearDisplayValue();\r\n    },\r\n\r\n    /**\r\n     * Check value of control is changed\r\n     * @returns {boolean}\r\n     */\r\n    controlValueIsChanged: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var value = self.getValue();\r\n        var compareValue = properties.originalValue;\r\n        var baseValue = properties.defaultValue;\r\n\r\n        var result = true;\r\n\r\n        if (value && value.length !== undefined) {\r\n            value = value[0];\r\n        }\r\n        if (compareValue && compareValue.length !== undefined) {\r\n            compareValue = compareValue[0];\r\n        }\r\n        if (baseValue && baseValue.length !== undefined) {\r\n            baseValue = baseValue[0];\r\n        }\r\n\r\n        value = value && value.id !== undefined ? value.id : value;\r\n        compareValue = compareValue && compareValue.id !== undefined ? compareValue.id : compareValue;\r\n        baseValue = baseValue && baseValue.id !== undefined ? baseValue.id : baseValue;\r\n\r\n        if (baseValue !== undefined) {\r\n            if ((baseValue == value) && (value == compareValue)) {\r\n                result = false;\r\n            } else {\r\n                if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                    result = false;\r\n                } else {\r\n                    result = (compareValue == value) ? false : true;\r\n                }\r\n            }\r\n        } else {\r\n            if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue == value) ? false : true;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n});\r\n\r\n","/**\r\n*   Name: Bizagi Render Image Class\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define basic stuff for image control\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.image\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n    BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX,\r\n    BA_PAGE_CACHE: bizagi.render.services.service.BA_PAGE_CACHE\r\n}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var maxSize = 4091904;\r\n\r\n        if(properties.maxSize) {\r\n            maxSize = Number(properties.maxSize);\r\n        } else if (typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\") {\r\n            maxSize = Number(BIZAGI_SETTINGS.UploadMaxFileSize);\r\n        }\r\n\r\n        properties.maxSize = maxSize;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) === true;\r\n        properties.validExtensions = properties.validExtensions || \"\";\r\n\r\n        if (properties.validExtensions.length > 0 && properties.validExtensions.indexOf(\".\") < 0) {\r\n            var singleExtensions = properties.validExtensions.replace(/\\ /gi, '').split(\";\");\r\n\r\n            for (var i = 0; i < singleExtensions.length; i++) {\r\n                if (singleExtensions[i].length != 0) {\r\n                    singleExtensions[i] = \"*.\" + singleExtensions[i].replaceAll(\" \", \"\");\r\n                } else {\r\n                    //Removes the empty element\r\n                    var index = singleExtensions.indexOf(singleExtensions[i]);\r\n                    singleExtensions.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            properties.validExtensions = singleExtensions.join(\";\");\r\n        }\r\n\r\n        properties.addUrl = properties.addUrl || self.dataService.getUploadAddFileUrl(properties.isUserPreference);\r\n        properties.allowDelete = bizagi.util.parseBoolean(properties.allowDelete) !== null\r\n\r\n        properties.isAutoWidth = false;\r\n        properties.isAutoHeight = false;\r\n\r\n        if (properties.width === -1) {\r\n            properties.width = \"100%\";\r\n            properties.isAutoWidth = true;\r\n        } else {\r\n            properties.width = properties.width + \"px\";\r\n        }\r\n\r\n        if (properties.height === -1) {\r\n            properties.height = \"auto\";\r\n            properties.isAutoHeight = true;\r\n        } else {\r\n            properties.height = properties.height + \"px\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var def = new $.Deferred(); //design\r\n        var template = self.renderFactory.getTemplate(\"image\");        \r\n\r\n        $.when(self.buildItemUrl()).done(function (dataUrl) {\r\n            if (!self.isDisposed()) {\r\n                self.properties.url = dataUrl !== \"\" ? dataUrl : \"\";\r\n                self.properties.value = self.value = self.properties.url.length > 0 ? [self.properties.url] : null;\r\n                self.setValue(self.properties.value);                \r\n\r\n                var html = $.fasttmpl(template, { url: self.properties.url });\r\n                def.resolve(html);\r\n            }\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"image-readonly\");\r\n        var html = $.fasttmpl(template);\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * This method return the name of template of items, please make a override in each device\r\n     * @returns {*}\r\n     */\r\n    getTemplateItem: function () {\r\n        return this.renderFactory.getTemplate(\"image-item\");\r\n    },\r\n\r\n    /**\r\n     * Renders a single upload item\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    renderUploadItem: function (file) {\r\n        var self = this;\r\n        var mode = self.getMode();        \r\n        var def = new $.Deferred();\r\n        var template = self.getTemplateItem();\r\n\r\n        $.when(self.buildItemUrl()).done(function (dataUrl) {\r\n            var url = dataUrl || \"\";\r\n\r\n            var html = $.fasttmpl(template, {\r\n                url: url,\r\n                allowDelete: self.properties.allowDelete,\r\n                editable: self.properties.editable,\r\n                mode: mode,                \r\n            });\r\n\r\n            self.properties.url = url;\r\n            self.properties.value = url.length > 0 ? [url] : null;\r\n\r\n            def.resolve(html);\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param params\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var def = new $.Deferred();\r\n        var url = \"\";\r\n\r\n        if (!this.isExecutionMode()) {\r\n            url = \"\"; // TODO: Review the use of \"javascript:void(0);\";\r\n            def.resolve(url);\r\n        } else {\r\n            var parameters = {\r\n                url: properties.dataUrl,\r\n                xpath: properties.xpath,\r\n                idRender: properties.id,\r\n                xpathContext: properties.xpathContext,\r\n                idPageCache: properties.idPageCache,\r\n                property: params && params.property ? params.property : \"fileContent\",\r\n                dataType: \"text\"\r\n            };\r\n\r\n            if (properties.contexttype) {\r\n                parameters.contexttype = properties.contexttype;\r\n            }\r\n\r\n            if (properties.isUserPreference) {\r\n                self.currentUser = bizagi.currentUser.idUser;\r\n                parameters.xpathContext = \"@Context.Users[id == \" + self.currentUser + \"]\";\r\n                parameters.contexttype = \"entity\";\r\n                parameters.surrogatekey = self.currentUser;\r\n            }\r\n\r\n            self.dataService.multiaction().getPropertyData(parameters, \"text\")\r\n                .done(function (data) {\r\n                    if (data.charAt(0) === \"\\\"\") {\r\n                        data = data.slice(1, -1);\r\n                    }\r\n\r\n                    if (data !== \"\") {\r\n                        url = \"data:image/png;base64,\" + data;\r\n                    }\r\n\r\n                    def.resolve(url);\r\n                });\r\n        }\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    buildItemUrlOffline: function(parameters){\r\n        var def = new $.Deferred();\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var formParams = self.getFormParams();\r\n        var parameters = {\r\n            idCase: formParams.idCase,\r\n            idWorkitem: formParams.idWorkitem,\r\n            id: properties.xpath,\r\n            offlineType: formParams.offlineType\r\n        }\r\n        $.when(self.dataService.getOfflineImage(parameters, \"base64\"))\r\n        .done( function(imageValue){\r\n            properties.value = imageValue;\r\n            def.resolve(bizagi.util.getDataUrl(properties));\r\n        });\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Create an image offline\r\n     * @param path File in Browser or Path in Mobile Devices\r\n     * @param promise Promise to be resolved when save is completed\r\n     */\r\n    saveImageOffline: function (path, promise) {\r\n        var self = this;        \r\n        var blobPromise = new $.Deferred();\r\n\r\n        if(self.isNative){\r\n            var fileName = self.fileProperties.name;            \r\n            if (!bizagi.util.isAndroidDevice()) {\r\n                path = bizagi.util.media.normalizeIOSFilePath(path);\r\n            }\r\n            else{\r\n                // Fix android 4.4 getting images from recent folder\r\n                path = bizagi.util.media.getImagePath(path);\r\n            }\r\n            \r\n            var errorHandler = function (error) {\r\n                bizagi.log('error converting path to blob', error);  \r\n                blobPromise.reject(error);\r\n            };\r\n    \r\n            window.resolveLocalFileSystemURL(path, function (fileEntry) {\r\n                fileEntry.file(function (file) {    \r\n                    var reader = new FileReader();\r\n                    reader.onloadend = function () {\r\n                        var blob = new Blob([this.result], {type: file.type});\r\n                        blob.name = fileName;\r\n                        blobPromise.resolve(blob);\r\n                    }    \r\n                    reader.readAsArrayBuffer(file);\r\n                }, errorHandler);\r\n            }, errorHandler);\r\n        }\r\n        else {\r\n            blobPromise.resolve(path);\r\n        }        \r\n\r\n        $.when(blobPromise)\r\n        .done( function(blobImage) {\r\n            // Save the image as attachment \r\n            var formParams = self.getFormParams();\r\n            var parameters = {\r\n                idCase: formParams.idCase,\r\n                idWorkitem: formParams.idWorkitem,\r\n                id: self.properties.xpath,\r\n                operationType: \"edition\",\r\n                offlineType: formParams.offlineType\r\n            }\r\n\r\n            $.when(self.dataService.saveOfflineImage(parameters, blobImage))\r\n            .done( function() {\r\n                promise.resolve();\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url in real size\r\n     * @returns {*}\r\n     */\r\n    buildFullItemUrl: function () {\r\n        var def = new $.Deferred();\r\n\r\n        $.when(this.buildItemUrl({\"property\": \"fileFullContent\"}))\r\n            .done(function (dataUrl) {\r\n                def.resolve(dataUrl);\r\n            });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        // Call base\r\n        this._super(value, triggerEvents);\r\n    },\r\n\r\n    /**\r\n     * Returns the internal value\r\n     * @returns {*|Array}\r\n     */\r\n    getValue: function () {\r\n        return this.properties.value || [];\r\n    },\r\n\r\n    /**\r\n     * Check if control is valid or not\r\n     * @param invalidElements\r\n     * @returns {boolean}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(self.properties.visible) === false) {\r\n            return true;\r\n        }\r\n\r\n        // Don't check non- editable renders\r\n        if (bizagi.util.parseBoolean(self.properties.editable) === false) {\r\n            return true;\r\n        }\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (self.properties.required) {\r\n            var newRow = self.grid && self.grid.isFromCreatedRow.apply(self);\r\n\r\n            if (!newRow) {\r\n                var value = self.getValue();\r\n\r\n                if (value.length === 0) {\r\n                    var message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", self.properties.displayName);\r\n                    invalidElements.push({ xpath: self.properties.xpath, message: message });\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Build add params to send to the server\r\n     */\r\n    buildAddParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var data = {};\r\n\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = self.getUploadXpath();\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = properties.id;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = properties.xpathContext;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = properties.idPageCache;\r\n        data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = form.properties.sessionId;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = 'savefile';\r\n\r\n        if (properties.contexttype) {\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = properties.contexttype;\r\n        }\r\n\r\n        try {\r\n            if (typeof (BIZAGI_SESSION_NAME) !== \"undefined\") {\r\n                data[BIZAGI_SESSION_NAME] = form.properties.sessionId;\r\n            } else {\r\n                data[\"JSESSIONID\"] = form.properties.sessionId;\r\n            }\r\n        } catch (e) {\r\n            data[\"JSESSIONID\"] = form.properties.sessionId;\r\n        }\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getUploadXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Clean html because some scenarios render twice\r\n     */\r\n    emptyControlByAsyncRenderDeferred: function () {\r\n        var $control = this.getControl();\r\n        $control.empty();\r\n    }\r\n});","/*\r\n*   Name: BizAgi User field render\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define the basic behavior for userfields\r\n*/\r\n$.Class.extend(\"bizagi.rendering.userfieldDefinition\", {}, {\r\n\r\n    /*************************************************************/\r\n    /* Private section of the userfield                          */\r\n    /*************************************************************/\r\n\r\n    /*\r\n    *   Method to be overriden by userfields in order to ensure that custom files are loaded before the execution\r\n    */\r\n    getFileDependencies: function () {\r\n        return null;\r\n    },\r\n\r\n    postRender: function () {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super();\r\n\r\n        var defer = $.Deferred();\r\n        var fileDependencies = self.getFileDependencies();\r\n        if (fileDependencies && fileDependencies.length > 0) {\r\n            bizagi.loader.loadFile(fileDependencies)\r\n\t\t\t.then(function () {\r\n\t\t\t    // After all dependencies has been resolved\r\n\t\t\t    self.internalRenderControl();\r\n\t\t\t    defer.resolve();\r\n\t\t\t});\r\n\r\n        } else {\r\n            $.when( self.renderUserfieldControl()).done(function () {\r\n                defer.resolve();\r\n            });\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    renderUserfieldControl: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n        var def = new $.Deferred();\r\n\r\n        if (properties.extendedData && properties.extendedData.length > 0) {\r\n            self.extendedData = bizagi.services.ajax.parseJSON(properties.extendedData);\r\n        } else {\r\n            self.extendedData = {};\r\n        }\r\n\r\n\r\n        var loadUserfield = function () {\r\n            var userEditableControl = self.getEditableControl();\r\n            if (userEditableControl) {\r\n                self.input = control.html(userEditableControl);\r\n            }\r\n            self.renderComplex();\r\n            def.resolve();\r\n        };\r\n\r\n        \r\n            loadUserfield();\r\n    \r\n        \r\n        return def.promise();\r\n    },\r\n\r\n    postRenderReadOnly: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n\r\n        if (properties.extendedData && properties.extendedData.length > 0) {\r\n            self.extendedData = bizagi.services.ajax.parseJSON(properties.extendedData);\r\n        } else {\r\n            self.extendedData = {};\r\n        }\r\n\r\n        var loadUserfieldReadOnly = function () {\r\n            try {\r\n                var userReadOnlyControl = self.getReadonlyControl();\r\n                if (userReadOnlyControl) {\r\n                    self.input = control.html(userReadOnlyControl);\r\n                }                                                 \r\n                self.renderComplex();\r\n                \r\n            } catch (error) {\r\n                var displayName = self.properties.displayName || \"Widget\";\r\n                control.html(\"<h6>\" + displayName  + \"</h6>\")\r\n            }\r\n            \r\n        };\r\n\r\n        if (self.ready) {\r\n            self.ready().done(function () {\r\n                loadUserfieldReadOnly();\r\n            });\r\n        } else {\r\n            loadUserfieldReadOnly();\r\n        }\r\n    },\r\n\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n        return self.getReadonlyValue();\r\n    },\r\n\r\n    /*\r\n    *   Sets the value in the rendered control \r\n    */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self.setValue(value);\r\n\r\n        // Set editable value in control\r\n        self.setEditableValue(value);\r\n    },\r\n\r\n    getValue: function () {\r\n        var self = this;\r\n        return self.getEditableValue();\r\n    },\r\n\r\n    getPropertyValue: function (propertyName, params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n        self.dataService.multiaction().getPropertyData({\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            property: propertyName,\r\n            extra: params,\r\n            dataType: params ? params.dataType : null\r\n        }).done(function (data) {\r\n            if (data.type == \"error\") {\r\n                // Workflow engine error, we gotta show it with error\r\n                self.getFormContainer().addErrorMessage(data.message);\r\n                defer.reject(data);\r\n            } else {\r\n                defer.resolve(data);\r\n            }\r\n        }).fail(function (jqXHR, textStatus, errorThrown) {\r\n            defer.reject(jqXHR, textStatus, errorThrown);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Saves the form\r\n    */\r\n    saveForm: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        return form.saveForm();\r\n    },\r\n\r\n    /**\r\n    * Returns all the elements that match the given xpath\r\n    */\r\n    getRenderElements: function (xpath) {\r\n        var self = this;\r\n        var result = $();\r\n        var controls = self.getFormContainer().getRenders(xpath);\r\n        $.each(controls, function (i, item) {\r\n            result = result.add($(item.element));\r\n        });\r\n\r\n        return result;\r\n    },\r\n\r\n    getServerResourceURL: function (resource) {\r\n        var self = this;\r\n        var url = \"Rest/Userfields/{0}/resource/{1}/{2}\";\r\n        url = url.replace(\"{0}\", self.properties.userfieldGuid);\r\n        resource = resource.replace(\"\\\\\", \"__\").replace(\"/\", \"__\");\r\n        var device = bizagi.util.detectDevice();\r\n        url = url.replace(\"{1}\", device);\r\n        url = url.replace(\"{2}\", resource);\r\n        //Rest/Userfields/{0}/resource/desktop/{1}\r\n        return url;\r\n    },\r\n\r\n    /**\r\n    * Returns all the elements that match the given xpath\r\n    */\r\n    getRenderValue: function (xpath) {\r\n        var self = this;\r\n        var controls = self.getFormContainer().getRenders(xpath);\r\n        var control;\r\n        $.each(controls, function (index, item) {\r\n            if (!control || item.properties.editable) {\r\n                control = item;\r\n            }\r\n        });\r\n        if (control) {\r\n            return control.getValue();\r\n        } else {\r\n            return null;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Refresh the current form\r\n    */\r\n    refreshForm: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var form = self.getFormContainer();\r\n        form.refreshForm(properties.id);\r\n    },\r\n\r\n    /*\r\n    * Shows a jquery dialog\r\n    */\r\n    showDialog: function (url, params) {\r\n        bizagi.util.mustImplement(\"Must implement the showDialog method\");\r\n    },\r\n\r\n    /*\r\n    *   Shows a browser popup\r\n    */\r\n    showPopup: function (url, params) {\r\n        bizagi.util.mustImplement(\"Must implement the showPopup method\");\r\n    },\r\n\r\n    updateOriginalValue: function () {\r\n        var self = this;\r\n        self.properties.originalValue = self.value = self.properties.value;\r\n    }\r\n\r\n\r\n});\r\n\r\n\r\n$.Class.extend(\"bizagi.rendering.basicUserField\", {}, {\r\n\r\n    /*************************************************************/\r\n    /* methods to be overriden by the implementations            */\r\n    /*************************************************************/\r\n    getEditableControl: function () {\r\n    },\r\n\r\n    renderComplex: function () {\r\n    },\r\n\r\n    // Returns the value of the control\r\n    getEditableValue: function () {\r\n        return bizagi.rendering.render.prototype.getValue.apply(this, arguments);\r\n    },\r\n\r\n    // \r\n    setEditableValue: function (value) {\r\n        return bizagi.rendering.render.prototype.setValue.apply(this, arguments);\r\n    },\r\n\r\n    getReadonlyControl: function () {\r\n    },\r\n\r\n    getReadonlyValue: function () {\r\n        // if the method is not overriden then call the parent method \r\n        return bizagi.rendering.render.prototype.getDisplayValue.apply(this, arguments);\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super();\r\n    }\r\n\r\n});\r\n\r\n/*\r\n*   This control will wrap any userfield in order to load the code remotely, \r\n*   when executing renderControl, which is an async method\r\n*/\r\n$.Class.extend(\"bizagi.rendering.userfieldWrapper\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n        // Save userfield guid and name\r\n        self.initialParams = params;\r\n        self.userfieldGuid = this.properties.userfieldGuid;\r\n        self.userfieldName = this.properties.control;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    */\r\n    internalPostRender: function () {\r\n        var self = this;\r\n        $.when(self.getUserfieldControl())\r\n        .done(function (control) {\r\n            control.element = self.element;\r\n\r\n            // Add grid and surrogatekey properties if the userfield is a column userfield\r\n            if (self.column) {\r\n                control.isColumn = true;\r\n                control.grid = self.grid;\r\n                control.surrogateKey = self.surrogateKey;\r\n                control.properties.xpathContext = self.getControlXpathContext(control);\r\n                control.getControl = self.column.getControl;\r\n            }\r\n\r\n            return control.internalPostRender();\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Helper for userfields to fetch the xpathContext\r\n    */\r\n    getControlXpathContext: function (control) {\r\n        var self = this;\r\n        var properties = control.properties;\r\n\r\n        if (control.isColumn) {\r\n            return properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + control.grid.properties.xpath + \"[id=\" + control.surrogateKey + \"]\" : control.grid.properties.xpath + \"[id=\" + control.surrogateKey + \"]\";\r\n        }\r\n\r\n        return properties.xpathContext;\r\n    },\r\n\r\n\r\n    getUserFieldInstance: function(params){\r\n        console.log(\"not implemented\");\r\n    },\r\n\r\n    /*\r\n    *   Replicate all userfield methods to this instance in order to create a proxy\r\n    */\r\n    replicateUserfieldMethods: function (control) {\r\n        var self = this;\r\n        for (var key in control.Class.prototype) {\r\n            // Omit the folowing methods\r\n            if (key == \"init\" || key == \"constructor\" || key == \"Class\" || key == \"subscribe\" || key == \"unsubscribe\" ||\r\n                key == \"publish\" || key == \"render\" || key == \"triggerHandler\" || key == \"dispose\") continue;\r\n\r\n            // Replicate instance methods\r\n            self[key] = eval('var tmp = function(){ if (this.userfieldInstance) return this.userfieldInstance.' + key + '.apply(this.userfieldInstance, arguments); return null;};tmp');\r\n        }\r\n\r\n        // Replicate properties and value\r\n        control.properties = self.properties;\r\n        control.value = self.value;\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self.userfieldInstance) {\r\n                self.userfieldInstance.unbind(\"renderchange\");\r\n                self.userfieldInstance.dispose();\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    }\r\n});\r\n\r\n","/**\r\n *   Name: Bizagi Render Document Generator\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for document generator render\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.document\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        var properties = this.properties;\r\n\r\n        properties.validate = bizagi.util.parseBoolean(properties.validate) != null ? bizagi.util.parseBoolean(properties.validate) : false;\r\n        properties.downloadalldocuments = properties.downloadalldocuments ? properties.downloadalldocuments : false;\r\n        properties.allowGenerate = properties.allowGenerate !== undefined ? properties.allowGenerate : true;\r\n        properties.append = properties.append ? properties.append : false;\r\n\r\n        if (properties.caption) {\r\n            properties.caption = bizagi.util.trim(properties.caption);\r\n\r\n            if (properties.caption.length === 0) {\r\n                properties.caption = this.getResource(\"render-documentgenerator-button-label\");\r\n            }\r\n        } else {\r\n            properties.caption = this.getResource(\"render-documentgenerator-button-label\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n\r\n        self.preRenderControl();\r\n\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n        var downloadAllDocuments = properties.downloadalldocuments;\r\n        var allowGenerate = properties.allowGenerate;\r\n        var template = self.renderFactory.getTemplate(self.getTemplate());\r\n        var documents = properties.value || [];\r\n        var noFiles = documents ? (documents.length === 0) : true;\r\n\r\n        // Render template\r\n        var html = self.getControlHtml(template, mode, downloadAllDocuments, allowGenerate, properties, noFiles);\r\n\r\n        // Render current children\r\n        var items = this.renderDocumentsHtml(documents);\r\n        items += this.renderActionsHtml(documents, noFiles, downloadAllDocuments);\r\n\r\n        html = self.replaceFilesHtml(html, items);\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @param template\r\n     * @param mode\r\n     * @param downloadAllDocuments\r\n     * @param allowGenerate\r\n     * @param properties\r\n     * @param noFiles\r\n     * @returns {*|jQuery}\r\n     */\r\n    getControlHtml: function (template, mode, downloadAllDocuments, allowGenerate, properties, noFiles) {\r\n        var self = this;\r\n\r\n        return $.fasttmpl(template, {\r\n            noActivateButton: false,\r\n            editable: mode !== \"execution\",\r\n            mode: mode,\r\n            downloadalldocuments: downloadAllDocuments,\r\n            required: properties.required,\r\n            allowgenerate: allowGenerate,\r\n            xpath: self.getXpath(properties.xpath),\r\n            append: properties.append,\r\n            caption: properties.caption,\r\n            noFiles: noFiles,\r\n            allowSendInMail: properties.allowSendInMail\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @param xpath\r\n     * @returns {*}\r\n     */\r\n    getXpath: function (xpath) {\r\n        return xpath;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    preRenderControl: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {boolean}\r\n     */\r\n    activateButton: function () {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @param xpath\r\n     * @returns {*}\r\n     */\r\n    getDocumentXpath: function (xpath) {\r\n        return xpath;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getContextXpath: function () {\r\n        return this.properties.xpathContext;\r\n    },\r\n\r\n    /**\r\n     * Renders a single document item\r\n     * @param file\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderDocumentItem: function (file) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var template = self.renderFactory.getTemplate(self.getTemplateItem());\r\n        var url = self.buildItemUrl(file);\r\n\r\n        // Don't render urls when not running in execution mode\r\n        if (mode !== \"execution\") url = \"javascript:void(0);\";\r\n\r\n        var html = $.fasttmpl(template, {\r\n            url: url,\r\n            allowDelete: self.properties.allowDelete,\r\n            filename: file.fileName,\r\n            mode: mode,\r\n            editable: self.properties.editable,\r\n            joined: false\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (file) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.getUploadFileUrl({\r\n            idRender: properties.id,\r\n            xpath: self.getDocumentXpath(properties.xpath),\r\n            xpathContext: self.getContextXpath(),\r\n            idPageCache: properties.idPageCache,\r\n            fileId: file.id,\r\n            sessionId: self.getSessionId()\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Builds the download all items item url\r\n     * @returns {*}\r\n     */\r\n    buildAllDocumentsUrl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var returnLink = self.dataService.getAllDocumentsDownloadUrl({\r\n            xpath: self.getDocumentXpath(properties.xpath),\r\n            xpathContext: self.getContextXpath(),\r\n            idPageCache: properties.idPageCache,\r\n            idCase: properties.caseId,\r\n            idWorkItem: properties.workitemId,\r\n            sessionId: self.getSessionId()\r\n        });\r\n\r\n        return returnLink;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed (Virtual method)\r\n     * @returns {string}\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n\r\n        return \"<div></div>\";\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        if (mode !== \"design\") {\r\n            var control = self.getControl();\r\n            var htmlControl = self.renderControl();\r\n\r\n            control.append(htmlControl);\r\n\r\n            self.updateControlForPrintMode(control);\r\n\r\n            // Execute the same as post-render\r\n            self.postRender();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Saves the form before the document generation\r\n     * @returns {*}\r\n     */\r\n    validateContainer: function () {\r\n        // Check if the form is valid, then generate\r\n        var form = this.getFormContainer();\r\n        return form.validateForm();\r\n    },\r\n\r\n    /**\r\n     * Saves the form before the document generation\r\n     * @returns {*}\r\n     */\r\n    save: function () {\r\n        var form = this.getFormContainer();\r\n\r\n        return form.saveForm();\r\n    },\r\n\r\n    /**\r\n     * Replaces a {{files}} tag in the container for the specified \"replace\" element\r\n     * @param html\r\n     * @param replace\r\n     * @returns {*}\r\n     */\r\n    replaceFilesHtml: function (html, replace) {\r\n        return html.replace(\"{{files}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Replaces a {{actions}} tag in the container for the specified \"replace\" element\r\n     * @param html\r\n     * @param replace\r\n     * @returns {*}\r\n     */\r\n    replaceActionsHtml: function (html, replace) {\r\n        return html.replace(\"{{actions}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @param invalidElements\r\n     * @returns {boolean}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties,\r\n            message;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) === false) {\r\n            return true;\r\n        }\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) === false) {\r\n            return true;\r\n        }\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (properties.required && !properties.buttonExecuted) {\r\n            if (self.value) {\r\n                if (self.value.length > 0) return true;\r\n                message = self.getResource(\"render-document-required-text\");\r\n                invalidElements.push({xpath: properties.xpath, message: message});\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var mode = self.getMode();\r\n\r\n        // Call base\r\n        self._super();\r\n\r\n        // Attach handler\r\n        var generateLink = $(\".ui-bizagi-button-documentgenerator\", control);\r\n        if (mode === \"execution\") {\r\n            generateLink.click(function (e) {\r\n                if (e.isPropagationStopped()) return;\r\n                e.stopPropagation();\r\n\r\n                self.properties.buttonExecuted = true;\r\n\r\n                if (self.properties.validate) {\r\n                    // Check if the form is valid, then generate\r\n                    var isValid = self.validateContainer();\r\n                    if (isValid) {\r\n                        self.documentTemplateGenerate();\r\n                    }\r\n                } else {\r\n                    // Just generate the form\r\n                    self.documentTemplateGenerate();\r\n                }\r\n\r\n                self.properties.buttonExecuted = false;\r\n            });\r\n        }\r\n\r\n        // Configure preview handler\r\n        $(\".ui-bizagi-document-preview\", control).click(function (e) {\r\n            if (e.isPropagationStopped()) return;\r\n            e.stopPropagation();\r\n\r\n            self.showDocumentPreview($(this).data(\"url\"), $(this).data(\"filename\"));\r\n        });\r\n\r\n        // Configure preview handler\r\n        $(\".ui-bizagi-container-documents-item-delete\", control).click(function (e) {\r\n            if (e.isPropagationStopped()) return;\r\n            e.stopPropagation();\r\n\r\n            self.deleteDocumentTemplate($(this).data(\"filename\"));\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Creates the event of generation of templates.\r\n     * @param filename\r\n     */\r\n    deleteDocumentTemplate: function (filename) {\r\n        var self = this;\r\n        var params = {\r\n            xpath: self.properties.xpath + \"[fileName='\" + filename + \"']\",\r\n            idRender: self.properties.id,\r\n            xpathContext: self.getContextXpath(),\r\n            idPageCache: self.properties.idPageCache\r\n        };\r\n\r\n        self.startLoading();\r\n\r\n        $.when(self.dataService.deleteUploadFile(params))\r\n            .done(function () {\r\n                $.when(self.dataService.multiaction().getPropertyData({\r\n                    xpath: self.properties.xpath,\r\n                    idRender: self.properties.id,\r\n                    xpathContext: self.getContextXpath(),\r\n                    idPageCache: self.properties.idPageCache,\r\n                    property: \"value\"\r\n                })).done(function (documents) {\r\n                    self.resolveDeleteDocumentTemplate(documents, false, self.properties.downloadalldocuments);\r\n\r\n                    // Finish loading\r\n                    self.endLoading();\r\n                });\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Creates the event of generation of templates.\r\n     */\r\n    documentTemplateGenerate: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        self.startLoading();\r\n\r\n        //Get the context xPath\r\n        properties.xpathcontext = self.getContextXpath();\r\n        properties.xpath = self.getDocumentXpath(properties.xpath);\r\n\r\n        self.save().done(function () {\r\n\r\n            bizagi.showErrorAlertDialog = false;\r\n\r\n            $.when(self.dataService.generateDocumentTemplate(properties))\r\n                .done(function () {\r\n\r\n                    // Fetch again the value property\r\n                    $.when(self.dataService.multiaction().getPropertyData({\r\n                        xpath: properties.xpath,\r\n                        idRender: properties.id,\r\n                        xpathContext: self.getContextXpath(),\r\n                        idPageCache: properties.idPageCache,\r\n                        property: \"value\"\r\n                    })).done(function (documents) {\r\n                        self.resolveDocumentTemplateGenerate(documents, false, properties.downloadalldocuments);\r\n\r\n                        // Finish loading\r\n                        self.endLoading();\r\n                    });\r\n\r\n                }).fail(function (error) {\r\n                self.endLoading();\r\n\r\n                // Add error messages\r\n                self.showErrorMessage(error);\r\n            });\r\n        }).fail(function (message) {\r\n            self.endLoading();\r\n\r\n            // Add error messages\r\n            self.showErrorMessage(error);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Show the error message when something went wrong with the service.\r\n     * @param error\r\n     */\r\n    showErrorMessage: function (error) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var messageText = self.resources.getResource('render-upload-alert-maxsize').replace(\"{0}\", BIZAGI_SETTINGS.UploadMaxFileSize);\r\n\r\n        try {\r\n            messageText = error && typeof (error.responseText) !== \"undefined\" ? JSON.parse(error.responseText).message : error;\r\n        } catch (e) {\r\n        }\r\n\r\n        form.addErrorMessage(messageText);\r\n        form.endLoading();\r\n    },\r\n\r\n    /**\r\n     * Shows the document if the flag is set. (virtual Function)\r\n     */\r\n    autoOpenDocuments: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed (Virtual method)\r\n     * @param url\r\n     * @param filename\r\n     */\r\n    showDocumentPreview: function (url, filename) {\r\n    },\r\n\r\n    /**\r\n     * Identifies the extension of the file in a simpler way that ECM does\r\n     * @param file\r\n     * @returns {string}\r\n     */\r\n    returnCssTypeFile: function (file) {\r\n\r\n        if (file == undefined || file.lenght === 0) {\r\n            return \"ui-bizagi-document-upload-item-generic-file\";\r\n        }\r\n\r\n        var extension = file.substr((file.lastIndexOf('.') + 1));\r\n\r\n        switch (extension) {\r\n            case 'docx':\r\n                return \"ui-bizagi-document-upload-item-doc\";\r\n            case 'pdf':\r\n                return \"ui-bizagi-document-upload-item-pdf\";\r\n            case 'xlsx':\r\n                return \"ui-bizagi-document-upload-item-xls\";\r\n            default:\r\n                return \"ui-bizagi-document-upload-item-generic-file\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Redraw documents when needed\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    redrawDocuments: function (documents, noFiles, downloadAllDocuments) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var html = \"\";\r\n        var documentContainer = $(\"[data-component='files']\", control);\r\n\r\n        // Clear current links\r\n        documentContainer.empty();\r\n\r\n        // Draw links again\r\n        html += this.renderDocumentsHtml(documents);\r\n\r\n        // Check if there are documents and the flag to download all are available to show the link.\r\n        html += this.renderActionsHtml(documents, noFiles, downloadAllDocuments);\r\n\r\n        documentContainer.append(html);\r\n\r\n        //Set value\r\n        self.setValue(documents);\r\n    },\r\n\r\n    /**\r\n     * This method must be implemented by the specific class of each device. (Virtual method)\r\n     * @param file\r\n     * @returns {*|*|*}\r\n     */\r\n    renderAllDocumentDownload: function (file) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n\r\n        var template = self.renderFactory.getTemplate(self.getTemplateItem());\r\n        var url = self.buildAllDocumentsUrl();\r\n\r\n        // Don't render urls when not running in execution mode\r\n        if (mode !== \"execution\") url = \"javascript:void(0);\";\r\n\r\n        var html = $.fasttmpl(template, {\r\n            url: url,\r\n            allowDelete: properties.allowDelete,\r\n            filename: file.fileName,\r\n            mode: mode,\r\n            joined: true\r\n        });\r\n\r\n        return self.removeDeleteButton(html);\r\n    },\r\n\r\n    /**\r\n     * removeDeleteButton\r\n     * @param html\r\n     * @returns {*}\r\n     */\r\n    removeDeleteButton: function (html) {\r\n        var startIndex = html.indexOf(\"<span class=\\\"ui-bizagi-container-documents-item-delete\");\r\n\r\n        if (startIndex > 0) {\r\n            var restOfWord = html.substring(startIndex);\r\n            var finishIndex = restOfWord.indexOf(\"</span>\") + 7;\r\n\r\n            return html.substring(0, startIndex) + restOfWord.substring(finishIndex);\r\n        } else {\r\n            return html;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Process request of DeleteDocumentTemplate action\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    resolveDocumentTemplateGenerate: function (documents, noFiles, downloadAllDocuments) {\r\n        // Redraw documents\r\n        this.redrawDocuments(documents, noFiles, downloadAllDocuments);\r\n        this.value = documents;\r\n\r\n        // This does not apply for mobile.\r\n        this.autoOpenDocuments();\r\n        this.configureHandlers();\r\n    },\r\n\r\n    /**\r\n     * Process request of DocumentTemplateGenerate action\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    resolveDeleteDocumentTemplate: function (documents, noFiles, downloadAllDocuments) {\r\n        // Redraw documents\r\n        this.redrawDocuments(documents, noFiles, downloadAllDocuments);\r\n        this.value = documents;\r\n\r\n        // This does not apply for mobile.\r\n        this.configureHandlers();\r\n    },\r\n\r\n    /**\r\n     * Method to renders the documents\r\n     * @param documents\r\n     * @returns {string}\r\n     */\r\n    renderDocumentsHtml: function (documents) {\r\n        var items = \"\";\r\n\r\n        for (var i = 0; i < documents.length; i++) {\r\n            var document = {id: documents[i][0], fileName: documents[i][1]};\r\n            var item = this.renderDocumentItem(document);\r\n\r\n            items += item;\r\n        }\r\n\r\n        return items;\r\n    },\r\n\r\n    /**\r\n     * Methos to renders action of document\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     * @returns {string}\r\n     */\r\n    renderActionsHtml: function (documents, noFiles, downloadAllDocuments) {\r\n        var actions = \"\";\r\n\r\n        if (downloadAllDocuments && (!noFiles && documents.length > 0)) {\r\n            var downloadAllDocumentsLink = {fileName: this.getResource(\"render-document-downloadalldocuments\")};\r\n            var action = this.renderAllDocumentDownload(downloadAllDocumentsLink);\r\n\r\n            actions += action;\r\n        }\r\n\r\n        return actions;\r\n    },\r\n\r\n    getTemplate: function () {\r\n        return \"document\";\r\n    },\r\n\r\n    getTemplateItem: function () {\r\n        return \"document-item\";\r\n    },\r\n\r\n    getErrorTemplate: function () {\r\n        return \"form-error\";\r\n    },\r\n\r\n    getTemplateDownload: function () {\r\n        return \"document-download\";\r\n    },\r\n\r\n    getTemplateReadonly: function () {\r\n        return \"document-readonly\";\r\n    }\r\n\r\n});","/**\r\n * Base definition of a range control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.range\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function(params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n     * Initialize the control with data provided\r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n    },\r\n\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function() {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var template;\r\n        var html = \"\";\r\n        // Render template\r\n        template = self.renderFactory.getTemplate(\"render-range\");\r\n        html = $.fasttmpl(template, {});\r\n        return html;\r\n    },\r\n    /**\r\n     * Sets the range controls in DOM\r\n     * @param minControl: min range control\r\n     * @param maxControl: max range control\r\n     */\r\n    setRanageControls: function (minControl, maxControl){\r\n        var self = this;\r\n        self.minControl = minControl || null;\r\n        self.maxControl = maxControl || null;\r\n        var control = self.getControl();\r\n\r\n        var $maxCanvas = $(\".bz-range-maximum\", control);\r\n        var $minCanvas = $(\".bz-range-minimum\", control);\r\n\r\n        //var $maxCanvas = $('<div>hola</div>');\r\n        //var $minCanvas = $('<div>hola</div>');\r\n\r\n        self.renderRangeControl($minCanvas, minControl);\r\n        self.renderRangeControl($maxCanvas, maxControl);\r\n    },\r\n\r\n    /*\r\n     *   Returns the internal value\r\n     */\r\n    getValue: function () {\r\n        var self = this;\r\n        var minValue = self.minControl.getValue();\r\n        var maxValue = self.maxControl.getValue();\r\n\r\n        var value = {\r\n            min: minValue,\r\n            max: maxValue\r\n        };\r\n        return value;\r\n    },\r\n\r\n    renderRangeControl: function ($canvas, control){\r\n        $.when(control.render(\"render\")).done(function (html) {\r\n            $canvas.empty().append(html);\r\n            control.postRenderElement($canvas);\r\n        });\r\n    }\r\n});\r\n","/**\r\n * Base definition of a range date control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.rangeDate\", {}, {\r\n\r\n    /**\r\n     * Defines de min date an de max date to the range control\r\n     */\r\n    defineRangeControl: function (params) {\r\n        var self = this;\r\n\r\n        var dateMin = bizagi.rendering.date.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1 ; i >= 0; i--) {\r\n                    this.observer[i].changeMinValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var dateMax = bizagi.rendering.date.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1; i >= 0; i--) {\r\n                    this.observer[i].changeMaxValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n\r\n        var minControl = new dateMin(self.getRenderProperties(\"min\"));\r\n        var maxControl = new dateMax(self.getRenderProperties(\"max\"));\r\n\r\n        minControl.suscribe(maxControl);\r\n        maxControl.suscribe(minControl);\r\n\r\n\r\n        self.setRanageControls(minControl, maxControl);\r\n    },\r\n\r\n    getRenderProperties: function (typeRangeControl) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        var renderProperties = {\r\n            data: {\r\n                properties: {\r\n                    \"id\": properties.id,\r\n                    \"xpath\": properties.xpath + \"_\" + typeRangeControl,\r\n                    \"displayType\": \"value\"\r\n                }\r\n            },\r\n            mode: \"execute\",\r\n            parent: form,\r\n            renderFactory: self.renderFactory,\r\n            resources: bizagi.localization,\r\n            dataService: self.dataService\r\n        };\r\n\r\n        if (typeRangeControl === \"min\") {\r\n            renderProperties.data.properties.displayName = \"From\";\r\n        } else {\r\n            renderProperties.data.properties.displayName = \"To\";\r\n        }\r\n\r\n        return renderProperties;\r\n    }\r\n});\r\n","/**\r\n * Base definition of a range money control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.rangeMoney\", {}, {\r\n    \r\n    /**\r\n     * Defines de min money an de max money to the range control\r\n     */\r\n    defineRangeControl: function () {\r\n        var self = this;\r\n\r\n        var moneyMin = bizagi.rendering.money.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1 ; i >= 0; i--) {\r\n                    this.observer[i].changeMinValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var moneyMax = bizagi.rendering.money.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1; i >= 0; i--) {\r\n                    this.observer[i].changeMaxValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var minControl = new moneyMin(self.getRenderProperties(\"min\"));\r\n        var maxControl = new moneyMax(self.getRenderProperties(\"max\"));\r\n\r\n        minControl.suscribe(maxControl);\r\n        maxControl.suscribe(minControl);\r\n\r\n        self.setRanageControls(minControl, maxControl);\r\n    },\r\n\r\n\r\n    getRenderProperties: function (typeRangeControl){\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        var renderProperties = {\r\n            data: {\r\n                properties: {\r\n                    \"id\": properties.id,\r\n                    \"xpath\": properties.xpath + \"_\" + typeRangeControl,\r\n                    \"displayType\": \"value\"\r\n                }\r\n            },\r\n            mode: \"execute\",\r\n            parent: form,\r\n            renderFactory: self.renderFactory,\r\n            resources: bizagi.localization,\r\n            dataService: self.dataService\r\n        };\r\n        return renderProperties;\r\n    }\r\n});\r\n","/**\r\n * Base definition of a range number control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n $.Class.extend(\"bizagi.rendering.rangeNumber\", {}, {\r\n\r\n    /**\r\n    * Defines de min number an de max number to the range control\r\n    */\r\n    defineRangeControl: function () {\r\n        var self = this;\r\n\r\n        var numberMin = bizagi.rendering.number.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1 ; i >= 0; i--) {\r\n                    this.observer[i].changeMinValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var numberMax = bizagi.rendering.number.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1; i >= 0; i--) {\r\n                    this.observer[i].changeMaxValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var minControl = new numberMin(self.getRenderProperties(\"min\"));\r\n        var maxControl = new numberMax(self.getRenderProperties(\"max\"));\r\n\r\n        minControl.suscribe(maxControl);\r\n        maxControl.suscribe(minControl);\r\n\r\n        self.setRanageControls(minControl, maxControl);\r\n    },\r\n\r\n\r\n    getRenderProperties: function (typeRangeControl){\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        var renderProperties = {\r\n            data: {\r\n                properties: {\r\n                    \"id\": properties.id,\r\n                    \"xpath\": properties.xpath + \"_\" + typeRangeControl,\r\n                    \"displayType\": \"value\"\r\n                }\r\n            },\r\n            mode: \"execute\",\r\n            parent: form,\r\n            renderFactory: self.renderFactory,\r\n            resources: bizagi.localization,\r\n            dataService: self.dataService\r\n        };\r\n\r\n        return renderProperties;\r\n    }\r\n});\r\n","/*\r\n *   Name: BizAgi Render Radio Class\r\n *   Author: Ivan Ricardo Taimal Narvaez\r\n *   Comments:\r\n *   -   This script will define basic stuff for radio renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.checkList\", {}, {\r\n\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.horizontal = bizagi.util.parseBoolean(properties.horizontal) || false;\r\n        self.setValue(properties.items);\r\n        self.updateOriginalValue();\r\n    },\r\n\r\n    /*\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Call base\r\n        self._super();\r\n        self.checkListGroup = $(\".ui-bizagi-render-checkList .ui-bizagi-render-checkList-item\", control);\r\n    },\r\n\r\n    /*\r\n     *   Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(self.getTemplateName());\r\n        var items = self.properties.items || [];\r\n\r\n        var html = $.fasttmpl(template, $.extend(self.getTemplateParams(), {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            unique: bizagi.util.randomNumber(10000, 1000000),\r\n            idPageCache: properties.idPageCache,\r\n            items: items\r\n        }));\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     *   Gets the template used by the combo render\r\n     *   can be overriden in subclasses to reuse logic and just change the template\r\n     */\r\n    getTemplateName: function () {\r\n        return \"checkList\";\r\n    },\r\n\r\n    /*\r\n     *   Determines if we need to show the empty node or not\r\n     *   Can be overriden to change behaviour\r\n     */\r\n    showEmpty: function () {\r\n        return false;\r\n    },\r\n\r\n    /*\r\n     *   Determines if we need to show the current data regardless if it belongs to data or not\r\n     *   Can be overriden to change behaviour\r\n     */\r\n    showCurrentData: function () {\r\n        return false;\r\n    },\r\n\r\n    /*\r\n     *   Adds custom parameters to process the template\r\n     */\r\n    getTemplateParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return {\r\n            vertical: !properties.horizontal\r\n        };\r\n    },\r\n    /*\r\n     * Cleans current data\r\n     */\r\n    cleanData: function () {\r\n\r\n    },\r\n\r\n    setValue: function (value) {;\r\n        this.value = bizagi.clone(value);\r\n    },\r\n\r\n    getValue: function (data) {;\r\n        return this.value || [];\r\n    }\r\n\r\n});\r\n\r\n","/**\r\n * Base definition of Action Launcher and Entity template controls\r\n *\r\n * @author: Edward Morales\r\n */\r\n$.Class.extend(\"bizagi.rendering.actionLauncher\", {}, {\r\n\r\n    /*\r\n     * Initialize the control with data provided\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n        var form = self.getFormContainer();\r\n        this.typeForm = form.properties.typeForm || \"\";\r\n        var mode = self.getMode();\r\n        var properties = self.properties;\r\n\r\n        self.deferredActions = new $.Deferred();\r\n        self.deferredActions.promise();\r\n\r\n        if (mode == \"execution\") {\r\n            self.engine = new bizagi.templateEngine({\r\n                renderFactory: self.renderFactory,\r\n                cache: true,\r\n                autoGenerateData: false,\r\n                templateGuid: properties.selecttemplate\r\n            });\r\n        }\r\n\r\n        // Data of get process property value\r\n        self.processPropertyValueArgs = {\r\n            \"pcaseId\": self.getIdCase(),\r\n            \"pguidEntity\": self.properties.guidEntity,\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"property\": \"data\",\r\n            \"psurrogatedKey\": self.properties.surrogatedKey,\r\n            \"ptags\": self.properties.tagslist || [],\r\n            \"pmaxitems\": self.properties.maxItems,\r\n            \"pactionXpath\": self.properties.xpathActions\r\n        };\r\n\r\n        self.processPropertyValueDataTmplArgs = {\r\n            \"pactionXpath\": self.properties.xpathActions,\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"ptemplateGuid\": properties.selecttemplate,\r\n            \"property\": \"dataTemplate\",\r\n            \"xpathActions\": self.properties.xpathActions\r\n        };\r\n\r\n        self.properties.valueWidth = 100;\r\n        self.properties.displayType = \"value\";\r\n        var defaultAllowActions = data.properties.type === \"entityTemplate\" ? false : true;\r\n        self.properties.allowactions = (typeof data.properties.allowactions == \"undefined\")\r\n            ? defaultAllowActions : data.properties.allowactions;\r\n        self.properties.isHorizontal = (typeof data.properties.isHorizontal == \"undefined\")\r\n            ? true : data.properties.isHorizontal;\r\n        self.properties.allowSearch = (typeof data.properties.allowSearch == \"undefined\")\r\n            ? false : data.properties.allowSearch;\r\n        self.properties.selecttemplate = (typeof data.properties.selecttemplate == \"undefined\")\r\n            ? \"\" : data.properties.selecttemplate;\r\n        self.properties.templatetype = (typeof properties.templatetype != \"undefined\")\r\n            ? properties.templatetype : 'none';\r\n\r\n        self.properties.sessionId = form.params.data.sessionId;\r\n\r\n        if (!self.properties.value) {\r\n            self.properties.value = self.value = [];\r\n            self.properties.originalValue = [];\r\n        } else if (typeof self.properties.value == \"string\") {\r\n            self.properties.value = self.value = JSON.parse(self.properties.value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Send processpropertyvalue in order to execute an Action\r\n     * This method is used when this control stay in Summary form or Global form\r\n     * @param action\r\n     */\r\n    executeActionImmediately: function (action) {\r\n        var self = this;\r\n        //Execute action immediately\r\n        var form = self.getFormContainer();\r\n\r\n        var processPropertyValueExecuteAction = {\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"property\": \"executeAction\",\r\n            \"psurrogatedKey\": self.properties.surrogatedKey,\r\n            \"pguidAction\": action.guidAction,\r\n            \"pparameters\": JSON.encode({\r\n                \"idStartScope\": action.idStartScope,\r\n                \"pactionXpath\": self.properties.xpathActions,\r\n                \"idPageCache\": action.idPageCache\r\n            })\r\n        };\r\n\r\n        self.dataService.executeActions(processPropertyValueExecuteAction).done(function (data) {\r\n            self.notifyExecution(data, action);\r\n        }).fail(function (error) {\r\n            // TODO: Create generic mechanism to send notifications\r\n            self.notifyExecution(\"Error\", action);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * notify action execution status\r\n     * @param response\r\n     * @param actionName\r\n     */\r\n    notifyExecution: function (response, actionName) {\r\n        // To override in each device\r\n    },\r\n\r\n    /**\r\n     * Render control in read only mode: properties.editable = false\r\n     * @return {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Make a postrender of readonly control\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this.properties.readOnly = true;\r\n        this.postRender();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @return {string}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n        var template;\r\n        var html = \"\";\r\n\r\n        // Render template\r\n        if (mode == \"design\") {\r\n            template = self.renderFactory.getTemplate(\"render-actionLauncher-design\");\r\n            var params = {\r\n                type: properties.type,\r\n                isHorizontal: properties.isHorizontal,\r\n                allowSearch: properties.allowSearch,\r\n                templateDefined: properties.templatetype != 'none',\r\n                allowactions: properties.allowactions\r\n            };\r\n            html = $.fasttmpl(template, params);\r\n        } else if (properties.surrogatedKey) {\r\n            template = self.renderFactory.getTemplate(\"render-actionLauncher\");\r\n            html = $.fasttmpl(template, { allowactions: self.properties.allowactions });\r\n        }\r\n        return html;\r\n    },\r\n\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @return {*}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var value = self.getValue();\r\n        var bValid = false;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) == false) {\r\n            return true;\r\n        }\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) == false) {\r\n            return true;\r\n        }\r\n\r\n        // Check required\r\n        if (properties.required) {\r\n            if (self.value) {\r\n                if (self.value.length > 0)\r\n                    return true;\r\n                message = self.getResource(\"render-required-register-action\");\r\n                invalidElements.push({ xpath: properties.xpath, message: message });\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        // TODO: write functionality\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n    },\r\n\r\n    /**\r\n     * Process an action\r\n     * @param action\r\n     */\r\n    actionManager: function (action) {\r\n        var self = this;\r\n        var guidProcess = action.guidProcess || \"\";\r\n        var def = new $.Deferred();\r\n\r\n        action.recordXpath = self.getFormContainer().properties.recordXpath;\r\n\r\n        /**\r\n         * Check if action is a process\r\n         */\r\n        switch (action.actionType) {\r\n            case \"Process\":\r\n                // Verify if case has startform\r\n                var params = {\r\n                    guidWFClass: guidProcess\r\n                };\r\n\r\n                $.when(self.dataService.hasStartForm(params)).done(function (result) {\r\n                    if (result.hasStartForm) {\r\n                        // Open a dialog with startform and wait for Scope\r\n                        $.when(self.processStartForm({\r\n                            guidprocess: guidProcess,\r\n                            title: action.displayName,\r\n                            recordXpath: action.recordXpath\r\n                        })).done(function (idStartScope) {\r\n                            action.idStartScope = idStartScope;\r\n                            def.resolve(action);\r\n                        });\r\n                    } else {\r\n                        // Just add action to queue to be executed on nextEvent\r\n                        def.resolve(action);\r\n                    }\r\n                });\r\n\r\n                break;\r\n            case \"Rule\":\r\n                // Just add action to queue to be executed on nextEvent\r\n                def.resolve(action);\r\n                break;\r\n            case \"Form\":\r\n                // If it has additional xpath this action is a form of collection\r\n                if (action.xpathContext) {\r\n                    $.when(self.processActionFormCollection(action)).done(function (idStartScope) {\r\n                        action.idStartScope = idStartScope;\r\n                        def.resolve(action);\r\n                    });\r\n                } else {\r\n\r\n                    if (action.actionType === \"Form\") {\r\n                        action.xpathContext = undefined;\r\n                        action.contextType = \"entitytemplate\";\r\n                        action.guidEntity = action.guidEntity || self.properties.guidEntity;\r\n                    }\r\n\r\n                    $.when(self.processActionForm(action)).done(function (idStartScope) {\r\n                        action.idStartScope = idStartScope;\r\n                        def.resolve(action);\r\n                    });\r\n                }\r\n                break;\r\n        }\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Add actions within value object\r\n     * @param action\r\n     */\r\n    addActionToQueue: function (action) {\r\n        var self = this;\r\n        var actionsList = self.getValue();\r\n        var formParams = self.getFormContainer().getParams();\r\n\r\n        action.params = action.params || {};\r\n\r\n        var recordXpath = self.properties.xpathContext;\r\n\r\n        switch (action.actionType) {\r\n            case \"Process\":\r\n                action.params = {\r\n                    idStartScope: action.idStartScope,\r\n                    additionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n                    idParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n                    recordXpath: recordXpath\r\n                };\r\n                break;\r\n            case \"Form\":\r\n                action.params = {\r\n                    idStartScope: action.idStartScope,\r\n                    additionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n                    entityXpath: self.properties.xpathActions,\r\n                    idParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n                    idEntity: action.idEntity\r\n                };\r\n                break;\r\n            case \"Rule\":\r\n                action.params = {\r\n                    xpathActions: action.xpathActions || \"\",\r\n                    recordXpath: recordXpath\r\n                };\r\n                break;\r\n        }\r\n\r\n        var newValueActionsList = bizagi.clone(actionsList);\r\n        newValueActionsList.push(action);\r\n        self.setValue(newValueActionsList);\r\n        self.setDisplayValue(newValueActionsList);\r\n    },\r\n\r\n    /**\r\n     * Remove action within value object\r\n     * @param index\r\n     */\r\n    removeActionToQueue: function (index) {\r\n        var self = this;\r\n        var newValueActionsList = bizagi.clone(self.getValue());\r\n        newValueActionsList.splice(index, 1);\r\n        self.setValue(newValueActionsList);\r\n        self.setDisplayValue(newValueActionsList);\r\n    },\r\n    /**\r\n     * Add the render data to the given collection in order to send data to the server\r\n     * @param renderValues\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        if (self.controlValueIsChanged()) {\r\n            var properties = self.properties;\r\n            var xpath = properties.xpath;\r\n            var controlValue = self.getValue();\r\n            var actions = [];\r\n            $.each(controlValue, function (index, value) {\r\n                var action = {};\r\n                action.params = value.params || {};\r\n                action.guidAction = value.guidAction;\r\n\r\n                actions.push(action);\r\n            });\r\n            renderValues[xpath] = (actions.length == 0) ? \"\" : JSON.encode(actions);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Util to count how many actions are there\r\n     * @param action\r\n     * @return {number}\r\n     */\r\n    countSameActions: function (action) {\r\n        var self = this;\r\n        var value = self.getValue();\r\n        var count = 0;\r\n        $.each(value, function (key, value) {\r\n            if (value.guidAction == action.guidAction) {\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    },\r\n\r\n    /**\r\n    * Normalize action launcher control properties\r\n    * @param actionsLaucher\r\n    * @returns {*}\r\n    */\r\n    getPropertiesActionLaucher: function (actionsLaucher) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        /**\r\n         * The properties of actionLaucher have to 7 properties mandatory\r\n         * 0: guidProcess\r\n         * 1: displayName\r\n         * 2: title\r\n         * 3: actionType\r\n         * 4: guidaction\r\n         * 5: xpathContext\r\n         * 6: readOnlyForm: default: false\r\n         */\r\n        for (var i = 0, length = actionsLaucher.length, j = length; i < j; i += 1) {\r\n            //some ocassions server return 6 or 7 items\r\n            //return 6 properties when launch form action from action launcher control.\r\n            //in this case dont return xpathContext.\r\n            // So, add item position 5, simulate xpathContext empty.\r\n            if (actionsLaucher[i].length === 6) {\r\n                actionsLaucher[i].splice(5, 0, \"\");\r\n\r\n                if (actionsLaucher[i][3] == \"Process\" && form.properties.xpathContext) {\r\n                    actionsLaucher[i][5] = form.properties.xpathContext;\r\n                }\r\n            }\r\n        }\r\n\r\n        return actionsLaucher;\r\n    }\r\n});\r\n","/**\r\n * Base definition of entity template\r\n *\r\n * @author: Andres Fernando Muñoz\r\n * based on action launcher control\r\n */\r\n$.Class.extend(\"bizagi.rendering.entityTemplate\", {}, {\r\n    /**\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /**\r\n     * Initialize the control with data provided\r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n        var form = self.getFormContainer();\r\n\r\n        self.deferredActions = new $.Deferred();\r\n        self.deferredActions.promise();\r\n\r\n        // Data of get process property value\r\n        self.processPropertyValueArgs = {\r\n            \"pcaseId\": self.getIdCase(),\r\n            \"pguidEntity\": self.properties.guidEntity,\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"property\": \"data\",\r\n            \"psurrogatedKey\": self.properties.surrogatedKey\r\n        };\r\n\r\n        self.properties.valueWidth = 100;\r\n        self.properties.displayType = \"value\";\r\n        self.properties.allowactions = (typeof data.properties.allowactions == \"undefined\") ? true : data.properties.allowactions;\r\n\r\n        if(!self.properties.value) {\r\n            self.properties.value = self.value = [];\r\n        } else if(typeof self.properties.value == \"string\") {\r\n            self.properties.value = self.value = JSON.parse(self.properties.value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var template;\r\n        var html = \"\";\r\n        // Render template\r\n        if (mode == \"design\") {\r\n            template = self.renderFactory.getTemplate(\"render-entityTemplate-design\");\r\n            html = $.fasttmpl(template, {});\r\n        }\r\n        else if(self.properties.surrogatedKey) {\r\n            template = self.renderFactory.getTemplate(\"render-entityTemplate\");\r\n            html = $.fasttmpl(template, {allowactions: self.properties.allowactions});\r\n        }\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        // TODO: write functionality\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        // TODO: write functionality\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n    }\r\n});","/**\r\n * Base definition of Polymorphic launcher\r\n *\r\n * @author: Edward J Morales\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.polymorphicLauncher\", {}, {\r\n\t/*\r\n\t * Constructor\r\n\t */\r\n\tinit: function(params) {\r\n\t\t// Call base\r\n\t\tthis._super(params);\r\n\t},\r\n\r\n\t/*\r\n\t * Initialize the control with data provided\r\n\t */\r\n\tinitializeData: function(data) {\r\n\t\tvar self = this;\r\n\t\t// Call base\r\n\t\tthis._super(data);\r\n\t\tvar form = self.getFormContainer();\r\n\t\tthis.typeForm = form.properties.typeForm || \"\";\r\n\t\tvar mode = self.getMode();\r\n\r\n\t\tself.deferredActions = new $.Deferred();\r\n\t\tself.deferredActions.promise();\r\n\r\n\t\tself.properties.valueWidth = 100;\r\n\t\tself.properties.displayType = \"value\";\r\n\t\tself.properties.allowSearch = (typeof data.properties.allowSearch == \"undefined\") ? false : data.properties.allowSearch;\r\n\t\tself.properties.additionalXpath = self.properties.additionalXpath || [];\r\n\r\n\t\tif(!self.properties.value) {\r\n\t\t\tself.properties.value = self.value = [];\r\n\t\t\tself.properties.originalValue = [];\r\n\t\t} else if(typeof self.properties.value == \"string\") {\r\n\t\t\tself.properties.value = self.value = JSON.parse(self.properties.value);\r\n\t\t}\r\n\r\n\t\t// Data of get process property value\r\n\t\tself.processPropertyValueArgs = {\r\n\t\t\t\"pcaseId\": self.getIdCase(),\r\n\t\t\t\"pguidEntity\": self.properties.guidEntity,\r\n\t\t\t\"idRender\": self.properties.id,\r\n\t\t\t\"xpathContext\": form.properties.xpathContext,\r\n\t\t\t\"idPageCache\": form.properties.idPageCache,\r\n\t\t\t\"property\": \"data\",\r\n\t\t\t\"ptags\": self.getTagList(self.properties.tagslist),\r\n\t\t\t\"additionalXpaths\": self.properties.additionalXpath\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t * Send processpropertyvalue in order to execute an Action\r\n\t * This method is used when this control stay in Summary form or Global form\r\n\t * @param action\r\n\t */\r\n\texecuteActionImmediately: function(action) {\r\n\t\tvar self = this;\r\n\t\t//Execute action immediately\r\n\t\tvar form = self.getFormContainer();\r\n\r\n\t\tvar processPropertyValueExecuteConstructor = {\r\n\t\t\t\"idRender\": self.properties.id,\r\n\t\t\t\"xpathContext\": form.properties.xpathContext,\r\n\t\t\t\"idPageCache\": form.properties.idPageCache,\r\n\t\t\t\"property\": \"executeConstructor\",\r\n\t\t\t\"psurrogatedKey\": self.properties.surrogatedKey,\r\n\t\t\t\"pguidConstructor\": action.guidConstructor,\r\n\t\t\t\"pparameters\": JSON.encode({\r\n\t\t\t\t\"idStartScope\": action.idStartScope,\r\n\t\t\t\t\"pactionXpath\": self.properties.xpathActions,\r\n\t\t\t\t\"idPageCache\": action.idPageCache\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tself.dataService.executeActions(processPropertyValueExecuteConstructor).done(function(data) {\r\n\t\t\tself.notifyExecution(data.response, action);\r\n\t\t}).fail(function(error) {\r\n\t\t\t// TODO: Create generic mechanism to send notifications\r\n\t\t\tself.notifyExecution(\"Error\", action);\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * notify action execution status\r\n\t * @param response\r\n\t */\r\n\tnotifyExecution: function(response, actionName) {\r\n\t\t// To override in each device\r\n\t},\r\n\r\n\t/**\r\n\t * Render control in read only mode: properties.editable = false\r\n\t * @return {*}\r\n\t */\r\n\trenderReadOnly: function() {\r\n\t\treturn this.renderControl();\r\n\t},\r\n\r\n\t/**\r\n\t * Make a postrender of readonly control\r\n\t */\r\n\tpostRenderReadOnly: function() {\r\n\t\tthis.properties.readOnly = true;\r\n\t\tthis.postRender();\r\n\t},\r\n\r\n\t/**\r\n\t * Template method to implement in each children to customize each control\r\n\t * @return {string}\r\n\t */\r\n\trenderControl: function() {\r\n\t\tvar self = this;\r\n\t\tvar properties = self.properties;\r\n\t\tvar mode = self.getMode();\r\n\t\tvar template;\r\n\t\tvar html = \"\";\r\n\r\n\t\t// Render template\r\n\t\tif(mode == \"design\") {\r\n\t\t\ttemplate = self.renderFactory.getTemplate(\"render-polymorphicLauncher-design\");\r\n\t\t\tvar params = {\r\n\t\t\t\ttype: properties.type,\r\n\t\t\t\tallowSearch: properties.allowSearch\r\n\t\t\t};\r\n\t\t\thtml = $.fasttmpl(template, params);\r\n\t\t} else if(properties.surrogatedKey) {\r\n\t\t\ttemplate = self.renderFactory.getTemplate(\"render-polymorphicLauncher\");\r\n\t\t\thtml = $.fasttmpl(template);\r\n\t\t}\r\n\t\treturn html;\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Public method to determine if a value is valid or not\r\n\t * @param invalidElements\r\n\t * @return {*}\r\n\t */\r\n\tisValid: function(invalidElements) {\r\n\t\tvar self = this,\r\n\t\t\tproperties = self.properties;\r\n\t\t// Call base\r\n\t\tvar bValid = this._super(invalidElements);\r\n\t\tvar value = self.getValue();\r\n\t\t// TODO: write functionality\r\n\t\treturn bValid;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the value in the rendered control\r\n\t * @param value\r\n\t */\r\n\tsetDisplayValue: function(value) {\r\n\t\tvar self = this;\r\n\t\t// Set internal value\r\n\t\tself.setValue(value, false);\r\n\t},\r\n\r\n\t/**\r\n\t * Process an action\r\n\t * @param action\r\n\t */\r\n\tactionManager: function(action) {\r\n\t\tvar self = this;\r\n\t\tvar guidProcess = action.guidObject || \"\";\r\n\t\tvar def = new $.Deferred();\r\n\r\n        action.recordXpath = self.getFormContainer().properties.recordXpath;\r\n\r\n\t\t/**\r\n\t\t/**\r\n\t\t * Check if action is a process\r\n\t\t */\r\n\t\tswitch(action.actionType) {\r\n\t\t\tcase \"Process\":\r\n\t\t\t\t// Verify if case has startform\r\n\t\t\t\tvar params = {\r\n\t\t\t\t\tguidWFClass: guidProcess\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$.when(self.dataService.hasStartForm(params)).done(function(result) {\r\n\t\t\t\t\tif(result.hasStartForm) {\r\n\t\t\t\t\t\t// Open a dialog with startform and wait for Scope\r\n\t\t\t\t\t\t$.when(self.processStartForm({\r\n\t\t\t\t\t\t\tguidprocess: guidProcess,\r\n\t\t\t\t\t\t\ttitle: action.displayNamee,\r\n                            recordXpath: action.recordXpath\r\n\t\t\t\t\t\t})).done(function(idStartScope) {\r\n\t\t\t\t\t\t\taction.idStartScope = idStartScope;\r\n\t\t\t\t\t\t\tdef.resolve(action);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Just add action to queue to be executed on nextEvent\r\n\t\t\t\t\t\tdef.resolve(action);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Rule\":\r\n\t\t\t\t// Just add action to queue to be executed on nextEvent\r\n\t\t\t\tdef.resolve(action);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Form\":\r\n\t\t\t\t$.when(self.processActionForm(action)).done(function(idStartScope) {\r\n\t\t\t\t\taction.idStartScope = idStartScope;\r\n\t\t\t\t\tdef.resolve(action);\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn def.promise();\r\n\t},\r\n\r\n\t/**\r\n\t * Add actions within value object\r\n\t * @param action\r\n\t */\r\n\taddActionToQueue: function(action) {\r\n\t\tvar self = this;\r\n\t\tvar actionsList = self.getValue();\r\n\t\tvar formParams = self.getFormContainer().getParams();\r\n\t\t\r\n\t\taction.params = action.params || {};\r\n\r\n        var recordXpath = self.properties.xpathContext;\r\n\r\n\t\tswitch(action.actionType) {\r\n\t\t\tcase \"Process\":\r\n\t\t\t\taction.params = {\r\n\t\t\t\t\tadditionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n\t\t\t\t\tidParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n                    recordXpath: recordXpath\r\n\t\t\t\t};\r\n                if (typeof action.idStartScope !== \"undefined\") {\r\n                    action.params.idStartScope = action.idStartScope;\r\n                }\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Form\":\r\n\t\t\t\taction.params = {\r\n\t\t\t\t\tidStartScope: action.idStartScope,\r\n\t\t\t\t\tadditionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n\t\t\t\t\tentityXpath: self.properties.xpathActions,\r\n\t\t\t\t\tidParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n\t\t\t\t\tidEntity: action.idEntity,\r\n\t\t\t\t\tguidEntity: action.guidEntity\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Rule\":\r\n\t\t\t\t//TODO\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tactionsList.push(action);\r\n\t\tself.setValue(actionsList);\r\n\t\tself.setDisplayValue(actionsList);\r\n\t},\r\n\r\n\t/**\r\n\t * Remove action within value object\r\n\t * @param index\r\n\t */\r\n\tremoveActionToQueue: function(index) {\r\n\t\tvar self = this;\r\n\t\tvar value = self.getValue();\r\n\t\tvalue.splice(index, 1);\r\n\t\tself.setValue(value);\r\n\t\tself.setDisplayValue(value);\r\n\t},\r\n\t/**\r\n\t * Add the render data to the given collection in order to send data to the server\r\n\t * @param renderValues\r\n\t */\r\n\tcollectData: function(renderValues) {\r\n\t\tvar self = this;\r\n\t\tif(self.controlValueIsChanged()) {\r\n\t\t\tvar properties = self.properties;\r\n\t\t\tvar xpath = properties.xpath;\r\n\t\t\tvar controlValue = self.getValue();\r\n\t\t\tvar actions = [];\r\n\t\t\t$.each(controlValue, function(index, value) {\r\n\t\t\t\tvar action = {};\r\n\t\t\t\taction.params = value.params || {};\r\n\t\t\t\taction.guidAction = value.guidObject || value.guidAction;\r\n\t\t\t\taction.displayName = value.displayName;\r\n\t\t\t\taction.guidConstructor = value.guidConstructor;\r\n\t\t\t\taction.actionType = value.actionType;\r\n\t\t\t\taction.xpathContext = value.xpathContext;\r\n\t\t\t\taction.guidEntity = value.guidEntity;\r\n\t\t\t\tactions.push(action);\r\n\t\t\t});\r\n\t\t\trenderValues[xpath] = (actions.length == 0) ? \"\" : JSON.encode(actions);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Util to count how many actions are there\r\n\t * @param action\r\n\t * @return {number}\r\n\t */\r\n\tcountSameActions: function(action) {\r\n\t\tvar self = this;\r\n\t\tvar value = self.getValue();\r\n\t\tvar count = 0;\r\n\t\t$.each(value, function(key, value) {\r\n\t\t\tif(value.guidAction == action.guidAction) {\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn count;\r\n\t},\r\n\r\n\t/**\r\n\t * Get list of tags\r\n\t * @param taglist\r\n\t * @return {Array}\r\n\t */\r\n\tgetTagList: function(taglist) {\r\n\t\ttaglist = taglist || [];\r\n\t\tvar result = [];\r\n\r\n\t\tfor(var i = taglist.length; i > 0; i--) {\r\n\t\t\tresult.push(taglist[i - 1].value);\r\n\t\t}\r\n\t\treturn (result.length > 0) ? result : \"\";\r\n\t}\r\n});","/*\r\n *   Name: BizAgi Render Column Decorator Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define basic stuff for Columns\r\n */\r\n\r\nbizagi.rendering.element.extend(\"bizagi.rendering.columns.column\", {}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        this.decoratedClass = params.decorated;\r\n        this.data = params.data;\r\n        if (params.singleInstance) {\r\n            this.decorated = new this.decoratedClass({\r\n                data: this.data,\r\n                parent: this.parent,\r\n                renderFactory: this.renderFactory,\r\n                dataService: this.dataService\r\n            });\r\n            this.decorated.getControl = this.getControl;\r\n            params.decorated = this.decorated;\r\n            this.decorated.properties.isColumn = true;\r\n        } else {\r\n            this.decorateRenders = [];\r\n        }\r\n        this.grid = params.parent;\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n        properties.columnVisible = bizagi.util.parseBoolean(properties.columnVisible) != null ? bizagi.util.parseBoolean(properties.columnVisible) : true;\r\n        properties.align = properties.align || 'center';\r\n        properties.textFormat = properties.textFormat || {};\r\n        properties.submitOnChange = (typeof properties.submitOnChange != \"undefined\") ? bizagi.util.parseBoolean(properties.submitOnChange) : false;\r\n        properties.singleInstance = params.singleInstance;\r\n        properties.editable = (typeof properties.editable != \"undefined\") ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.visible = (typeof properties.visible != \"undefined\") ? bizagi.util.parseBoolean(properties.visible) : true;\r\n        properties.required = (typeof properties.required != \"undefined\") ? bizagi.util.parseBoolean(properties.required) : false;\r\n        properties.showColumn = (typeof properties.showColumn != \"undefined\") ? bizagi.util.parseBoolean(properties.showColumn) : true;\r\n\r\n        // Define if it is editable or not        \r\n        try {\r\n            if (params.parent && typeof params.parent.properties.editable == \"boolean\" && !params.parent.properties.editable) {\r\n                properties.editable = false;\r\n            }\r\n        } catch (e) {\r\n        }\r\n\r\n        // Define if the column is readonly\r\n        this.readonly = properties.readonly !== undefined ? properties.readonly : false;\r\n        if (this.readonly) properties.editable = required = false;\r\n\r\n        // Save original properties\r\n        this.originalProperties = JSON.parse(JSON.encode(properties));\r\n    },\r\n\r\n    /*\r\n    *   Return true if the column is read-only, so we can make a quick render\r\n    */\r\n    isReadonly: function () {\r\n        return false;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Method to retrieve the decorated control\r\n    */\r\n    getControl: function () {\r\n        var self = this;\r\n        return $(\".ui-bizagi-render-control\", self.element || self.observableElement);\r\n    },\r\n    /*\r\n    *   Returns the decorated cell instance to use\r\n    */\r\n    getDecorated: function (surrogateKey) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (properties.singleInstance) {\r\n            return self.decorated;\r\n        }\r\n        else {\r\n            var decorated = self.decorateRenders[surrogateKey];\r\n            if (decorated == undefined) {\r\n                if (typeof self.decorateRenders != \"object\") {\r\n                    self.decorateRenders = [];\r\n                }\r\n                var instanceDecoratedClass = new this.decoratedClass({\r\n                    data: bizagi.clone(this.data),\r\n                    parent: this.parent,\r\n                    renderFactory: this.renderFactory,\r\n                    dataService: this.dataService\r\n                });\r\n                decorated = instanceDecoratedClass;\r\n                self.decorateRenders[surrogateKey] = instanceDecoratedClass;\r\n\r\n                // Set surrogate key to all controls\r\n                decorated.surrogateKey = surrogateKey;\r\n\r\n                // Execute decorated overrides\r\n                self.applyOverrides(decorated);\r\n\r\n                // Also override setDisplayValue on summary row for non numeric columns\r\n                if (surrogateKey == \"summary\" && decorated.properties.type != \"columnMoney\" && decorated.properties.type != \"columnNumber\") {\r\n\r\n                    decorated.setDisplayValue = function (value) {\r\n                        var control = this.getControl();\r\n\r\n                        // Replace line breaks for html line breaks\r\n                        control.html(value);\r\n                    };\r\n                }\r\n            }\r\n            return decorated;\r\n        }\r\n    },\r\n    /*\r\n    *   Set a ready function to execute when the render has been inserted in the dom\r\n    */\r\n    ready: function () {\r\n        return this.readyDeferred.promise();\r\n    },\r\n    /*\r\n    *   Load stuff needed for the column\r\n    *   It could return a promise if the column need to load async stuff\r\n    */\r\n    initialize: function () {\r\n        // Override to do any stuff needed here\r\n    },\r\n    /* \r\n    *  Method to determine if the render value can be sent to the server or not\r\n    */\r\n    canBeSent: function (surrogateKey, cellOverrides) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n\r\n        if (cellOverrides) {\r\n            decorated.properties.visible = cellOverrides.visible;\r\n            decorated.properties.editable = cellOverrides.editable;\r\n        }\r\n        return decorated.canBeSent() || (!self.properties.editable && self.hasChanged()) || (!decorated.properties.editable && self.hasChanged());\r\n    },\r\n    /*\r\n    *   Method to check if a value is valid or not in this render\r\n    */\r\n    isValueValid: function (surrogateKey, value, messages, propertyOverrides) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var invalidElements = [];\r\n\r\n        if (propertyOverrides.visible) {\r\n            self.setValue(surrogateKey, value);\r\n\r\n            // Override properties\r\n            decorated.properties = $.extend(decorated.properties, propertyOverrides);\r\n\r\n            if (self.grid && typeof(decorated.grid) === \"undefined\") {\r\n                decorated.grid = self.grid;\r\n            }\r\n\r\n            // Validate field\r\n            decorated.isValid(invalidElements);\r\n        }\r\n\r\n        if (invalidElements.length > 0) {\r\n            $.each(invalidElements, function (i, invalidElement) {\r\n                messages.push(invalidElement.message);\r\n            });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    },\r\n    /*\r\n    *   Apply custom overrides to each decorated instance\r\n    */\r\n    applyOverrides: function (decorated) {\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element \r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        // Set grid and id references to the control in order to render the content\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        decorated.grid = self.grid;\r\n        decorated.column = this;\r\n        decorated.surrogateKey = surrogateKey;\r\n\r\n        // Set cell value\r\n        self.setValue(surrogateKey, value);\r\n\r\n        // Override render properties\r\n        self.overrideDecoratedRenderProperties(surrogateKey);\r\n\r\n        // Set flag to check when a render has changed\r\n        self.changed = false;\r\n\r\n        // If the render is not editable return the readonly version of the column\r\n        //Fix: Uncaught RangeError: Maximum call stack size exceeded\r\n        if (!properties.editable && arguments[3] !== \"CALLER_RENDER_READ_ONLY_COLUMNSLINK\")\r\n            return self.renderReadOnly.apply(self, arguments);\r\n\r\n        // Returns the decorated render inside a custom layout for columns\r\n        self.readyDeferred = new $.Deferred();\r\n        var cell = decorated.render(\"cell\");\r\n\r\n        // If the render changes set the flag on\r\n        decorated.bind(\"renderchange\", function () {\r\n            self.changed = true;\r\n        });\r\n\r\n        self.bind(\"rendered\", function () {\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n        return cell;\r\n    },\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRender: function (surrogateKey, cell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        decorated.postRenderElement(cell);\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element when the element is read-only\r\n    */\r\n    renderReadOnly: function (surrogateKey, value) {\r\n        var self = this;\r\n        // Set grid and id references to the control in order to render the content\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        decorated.grid = self.grid;\r\n        decorated.column = this;\r\n        decorated.surrogateKey = surrogateKey;\r\n\r\n        // Set cell value\r\n        self.setValue(surrogateKey, value);\r\n\r\n        // Override render properties\r\n        self.overrideDecoratedRenderProperties(surrogateKey);\r\n\r\n        // Changes editable to false to render read-only\r\n        decorated.properties.editable = false;\r\n\r\n        // Perform the internal render\r\n        self.readyDeferred = new $.Deferred();\r\n        var result = decorated.render(\"cell.readonly\");\r\n\r\n        self.bind(\"rendered\", function () {\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n        // Returns the decorated render inside a custom layout for columns\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *  Returns the html template to draw the summary cell\r\n    */\r\n    renderSummary: function (key, value) {\r\n        var self = this;\r\n        var result = self.renderFactory.getTemplate(\"cell.summary\")\r\n        return $.tmpl(result).html();\r\n    },\r\n\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRenderReadOnly: function (surrogateKey, cell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var editable = self.properties.editable;\r\n        decorated.properties.editable = false;\r\n        if (self.properties.singleInstance) {\r\n            decorated.element = cell;\r\n        }\r\n        decorated.postRenderElement(cell);\r\n        decorated.properties.editable = editable;\r\n    },\r\n\r\n    /*\r\n    * Return false to all columns that doesn't need special treatment (like number or currency)\r\n    */\r\n    postRenderSummary: function () {\r\n        return false;\r\n    },\r\n\r\n    /*\r\n    *   Returns the cell html to be inserted in the table\r\n    */\r\n    getCell: function () {\r\n        return this.decorated.getDisplayValue();\r\n    },\r\n    /*\r\n    *   Sets the surrogate key for this row\r\n    */\r\n    setSurrogateKey: function (key) {\r\n        this.surrogateKey = key;\r\n    },\r\n    /*\r\n    *   Sets the internal value, only must be called internally\r\n    */\r\n    setValue: function (surrogateKey, value) {\r\n        var self = this;\r\n\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated != \"undefined\" && decorated != null) {\r\n\r\n            decorated.properties.originalValue = value;\r\n            decorated.properties.previousValue = value;\r\n\r\n            if ((value === null || value === undefined) && self.properties.defaultvalue !== undefined && decorated.grid != undefined) {\r\n                value = self.setDefaultValue(surrogateKey, decorated);\r\n            }\r\n\r\n            decorated.properties.value = value;\r\n            decorated.setValue(value, false);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Set the cell default value and make this action as a change to send it to server\r\n    */\r\n    setDefaultValue: function (surrogateKey, decorated) {\r\n        var self = this;\r\n        var value = self.properties.defaultvalue;\r\n\r\n        decorated.grid.changes[surrogateKey] = decorated.grid.changes[surrogateKey] || {};\r\n        decorated.grid.changes[surrogateKey][self.properties.xpath] = value;\r\n\r\n        return value;\r\n    },\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        return decorated.getValue();\r\n    },\r\n    /*\r\n    *   Gets the composite value (applies for non-standard render values)\r\n    */\r\n    getCompositeValue: function (surrogateKey) {\r\n        return this.getValue(surrogateKey);\r\n    },\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () {\r\n        return bizagi.rendering.element.ELEMENT_TYPE_COLUMN;\r\n    },\r\n    /*\r\n    *   Determines if a render has changed its value\r\n    */\r\n    hasChanged: function () {\r\n        return this.changed;\r\n    },\r\n    /*\r\n    *   Triggers an event inside the control\r\n    */\r\n    trigger: function (eventType, data) {\r\n        if (this.decorated)\r\n            this.decorated.trigger(eventType, data);\r\n    },\r\n    /*\r\n    *   Triggers an event handler inside the control\r\n    */\r\n    triggerHandler: function (eventType, data) {\r\n        if (this.decorated)\r\n            this.decorated.triggerHandler(eventType, data);\r\n    },\r\n    /*\r\n    *   Binds to an event\r\n    */\r\n    bind: function (eventType, fn) {\r\n        if (this.decorated)\r\n            this.decorated.bind(eventType, fn);\r\n    },\r\n    /*\r\n    *   Unbinds to an event\r\n    */\r\n    unbind: function (eventType, fn) {\r\n        if (this.decorated)\r\n            this.decorated.unbind(eventType, fn);\r\n    },\r\n    /*\r\n    *   Override decorated properties\r\n    */\r\n    overrideDecoratedRenderProperties: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n\r\n        // Override decorated control properties\r\n        decorated.properties.editable = this.properties.editable;\r\n        decorated.properties.visible = this.properties.visible;\r\n        decorated.properties.required = this.properties.required;\r\n    },\r\n\r\n    overrideProperties: function (properties) {\r\n        var self = this;\r\n\r\n        self.properties.editable = properties.editable || self.properties.editable;\r\n        self.properties.visible = properties.visible || self.properties.visible;\r\n        self.properties.required = properties.required || self.properties.required;\r\n    },\r\n\r\n    /*\r\n    *   Returns the xpath used to sort the grid\r\n    */\r\n    getSortName: function () {\r\n        var self = this;\r\n\r\n        // Check if there is an override for the default behaviour \r\n        var decorated = self.getAnyDecoratedInstance();\r\n        if (decorated && decorated.getSortColumn) {\r\n            return decorated.getSortColumn();\r\n        }\r\n\r\n        // Default behaviour\r\n        return self.properties.xpath;\r\n    },\r\n\r\n    /*\r\n    *   Returns any of the decorated instances, if there are none, return null\r\n    */\r\n    getAnyDecoratedInstance: function () {\r\n        var self = this;\r\n        var first;\r\n\r\n        // Get the first key for the hash\r\n        for (first in this.decorateRenders) break;\r\n\r\n        // Return the first decorated render\r\n        if (first) return this.decorateRenders[first];\r\n\r\n        return null;\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self.decorated) {\r\n                self.decorated.unbind(\"renderchange\");\r\n                self.decorated.dispose();\r\n            }\r\n        \r\n            if (self.decorateRenders) {\r\n                bizagi.util.arrayEach(self.decorateRenders, function (key, render) {\r\n                    if (render) {\r\n                        render.unbind(\"renderchange\");\r\n                        render.dispose();\r\n                    }\r\n                });\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n        \r\n        // Call base\r\n        self._super();\r\n    }\r\n});\r\n\r\n","/*\r\n *   Name: BizAgi Render Column ReadOnlyDecorator Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define basic stuff for readonly-columns\r\n */\r\n\r\n// Extends itself\r\n$.Class.extend(\"bizagi.rendering.columns.readonly\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n\r\n        // Define the column as readonly\r\n        properties.editable = required = false;\r\n    },\r\n\r\n    /*\r\n    *   Return true if the column is read-only, so we can make a quick render\r\n    */\r\n    isReadonly: function () {\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element \r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value) {\r\n        if (typeof value === \"string\") {\r\n            var valueToDisplay = value.replaceAll(\"\\\\n\", \"<br/>\");\r\n            valueToDisplay = valueToDisplay.replaceAll(\"\\n\", \"<br/>\");\r\n            return valueToDisplay;\r\n        }\r\n        else if (value === null){\r\n            return \"\";\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRender: function (surrogateKey, cell) {\r\n        // DON'T DO ANYTHING\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element when the element is read-only\r\n    */\r\n    renderReadOnly: function (surrogateKey, value) {\r\n        return this.render(surrogateKey, value);\r\n    },\r\n\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRenderReadOnly: function (surrogateKey, cell) {\r\n        // DON'T DO ANYTHING\r\n    },\r\n    \r\n    /*\r\n    *   Method to check if a value is valid or not in this render\r\n    */\r\n    isValueValid: function () {\r\n        // It is always valid because the column is readonly\r\n        return true;\r\n    }\r\n});\r\n\r\n","/*\r\n*   Name: BizAgi Render Combo Column Decorator Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for Combo Columns\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.combo\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n        properties.recalculate = bizagi.util.parseBoolean(properties.recalculate) || false;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Apply custom overrides to each decorated instance\r\n    */\r\n    applyOverrides: function (decorated) {\r\n        var properties = this.properties;\r\n\r\n        this._super(decorated);\r\n\r\n        if (!properties.recalculate) {\r\n            decorated.originalGetData = decorated.getData;\r\n            decorated.getData = this.getDataForAllCells;\r\n            decorated.findDataById = this.findDataById;\r\n        }\r\n    },\r\n\r\n    findDataById: function (id) {\r\n        var self = this;\r\n        var result = {};\r\n        if (this.column && this.column.comboData) {\r\n            $.each(this.column.comboData, function (key, value) {\r\n                if (value.id == id) {\r\n                    result = value;\r\n                }\r\n            });\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Single data fetch for all the cells\r\n    */\r\n    getDataForAllCells: function (params) {\r\n        var column = this.column;\r\n        if (column.comboData) return column.comboData;\r\n        if (column.fetchingData) return column.dataPromise;\r\n\r\n        // Start fetching\r\n        column.fetchingData = true;\r\n        column.dataPromise = $.when(this.originalGetData(params))\r\n        .pipe(function (result) {\r\n            column.comboData = result;\r\n            column.fetchingData = false;\r\n            return result;\r\n        });\r\n\r\n        return column.dataPromise;\r\n    },\r\n\r\n    /*\r\n    *   Sets the internal value\r\n    */\r\n    setValue: function(surrogateKey, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated === null) {\r\n            return;\r\n        }\r\n\r\n        // Perform default set value when rendering summary row\r\n        if (surrogateKey == \"summary\") return self._super(surrogateKey, value);\r\n\r\n        if (value && bizagi.util.isString(value)) {        \r\n            self._super(surrogateKey, value);\r\n        } else if (value && value.length > 0) {\r\n            // Create the value property\r\n            var newValue = {\r\n                id: value[0][0],\r\n                value: value[0].length > 2 ? $.grep(value[0], function(item, i) { return i != 0; }) : value[0][1]\r\n            };\r\n            // Call base\r\n            self._super(surrogateKey, newValue);\r\n            decorated.selectedValue = newValue.value;\r\n        } else if (value && value.id && value.value) {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value.value;\r\n        } else if (self.properties.type == \"columnRadio\") {\r\n            self._super(surrogateKey, null);\r\n            decorated.selectedValue = value;\r\n        } else if (value && typeof (value) == \"number\") {\r\n            self._super(surrogateKey, value);\r\n        } else {\r\n            // Set null values when the entry array is null\r\n            self._super(surrogateKey, null);\r\n            decorated.selectedValue = \"\";\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getCompositeValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var value = decorated.getValue();\r\n        var label = decorated.getSelectedValue();\r\n\r\n        // Build value for grid data\r\n        var valueForGrid = [];\r\n        if (value && (value.id > 0 || bizagi.util.isString(value.id))) {\r\n            valueForGrid.push([]);\r\n            valueForGrid[0].push(value.id);\r\n            valueForGrid[0].push(label);\r\n        } else {\r\n            valueForGrid.push([]);\r\n        }\r\n\r\n        return valueForGrid;\r\n    },\r\n\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var value = decorated.getValue();\r\n        if (value) return value.id;\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element \r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value, tableCell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var properties = self.properties;\r\n\r\n        // If the control needs to recalculate data, reset it on the decorated render\r\n        if (properties.recalculate) {\r\n            decorated.resetData();\r\n        }\r\n\r\n        // Change the xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + surrogateKey + \"]\" : self.grid.properties.xpath + \"[id=\" + surrogateKey + \"]\";\r\n        decorated.properties.xpathContext = xpathContext;\r\n\r\n        // Render the control\r\n        var result = this._super(surrogateKey, value, tableCell);\r\n\r\n        return result;\r\n    },\r\n\r\n    renderReadOnly: function (key, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(key);\r\n        var properties = self.properties;\r\n\r\n        // Change the xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + key + \"]\" : self.grid.properties.xpath + \"[id=\" + key + \"]\";\r\n        decorated.properties.xpathContext = xpathContext;\r\n\r\n        // Render the control\r\n        var result = this._super(key, value);\r\n\r\n        return result;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Render Date Column Decorator Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for Date Columns\r\n*/\r\n\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.date\", {}, {\r\n\r\n    /*\r\n    *   Sets the internal value\r\n    */\r\n    setValue: function (surrogateKey, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated === null) return;\r\n\r\n        self._super(surrogateKey, value);\r\n        if ((value === null || value === undefined) && self.properties.defaultvalue !== undefined) {\r\n            value = self.setDefaultValue(surrogateKey, decorated);\r\n        }\r\n\r\n        // Perform default set value when rendering summary row\r\n        if (surrogateKey === \"summary\") return self._super(surrogateKey, value);\r\n\r\n        if (value == null) {\r\n            decorated.setValue(value, false);\r\n            decorated.properties.displayValue = \"\";\r\n        }\r\n\r\n        var date = bizagi.util.dateFormatter.getDateFromInvariant(value, decorated.properties.showTime);\r\n\r\n        if (date === 0) {\r\n            // force another attempt in order to check invariant format for the value with time or without time (reverse option)\r\n            date = bizagi.util.dateFormatter.getDateFromInvariant(value, !decorated.properties.showTime);\r\n        }\r\n        // Format date to current format\r\n        if (date !== 0) {\r\n            var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n            var formattedDate = bizagi.util.dateFormatter.formatDate(date, decorated.properties.fullFormat, datePickerRegional);\r\n\r\n            // Set formatted value in display value property\r\n            decorated.properties.displayValue = formattedDate;\r\n\r\n            // Send original value to decorated control, because it must be with invariant format\r\n            decorated.setValue(value, false);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Set the cell default value and make this action as a change to send it to server\r\n    */\r\n    setDefaultValue: function (surrogateKey, decorated) {\r\n        var self = this;\r\n        var value = self.properties.defaultvalue;\r\n\r\n        decorated.grid.changes[surrogateKey] = decorated.grid.changes[surrogateKey] || {};\r\n\r\n        value = bizagi.util.dateFormatter.getDateFromInvariant(value, decorated.properties.showTime || false);\r\n\r\n        value = bizagi.util.dateFormatter.formatInvariant(value, true);\r\n        decorated.grid.changes[surrogateKey][self.properties.xpath] = value;\r\n\r\n        return value;\r\n    }\r\n});\r\n\r\n","/*\r\n*   Name: BizAgi Render Combo Column Decorator Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for Combo Columns\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.search\", {}, {\r\n\r\n\t/*\r\n\t*   Constructor\r\n\t*/\r\n\tinit: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n\r\n        if (properties.advancedSearch && this.getMode() === \"execution\") {\r\n            properties.submitOnChange = bizagi.util.parseBoolean(properties.submitOnChange) || false;\r\n            properties.submitOnChange = (properties.submitVersion || 1) > 1 ? properties.submitOnChange : true;\r\n        }\r\n    },\r\n\r\n\t/*\r\n\t*   Returns the in-memory processed element \r\n\t*   so the caller could append it to any place\r\n\t*/\r\n\trender: function (surrogateKey, value, tableCell) {\r\n\t\tvar self = this;\r\n\t\tvar decorated = self.getDecorated(surrogateKey);\r\n\t\tvar properties = self.properties;\r\n\r\n\t\t// If the control needs to recalculate data, reset it on the decorated render\r\n\t\tif (properties.recalculate) {\r\n\t\t\tdecorated.resetData();\r\n\t\t}\r\n\r\n\t\t// Change the xpath context\r\n\t\tvar xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + surrogateKey + \"]\" : self.grid.properties.xpath + \"[id=\" + surrogateKey + \"]\";\r\n        decorated.properties.xpathContext = xpathContext;\r\n\r\n\t\t// Render the control\r\n\t\tvar result = this._super(surrogateKey, value, tableCell);\r\n\r\n\t\treturn result;\r\n\t},\r\n\r\n\t/*\r\n    *   Gets the internal value\r\n    */\r\n    getValue: function (surrogateKey) {\r\n        var self = this;\r\n    \tvar decorated = self.getDecorated(surrogateKey);\r\n        var value = decorated.getValue();\r\n        if (value && typeof(value) == \"object\" ) return value.id;\r\n        \t\r\n    \treturn value;\r\n    },\r\n    setValue: function (surrogateKey, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated === null) { return; }\r\n\r\n        // Perform default set value when rendering summary row\r\n        if (surrogateKey == \"summary\") return self._super(surrogateKey, value);\r\n\r\n        if (value && value.length > 0) {\r\n            // Create the value property\r\n            var newValue = {\r\n                id: value[0][0],\r\n                value: value[0].length > 2 ? $.grep(value[0], function (item, i) { return i != 0; }) : value[0][1]\r\n            };\r\n            // Call base\r\n            self._super(surrogateKey, newValue);\r\n            decorated.selectedValue = newValue.value;\r\n        } else if (value && value.id && value.value) {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value.value;\r\n        } else if(value && value.id && value.label){\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value.label;\r\n        }\r\n        else{\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = \"\";\r\n        }\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: Bizagi Base Render Factory\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define an abstract render factory in order to do common stuff for all device factories\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.base.factory\", {}, {\r\n    /* \r\n    *   Constructor\r\n    */\r\n    init: function (dataService) {\r\n        this.templates = {};\r\n        this.dataService = dataService;        \r\n    },\r\n\r\n    /**\r\n    * Load client resources in order to override a default behavior\r\n    */\r\n    loadOverrides: function () {\r\n    },\r\n    /*\r\n    *   This function will load asynchronous stuff needed in the module\r\n    */\r\n    initAsyncStuff: function() {\r\n        return $.when.apply($, [this.loadOverrides(), this.loadTemplates()]);\r\n    },\r\n    /*\r\n    *   Load all the templates used for rendering\r\n    */\r\n    loadTemplates: function () {\r\n    },\r\n    /*\r\n    *   Load one template and save it internally\r\n    */\r\n    loadTemplate: function(template, templateDestination) {\r\n        var self = this;\r\n\r\n        // Go fetch the template\r\n        return bizagi.templateService.getTemplate(templateDestination, template)\r\n                .done(function (resolvedTemplate) {\r\n                self.templates[template] = resolvedTemplate;\r\n            });\r\n    },\r\n    /*\r\n    * Returns a common  used template for the framework\r\n    */\r\n    getCommonTemplate: function (template) {        \r\n        return this.templates[template];\r\n    },\r\n    /*\r\n    *   Returns the appropiate container based on the container type\r\n    */\r\n    getContainer: function (params) {\r\n        // TODO: REMOVE IMPLEMENTATION\r\n\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var containerParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type == \"form\") {\r\n            return new bizagi.rendering.form(containerParams);\r\n        }\r\n\r\n        if (type == \"mobileform\") {\r\n            return new bizagi.rendering.mobileform(containerParams);\r\n        }\r\n\r\n        if (type == \"template\") {\r\n            return new bizagi.rendering.formTemplate(containerParams);\r\n        }\r\n\r\n        if (type == \"queryForm\") {\r\n            return new bizagi.rendering.queryForm(containerParams);\r\n        }\r\n\r\n        if (type == \"layout\") {\r\n            return new bizagi.rendering.layout(containerParams);\r\n        }\r\n\r\n        if (type == \"usersForm\") {\r\n            return new bizagi.rendering.usersForm(containerParams);\r\n        }\r\n\r\n        if (type == \"panel\") {\r\n            return new bizagi.rendering.panel(containerParams);\r\n        }\r\n\r\n        if (type == \"contentPanel\" || type == \"contentpanel\") {\r\n            return new bizagi.rendering.contentPanel(containerParams);\r\n        }\r\n\r\n        if (type.toLowerCase() == \"nestedform\") {\r\n            return new bizagi.rendering.nestedForm(containerParams);\r\n        }\r\n\r\n        if (type == \"tab\") {\r\n            return new bizagi.rendering.tab(containerParams);\r\n        }\r\n\r\n        if (type == \"tabItem\" || type == \"tabitem\") {\r\n            return new bizagi.rendering.tabItem(containerParams);\r\n        }\r\n\r\n        if (type == \"horizontal\") {\r\n            return new bizagi.rendering.horizontal(containerParams);\r\n        }\r\n\r\n        if (type == \"accordion\") {\r\n            return new bizagi.rendering.accordion(containerParams);\r\n        }\r\n\r\n        if (type == \"accordionItem\") {\r\n            return new bizagi.rendering.accordionItem(containerParams);\r\n        }\r\n\r\n        if (type == \"group\") {\r\n            return new bizagi.rendering.group(containerParams);\r\n        }\r\n\r\n        if (type == \"mobilegroup\") {\r\n            return new bizagi.rendering.mobilegroup(containerParams);\r\n        }\r\n\r\n        if (type == \"searchForm\") {\r\n            containerParams.context = \"search\";\r\n            containerParams.contexttype = \"metadata\";\r\n            return new bizagi.rendering.searchForm(containerParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate render based on the render type\r\n    */\r\n    getRender: function (params) {\r\n\r\n        // TODO: REMOVE IMPLEMENTATION\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var renderParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (!type)\r\n            type = \"label\";\r\n\r\n        if (type == \"text\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                return new bizagi.rendering.extendedText(renderParams);\r\n            }\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.text(renderParams);\r\n        }\r\n        if (type == \"mobiletext\") {\r\n            return new bizagi.rendering.mobiletext(renderParams);\r\n        }\r\n\r\n        if (type == \"association\") {\r\n            return new bizagi.rendering.association(renderParams);\r\n        }\r\n\r\n        if (type == \"label\") {\r\n            return new bizagi.rendering.label(renderParams);\r\n        }\r\n\r\n        if (type == \"hidden\") {\r\n            return new bizagi.rendering.hidden(renderParams);\r\n        }\r\n\r\n        if (type == \"number\") {\r\n            return new bizagi.rendering.number(renderParams);\r\n        }\r\n\r\n        if (type == \"money\") {\r\n            return new bizagi.rendering.money(renderParams);\r\n        }\r\n\r\n        if (type == \"date\") {\r\n            return new bizagi.rendering.date(renderParams);\r\n        }\r\n\r\n        if (type == \"boolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                return new bizagi.rendering.check(renderParams);\r\n            }\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.yesno(renderParams);\r\n        }\r\n\r\n        if (type == \"combo\") {\r\n            return new bizagi.rendering.combo(renderParams);\r\n        }\r\n\r\n        if (/^cascadingcombo$/i.test(type)) {\r\n            return new bizagi.rendering.cascadingCombo(renderParams);\r\n        }\r\n\r\n        if (type == \"list\") {\r\n            return new bizagi.rendering.list(renderParams);\r\n        }\r\n\r\n        if (type == \"multiSelect\") {\r\n            return new bizagi.rendering.multiSelect(renderParams);\r\n        }\r\n\r\n        if (type == \"radio\") {\r\n            return new bizagi.rendering.radio(renderParams);\r\n        }\r\n\r\n        if (type == \"image\") {\r\n            // Override for test purposes\r\n            return new bizagi.rendering.image(renderParams);\r\n        }\r\n        if (type == \"uploadecm\") {\r\n            // Check if its ECM file            \r\n            return new bizagi.rendering.ecm(renderParams);\r\n        }\r\n\r\n        if (type == \"upload\") {\r\n            return new bizagi.rendering.upload(renderParams);\r\n        }\r\n        if (type == \"grid\") {\r\n            return new bizagi.rendering.grid(renderParams);\r\n        }\r\n\r\n        if (type == \"groupedgrid\") {\r\n            return new bizagi.rendering.grid(renderParams);\r\n        }\r\n\r\n        if (type == \"search\") {\r\n            return new bizagi.rendering.search(renderParams);\r\n        }\r\n\r\n        if (type == \"suggest\") {\r\n            renderParams.data.properties.enableQuerySuggestBehavior = true;\r\n            return new bizagi.rendering.search(renderParams);\r\n        }\r\n\r\n        if (type == \"searchList\") {\r\n            return new bizagi.rendering.searchList(renderParams);\r\n        }\r\n\r\n        if (type == \"letter\") {\r\n            return new bizagi.rendering.letter(renderParams);\r\n        }\r\n\r\n        if (type == \"button\") {\r\n            return new bizagi.rendering.button(renderParams);\r\n        }\r\n\r\n        if (type == \"formLink\") {\r\n            return new bizagi.rendering.formLink(renderParams);\r\n        }\r\n\r\n        if (type == \"link\") {\r\n            return new bizagi.rendering.link(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutImage\") {\r\n            return new bizagi.rendering.layoutImage(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutLink\") {\r\n            return new bizagi.rendering.layoutLink(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutLabel\") {\r\n            return new bizagi.rendering.layoutLabel(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutText\") {\r\n            return new bizagi.rendering.layoutText(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutDateTime\") {\r\n            return new bizagi.rendering.layoutDateTime(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutNumber\") {\r\n            return new bizagi.rendering.layoutNumber(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutMoney\") {\r\n            return new bizagi.rendering.layoutMoney(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutPlaceholder\") {\r\n            return new bizagi.rendering.layoutPlaceholder(renderParams);\r\n        }\r\n\r\n        if (type == \"actionLauncher\") {\r\n            return new bizagi.rendering.actionLauncher(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutBoolean\") {\r\n            return new bizagi.rendering.layoutBoolean(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutUpload\") {\r\n            return new bizagi.rendering.layoutUpload(renderParams);\r\n        }\r\n\r\n        if (type == \"entityTemplate\") {\r\n            return new bizagi.rendering.entityTemplate(renderParams);\r\n        }\r\n\r\n        if (type == \"polymorphicLauncher\") {\r\n            return new bizagi.rendering.polymorphicLauncher(renderParams);\r\n        }\r\n\r\n        if (type == \"userfield\") {\r\n            return new bizagi.rendering.userfieldWrapper(renderParams);\r\n        }\r\n\r\n        // Check search renders (starts with \"search\")\r\n        if (type.indexOf(\"search\") == 0) {\r\n            return this.getSearchRender(params);\r\n        }\r\n\r\n        if (type.indexOf(\"query\") == 0) {\r\n            return this.getQueryRender(params);\r\n        }\r\n\r\n        if (type == \"document\") {\r\n            return new bizagi.rendering.document(renderParams);\r\n        }\r\n\r\n        if (type == \"image\") {\r\n            return new bizagi.rendering.image(renderParams);\r\n        }\r\n        if (type == \"fileprint\") {\r\n            return new bizagi.rendering.fileprint(renderParams);\r\n        }\r\n        if (type == \"geolocation\") {\r\n            return new bizagi.rendering.geolocation(renderParams);\r\n        }\r\n\r\n        if (type == \"collectionnavigator\") {\r\n            return new bizagi.rendering.collectionnavigator(renderParams);\r\n        }\r\n\r\n        if (type == \"getUser\") {\r\n            return new bizagi.rendering.getUser(renderParams);\r\n        }\r\n\r\n        if (type == \"rangeDate\") {\r\n            return new bizagi.rendering.rangeDate(renderParams);\r\n        }\r\n\r\n        if (type == \"rangeMoney\") {\r\n            return new bizagi.rendering.rangeMoney(renderParams);\r\n        }\r\n\r\n        if (type == \"rangeNumber\") {\r\n            return new bizagi.rendering.rangeNumber(renderParams);\r\n        }\r\n\r\n        if (type == \"activityCheckList\") {\r\n            return new bizagi.rendering.activityCheckList(renderParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate column based on the render type\r\n    */\r\n    getColumn: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var columnParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService,\r\n            singleInstance: bizagi.util.isEmpty(params.singleInstance) ? true : params.singleInstance\r\n        });\r\n\r\n        if (type == \"columnText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                columnParams.decorated = bizagi.rendering.extendedText;\r\n            } else {\r\n                // Creates one normal text render\r\n                columnParams.decorated = bizagi.rendering.text;\r\n            }\r\n            return new bizagi.rendering.columns.text(columnParams);\r\n        }\r\n\r\n        if (type == \"columnSearchList\") {\r\n            columnParams.decorated = bizagi.rendering.searchList;\r\n            return new bizagi.rendering.columns.searchList(columnParams);\r\n        }\r\n\r\n        if (type == \"columnNumber\") {\r\n            columnParams.decorated = bizagi.rendering.number;\r\n            return new bizagi.rendering.columns.number(columnParams);\r\n        }\r\n\r\n        if (type == \"columnMoney\") {\r\n            columnParams.decorated = bizagi.rendering.money;\r\n            return new bizagi.rendering.columns.number(columnParams);\r\n        }\r\n\r\n        if (type == \"columnDate\") {\r\n            columnParams.decorated = bizagi.rendering.date;\r\n            return new bizagi.rendering.columns.date(columnParams);\r\n        }\r\n\r\n        if (type == \"columnBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                columnParams.decorated = bizagi.rendering.check;\r\n                if (params.data.properties.isExclusive) {\r\n                    return new bizagi.rendering.columns.exclusiveCheck(columnParams);\r\n                }\r\n            } else {\r\n                // Creates one yes-no render\r\n                columnParams.decorated = bizagi.rendering.yesno;\r\n            }\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnCombo\") {\r\n            columnParams.decorated = bizagi.rendering.combo;\r\n            return new bizagi.rendering.columns.combo(columnParams);\r\n        }\r\n\r\n        if (type == \"columnRadio\") {\r\n            columnParams.decorated = bizagi.rendering.radio;\r\n            return new bizagi.rendering.columns.radio(columnParams);\r\n        }\r\n\r\n        if (type == \"columnList\") {\r\n            columnParams.decorated = bizagi.rendering.list;\r\n            return new bizagi.rendering.columns.list(columnParams);\r\n        }\r\n\r\n        if (type == \"columnHidden\") {\r\n            columnParams.decorated = bizagi.rendering.hidden;\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUpload\") {\r\n            columnParams.decorated = bizagi.rendering.upload;\r\n            return new bizagi.rendering.columns.upload(columnParams);\r\n        }\r\n\r\n        if (type == \"columnImage\") {\r\n            columnParams.decorated = bizagi.rendering.image;\r\n            return new bizagi.rendering.columns.image(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUploadEcm\") {\r\n            columnParams.decorated = bizagi.rendering.ecm;\r\n            return new bizagi.rendering.columns.uploadecm(columnParams);\r\n        }\r\n        if (type == \"columnLink\") {\r\n            columnParams.decorated = bizagi.rendering.link;\r\n            return new bizagi.rendering.columns.link(columnParams);\r\n        }\r\n\r\n        if (type == \"columnFormLink\") {\r\n            columnParams.decorated = bizagi.rendering.formLink;\r\n            return new bizagi.rendering.columns.link(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUserfield\") {\r\n            columnParams.decorated = bizagi.rendering.userfieldWrapper;\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnSearch\") {\r\n            columnParams.decorated = bizagi.rendering.search;\r\n            return new bizagi.rendering.columns.search(columnParams);\r\n        }\r\n\r\n        if (type == \"columnLabel\") {\r\n            columnParams.decorated = bizagi.rendering.label;\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnReadonly\") {\r\n            columnParams.decorated = bizagi.rendering.label;\r\n            return new bizagi.rendering.columns.readonly(columnParams);\r\n        }\r\n\r\n        if (type == \"columnDocument\") {\r\n            columnParams.decorated = bizagi.rendering.document;\r\n            return new bizagi.rendering.columns.document(columnParams);\r\n        }\r\n\r\n        if (type == \"columnLetter\") {\r\n            columnParams.decorated = bizagi.rendering.letter;\r\n            return new bizagi.rendering.columns.letter(columnParams);\r\n        }\r\n\r\n        if (type == \"columnButton\") {\r\n            columnParams.decorated = bizagi.rendering.button;\r\n            return new bizagi.rendering.columns.button(columnParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate search render based on the type\r\n    */\r\n    getSearchRender: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var searchParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type == \"searchText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                return new bizagi.rendering.extendedText(searchParams);\r\n            }\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.text(searchParams);\r\n        }\r\n\r\n        if (type == \"searchBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                return new bizagi.rendering.check(searchParams);\r\n            }\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.yesno(searchParams);\r\n        }\r\n\r\n        if (type == \"searchNumber\") {\r\n            if (data.properties.dataType == 29) {\r\n                //Creates a Scientific Notation render\r\n                return new bizagi.rendering.numberScientificNotation(searchParams);\r\n            }\r\n            return new bizagi.rendering.number(searchParams);\r\n        }\r\n\r\n        if (type == \"searchMoney\") {\r\n            return new bizagi.rendering.money(searchParams);\r\n        }\r\n\r\n        if (type == \"searchDate\") {\r\n            return new bizagi.rendering.date(searchParams);\r\n        }\r\n\r\n        if (type == \"searchCombo\") {\r\n            return new bizagi.rendering.combo(searchParams);\r\n        }\r\n\r\n        if (type == \"searchSuggest\") {\r\n            return new bizagi.rendering.search(searchParams);\r\n        }\r\n\r\n        if (type == \"searchLabel\") {\r\n            return new bizagi.rendering.label(searchParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate search render based on the type\r\n    */\r\n    getQueryRender: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var searchParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type == \"queryText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                return new bizagi.rendering.queryExtendedText(searchParams);\r\n            }\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.queryText(searchParams);\r\n        }\r\n\r\n        if (type == \"queryBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                return new bizagi.rendering.queryCheck(searchParams);\r\n            }\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.queryYesNo(searchParams);\r\n        }\r\n\r\n        if (type == \"queryNumber\") {\r\n\r\n            return new bizagi.rendering.queryNumber(searchParams);\r\n        }\r\n\r\n        if (type == \"queryMoney\") {\r\n            return new bizagi.rendering.queryMoney(searchParams);\r\n        }\r\n\r\n        if (type == \"queryDate\") {\r\n            return new bizagi.rendering.queryDate(searchParams);\r\n        }\r\n\r\n        if (type == \"queryCombo\") {\r\n            return new bizagi.rendering.queryCombo(searchParams);\r\n        }\r\n\r\n        if (type == \"queryCascadingCombo\") {\r\n            return new bizagi.rendering.queryCascadingCombo(searchParams);\r\n        }\r\n\r\n        if (type == \"querySuggest\") {\r\n            return new bizagi.rendering.querySuggest(searchParams);\r\n        }\r\n\r\n        if (type == \"queryLabel\") {\r\n            return new bizagi.rendering.queryLabel(searchParams);\r\n        }\r\n\r\n        if (type == \"queryList\") {\r\n            return new bizagi.rendering.queryList(searchParams);\r\n        }\r\n        \r\n        if (type == \"queryMultiSelect\") {\r\n            return new bizagi.rendering.queryMultiSelect(searchParams);\r\n        }\r\n\r\n        if (type == \"querySearch\") {\r\n            return new bizagi.rendering.querySearch(searchParams);\r\n        }\r\n\r\n        if (type == \"queryRadio\") {\r\n            return new bizagi.rendering.queryRadio(searchParams);\r\n        }\r\n\r\n        if (type == \"queryState\") {\r\n            return new bizagi.rendering.queryState(searchParams);\r\n        }\r\n\r\n        if (type == \"queryCaseState\") {\r\n            return new bizagi.rendering.queryCaseState(searchParams);\r\n        }\r\n\r\n        if (type == \"queryProcess\") {\r\n            return new bizagi.rendering.queryProcess(searchParams);\r\n        }\r\n\r\n        if (type == \"querySearchUser\") {\r\n            return new bizagi.rendering.querySearchUser(searchParams);\r\n        }\r\n\r\n        if (type == \"queryHidden\") {\r\n            return new bizagi.rendering.hidden(searchParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Method to fetch templates from a private dictionary\r\n    */\r\n    getTemplate: function (template) {\r\n        var self = this;\r\n        return self.templates[template];\r\n    }\r\n});\r\n","/*\r\n*   Name: Bizagi Device Render Factory\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will detect the current device and then will load the appropriate factory on demand\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.device.factory\", {}, {\r\n\r\n    /**\r\n     * Constructor, detects the device\r\n     * @param params\r\n     */\r\n    init: function (params) {\r\n        this.execution_device = bizagi.util.detectDevice();\r\n        this.cachedFactory = {};\r\n    },\r\n\r\n    /**\r\n     * Returns the appropriate render factory based on the device detection\r\n     * Because it loads the scripts on demand it must return a promise\r\n     * @param dataService\r\n     * @param device\r\n     * @returns {*}\r\n     */\r\n    getRenderFactory: function (dataService, device) {\r\n        var self = this;\r\n        device = device || \"desktop\";\r\n        var defer = new $.Deferred();\r\n\r\n        if (typeof self.cachedFactory[device] !== \"undefined\") {\r\n            // Reset print version value\r\n            self.cachedFactory[device].printVersion = false;\r\n            // Resolve with cached factory                \r\n            defer.resolve(self.cachedFactory[device]);\r\n        } else {\r\n            // If factory is not cached then build it\r\n            if (device === \"print\") {\r\n\r\n                // Load print version references\r\n                self.cachedFactory[device] = new bizagi.rendering.print.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n\r\n            } else if (device === \"desktop\") {\r\n\r\n                // Load desktop references\r\n                self.cachedFactory[device] = new bizagi.rendering.desktop.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n\r\n            } else if (bizagi.util.isTabletDevice(device)) {\r\n\r\n                // Load tablet references\r\n                self.cachedFactory[device] = new bizagi.rendering.tablet.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n            } else if (bizagi.util.isSmartphoneDevice(device)) {\r\n\r\n                // Load tablet references\r\n                self.cachedFactory[device] = new bizagi.rendering.smartphone.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n            } else {\r\n                // if no device suuported\r\n                bizagi.showMessageBox(\"Not supported device: \" + device);\r\n                defer.reject(\"Not supported device: \" + device);\r\n            }\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Returns the current data service being used\r\n     * @returns {*}\r\n     */\r\n    getDataService: function () {\r\n        return this.dataService;\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: BizAgi Rendering\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will process a rendering page by calling an ajax service to retrieve the model,\r\n *       and then process it to create base layout, and then call the device render factory\r\n */\r\n\r\n// Define BizAgi Rendering namespace\r\nbizagi.rendering = bizagi.rendering || {};\r\n\r\n/*\r\n *   This class will define a method to process the page\r\n *   1. Fetch the data\r\n *   2. Call the device factory to appropriately render the content\r\n */\r\n$.Class.extend(\"bizagi.rendering.facade\", {\r\n    form: undefined,\r\n    executionDeferred: new $.Deferred()\r\n}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        params = params || {};\r\n\r\n        // Set observable element\r\n        this.observableElement = $({});\r\n\r\n        // Injection of Device, only for print version purpose\r\n        var device = params.device || \"\";\r\n\r\n        // Defines a device factory for all rendering\r\n        this.deviceFactory = new bizagi.rendering.device.factory();\r\n\r\n        // Creates a data service instance\r\n        this.dataService = new bizagi.render.services.service(params);\r\n\r\n        // Retrieves the render factory\r\n        this.renderFactory = this.deviceFactory.getRenderFactory(this.dataService, device);\r\n    },\r\n    getFactory: function () {\r\n        var self = this;\r\n        return {\r\n            deviceFactory: self.deviceFactory,\r\n            dataService: self.dataService,\r\n            renderFactory: self.renderFactory\r\n        };\r\n    },\r\n    /*\r\n    *   Subscribe method\r\n    */\r\n    subscribe: function () {\r\n        this.observableElement.bind.apply(this.observableElement, arguments);\r\n    },\r\n    /*\r\n    *   Unsubscribe method\r\n    */\r\n    unsubscribe: function () {\r\n        this.observableElement.unbind.apply(this.observableElement, arguments);\r\n    },\r\n    /*\r\n    *   Publish method\r\n    */\r\n    publish: function () {\r\n        return this.observableElement.triggerHandler.apply(this.observableElement, arguments);\r\n    },\r\n    /*\r\n    *   This method will re-execute the process\r\n    */\r\n    update: function (params) {\r\n        var self = this;\r\n\r\n        // Update rendering mode\r\n        if (params.mode)\r\n            self.mode = params.mode;\r\n\r\n        // Enable form buttons on desktop view\r\n        return self.execute($.extend({\r\n            canvas: self.canvas,\r\n            mode: self.mode\r\n        }, params));\r\n    },\r\n    /*\r\n    *   Start point method to use in the main javascript pages\r\n    *   This method will process everything and attach the html directly to the dom\r\n    */\r\n    execute: function (params) {\r\n        var self = this;\r\n        var doc = this.ownerDocument;\r\n        var body = $(\"body\", doc);\r\n        params = params || {};\r\n\r\n        // Creates ready deferred\r\n        if (self.executionDeferred && self.executionDeferred.state) {\r\n            if (self.executionDeferred.state() == \"resolved\") {\r\n                self.executionDeferred = $.Deferred();\r\n            }\r\n        } else {\r\n            self.executionDeferred = $.Deferred();\r\n        }\r\n\r\n        // Performance measurement stuff\r\n        bizagi.chrono.initAndStart(\"rendering+data\", true);\r\n        bizagi.rendering.render.startOptimization();\r\n\r\n        // Override mode\r\n        if (typeof (params.mode) === \"undefined\") {\r\n            if (!bizagi.util.isEmpty(window.location.search)) {\r\n                var queryString = bizagi.util.getQueryString();\r\n                params.mode = queryString[\"mode\"];\r\n            }\r\n        }\r\n\r\n        // If the canvas is not given, we need to create one\r\n        var canvas = self.canvas = params.canvas = params.canvas || $(\"<div />\").appendTo(body);\r\n        self.mode = params.mode;\r\n\r\n        self.process(params).done(function (form) {\r\n\r\n            // Clear canvas    \r\n            if (!params.refreshing) {\r\n                canvas.empty();\r\n            }\r\n\r\n            // Append content\r\n            canvas.append(form.container);\r\n\r\n            // Include process path\r\n            $(form.pathProcess).insertBefore(form.container);\r\n\r\n            // Keep reference in class\r\n            self.form = form;\r\n            self.form.setSize({width: self.lastWidth, height: self.lastHeight});\r\n\r\n            // Save window size variables\r\n            setTimeout(function () {\r\n                self.lastWidth = $(window).width();\r\n                self.lastHeight = $(window).height();\r\n                if (window.self !== window.top)\r\n                    self.resizeInPopUpHTML();\r\n            }, 2000);\r\n\r\n            // Publish an event to check if the form has been set in the DOM\r\n            form.triggerHandler(\"ondomincluded\");\r\n\r\n            // Notify to module users that the form has been rendered\r\n            self.publish(\"rendering-formRendered\", {});\r\n\r\n            // Configure handlers\r\n            self.configureRefresh(form, canvas);\r\n            self.configureRouting(form, canvas);\r\n            self.configureRenderError(form, canvas);\r\n            self.configureResize(form);\r\n            self.configureGlobalHandlers(form);\r\n\r\n            // Check if it is a summary form\r\n            if (params.summaryForm) {\r\n                form.container.addClass(\"ui-bizagi-summary-form\");\r\n            }\r\n\r\n            // Ends main timer and log everything\r\n            bizagi.chrono.stopAndLog(\"rendering\");\r\n            bizagi.chrono.stopAndLog(\"rendering+data\");\r\n            bizagi.chrono.stopAndLog(\"submitForm\");\r\n            bizagi.chrono.stopAndLog(\"submitForm-ajax\");\r\n            bizagi.chrono.stopAndLog(\"waiting\");\r\n\r\n            // Resolves deferred\r\n            bizagi.rendering.render.stopOptimization();\r\n\r\n            // Expose public reference of form\r\n            if (bizagi.override.enableE2EInterface) {\r\n                self.Class.form = self.form;\r\n                self.Class.executionDeferred.resolve(self.form);\r\n            }\r\n\r\n            self.executionDeferred.resolve(self.form);\r\n\r\n        }).fail(function (message, errorType) {\r\n\r\n            $.when(self.renderFactory)\r\n                .done(function (renderFactory) {\r\n\r\n                    if (typeof message === \"undefined\" || message === \"\") {\r\n                        message = bizagi.localization.getResource(\"render-error-unknown\");\r\n                    }\r\n\r\n                    var errorTemplate = renderFactory.getCommonTemplate(\"form-error\");\r\n                    // Fill canvas\r\n                    canvas.empty();\r\n                    canvas.append($.tmpl(errorTemplate, {\r\n                        message: message\r\n                    }));\r\n                    self.publish(\"rendering-formRenderedError\", message);\r\n                    self.canvas.triggerHandler(\"errorform\", message);\r\n                    // Ends main timer and log everything\r\n                    bizagi.chrono.stopAndLog(\"rendering\");\r\n                    bizagi.chrono.stopAndLog(\"rendering+data\");\r\n\r\n                    self.executionDeferred.reject();\r\n                });\r\n        });\r\n\r\n        return self.executionDeferred.promise();\r\n    },\r\n    /*\r\n    *   Returns the execution deferred to determine if the component is ready or not\r\n    */\r\n    ready: function () {\r\n        return this.executionDeferred.promise();\r\n    },\r\n    /*\r\n    *   Loads data and render factory in order to process the form\r\n    *   Returns a deferred to set callbacks when the process is done\r\n    */\r\n    process: function (params) {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        // Call get form data service\r\n        var dataPromise = self.dataService.getFormData(params);\r\n\r\n        var canvas = self.canvas || params.canvas;\r\n\r\n        bizagi.showErrorAlertDialog = false;\r\n        // Set callback when requests have been done\r\n        $.when(dataPromise, self.renderFactory)\r\n            .done(function (data, renderFactory) {\r\n                bizagi.showErrorAlertDialog = true;\r\n\r\n                // When there is no data trigger an event\r\n                if (bizagi.util.isEmpty(data)) {\r\n                    self.publish(\"no-data-found\");\r\n                    defer.fail();\r\n                    return;\r\n                }\r\n\r\n                if (data && data.type == \"reload\") {\r\n                    var form = self.form;\r\n                    if (form) {\r\n                        form.endLoading();\r\n                        form.dispose();\r\n                    }\r\n                    // Trigger handler on canvas\r\n                    canvas.triggerHandler(\"routing\");\r\n\r\n                } else if (data && data.type == \"suspended\") {\r\n                    var errorTemplate = renderFactory.getTemplate(\"info-message\");\r\n                    var message = bizagi.localization.getResource(\"render-case-suspended\");\r\n                    var errorHtml = $.tmpl(errorTemplate, {\r\n                        message: message\r\n                    });\r\n                    // Remove loading icon from summary container\r\n                    errorHtml.appendTo(canvas);\r\n\r\n                    defer.fail();\r\n\r\n                } else if (data && data.type != \"error\") {\r\n                    if (params.hasOwnProperty('printversion')) {\r\n                        data = self.transformGridControl(data);\r\n                        data.form.properties.editable = \"False\";\r\n                    }\r\n\r\n                    bizagi.chrono.initAndStart(\"rendering\");\r\n                    params.type = (data.form && data.form.properties.type) || params.type;\r\n                    var form = self.processForm(data.form, renderFactory, params);\r\n\r\n                    // Resolve deferred\r\n                    defer.resolve(form);\r\n\r\n                } else {\r\n                    self.getFailDeferred(data, defer);\r\n                }\r\n            }).fail(function (errorMessage) {\r\n            self.getFailDeferred(errorMessage, defer);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n    /**\r\n     * In the print version widget when grid control was rendered, the main render has broken\r\n     * Is necesary change id of grid control to fixed these  problems\r\n     */\r\n    transformGridControl: function (data) {\r\n        var self = this;\r\n        if (data == null) {\r\n            return data;\r\n        }\r\n\r\n        if (data.hasOwnProperty('type') && data.type == 'grid') {\r\n            data.id = data.id + \"-print\";\r\n            data.allowAdd = \"False\";\r\n            data.allowDelete = \"False\";\r\n            data.allowEdit = \"False\";\r\n            data.allowGrouping = \"False\";\r\n            data.allowMore = \"False\";\r\n            data.allowSearch = \"False\";\r\n        } else {\r\n            $.each(data, function (key, value) {\r\n                if (typeof (value) == 'object') {\r\n                    data[key] = self.transformGridControl(data[key]);\r\n                }\r\n            });\r\n        }\r\n        return data;\r\n    },\r\n    /**\r\n     * Resolve deferred\r\n     */\r\n    getFailDeferred: function (errorMessage, defer) {\r\n        var self = this;\r\n        var message = \"\";\r\n        var jsonErrorMessage = {};\r\n        try {\r\n            jsonErrorMessage = JSON.parse(errorMessage.responseText);\r\n        } catch (e) {\r\n            jsonErrorMessage = {message: errorMessage.responseText, errorType: \"ERRORUNKNOWN\"};\r\n        }\r\n\r\n\r\n        if (jsonErrorMessage.message) {\r\n            message += \"<br>Error Type: \" + jsonErrorMessage.errorType;\r\n            message += \"<br>Error Message: \" + jsonErrorMessage.message;\r\n        } else {\r\n            if (jsonErrorMessage.errorType == \"JSharpNotSupportedException\") {\r\n                message += \"<br>Error Message: \" + bizagi.localization.getResource(\"jsharp-required\");\r\n            }\r\n        }\r\n\r\n        // Error in metadata InvalidFormMetadata\r\n        if (jsonErrorMessage.errorType == 'ERRORUNKNOWN') {\r\n            defer.reject(message, jsonErrorMessage.errorType);\r\n        } else {\r\n\r\n            defer.reject(message);\r\n        }\r\n    },\r\n    /*\r\n    *   Process the form\r\n    */\r\n    processForm: function (data, renderFactory, params) {\r\n        var form = renderFactory.getContainer($.extend(params, {\r\n            type: params.type || \"form\",\r\n            data: data\r\n        }));\r\n\r\n        //Orientation RTL - OrderButtons\r\n        if (typeof BIZAGI_ORIENTATION != \"undefined\") {\r\n            if ((form.properties.orientation == \"rtl\" || BIZAGI_ORIENTATION == 'rtl') && form.buttons.length > 0) {\r\n                var buttonsForm = form.buttons[0];\r\n\r\n                form.buttons.splice(0, 1);\r\n                form.buttons.push(buttonsForm);\r\n            }\r\n        }\r\n\r\n        // Render the full form\r\n        form.render();\r\n\r\n        return form;\r\n    },\r\n    /*\r\n    *   Performs a resize\r\n    */\r\n    resize: function (args) {\r\n        var self = this;\r\n        if (self.form) {\r\n            self.form.trigger(\"renderresize\", args);\r\n        }\r\n    },\r\n    /*\r\n    *   Binds a refresh handler to detect when the whole form needs to fetch all data from server\r\n    */\r\n    configureRefresh: function (form, canvas) {\r\n        var self = this;\r\n\r\n        // Attach a refresh handler to recreate all the form\r\n        form.bind(\"refresh\", function (_, refreshParams) {\r\n\r\n            // Find the scroll top\r\n            var parent = form.container.parent();\r\n            parent = bizagi.util.scrollTop(parent);\r\n            var scrollTop = parent.scrollTop();\r\n\r\n            $(self.form).trigger(\"onRefreshStarted\");\r\n\r\n            //Dispose current form\r\n            form.dispose(refreshParams);\r\n            canvas.fastEmpty();\r\n            var canvasParent = canvas.parent();\r\n            if (canvasParent.find(\".ui-bizagi-button-container\").length > 0) {\r\n                canvasParent.find(\".ui-bizagi-button-container\").remove();\r\n            }\r\n\r\n            if (self.executionDeferred && self.executionDeferred.state) {\r\n                if (self.executionDeferred.state() == \"resolved\") {\r\n                    self.executionDeferred = $.Deferred();\r\n                }\r\n            }\r\n\r\n            var formParams = self.form.getParams();\r\n            // Re-execute process\r\n            $.when(self.execute($.extend(refreshParams, {\r\n                canvas: canvas,\r\n                refreshing: true,\r\n                idCase: formParams.idCase,\r\n                displayName: formParams.displayName\r\n            }))).done(function () {\r\n\r\n                // Restore scroll at same position\r\n                setTimeout(function () {\r\n                    parent.scrollTop(scrollTop);\r\n                    $(self.form).trigger(\"onRefreshFinished\");\r\n                }, 100);\r\n            });\r\n\r\n            return self.executionDeferred.promise();\r\n        });\r\n    },\r\n    /*\r\n    *   Binds a resize hanlder to configure the resize behaviour\r\n    */\r\n    configureResize: function (form) {\r\n        var self = this;\r\n\r\n        // Attach resize handler\r\n        form.bind(\"renderresize\", function (_, args) {\r\n            args = args || {};\r\n            // Just allow one resize at a time\r\n            if (self.resizeTimeout)\r\n                return;\r\n            var resizeFn = function () {\r\n                // Call resize event in form\r\n                var width = $(window).width();\r\n                var height = $(window).height();\r\n                if (args.forceResize || width != self.lastWidth) {\r\n\r\n                    // Logging stuff\r\n                    bizagi.chrono.initAndStart(\"resize\");\r\n\r\n                    // Perform resize\r\n                    form.resize({\r\n                        width: width,\r\n                        height: height\r\n                    });\r\n                    self.lastWidth = width;\r\n                    self.lastHeight = height;\r\n\r\n                    // Logging stuff\r\n                    bizagi.chrono.stopAndLog(\"resize\");\r\n                    bizagi.chrono.log(\"resize\");\r\n                }\r\n\r\n                self.resizeTimeout = null;\r\n            };\r\n            self.resizeTimeout = setTimeout(resizeFn, 0);\r\n\r\n        });\r\n        self.resize();\r\n    },\r\n    /*\r\n    *   Binds a routing handler to detect when the workportal need to enroute the case\r\n    */\r\n    configureRouting: function (form, canvas) {\r\n        // Attach a routing handler to notify to the caller\r\n        form.bind(\"routing\", function (context, triggerParams) {\r\n            //Dispose current form\r\n            form.dispose();\r\n\r\n            // Trigger handler on canvas\r\n            canvas.triggerHandler(\"routing\", triggerParams);\r\n        });\r\n    },\r\n    /*\r\n    *   Binds a generic handler that will be replicated to facade instantiators\r\n    */\r\n    configureGlobalHandlers: function (form) {\r\n        var self = this;\r\n\r\n        // Attach a routing handler to notify to the caller\r\n        form.bind(\"globalHandler\", function (_, args) {\r\n            // Trigger handler on canvas\r\n            return self.publish(args.eventType, args.data);\r\n        });\r\n    },\r\n    /*\r\n    * Binds error form handler to detect when the render element nop posible get information or error in server\r\n    */\r\n    configureRenderError: function (form, canvas) {\r\n        var self = this;\r\n\r\n        form.bind(\"formRenderingError\", function (event, errorMessage) {\r\n            $.when(self.renderFactory)\r\n                .done(function (renderFactory) {\r\n                    var message = \"<br>Error: \";\r\n\r\n                    errorMessage = errorMessage.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\r\n\r\n                    var jsonErrorMessage = JSON.parse(errorMessage);\r\n                    if (jsonErrorMessage.message) {\r\n                        message += jsonErrorMessage.message;\r\n                        message += \"<br>Error Type: \" + jsonErrorMessage.errorType;\r\n                    }\r\n                    var errorTemplate = renderFactory.getCommonTemplate(\"form-error\");\r\n                    // Fill canvas\r\n                    canvas.empty();\r\n                    canvas.append($.tmpl(errorTemplate, {\r\n                        message: message\r\n                    }));\r\n                    //send the type error to differentiate between a form and an item for render\r\n                    self.canvas.triggerHandler(\"errorform\", \"renderItemError\");\r\n                    // Ends main timer and log everything\r\n                    bizagi.chrono.stopAndLog(\"rendering+data\");\r\n                    bizagi.chrono.stopAndLog(\"rendering\");\r\n                });\r\n        });\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n        if (self.form) {\r\n            self.form.dispose();\r\n        }\r\n        bizagi.util.dispose(self);\r\n    },\r\n\r\n    resizeInPopUpHTML: function () {\r\n        if ($(\".activitiFormContainer\").length > 0 && bizagi.util.getQueryString().type != \"cases\") {\r\n            var heightActivitiFormContainer = $(\".activitiFormContainer\").height() || 0;\r\n            var renderForm = $(\".activitiFormContainer #ui-bizagi-webpart-render-container\");\r\n            var buttonContainer = $(\".ui-bizagi-button-container\", \".activitiFormContainer\");\r\n            var heightButtonContainer = buttonContainer.outerHeight() || 0;\r\n            var renderBehavior = bizagi.util.getQueryString().renderBehavior || \"\";\r\n            renderBehavior = renderBehavior.replace(\"#\", \"\");\r\n\r\n            if (renderBehavior == \"PopUp\") {\r\n                if (typeof (self.postMessageSocket) == \"undefined\") {\r\n                    var heightCanvas = $(\".activitiFormContainer\").height() - 50 || 396;\r\n                    $(\"#render-canvas\").height(heightCanvas);\r\n                    $(\"#render-canvas\").css(\"overflowY\", \"scroll\");\r\n                } else $(\".activitiFormContainer\").height($(\".activitiFormContainer\").height() + $(\".ui-bizagi-button-container\").height() + 30);\r\n                $(\".ui-bizagi-button-container\").css(\"position\", \"absolute\");\r\n                $(\".ui-bizagi-button-container\").appendTo(\".activitiFormContainer\");\r\n                if ($(\".ui-bizagi-button-container\").length > 1) {\r\n                    $(\".ui-bizagi-button-container:first\").hide();\r\n                    renderForm.css(\"marginTop\", \"-17px\");\r\n                }\r\n            }\r\n            if (buttonContainer.length > 0) {\r\n                //display buttons\r\n                renderForm.height(heightActivitiFormContainer - 97 - heightButtonContainer);\r\n            }\r\n            if ($(\".ui-bizagi-button-container\").children().length == 0)\r\n                $(\"#render-canvas\").height($(\"#render-canvas\").height() + heightButtonContainer);\r\n            else {\r\n                buttonContainer.width(\"100%\");\r\n                buttonContainer.css(\"marginLeft\", 0);\r\n                buttonContainer.css(\"bottom\", 0);\r\n            }\r\n        } else if (bizagi.util.getQueryString().type == \"render\") {\r\n            $(\"html\").css(\"overflowX\", \"hidden\");\r\n            ($(\"#render\").height() <= window.innerHeight + 5) ? $(\"html\").css(\"overflowY\", \"hidden\")\r\n                : $(\"html\").css(\"overflowY\", \"scroll\");\r\n            $(\".ui-widget-overlay\").height(650);\r\n        }\r\n    }\r\n\r\n});"]}