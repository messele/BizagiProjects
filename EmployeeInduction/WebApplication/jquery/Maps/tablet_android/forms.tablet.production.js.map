{"version":3,"sources":["jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.view.js","jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.form.js","jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.grid.js","jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.searchForm.js","jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.upload.js","jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.startForm.js","jquery/rendering/js/tablet/container/slide/bizagi.rendering.tablet.slide.ecm.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.container.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.render.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.form.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.panel.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.contentPanel.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.nestedForm.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.tab.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.tabItem.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.horizontal.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.layout.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.accordion.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.accordionItem.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.group.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.searchForm.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.text.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.extendedText.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.label.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.number.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.money.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.numberScientificNotation.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.date.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.yesno.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.check.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.combo.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.collectionnavigator.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.upload.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.upload.offline.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.grid.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.grid.offline.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.grid.grouped.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.search.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.letter.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.button.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.fileprint.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.link.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.formLink.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.hidden.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.radio.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.cascadingCombo.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.list.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.multiSelect.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.association.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.ecm.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.searchList.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.userfield.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.image.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.document.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.geolocation.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.actionLauncher.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.entityTemplate.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.polymorphicLauncher.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.checkList.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.activityCheckList.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.range.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.rangeDate.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.rangeMoney.js","jquery/rendering/js/tablet/render/bizagi.rendering.tablet.rangeNumber.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.column.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.combo.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.document.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.date.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.text.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.number.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.numberScientificNotation.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.image.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.upload.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.link.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.uploadecm.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.button.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.radio.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.search.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.list.js","jquery/rendering/js/tablet/render/column/bizagi.rendering.tablet.columns.exclusiveCheck.js","jquery/rendering/js/tablet/bizagi.rendering.tablet.factory.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.queryForm.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.formTemplate.js","jquery/rendering/js/tablet/container/bizagi.rendering.tablet.usersForm.js"],"names":["$","Class","extend","init","dataService","renderFactory","slideFormParams","self","this","slideFormDeferred","Deferred","container","navigation","createRenderContainer","title","buttons","processButtons","form","caption","bizagi","localization","getResource","actions","submitData","refresh","ordinal","action","save","style","callback","validateForm","data","collectRenderValues","allowGetOriginalFormValues","formValues","children","idPageCache","getPageCache","onSave","when","done","result","type","addValidationMessage","messages","addErrorMessage","message","goBack","resolve","fail","dataFail","responseText","toString","JSON","parse","e","match","substr","length","clearValidationMessages","reject","showSaveButton","shift","render","params","renderSlideForm","slideForm","promise","defer","loading","start","getFormData","then","recordXPath","properties","recordXpath","editable","orientation","getContainer","view_container","formParams","element","html","isRefresh","navigate","id","setNavigationButtons","remove","append","buttonContainer","triggerHandler","bind","refreshParams","errorTemplate","getCommonTemplate","error_message","fasttmpl","appendTo","always","stop","destroy","_renderButtons","content","each","ui","value","click","slideContainer","configureViewHandlers","formClass","rendering","tablet","submitForm","endLoading","key","renders","getRenders","i","updateOriginalValue","containerParams","delegate","onCancel","xhr","errorType","transformData","allowEdition","row","columns","xpathContext","xpath","elements","pageCacheId","sessionId","transformActions","validations","transformValidations","item","mapRenderType","displayType","mapValue","recalculate","visible","columnVisible","isColumn","concat","label","additionallabel","undefined","push","replaceAll","toLowerCase","includes","grep","gridActions","util","isEmpty","bDependencyFound","dependencies","indexOf","newAction","encode","transformConditions","conditions","transformCommands","commands","elseCommands","gridValidations","validation","newValidation","condition","expressions","simple","complex","argumentType","argument","refreshIndex","command","splice","searchForms","searchParams","slideParams","slideDeferred","extraButtons","hasOwnProperty","renderSearchDialog","startLoading","getSearchContainerData","pipe","currentSearchForm","performSearch","idCase","idRender","displayName","renderAddForm","allowNew","pop","searchResultContainer","hide","firstChild","show","_","scrollTop","parent","focus","selectedTabs","getSelectedTabs","contextType","searchFormParams","ev","slideBoxDeferred","handleSearchFormZindex","containerSearchCriteria","find","stopLoading","addContainer","getFormParams","guidEntity","entity","idStartScope","requestedForm","addFormParams","indicator","saveDataAddForm","index","getButtons","innerHTML","currentAddForm","forceCollectData","contexttype","formData","collectRenderValuesForSubmit","isMapEmpty","showMessageBox","mapping","getRender","found","obj","setValue","setDisplayValueToControl","jqXHR","renderControlSearchForm","addForm","setDisplayValue","getDisplayValue","slideOptions","text","deferred","searchFormToLoad","tabContainer","otherElements","searchForm","isDefault","tab","getSearchFormData","searchFormData","Math","guid","idSearchForm","url","options","option","modalViewDisplayed","jQuery","n","css","dfd","onClose","renderUploadFile","template","virtualForm","originalProperties","uniqueId","showConfirmationBox","window","location","href","getStartForm","saveButtonLabel","getMetadataForm","$renderEdition","onSaveDataMetadataForm","fileData","metadata","renderType","getRenderType","metadataType","newRender","Object","assign","metadataId","description","required","parseBoolean","readOnly","toUpperCase","dataType","allowDecimals","thousands","maxLength","autoExtend","update","metadataValues","keys","map","idMetadata","idFileUpload","fileName","xPath","idAttrib","metaValues","updateECMMetadata","fileProperties","base","prototype","initializeData","_super","formContainer","getFormContainer","getParams","getLabel","observableElement","getFormattingLabel","getControl","control","getControlFiller","controlFiller","getContainerMessage","containerMessage","getColumnContainerMessage","getDisplayOptionClass","changeDisplayOption","getAlignClass","alignType","changeLabelAlign","changeValueAlign","customizeRenderWidth","labelWidth","valueWidth","percent2Number","width","setValidationMessage","isGridControl","$message","grid","column","test","replace","attr","addClass","removeClass","display","displayValue","getElementsToStylize","context","changeRequired","triggerRenderValidate","changeRequiredLabel","clearDisplayValue","input","filter","ele","val","getValue","warnings","errors","configureHandlers","configureComplexGateway","validationController","controllers","actionController","readyDeferred","modalViewDidAppear","modalViewDidDisappear","postRenderContainer","detectDevice","isObjectEmpty","warningContainer","prependTo","detach","errorContainer","ekey","button","routing","eq","prop","document","unbind","deferredSave","autoSaveEvents","newData","isEmptyObject","setTimeout","saveBox","showSaveBox","saveForm","internalSubmitForm","buttonProperties","submitDataAction","executeButtonAction","performAction","checkpointAction","commitAction","executeRule","createnewcase","animate","prepare","tag","prepareCheckpointAction","executeButton","prepareCommitAction","next","back","transitions","activeTransitions","countProps","forcePlanCompletion","surrogatekey","surrogateKey","chrono","initAndStart","flowControlDeferred","deferreds","apply","response","console","log","multiaction","execute","responses","bHasValidations","sendRollbackAction","postProcessButton","refreshForm","IdCase","caseNumber","CaseNumber","nonSupportedMethods","error","failHandler","validateFeatureSupport","getPane","pane","handler","saveButton","nextButton","getNavigation","getViewContainer","getFocus","idWorkitem","idTask","getEndPointAction","postRenderEdit","isOfflineForm","formsRenderVersion","originalParams","checkWidgetsData","popupResponse","workportal","popup","instance","getResponseValues","getResponseValuesParams","dontClose","close","repaintComplexGateway","idCaseObject","isComplex","getWorkitems","workItems","taskType","currentPopup","widgetName","widgets","widget","BIZAGI_WORKPORTAL_WIDGET_COMPLEXGATEWAY","sourceElement","insertAfter","height","offset","activeScroll","closed","addWarning","addError","processButton","isFloatingButtonsEnabled","isFormButtonsEnabled","dispose","error_obj","code","renderContainer","getTemplate","helptext","helpText","mode","getMode","queryForm","getFormType","summaryForm","globalForm","displayAsReadOnly","processPath","breadCrumb","replaceChildrenHtml","renderChildrenHtml","complexGatewayContainer","hasClass","on","$selected","transitionId","is","panel","contentPanel","material_bizagi_tabs","direction","active_index_tab","activeTab","info","stopPropagation","setActiveTab","rippleEffect","tabItem","setAsActiveContainer","ready","tabs","activate","changeVisibility","counter","horizontal","layout","accordion","accordionItem","group","toggleClass","collapse","isOpen","expand","trigger","toogleContainer","renderResult","skipInitialLoad","rowsPerPage","sortBy","sortOrder","overrideGetRemoteData","getRemoteData","parseAdditionalProperties","showTime","inlineAdd","allowDelete","allowAdd","allowEdit","resultsGrid","searchCriteria","results","childrenElements","childElement","Number","child","childrenHash","getElementType","ELEMENT_TYPE_RENDER","postRenderElement","ELEMENT_TYPE_CONTAINER","configureDesignView","configureLayoutView","criteriaContainer","resultsContainer","refreshResults","onSearchFinished","deviceMaxRecordsExceeded","records","postRender","renderReadOnly","sanitizeHTML","decodedValue","decodeURI","validateValue","br2nl","attachRetypeDouble","blur","retypeDouble","currentValue","createTooltip","tooltip","$context","extendedText","minLines","maxLines","maxCharactersToShow","textarea","resize","showChar","startString","endString","actualMaxLength","which","updateTextareaSize","configureHandlersReadOnly","$control","delegateTarget","currentRows","scrollHeight","offsetHeight","previousValue","newValue","number","isDesign","numericInput","executeFormatCurrencyPlugin","money","numberScientificNotation","inputDisplay","first","last","numericSN","decimalSymbol","attachFormatSientificNotation","scientificNotationFormat","scientificNotationNumber","scientificNotationNumberDisplay","date","MAX_YEARS_DISPLAY","getFormattedDate","dateFormatter","formatDate","fullFormat","postRenderReadOnly","getDateControl","controlElements","defaultDateControl","minDateControl","minValue","maxDateControl","maxValue","timeFormat","getTimeFormat","isNaN","Date","setFullYear","getFullYear","setHours","mobiscroll","calendar","controls","min","max","defaultValue","showScrollArrows","lang","languages","BIZAGI_LANGUAGE","headerText","inst","time","timeS","onChangeHandler","clear","onSet","valueText","getVal","day","getDate","month","getMonth","year","hours","getHours","minutes","getMinutes","is24h","onBeforeShow","event","triggerGlobalHandler","changeMinValue","changeMaxValue","isiOSDevice","onShow","preventDefault","isCordovaSupported","isAndroidDevice","cordova","plugins","Keyboard","disableScroll","initializer","getTime","currentDate","split","getDateFromInvariant","currentTime","fullDateFormated","setHour","getFullFormatedDate","getDateFromISO","dateControl","formatInvariant","preprocessDateValue","parseInt","isClearButton","formatedFullDate","setNewDateValue","fullDate","formatISO","dateFromFormat","getDateFromFormat","applyDateFormat","initIndexTime","endIndexTime","substring","isValid","invalidElements","bValid","validateMinAndMaxValue","hasValue","showMandatoryMessage","isMinValue","vValue","resultValue","formatedDate","propertiee","isValidMinMaxValue","formattedDate","yesno","radio","parsedValue","change","cleanData","check","removeAttr","evt","isCheck","combo","renderControl","itemSelected","mobileView","customHeader","contentTemplate","open","configureActions","isDependant","getParentCombo","parentValue","BA_ACTION_PARAMETER_PREFIX","renderCombo","list","configureModalViewHandlers","processComboData","forEach","comboValue","isNumeric","selected","findDataValueById","isArray","join","formatItem","selectedValue","valueObjet","$elementsList","$clearButton","header","$searchInput","filterList","search","$li","stringContainer","stringToSearch","renderComboTemplate","items","selectedId","hasItems","validateItem","collectionnavigator","services","service","BA_CONTEXT_PARAMETER_PREFIX","BA_PAGE_CACHE","upload","QUALITY_PICTURE","LIMIT","EXTENSIONSIMG","EXTENSIONSFILE","EXTENSIONSVIDEO","EXTENSIONSAUDIO","isNative","renderItem","noFiles","filesCount","file","files","renderUploadItem","replaceFilesHtml","$contentFile","$inputFile","$nativeFile","checkFileExtensions","attachEvents","media","downloadFile","executeFormFailHandler","off","chooseFile","removeFile","actionSheet","getUploadChoices","actionClicked","handlerUploadFile","appear","cancelClicked","getImageResolutionSizes","withoutCancel","handlerResolutionUpload","addFile","navigator","camera","getPicture","dataImage","extensions","checkMaxSize","getFileDataInfo","checkFileTypes","getAndroidVersion","isAndroid","modalResolutionUpload","buttonIndex","getImageResolutionItems","onFail","quality","sourceType","Camera","PictureSourceType","PHOTOLIBRARY","correctOrientation","saveImage","CAMERA","mediaType","MediaType","PICTURE","destinationType","DestinationType","FILE_URI","targetWidth","targetHeight","device","capture","captureVideo","dataVideo","checkMaxSizeVideo","saveVideo","limit","actionSelected","ResolutionType","ORIGINAL","resolution","getImageResolution","transformImageSize","editedImageURL","localUrl","base64Image","dataItem","dataFile","getImagePath","name","mimeType","uploadFile","fullPath","addParams","buildAddParams","queueID","encodeXpath","getUploadXpath","FileUploadOptions","fileKey","uploadKey","addUrl","decodeURIComponent","onUploadFileCompleted","messageError","processFailMessage","isValidResource","$wrapper","newItem","slice","checkMaxFiles","isMaxFilesReached","maxFiles","maxfiles","actualFiles","validExtensions","validOptions","video","image","fileAPISupported","buildAddFileParams","prefix","FormData","BIZAGI_SESSION_NAME","processUploadFile","itemsUpload","errorResponse","checkMaxSizeFile","deleteUploadItem","triggerRenderChange","getTemplateItemName","maxFileSizeOfProperty","maxSize","maxFileSizeOfUser","BIZAGI_SETTINGS","UploadMaxFileSize","updateFilesCount","status","openOfflineFile","handlerWebUploadFile","removeOfflineFile","fileId","randomNumber","getBlobFromPath","blob","saveOfflineFile","saveResponse","onUploadOfflineFileCompleted","addInteractions","collectData","renderValues","method","fileUploaded","itemTemplate","filename","canBeSent","failReadFile","target","fileIndex","fileValue","triggerEvents","dataIndex","getFileParams","offlineType","getOfflineFile","binaryFile","handleBinaryFile","path","blobPromise","normalizeIOSFilePath","errorHandler","resolveLocalFileSystemURL","fileEntry","reader","FileReader","onloadend","Blob","readAsArrayBuffer","blobFile","parameters","operationType","GRID_PAGE_SIZE","singleInstance","cellMetadata","labelAlign","groupBy","groupSummary","updateAffectedCellManually","getRowIndexByKey","initialLoadDone","isPaginatorActive","applyGridPlugin","updateData","changed","pendingActions","arguments","buildColumnModel","columnsTotalizers","a","bizagi_grid_tablet","maxColumns","waiting","table","emptyTable","specialColumn","rowButtons","cell","specialCell","pager","dynamicPager","totalizer","add","edit","withEditForm","details","allowDetail","allowMore","enableXlsExport","enablePdfExport","hasTotalizer","rows","pageRequested","fetchData","page","sortType","sortRequested","drawCell","isNewRow","cellReady","onCellReady","rowSelected","addRow","editRow","deleteRow","moreRows","showFormDetails","showDetailForm","showMore","totalData","onTotalData","columnModel","hidden","align","columnIndex","columnLabel","gridColumn","summarizeBy","totalize","operation","bizAgiProperties","dataReady","dataReadyDeferred","loadChanges","idRow","idRowLength","columnNumber","changes","getColumn","setCellOverrides","total","alternativePaginator","sort","isRTL","changeOrderData","inlineEdit","newKeys","alreadySaved","saveDeferred","saveInlineAddedRows","newRecords","renderColumn","j","cellOverrides","getCellOverride","originalEditable","submitOnChange","getDecorated","submitOnChangexpathContext","submitAddRequest","newid","slideView","slide","view","submitSaveRequest","addPage","submitRollbackRequest","cleanActionChanges","submitForGridChange","executeSubmitEditRequest","editInline","submitEditRequest","editPage","submitDeleteRequest","rowDeleted","originalrowsPerPage","dataToSend","moreRowsCommon","currentRow","collectGridChange","changeCellBackgroundColor","isVisible","sel","f","changeCellColor","changeCellVisibility","changeCellValue","getControlCell","_value","compositeValue","getCompositeValue","setError","parentPromise","inlineAddPromise","inlineAddDeferred","bUseTimeout","cleanCellData","rowLength","showTotal","columnsModel","operationState","sum","return_value","defaultvalue","count","avg","toFixed","formatTotalizedResult","showTotals","controlType","formatMonetaryCell","transition","cssClass","showBorder","changeBackgroundColor","color","MAX_ROWS_SUPPORTED","originalRows","clone","isTaskForm","newRowKeys","k","createdOffline","isValidGrid","saveAddedRows","beforeInlineAdd","afterInlineAdd","cancelEdition","removeNewRecords","processChanges","collectOfflineTaskData","internalRedersValues","temporalNew","sortArray","currentChanges","columnXpath","canColumnBeSent","buildCellXpathFilter","addRowData","isNew","stringify","merge","processOldRows","collectOfflineStartData","DataType","processRow","newRows","tempRows","col","leng","temp","cellOverride","setSurrogateKey","len","drawEditableCell","drawReadonlyCell","overrideProperties","onCellChange","originalFormat","textFormat","format","renderSummary","bRefresh","totalPages","delInfo","deleteUrl","errorsMessage","showValidationMessage","ADVANCED_SEARCH_ID","ADVANCED_ADDITION_ID","CLEAR_SEARCH_ID","NO_RESULTS_SEARCH_ID","DEFAULT_SEARCH_ID","SEARCH_MIN_LENGTH","SEARCH_DELAY","SEARCH_MAX_RECORDS","deferredReference","searchInput","advancedSearch","_simplySearchView","_advanceSearchView","readyActionExecution","modalView","modalViewList","suggestFilter","debounce","autoCompleteSearchResults","trim","selectItem","formSearchParams","allowFullSearch","maxRecords","refreshControl","getContentTemplate","afterOpenAnimation","processRequest","term","renderSearchItem","searchItem","tmpl","req","suggestions","allowSuggest","searchLength","getSuggestData","getOfflineData","getData","state","hideStatus","parseValue","highlightMatches","inputText","allowClear","Array","dataList","startsWith","letter","needsUserConfirmation","userConfirmationMessage","pressed","runButtonAction","fileprint","link","preventDefaultForAnchorTag","isValidValue","getFullyDecodedURI","linkEncode","encodeURI","getAttribute","linkSolver","linktarget","linkTarget","processLayout","isLabelFormat","background","formLink","openLink","paintFormLink","rollbackForm","openLinkRule","property","def","getPropertyValue","dataRuleResp","showErrorMessage","actionSave","getFormLinkXpath","propertyName","getPropertyData","dataUrl","extra","textStatus","errorThrown","ex","noAction","saveLinkForm","saveUrl","executeSubmitOnChange","hasexitrule","closeExitRule","submitCommitRequest","hasentryrule","getFormLinkXpathContext","parentXpathContext","getXpathContext","submitCheckpointRequest","siblings","cascadingCombo","parentCombo","initializingCascadingCombo","isInitialValue","isRendered","empty","deferredVisible","configureCombo","changeCombo","valueItem","getSelectedValue","call","getTemplateName","multiSelect","MORE_OPTION_WIDTH","isExecutionMode","openModalView","el","template_content","values","isChecked","template_footer","footer","footerTemplate","$listContainer","$suggestInput","newList","querySelector","checked","findItemById","association","getFlipAssociation","flip","makeJsonBase","flipped","columnData","getColumnData","getRightAssociation","formatJson","dataAssociation","rightData","leftData","isExecution","addEventControl","showDefaultGroupList","$groups","slideDown","$input","parentId","addElement","removeElement","flipstate","$element","$groupList","parents","closeAccordionSection","active","slideUp","ecm","ERROR_ECM_NO_AVAILABLE","ACTION_DETAILS","ACTION_EDIT","originalData","buildItemUrl","getFileProperties","renderFileLayout","metadataECMMultiaction","getECMMetadata","metaData","showMetadata","Filename","attackMenuEvents","addMenuEvents","$fileItem","viewMore","fn","processActionByType","allowUpdateMetadata","allowCheckOut","lockECMFile","allowCancelCheckOut","unlockECMFile","deleteECMFile","overflowMenu","lockUploadItem","replaceWith","unlockUploadItem","performValidationMessage","isFailResponse","lastIndexOf","searchList","SEARCH_ELEMENTS","searchListInput","_searchListViewModal","getHeaderTemplate","getFooterTemplate","cssClassHeader","adjustResize","finalValue","deleteItem","templateItem","getTagTemplate","modalViewTagList","modalFooter","modalHeader","getListItems","initialScreenSize","innerHeight","emptyItems","userfieldWrapper","getUserfieldControl","sControl","userfieldName","exists","eval","createUserfieldInstance","getUserfieldDefinition","userfield","userfieldGuid","loadUserfield","dynamicFunction","initialParams","getUserFieldInstance","isUserField","userfieldInstance","replicateUserfieldMethods","styleGuid","str","loadStyle","defaultUserField","designUserField","userfieldDefinition","basicUserField","isSupported","getEditableControl","getReadonlyControl","controlName","isDisposed","isDesignMode","showAsyncImage","choosePhoto","imageAdd","resolutionButtonHandler","imagePreview","useCamera","coordinates","getBoundingClientRect","popoverOptions","CameraPopoverOptions","left","top","version","performUploadFile","imageDelete","deleteImage","uploadFileCompleted","msg","saveImageOffline","htmlImage","configureMenu","baseParams","zoom","useNativeScrolling","imageData","img","inputEdition","onPreviewActionBack","buildFullItemUrl","$preview","originalImageWidth","$viewMore","buildItemUrlOffline","isUserPreference","currentUser","idUser","charAt","dataUrlToSave","isOfflineFormsV2Supported","controlValueIsChanged","ACTION_SHOW","ACTION_DOWNLOAD","ACTION_DELETE","documents","downloadalldocuments","allowgenerate","allowGenerate","renderDocumentsHtml","renderActionsHtml","replaceActionsHtml","$inputDocument","$listDocuments","$listActions","getTemplateReadonly","buttonExecuted","validate","validateContainer","documentTemplateGenerate","documentFile","processAction","renderAllDocumentDownload","getTemplateDownload","buildAllDocumentsUrl","joined","redrawDocuments","downloadAllDocuments","$documentContainer","$actionContainer","showDocumentPreview","resolveDocumentTemplateGenerate","resolveDeleteDocumentTemplate","deleteDocumentTemplate","geolocation","ALLOW_UPDATE","coordinate","updateDisplayValue","performPrecision","onSuccess","position","coords","latitude","longitude","getCurrentPosition","actionLauncher","getActions","processPropertyValueArgs","getPropertiesActionLaucher","deferredActions","isHorizontal","templatetype","processPropertyValueDataTmplArgs","templateData","engine","isDefaultTemplate","wrap","configureActionsHandlers","configureTemplateHandlers","guidProcess","guidAction","actionType","readOnlyForm","xpathActions","expr","FilterAction","array","RegExp","keyup","not","subscribe","filters","multipleSelection","countSameActions","actionManager","act","executeAction","showConfirmationDialog","notifyExecution","notifier","class_name","sticky","processActionForm","additionalXpaths","additionalXpath","detailLabel","cancelButtonLabel","isActionStartForm","savedData","editMode","IdScope","renderParams","idForm","caseId","typeForm","surrogatedKey","rewriteContextType","processActionFormCollection","xpathContextWithKey","printf","idEntity","xpathContextWithoutKey","addGridRecordData","IdEntity","addActionToQueue","processStartForm","args","startForm","guidprocess","mappingstakeholders","executeActionImmediately","actionsToExecuteContainer","configureQueueVisibility","listOfActions","removeActionSelector","openActionSelector","removeActionToQueue","extraParams","dataAction","actionsToExecuteTitle","allowactions","calculateFilters","polymorphicLauncher","getPolymorphicActions","serializePolymorphicActions","totalActions","lessActions","templateArguments","allowSearch","treeActionsList","getTreeItems","bindHandlers","level","templateTreeItem","$targetData","guidObject","guidConstructor","onActionClicked","pageCache","maximized","$target","checkList","unique","ceil","random","itemId","onCheckListGroupChange","goal","activityDescription","newItemName","addEditButton","cancelEditButton","additionalElements","notifyLoadItems","resolvedItems","resolved","setItemLocalStorage","hasChanges","idActivity","itemsResolved","progress","activityWork","webpart","publish","prepareNewItem","that","contentHolder","closest","itemPosition","repaintControl","itemSelectedName","itemContent","setSelectionRange","addSelectedHandlers","keypress","addItem","guidItem","checkListHtml","refreshValue","completed","floor","originalValue","range","rangeDate","rangeMoney","minControl","getRenderProperties","maxControl","setRanageControls","typeRangeControl","renderProperties","resources","rangeNumber","applyOverrides","decorated","originalGetControl","tableCell","applyColumnStyles","getXpath","getDocumentXpath","getContextXpath","preRenderControl","xpathcontext","generateDocumentTemplate","autoOpenDocuments","xpathPath","deleteUploadFile","postRenderSummary","applyUploadPlugin","getUploadFileUrl","calculateInitialLayoutProperties","nameFile","factory","loadTemplates","loadTemplate","getFileTemplate","tmplIcons","src","onDemand","formTemplate","usersForm","nestedForm","mobileform","mobilegroup","columnParams","isExtended","isExclusive","exclusiveCheck","uploadecm","readonly","old","offline","enableQuerySuggestBehavior","entityTemplate","getSearchRender","getLayoutRender","getRangeRender","activityCheckList","mobiletext","layoutImage","layoutLink","layoutLabel","layoutText","layoutDateTime","layoutNumber","layoutMoney","layoutPlaceholder","layoutBoolean","layoutUpload"],"mappings":"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","sourcesContent":["/**\r\n *   Name: Bizagi Tablet slide view implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   Serves as an slide form that can render a inner form\r\n */\r\n\r\n// Extends itself\r\n$.Class.extend(\"bizagi.rendering.tablet.slide.view\", {}, {\r\n    /* CONSTRUCTOR\r\n     =====================================================*/\r\n    init: function (dataService, renderFactory, slideFormParams) {\r\n        var self = this;\r\n\r\n        // Define instance variables\r\n        self.dataService = dataService;\r\n        self.renderFactory = renderFactory;\r\n        self.slideFormParams = slideFormParams || {};\r\n        self.slideFormDeferred = new $.Deferred();\r\n        self.container = self.slideFormParams.navigation.createRenderContainer({title: self.slideFormParams.title});\r\n    },\r\n\r\n    buttons: [],\r\n\r\n    processButtons: function (form) {\r\n        var self = this;\r\n\r\n        var onSaveClick = function onSaveClick() {\r\n            if (form) {\r\n                // Perform validations\r\n                if (form.validateForm()) {\r\n\r\n                    // Collect data\r\n                    var data = {};\r\n                    form.collectRenderValues(data);\r\n\r\n                    if (self.slideFormParams.allowGetOriginalFormValues) {\r\n                        data.formValues = form.children;\r\n                    }\r\n\r\n                    // Add page cache for this form\r\n                    data.idPageCache = form.getPageCache();\r\n\r\n                    // Call user callback\r\n                    if (self.slideFormParams.onSave) {\r\n                        $.when(self.slideFormParams.onSave(data))\r\n                            .done(function (result) {\r\n                                if (!result || result === true || result.type === \"success\") {\r\n                                    // Close slide\r\n                                    self.goBack();\r\n\r\n                                    // Resolve deferred\r\n                                    self.slideFormDeferred.resolve(data);\r\n\r\n                                } else if (result.type === \"validationMessages\") {\r\n                                    // Add validation messages\r\n                                    form.addValidationMessage(result.messages);\r\n                                } else if (result.type === \"error\") {\r\n                                    // Add error messages\r\n                                    form.addErrorMessage(result.message);\r\n                                }\r\n                            }).fail(function (dataFail) {\r\n\r\n                            var message = (dataFail.responseText) ? dataFail.responseText : ((typeof dataFail === \"string\") ? dataFail : dataFail.toString());\r\n\r\n                            // Convert String to object\r\n                            if (typeof message === \"string\") {\r\n                                try {\r\n                                    message = JSON.parse(message).message;\r\n                                } catch (e) {\r\n                                    message = message.match(/\"message\":(.*)\",/)[0];\r\n                                    message = message.substr(11, message.length - 13);\r\n                                }\r\n\r\n                            } else if (!message.message) {\r\n                                message = dataFail;\r\n                            }\r\n\r\n                            form.validateForm();\r\n                            form.clearValidationMessages();\r\n                            form.addValidationMessage(message);\r\n\r\n                            // Close slide\r\n                            self.goBack();\r\n\r\n                            //reject defered\r\n                            self.slideFormDeferred.resolve(data);\r\n                        });\r\n\r\n                    } else {\r\n                        // Close slide\r\n                        self.goBack();\r\n\r\n                        //reject defered\r\n                        self.slideFormDeferred.reject();\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n        var onCancelClick = function onCancelClick() {\r\n            // Close slide\r\n            self.goBack();\r\n            //reject defered\r\n            self.slideFormDeferred.reject();\r\n        };\r\n\r\n        form.buttons = [$.extend(form.buttons[0] || {},\r\n            {\r\n                \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-save\"),\r\n                \"actions\": [\"submitData\", \"refresh\"],\r\n                \"submitData\": true,\r\n                \"refresh\": true,\r\n                \"ordinal\": 0,\r\n                \"action\": \"save\",\r\n                \"save\": true,\r\n                \"style\": \"\",\r\n                callback: onSaveClick\r\n            }),\r\n            $.extend(form.buttons[1] || {}, {\r\n                \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-close\"),\r\n                \"actions\": [\"submitData\", \"refresh\"],\r\n                \"submitData\": true,\r\n                \"refresh\": true,\r\n                \"ordinal\": 1,\r\n                \"action\": \"back\",\r\n                \"save\": true,\r\n                \"style\": \"\",\r\n                callback: onCancelClick\r\n            })\r\n        ];\r\n\r\n        // If form is editable, add \"save\" button\r\n        if (!self.slideFormParams.showSaveButton) {\r\n            form.buttons.shift();\r\n        }\r\n\r\n        //self._renderButtons(form);\r\n    },\r\n\r\n    /*\r\n     *   Render the form\r\n     *   The params are the same that will be send to the ajax service\r\n     *   Returns a deferred\r\n     */\r\n    render: function (params) {\r\n        var self = this;\r\n\r\n        // Fill content\r\n        self.renderSlideForm(self.slideForm, params);\r\n\r\n        // Return promise\r\n        return self.slideFormDeferred.promise();\r\n    },\r\n\r\n    /* RENDERS slideForm\r\n     =====================================================*/\r\n    renderSlideForm: function (slideForm, params) {\r\n\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        bizagi.loading.start();\r\n\r\n        // Load template and data\r\n        $.when(self.dataService.getFormData(params))\r\n            .then(function (data) {\r\n                /*** SUCCESS FILTER **/\r\n                if (params.recordXPath) {\r\n                    data.form.properties.recordXpath = params.recordXPath;\r\n                }\r\n\r\n                // Apply editable param\r\n                if (!self.slideFormParams.showSaveButton || params.editable === false) {\r\n                    data.form.properties.editable = false;\r\n                }\r\n\r\n                if (typeof (data.form.properties) !== \"undefined\") {\r\n                    data.form.properties.orientation = self.slideFormParams.orientation || \"ltr\";\r\n                }\r\n\r\n                // Render dialog template\r\n                self.form = self.renderFactory.getContainer({\r\n                    type: \"form\",\r\n                    data: data.form,\r\n                    navigation: self.slideFormParams.navigation,\r\n                    view_container: self.container\r\n                });\r\n\r\n                self.form.params = params.formParams;\r\n\r\n                self.processButtons(self.form);\r\n\r\n                // Return rendering promise\r\n                return self.form.render();\r\n\r\n            }).done(function (element) {\r\n\r\n            // Append form in the slide view\r\n            self.container.element.html(element);\r\n\r\n            if (!params.isRefresh) {\r\n                self.slideFormParams.navigation.navigate(self.container.id);\r\n            }\r\n\r\n            self.container.setNavigationButtons(self.form);\r\n\r\n            // Remove default form buttons\r\n            $(\".ui-bizagi-button-container .action-button\", self.form.container).remove();\r\n            // Add Button\r\n            $(\".ui-bizagi-button-container\", self.form.container).append(self.buttonContainer);\r\n\r\n            // Publish an event to check if the form has been set in the DOM\r\n            self.form.triggerHandler(\"ondomincluded\");\r\n\r\n            // Attach a refresh handler to recreate all the form\r\n            self.form.bind(\"refresh\", function (data, refreshParams) {\r\n                refreshParams.formParams = refreshParams.params || self.form.params;\r\n                self.render(refreshParams);\r\n            });\r\n        }).fail(function (message) {\r\n            /*** Form load failure ***/\r\n\r\n            var errorTemplate = self.renderFactory.getCommonTemplate(\"form-error\");\r\n            var error_message = message.message || \"Error\";\r\n\r\n            $.fasttmpl(errorTemplate, {message: error_message}).appendTo(self.container.element);\r\n            // Navigate on view\r\n            self.slideFormParams.navigation.navigate(self.container.id);\r\n        }).always(function () {\r\n            bizagi.loading.stop();\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    // Go back and destroy\r\n    goBack: function () {\r\n        this.container.destroy();\r\n    },\r\n\r\n    /**\r\n     * Process render buttons\r\n     */\r\n    _renderButtons: function (form) {\r\n        var self = this;\r\n        var content = $(\"<div class='bz-slide-button-container'></div>\");\r\n\r\n        $.each(form.buttons, function (ui, value) {\r\n            $(\"<div class='action-button'>\" + value.caption + \"</div>\").click(\r\n                value.callback\r\n            ).appendTo(content);\r\n        });\r\n\r\n        self.buttonContainer = content;\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet slide form implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   Serves as an slide form that can render a inner form\r\n */\r\n\r\n// Extends itself\r\n$.Class.extend('bizagi.rendering.tablet.slide.form', {}, {\r\n\r\n    /* CONSTRUCTOR\r\n     =====================================================*/\r\n    init: function (dataService, renderFactory, slideFormParams) {\r\n\r\n        var self = this;\r\n\r\n        // Define instance variables\r\n        self.dataService = dataService;\r\n        self.renderFactory = renderFactory;\r\n        self.slideFormParams = slideFormParams || {};\r\n\r\n        if (self.slideContainer && self.slideContainer.destroy) {\r\n            self.slideContainer.destroy();\r\n        }\r\n\r\n        // Create container\r\n        self.slideContainer = self.slideFormParams.navigation.createRenderContainer({title: self.slideFormParams.title});\r\n        self.configureViewHandlers();\r\n    },\r\n\r\n    /**\r\n     * Go back and destroy\r\n     * @returns {}\r\n     */\r\n    goBack: function () {\r\n        var self = this;\r\n        self.slideContainer.destroy();\r\n    },\r\n\r\n    /**\r\n     * Handlers de la vista de kendo\r\n     * @returns {}\r\n     */\r\n    configureViewHandlers: function () {\r\n        var self = this;\r\n    },\r\n\r\n    /**\r\n     * Render the form\r\n     * The params are the same that will be send to the ajax service\r\n     * @param {} params\r\n     * @returns {} Returns a deferred\r\n     */\r\n    render: function (params) {\r\n        var self = this;\r\n        // Fill content\r\n        self.renderSlideForm(params);\r\n    },\r\n\r\n    /* RENDERS slideForm\r\n     =====================================================*/\r\n    renderSlideForm: function (params) {\r\n\r\n        var self = this;\r\n\r\n        var defer = new $.Deferred();\r\n\r\n        // Load template and data\r\n        $.when(self.dataService.getFormData(params)).then(function (data) {\r\n            /*** SUCCESS FILTER **/\r\n            // Apply editable param\r\n            if (params.editable === false) {\r\n                data.form.properties.editable = false;\r\n            }\r\n\r\n            // Render dialog template\r\n            // Extends from container tblet base\r\n            var formClass = bizagi.rendering.tablet.form.extend({\r\n                submitForm: function () {\r\n                    if (self.form) {\r\n                        this.endLoading();\r\n                        // Perform validations\r\n                        if (self.form.validateForm()) {\r\n                            // Collect data\r\n                            var data = {};\r\n\r\n                            self.form.collectRenderValues(data);\r\n\r\n                            // Add page cache for this form\r\n                            data.idPageCache = self.form.getPageCache();\r\n\r\n                            // Call user callback\r\n                            if (self.slideFormParams.onSave) {\r\n                                $.when(self.slideFormParams.onSave(data))\r\n                                    .done(function (result) {\r\n                                        if (result === null || result === true || result.type === \"success\") {\r\n                                            defer.resolve();\r\n                                            self.goBack();\r\n                                        } else if (result.type === \"validationMessages\") {\r\n                                            // Add validation messages\r\n                                            self.form.addValidationMessage(result.messages);\r\n                                            // Update original value to use as reference to other futures changes in the dialogBox\r\n                                            $.each(data, function (key, value) {\r\n                                                var renders = self.form.getRenders(key);\r\n                                                $.each(renders, function (i, render) {\r\n                                                    render.updateOriginalValue();\r\n                                                });\r\n                                            });\r\n                                        } else if (result.type === \"error\") {\r\n                                            // Add error messages\r\n                                            self.form.addErrorMessage(result.message);\r\n                                        }\r\n                                    });\r\n\r\n                            } else {\r\n                                defer.resolve();\r\n                                self.goBack();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            var containerParams = $.extend({\r\n                type: \"form\",\r\n                data: data.form,\r\n                navigation: self.slideFormParams.navigation,\r\n                view_container: self.slideContainer\r\n            }, {\r\n                renderFactory: self.renderFactory,\r\n                dataService: self.renderFactory.dataService\r\n            });\r\n\r\n            // Stop creating forms like there's no tomorrow\r\n            if (!self.form) {\r\n                self.form = new formClass(containerParams);\r\n            }\r\n\r\n            // Return rendering promise\r\n            return self.form.render();\r\n        }).done(function (element) {\r\n            // Append form  in the view\r\n            self.slideContainer.element.html(element);\r\n\r\n            // Navigate on view\r\n            self.slideFormParams.navigation.navigate(self.slideContainer.id);\r\n\r\n            $(\".ui-bizagi-button-container div\", self.form.container).remove();\r\n\r\n            $(\".ui-bizagi-button-container\", self.form.container)\r\n                .append('<div ordinal=\"0\" id=\"formButton0\" class=\"action-button ui-bizagi-form-button\">Save</div>')\r\n                .delegate('div[ordinal=\"0\"]', \"click\", function () {\r\n                    self.form.submitForm();\r\n                });\r\n\r\n            $(\".ui-bizagi-button-container\", self.form.container)\r\n                .append('<div ordinal=\"1\" id=\"formButton1\" class=\"action-button ui-bizagi-form-button\">'\r\n                    + bizagi.localization.getResource(\"render-form-dialog-box-cancel\") + \"</div>\")\r\n                .delegate('div[ordinal=\"1\"]', \"click\", function () {\r\n                    self.slideFormParams.onCancel && self.slideFormParams.onCancel();\r\n                    self.goBack();\r\n                });\r\n\r\n            // Publish an event to check if the form has been set in the DOM\r\n            self.form.triggerHandler(\"ondomincluded\");\r\n\r\n            // Attach a refresh handler to recreate all the form\r\n            self.form.bind(\"refresh\", function () {\r\n                self.renderSlideForm(params);\r\n            });\r\n        }).fail(function (xhr, errorType, message) {\r\n            /*** FAIL FILTER **/\r\n            var errorTemplate = self.renderFactory.getCommonTemplate(\"form-error\");\r\n            var error_message = message.message || \"Error\";\r\n\r\n            $.fasttmpl(errorTemplate, {message: error_message}).appendTo(self.slideContainer.element);\r\n            // Navigate on view\r\n            self.slideFormParams.navigation.navigate(self.slideContainer.id);\r\n        });\r\n\r\n        return defer.promise();\r\n    }\r\n});","/**\r\n *   Name: Bizagi Tablet slide grid view implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   Serves as an slide view that will show hidden columns for a grid\r\n */\r\n\r\n// Extends itself\r\n$.Class.extend(\"bizagi.rendering.tablet.slide.grid\", {}, {\r\n\r\n    /* CONSTRUCTOR\r\n     =====================================================*/\r\n    init: function (dataService, renderFactory, slideFormParams) {\r\n\r\n        var self = this;\r\n\r\n        // Define instance variables\r\n        this.dataService = dataService;\r\n        this.renderFactory = renderFactory;\r\n        this.slideFormDeferred = new $.Deferred();\r\n        this.slideFormParams = slideFormParams || {};\r\n\r\n        // Create container\r\n        self.container = self.slideFormParams.navigation.createRenderContainer({title: self.slideFormParams.title});\r\n    },\r\n\r\n    /**\r\n     * Render the grid view form\r\n     * The params are the same that will be send to the ajax service\r\n     * @param {} params\r\n     * @returns {} Returns a deferred\r\n     */\r\n    render: function (params) {\r\n        var self = this;\r\n\r\n        // Fill content\r\n        self.renderSlideForm(self.slideForm, params);\r\n\r\n        self.slideFormDeferred.resolve();\r\n\r\n        // Return promise\r\n        return self.slideFormDeferred.promise();\r\n    },\r\n\r\n    /* RENDERS slideForm\r\n     =====================================================*/\r\n    renderSlideForm: function (slideForm, params) {\r\n\r\n        var self = this;\r\n        var data = self.transformData(params);\r\n\r\n        // Load template and data\r\n        self.form = self.renderFactory.getContainer({\r\n            type: \"form\",\r\n            data: data.form,\r\n            navigation: self.slideFormParams.navigation,\r\n            view_container: self.container\r\n        });\r\n\r\n        self.form.buttons = [$.extend(self.form.buttons[0] || {},\r\n            {\r\n                \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-save\"),\r\n                \"actions\": [\"submitData\", \"refresh\"],\r\n                \"submitData\": true,\r\n                \"refresh\": true,\r\n                \"ordinal\": 0,\r\n                \"action\": \"save\",\r\n                \"save\": true,\r\n                \"style\": \"\",\r\n                // This callback avoid to call the default processButton in the form\r\n                callback: function () {\r\n                    self.goBack();\r\n                    // Resolve deferred with form data\r\n                    var data = {};\r\n                    self.form.collectRenderValues(data);\r\n                    self.slideFormDeferred.resolve(data);\r\n                }\r\n            }),\r\n            $.extend(self.form.buttons[1] || {},\r\n                {\r\n                    \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-close\"),\r\n                    \"actions\": [\"submitData\", \"refresh\"],\r\n                    \"submitData\": true,\r\n                    \"refresh\": true,\r\n                    \"ordinal\": 1,\r\n                    \"action\": \"back\",\r\n                    \"save\": true,\r\n                    \"style\": \"\",\r\n                    //This callback avoid to call the default processButton in the form\r\n                    callback: function () {\r\n                        // Close slide\r\n                        self.goBack();\r\n                        self.slideFormDeferred.reject();\r\n                    }\r\n                })\r\n        ];\r\n\r\n        // Add save button if the form is editable\r\n        if (!self.slideFormParams.allowEdition) {\r\n            self.form.buttons.shift();\r\n        }\r\n\r\n        //self._renderButtons(self.form);\r\n\r\n        $.when(self.form.render())\r\n            .done(function (element) {\r\n\r\n                // Append form in the slide view\r\n                self.container.element.html(element);\r\n\r\n                self.slideFormParams.navigation.navigate(self.container.id);\r\n\r\n                self.container.setNavigationButtons(self.form);\r\n\r\n                // Remove default form buttons\r\n                $(\".ui-bizagi-button-container .action-button\", self.form.container).remove();\r\n\r\n                // Add Button\r\n                $(\".ui-bizagi-button-container\", self.form.container).append(self.buttonContainer);\r\n\r\n                // Publish an event to check if the form has been set in the DOM\r\n                self.form.triggerHandler(\"ondomincluded\");\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Transform data into a JSON standard rendering format\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    transformData: function (params) {\r\n        var self = this;\r\n        var row = params.row;\r\n        var columns = params.columns;\r\n\r\n        // Set xpath context\r\n        var xpathContext = params.xpathContext.length > 0\r\n            ? params.xpathContext + \".\" + params.xpath + \"[\" + params.row[0] + \"]\"\r\n            : params.xpath + \"[id=\" + params.row[0] + \"]\";\r\n\r\n        var data = {\r\n            type: \"form\",\r\n            form: {\r\n                elements: [],\r\n                pageCacheId: params.pageCacheId,\r\n                sessionId: params.sessionId,\r\n                properties: {\r\n                    xpathContext: xpathContext\r\n                },\r\n                actions: self.transformActions(params.xpath, params.actions),\r\n                validations: self.transformValidations(params.xpath, params.validations)\r\n            }\r\n        };\r\n\r\n        $.each(row, function (i, item) {\r\n\r\n            // Skip first data (key not need to be rendered)\r\n            if (i > 0) {\r\n                var element = {render: {properties: $.extend({}, columns[i - 1].properties)}};\r\n\r\n                // Hack properties\r\n                element.render.properties.type = self.mapRenderType(element.render.properties.type);\r\n                element.render.properties.displayType = 'both';\r\n                if (self.slideFormParams.allowEdition == false) element.render.properties.editable = false;\r\n                element.render.properties.value = self.mapValue(element.render.properties.type, item);\r\n                if (element.render.properties.recalculate) element.render.properties.data = null;\r\n\r\n                // Check columnVisible property\r\n                if (typeof (element.render.properties.columnVisible) != \"undefined\") {\r\n                    element.render.properties.visible = element.render.properties.columnVisible;\r\n                }\r\n\r\n                // Fix upload columns\r\n                if (element.render.properties.type == \"upload\") {\r\n                    element.render.properties.isColumn = true;\r\n                }\r\n\r\n                // Fix search columns\r\n                if (element.render.properties.type == \"search\") {\r\n                    var value = element.render.properties.value;\r\n                    if (value.length > 0) {\r\n                        value = [].concat(value[0]);\r\n                        element.render.properties.value = {\r\n                            id: value[0],\r\n                            label: value[1],\r\n                            additionallabel: value[2] || undefined\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n                // Add element\r\n                data.form.elements.push(element);\r\n            }\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Map column renderType into normal render\r\n     * @param {} type\r\n     * @returns {}\r\n     */\r\n    mapRenderType: function (type) {\r\n        type = type.replaceAll(\"tablet\", \"\").replaceAll(\"column\", \"\");\r\n\r\n        //some exceptions\r\n        if (type === \"FormLink\") {\r\n            return \"formLink\";\r\n        }\r\n\r\n        type = type.toLowerCase();\r\n        return type;\r\n    },\r\n\r\n    /**\r\n     * Method to traslate grid values into render values\r\n     * @param {} type\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    mapValue: function (type, value) {\r\n        if ([\"combo\", \"radio\", \"list\"].includes(type)) {\r\n            if (value && value.length > 0) {\r\n\r\n                // Transform the value property\r\n                return [{\r\n                    id: value[0][0],\r\n                    value: value[0].length > 2 ? $.grep(value[0], function (item, i) {\r\n                        return i !== 0;\r\n                    }) : value[0][1]\r\n                }];\r\n\r\n            } else {\r\n                return null;\r\n            }\r\n        }\r\n\r\n        // Else: Don't do anything\r\n        return value;\r\n    },\r\n\r\n    /**\r\n     * Parse form actions into just grid form actions\r\n     * @param {} xpath\r\n     * @param {} actions\r\n     * @returns {}\r\n     */\r\n    transformActions: function (xpath, actions) {\r\n        var self = this;\r\n        var gridActions = [];\r\n\r\n        if (bizagi.util.isEmpty(actions)) return gridActions;\r\n\r\n        $.each(actions, function (i, action) {\r\n            var bDependencyFound = false;\r\n            for (var i = 0; i < action.dependencies.length; i++) {\r\n                if (action.dependencies[i].indexOf(xpath) != -1) {\r\n                    bDependencyFound = true;\r\n                }\r\n            }\r\n\r\n            if (bDependencyFound) {\r\n                var newAction = JSON.parse(JSON.encode(action));\r\n\r\n                // Replace dependencies\r\n                for (var i = 0; i < newAction.dependencies.length; i++) {\r\n                    newAction.dependencies[i] = newAction.dependencies[i].replaceAll(xpath + \"[].\", \"\");\r\n                }\r\n\r\n                // Replace conditions\r\n                self.transformConditions(xpath, newAction.conditions);\r\n\r\n                // Replace commands\r\n                self.transformCommands(xpath, newAction.commands);\r\n                self.transformCommands(xpath, newAction.elseCommands);\r\n\r\n                // Add to grid actions\r\n                gridActions.push(newAction);\r\n            }\r\n        });\r\n\r\n        return gridActions;\r\n    },\r\n\r\n    /*\r\n     *   Parse form validations into just grid form validations\r\n     */\r\n    transformValidations: function (xpath, validations) {\r\n        var self = this;\r\n        var gridValidations = [];\r\n\r\n        if (bizagi.util.isEmpty(validations)) return gridValidations;\r\n\r\n        $.each(validations, function (i, validation) {\r\n            var newValidation = JSON.parse(JSON.encode(validation));\r\n\r\n            // Replace conditions\r\n            self.transformConditions(xpath, newValidation.conditions);\r\n\r\n            // Add to grid actions\r\n            gridValidations.push(newValidation);\r\n\r\n        });\r\n\r\n        return gridValidations;\r\n    },\r\n\r\n    /**\r\n     * Parse a single condition or a complex condition in order to prepare a grid action/validation\r\n     * @param {} xpath\r\n     * @param {} condition\r\n     * @returns {}\r\n     */\r\n    transformConditions: function (xpath, condition) {\r\n        var self = this;\r\n\r\n        if (condition.expressions) {\r\n            for (i in condition.expressions) {\r\n                self.transformConditions(xpath, condition.expressions[i]);\r\n            }\r\n\r\n        } else if (condition.simple) {\r\n            self.transformConditions(xpath, condition.simple);\r\n\r\n        } else if (condition.complex) {\r\n            self.transformConditions(xpath, condition.complex);\r\n\r\n        } else {\r\n            if (condition.xpath) {\r\n                condition.xpath = condition.xpath.replaceAll(xpath + \"[].\", \"\");\r\n                if (condition.argumentType == 'xpath') {\r\n                    condition.argument = condition.argument.replaceAll(xpath + \"[].\", \"\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Parse a command action to prepare a grid action\r\n     * @param {} xpath\r\n     * @param {} commands\r\n     * @returns {}\r\n     */\r\n    transformCommands: function (xpath, commands) {\r\n        var self = this;\r\n        var refreshIndex = null;\r\n        if (commands == null || commands.length === 0) return;\r\n\r\n        for (var i = 0; i < commands.length; i++) {\r\n            if (commands[i].command === \"refresh\") {\r\n                refreshIndex = i;\r\n            } else {\r\n                if (commands[i].xpath) {\r\n                    commands[i].xpath = commands[i].xpath.replaceAll(xpath + \"[].\", \"\");\r\n                }\r\n                if (commands[i].argumentType === 'xpath') {\r\n                    commands[i].argument = commands[i].argument.replaceAll(xpath + \"[].\", \"\");\r\n                }\r\n            }\r\n        }\r\n\r\n        if (refreshIndex != null) {\r\n            commands.splice(i, 1);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Go back and destroy\r\n     * @returns {}\r\n     */\r\n    goBack: function () {\r\n        var self = this;\r\n        self.container.destroy();\r\n    },\r\n\r\n    /**\r\n     * Process render buttons\r\n     * @param {} options\r\n     * @returns {}\r\n     */\r\n    _renderButtons: function (form) {\r\n        var self = this;\r\n        var content = $(\"<div class='bz-slide-button-container'></div>\");\r\n\r\n        $.each(form.buttons, function (ui, value) {\r\n            var button = $(\"<div class='action-button'>\" + value.caption + \"</div>\").click(\r\n                value.callback\r\n            ).appendTo(content);\r\n        });\r\n\r\n        self.buttonContainer = content;\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Tablet Search Slide view Implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will shows a sliding search form  order to edit\r\n */\r\n\r\n// Extends itself\r\n$.Class.extend(\"bizagi.rendering.tablet.slide.searchForm\", {}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (dataService, renderFactory, searchForms, searchParams, slideParams) {\r\n        var self = this;\r\n\r\n        self.dataService = dataService;\r\n        self.renderFactory = renderFactory;\r\n        self.searchForms = searchForms;\r\n        self.searchParams = searchParams;\r\n        self.slideParams = slideParams;\r\n        self.slideDeferred = new $.Deferred();\r\n        self.extraButtons = (slideParams.hasOwnProperty(\"buttons\")) ? slideParams.buttons : false;\r\n\r\n        // Create container\r\n        self.container = self.slideParams.navigation.createRenderContainer({title: self.slideParams.title});\r\n\r\n        self.processButtons()\r\n            .done(function (data) {\r\n                self.slideDeferred.resolve(data);\r\n            }).fail(function () {\r\n            self.slideDeferred.reject();\r\n        });\r\n\r\n        self.configureViewHandlers();\r\n    },\r\n\r\n    /**\r\n     * Render the form\r\n     * The params are the same that will be send to the ajax service\r\n     * @param {} params\r\n     * @returns {} Returns a deferred\r\n     */\r\n    render: function (params) {\r\n        var self = this;\r\n\r\n        self.properties = params;\r\n\r\n        //Render the search form\r\n        self.renderSearchDialog(params);\r\n\r\n        // Return promise\r\n        return self.slideDeferred.promise();\r\n    },\r\n\r\n    /**\r\n     * Render the search form\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    renderSearchDialog: function (params) {\r\n        var self = this;\r\n\r\n        bizagi.util.tablet.startLoading();\r\n\r\n        // Creates a dialog\r\n        $.when(self.getSearchContainerData(params)).pipe(function (data) {\r\n            if (data.form.properties) {\r\n                data.form.properties.orientation = self.searchParams.orientation || \"ltr\";\r\n            }\r\n\r\n            // Render dialog form\r\n            var form = self.renderFactory.getContainer({\r\n                type: \"form\",\r\n                data: data.form,\r\n                navigation: self.slideParams.navigation,\r\n                view_container: self.container\r\n            });\r\n\r\n            form.buttons = [\r\n                {\r\n                    ordinal: 1,\r\n                    action: \"search\",\r\n                    caption: bizagi.localization.getResource(\"render-form-dialog-box-search\"),\r\n                    callback: function () {\r\n                        self.currentSearchForm.performSearch(self.searchParams);\r\n                    },\r\n                },\r\n                {\r\n                    ordinal: 2,\r\n                    action: \"cancel\",\r\n                    caption: \"cancel\",\r\n                    callback: function () {\r\n                        // Close slide\r\n                        self.goBack();\r\n                    },\r\n                },\r\n                {\r\n                    ordinal: 3,\r\n                    action: \"add\",\r\n                    caption: bizagi.localization.getResource(\"render-form-dialog-box-add\"),\r\n                    callback: function () {\r\n                        var params = {\r\n                            idCase: self.slideParams.idCase,\r\n                            idRender: self.properties.idRender,\r\n                            displayName: self.properties.displayName,\r\n                            idPageCache: self.properties.idPageCache\r\n                        };\r\n\r\n                        self.renderAddForm(params);\r\n                    },\r\n                },\r\n            ];\r\n\r\n            if (!self.slideParams.allowNew) {\r\n                form.buttons.pop();\r\n            }\r\n\r\n            // Save form reference\r\n            self.form = form;\r\n\r\n            // Return rendering promise\r\n            return form.render();\r\n        }).done(function (element) {\r\n            // Append form in the slide view\r\n            self.container.element.html(element);\r\n\r\n            self.slideParams.navigation.navigate(self.container.id);\r\n\r\n            // Add Button\r\n            $(\".ui-bizagi-button-container\", self.form.container).append(self.buttonContainer);\r\n\r\n            // Hide title of html content\r\n            self.searchResultContainer = $(\".bz-container__search-results\", element);\r\n            self.searchResultContainer.hide();\r\n\r\n            // Publish an event to check if the form has been set in the DOM\r\n            self.form.triggerHandler(\"ondomincluded\");\r\n\r\n            // Set currents search form\r\n            self.currentSearchForm = self.form.firstChild();\r\n            self.currentSearchForm.triggerHandler(\"ondomincluded\");\r\n\r\n            self.currentSearchForm.bind(\"instancerefresh\", function () {\r\n                // Show search results container\r\n                self.searchResultContainer.show();\r\n            });\r\n\r\n            self.form.bind(\"refresh\", function (_, refreshParams) {\r\n                refreshParams.scrollTop = self.form.container.parent().scrollTop();\r\n                refreshParams = $.extend({\r\n                    focus: focus,\r\n                    selectedTabs: self.form.getSelectedTabs(),\r\n                    isRefresh: true,\r\n                    contextType: self.properties.contextType || \"\",\r\n                    navigation: self.searchFormParams.navigation,\r\n                    view_container: self.container\r\n                }, refreshParams);\r\n\r\n                return self.renderSearchDialog(refreshParams);\r\n            });\r\n\r\n            // Add row selected handlers to resolve the deferred\r\n            self.currentSearchForm.bind(\"instanceSelected\", function (ev, ui) {\r\n                // Close slide\r\n                self.goBack();\r\n\r\n                self.slideBoxDeferred.resolve({ id: ui.id,  label: \"\" });\r\n            });\r\n            // if is any modal view displayed, hide it to allow this search form been displayed\r\n            self.handleSearchFormZindex(\"show\");\r\n\r\n            self.containerSearchCriteria = self.currentSearchForm.container.find(\".bz-container__search-criteria\");\r\n        }).always(function () {\r\n            bizagi.util.tablet.stopLoading();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Get the addform and show it\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    renderAddForm: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        var properties = self.properties;\r\n\r\n        if (typeof self.addContainer === \"undefined\") {\r\n            self.addContainer =\r\n                self.slideParams.navigation.createRenderContainer({\r\n                    title: bizagi.localization.getResource(\"render-dialog-entity\")\r\n                });\r\n        }\r\n\r\n        var isRefresh = params.isRefresh || false;\r\n\r\n        var getFormParams = {\r\n            idPageCache: params.idPageCache,\r\n            guidEntity: properties.entity,\r\n            contextType: \"entity\"\r\n        };\r\n\r\n        if (isRefresh) {\r\n            getFormParams.isRefresh = true;\r\n            getFormParams.idStartScope = params.idStartScope;\r\n        } else {\r\n            getFormParams.idRender = properties.idRender;\r\n            getFormParams.requestedForm = \"addForm\";\r\n        }\r\n\r\n        bizagi.util.tablet.startLoading();\r\n\r\n        //Get the addform\r\n        $.when(self.dataService.getFormData(getFormParams)).pipe(function (data) {\r\n            if (params.editable === false) {\r\n                data.form.properties.editable = false;\r\n            }\r\n\r\n            if (data.form.properties) {\r\n                data.form.properties.orientation = self.searchParams.orientation || \"ltr\";\r\n            }\r\n\r\n            data.form.contextType = \"entity\";\r\n\r\n            var form = self.renderFactory.getContainer($.extend({}, self.addFormParams, {\r\n                type: \"form\",\r\n                data: data.form,\r\n                focus: params.focus || false,\r\n                selectedTabs: params.selectedTabs,\r\n                isRefresh: isRefresh,\r\n                requestedForm: params.requestedForm,\r\n                navigation: self.slideParams.navigation,\r\n                view_container: self.addContainer\r\n\r\n            }));\r\n\r\n            form.buttons = [\r\n                $.extend(\r\n                    self.form.buttons[0] || {},\r\n                    {\r\n                        \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-save\"),\r\n                        \"actions\": [\"submitData\", \"refresh\"],\r\n                        \"submitData\": true,\r\n                        \"refresh\": true,\r\n                        \"ordinal\": 0,\r\n                        \"action\": \"save\",\r\n                        \"save\": true,\r\n                        \"style\": \"\",\r\n                    },\r\n                    {\r\n                        //This callback avoid to call the default processButton in the form\r\n                        callback: function () {\r\n                            // When the data is saved then\r\n                            self.saveDataAddForm(form).done(function () {\r\n                                self.addContainer.destroy();\r\n                                delete self.addContainer;\r\n\r\n                                // Force a search after a new item is created!\r\n                                self.currentSearchForm.performSearch(self.searchParams);\r\n                            });\r\n                        }\r\n                    }),\r\n                $.extend(\r\n                    self.form.buttons[1] || {},\r\n                    {\r\n                        \"caption\": bizagi.localization.getResource(\"render-form-dialog-box-close\"),\r\n                        \"actions\": [\"submitData\", \"refresh\"],\r\n                        \"submitData\": true,\r\n                        \"refresh\": true,\r\n                        \"ordinal\": 1,\r\n                        \"action\": \"back\",\r\n                        \"save\": true,\r\n                        \"style\": \"\"\r\n                    },\r\n                    {\r\n                        //This callback avoid to call the default processButton in the form\r\n                        callback: function () {\r\n                            self.addContainer.destroy();\r\n                            delete self.addContainer;\r\n                        }\r\n                    }),\r\n            ];\r\n\r\n            $.extend(form, {\r\n                processButtons: function () {\r\n                    //not send information set in memory and save\r\n\r\n                    $.each(form.buttons, function (index, element) {\r\n                        switch (element[\"ordinal\"]) {\r\n                            case 1: //next button will behave as a cancel button\r\n                                $(form.getButtons()[index]).click(function () {\r\n                                    self.addContainer.destroy();\r\n                                    delete self.addContainer;\r\n                                });\r\n\r\n                                form.getButtons()[index].innerHTML = bizagi.localization.getResource(\"render-form-dialog-box-close\");\r\n                                form.buttons[index].caption = bizagi.localization.getResource(\"render-form-dialog-box-close\");\r\n                                form.buttons[index].action = \"back\";\r\n\r\n                                break;\r\n\r\n                            default:\r\n                                $(form.getButtons()[index]).click(function () {\r\n                                    self.saveDataAddForm(form);\r\n                                    self.addContainer.destroy();\r\n                                    delete self.addContainer;\r\n                                });\r\n                                break;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            for (var indicator in form.children) {\r\n                form.children[indicator].params = $.extend({}, form.children[indicator].params, self.addFormParams);\r\n            }\r\n\r\n            return $.when(form.render()).done(function (element) {\r\n                // Set currents search form\r\n                self.currentAddForm = form.firstChild();\r\n\r\n                self.addContainer.element.html(element);\r\n                if (!isRefresh) {\r\n                    self.slideParams.navigation.navigate(self.addContainer.id, \"overlay:up\");\r\n                }\r\n\r\n                self.addContainer.setNavigationButtons(form);\r\n\r\n                form.triggerHandler(\"ondomincluded\");\r\n\r\n                // if is any modal view displayed, hide it to allow this search form been displayed\r\n                self.handleSearchFormZindex(\"show\");\r\n\r\n                form.bind(\"refresh\", function (_, refreshParams) {\r\n                    refreshParams.scrollTop = self.form.container.parent().scrollTop();\r\n                    refreshParams = $.extend({\r\n                        focus: focus,\r\n                        selectedTabs: self.form.getSelectedTabs(),\r\n                        isRefresh: true,\r\n                        contextType: self.properties.contextType || \"\",\r\n                        navigation: self.slideParams.navigation,\r\n                        view_container: self.addContainer\r\n                    }, refreshParams);\r\n\r\n                    return self.renderAddForm(refreshParams);\r\n                });\r\n            });\r\n        }).fail(function () {\r\n            self.addContainer.destroy();\r\n            delete self.addContainer;\r\n        }).always(function () {\r\n            bizagi.util.tablet.stopLoading();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Save data to add form\r\n     * @param {} form\r\n     * @returns {}\r\n     */\r\n    saveDataAddForm: function (form) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n        if (form.validateForm()) {\r\n            var data = {};\r\n            $.forceCollectData = true;\r\n\r\n            form.collectRenderValues(data);\r\n            data.idPageCache = form.idPageCache;\r\n\r\n            var params = {\r\n                action: \"SAVE\",\r\n                data: data,\r\n                idPageCache: data.idPageCache,\r\n                guidEntity: form.properties.entity,\r\n                contexttype: \"entity\",\r\n            };\r\n\r\n            // Check if the add form has data\r\n            var formData = {};\r\n\r\n            form.collectRenderValuesForSubmit(formData);\r\n\r\n            // Turn off flag\r\n            $.forceCollectData = false;\r\n\r\n            if (!bizagi.util.isMapEmpty(formData)) {\r\n\r\n                bizagi.util.tablet.startLoading();\r\n\r\n                $.when(self.dataService.submitData(params)).done(function () {\r\n                    function dataHasXpath(xpath) {\r\n                        var render = self.currentSearchForm.getRender(xpath);\r\n                        if (typeof render === \"object\" && render !== null) {\r\n                            return {\"found\": true, \"obj\": render};\r\n                        }\r\n                        return {\"found\": false, \"obj\": {}};\r\n                    }\r\n\r\n                    for (var i in formData) {\r\n                        var mapping = dataHasXpath(i);\r\n                        if (mapping.found) {\r\n                            mapping.obj.setValue(formData[i]);\r\n                            self.setDisplayValueToControl(mapping.obj, form, i, formData);\r\n                        }\r\n                    }\r\n\r\n                    defer.resolve();\r\n                }).fail(function (jqXHR, type, message) {\r\n                    form.addValidationMessage(message.message);\r\n                    defer.reject();\r\n                }).always(function () {\r\n                    bizagi.util.tablet.stopLoading();\r\n                });\r\n            } else {\r\n                // Form has not data\r\n                bizagi.showMessageBox(bizagi.localization.getResource(\"render-search-advanced-no-filters\"));\r\n                defer.reject();\r\n            }\r\n        } else {\r\n            defer.reject();\r\n        }\r\n        return defer;\r\n    },\r\n\r\n    /***\r\n     * Set display value by control type, when add new record\r\n     * @param renderControlSearchForm\r\n     * @param addForm\r\n     * @param xpath\r\n     * @param formData\r\n     */\r\n    setDisplayValueToControl: function (renderControlSearchForm, addForm, xpath, formData) {\r\n        if (renderControlSearchForm.properties.type === \"searchSuggest\") {\r\n            renderControlSearchForm.setDisplayValue(addForm.getRender(xpath).getDisplayValue());\r\n        } else {\r\n            renderControlSearchForm.setDisplayValue(formData[xpath]);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Shows the dialog box in the browser\r\n     * @returns {} Returns a promise that the dialog will be closed\r\n     */\r\n    processButtons: function () {\r\n        var self = this;\r\n        self.slideBoxDeferred = new $.Deferred();\r\n\r\n        // Create buttons object\r\n        var slideOptions = {buttons: []};\r\n\r\n        // Add search button by default\r\n        slideOptions.buttons.push({\r\n            text: bizagi.localization.getResource(\"render-form-dialog-box-search\"),\r\n            click: function () {\r\n                self.currentSearchForm.performSearch(self.searchParams);\r\n            }\r\n        });\r\n\r\n        if (self.slideParams.allowNew) {\r\n            slideOptions.buttons.push({\r\n                text: bizagi.localization.getResource(\"render-form-dialog-box-add\"),\r\n                click: function () {\r\n                    var params = {\r\n                        \"idCase\": self.slideParams.idCase,\r\n                        \"idRender\": self.properties.idRender,\r\n                        \"displayName\": self.properties.displayName,\r\n                        \"idPageCache\": self.properties.idPageCache\r\n                    };\r\n\r\n                    self.renderAddForm(params);\r\n                }\r\n            });\r\n        }\r\n\r\n        slideOptions.buttons.push({\r\n            text: bizagi.localization.getResource(\"render-form-dialog-box-cancel\"),\r\n            click: function () {\r\n                // Close slide\r\n                self.goBack();\r\n            }\r\n        });\r\n\r\n        // Apply slide plugin\r\n        slideOptions = $.extend(slideOptions, self.slideParams);\r\n        self._renderButtons(slideOptions);\r\n\r\n        // Return promise\r\n        return self.slideBoxDeferred.promise();\r\n    },\r\n\r\n    /**\r\n     * Creates the search dialog sub-containers\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    getSearchContainerData: function (params) {\r\n        var self = this;\r\n        var deferred = new $.Deferred();\r\n        var data = {\r\n            form: {\r\n                properties: {},\r\n                elements: []\r\n            }\r\n        };\r\n\r\n        var container = data.form;\r\n        var searchFormToLoad = self.searchForms[0];\r\n\r\n        // When there are more than one search form, render a tab container\r\n        if (self.searchForms.length > 1) {\r\n\r\n            var tabContainer = {};\r\n            tabContainer.properties = {type: \"tab\"};\r\n            tabContainer.elements = [];\r\n            var otherElements = [];\r\n\r\n            $.each(self.searchForms, function (i, searchForm) {\r\n                var isDefault = searchForm[\"default\"] || false;\r\n\r\n                // Create tab item\r\n                var tab = {};\r\n                tab.properties = {\r\n                    id: i,\r\n                    type: \"tabItem\",\r\n                    displayName: searchForm.caption\r\n                };\r\n\r\n                tab.elements = [];\r\n\r\n                // Append children\r\n                if (isDefault) {\r\n\r\n                    tabContainer.elements.push({container: tab});\r\n\r\n                    // Set properties to load default container\r\n                    container = tab;\r\n                    searchFormToLoad = self.searchForms[0];\r\n\r\n                } else {\r\n                    otherElements.push({container: tab});\r\n                }\r\n            });\r\n\r\n            // Append no defaults elements\r\n            $.each(otherElements, function (i, element) {\r\n                tabContainer.elements.push(element);\r\n            });\r\n\r\n            data.form.elements.push({\r\n                container: tabContainer\r\n            });\r\n        }\r\n\r\n        bizagi.util.tablet.startLoading();\r\n\r\n        // Loads default form\r\n        $.when(self.getSearchFormData(params, searchFormToLoad))\r\n            .done(function (searchFormData) {\r\n                container.elements.push(searchFormData);\r\n                container.properties.id = Math.guid();\r\n\r\n                // Resolve deferred\r\n                deferred.resolve(data);\r\n            }).always(function () {\r\n            bizagi.util.tablet.stopLoading();\r\n        });\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    /**\r\n     * Loads a search form\r\n     * @param {} params\r\n     * @param {} searchForm\r\n     * @returns {}\r\n     */\r\n    getSearchFormData: function (params, searchForm) {\r\n        var self = this;\r\n        return self.dataService.getSearchFormData($.extend(params, {\r\n            idSearchForm: searchForm.id,\r\n            url: searchForm.url\r\n\r\n        })).pipe(function (data) {\r\n            // Append search render properties\r\n            data.form.properties.idRender = params.idRender;\r\n\r\n            return data;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Go back and destroy\r\n     * @returns {}\r\n     */\r\n    goBack: function () {\r\n        var self = this;\r\n\r\n        self.handleSearchFormZindex(\"hide\");\r\n        self.container.destroy();\r\n    },\r\n\r\n    /**\r\n     * Handlers kendo view\r\n     * @returns {}\r\n     */\r\n    configureViewHandlers: function () {\r\n    },\r\n\r\n    /**\r\n     * Process render buttons\r\n     * @param {} options\r\n     * @returns {}\r\n     */\r\n    _renderButtons: function (options) {\r\n        var self = this;\r\n        var content = $(\"<div class='bz-slide-button-container'></div>\");\r\n\r\n        $.each(options.buttons, function (ui, value) {\r\n            $(\"<div class='action-button'>\" + value.text + \"</div>\").click(\r\n                value.click\r\n            ).appendTo(content);\r\n        });\r\n\r\n        self.buttonContainer = content;\r\n    },\r\n\r\n    handleSearchFormZindex: function (option) {\r\n\r\n        //if there is an open modal, change z-index to make searchForm visible\r\n        var modalViewDisplayed = jQuery.grep($(\".km-modalview-root\"), function (n) {\r\n            return ($(n).css(\"display\") == \"block\");\r\n        });\r\n\r\n        if (modalViewDisplayed.length > 0) {\r\n            if (option == \"show\") {\r\n                $(modalViewDisplayed).css(\"z-index\", 0);\r\n            } else {\r\n                $(modalViewDisplayed).css(\"z-index\", 10001);\r\n            }\r\n        }\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet slide view Upload implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   Serves as an slide view that will show an upload file without exiting the application\r\n */\r\n\r\n// Extends itself\r\n$.Class.extend('bizagi.rendering.tablet.slide.upload', {}, {\r\n\r\n    /* CONSTRUCTOR\r\n    =====================================================*/\r\n    init: function (dataService, renderFactory, slideFormParams) {\r\n\r\n        var self = this;\r\n\r\n        // Define instance variables\r\n        this.dataService = dataService;\r\n        this.renderFactory = renderFactory;\r\n        this.slideFormDeferred = new $.Deferred();\r\n        this.slideFormParams = slideFormParams || {};\r\n\r\n        // Create container    \t\r\n        self.slideContainer = self.slideFormParams.navigation.createRenderContainer({title: self.slideFormParams.title});\r\n\r\n        self.processButtons()\r\n            .done(function (data) {\r\n                self.slideFormDeferred.resolve(data);\r\n            }).fail(function () {\r\n            self.slideFormDeferred.reject();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Shows the slideForm form container in the browser\r\n     * @returns {} Returns a promise that the dialog will be closed\r\n     */\r\n    processButtons: function () {\r\n        var self = this;\r\n        var dfd = new $.Deferred();\r\n\r\n        // Create buttons object\r\n        var slideOptions = {buttons: []};\r\n\r\n        // Add cancel button by default\r\n        var onClose = function onClose() {\r\n            // Close slide\r\n            self.goBack();\r\n            //reject defered\r\n            dfd.reject();\r\n        };\r\n        slideOptions.buttons.push({\r\n            text: bizagi.localization.getResource(\"workportal-case-dialog-box-close\"),\r\n            caption: bizagi.localization.getResource(\"render-form-dialog-box-close\"),\r\n            actions: [\"submitData\", \"refresh\"],\r\n            submitData: false,\r\n            refresh: false,\r\n            ordinal: 0,\r\n            action: \"back\",\r\n            save: true,\r\n            style: \"\",\r\n            //This callback avoid to call the default processButton in the form\r\n            callback: onClose,\r\n            click: onClose,\r\n        });\r\n\r\n        // Apply dialog plugin\r\n        this.slideFormParams = $.extend(slideOptions, this.slideFormParams);\r\n        self._renderButtons(this.slideFormParams);\r\n\r\n        // Return promise\r\n        return dfd.promise();\r\n    },\r\n\r\n    /**\r\n     * Render the grid view form\r\n     * The params are the same that will be send to the ajax service\r\n     * @param {} params\r\n     * @returns {} Returns a deferred\r\n     */\r\n    render: function (params) {\r\n        var self = this;\r\n\r\n        // Fill content\r\n        self.renderUploadFile(self.slideForm, params);\r\n\r\n        // Return promise\r\n        return self.slideFormDeferred.promise();\r\n    },\r\n\r\n    /* Render the file inside a frame\r\n    =====================================================*/\r\n    renderUploadFile: function (slideForm, params) {\r\n        var self = this;\r\n        var template = self.renderFactory.getCommonTemplate(\"uploadSlide\");\r\n\r\n        // Render template\r\n        var content = $.fasttmpl(template, {url: params.url});\r\n\r\n        // Append content in the slide view\r\n        self.slideContainer.element.html(content);\r\n\r\n        // Navigate on view\r\n        self.slideFormParams.navigation.navigate(self.slideContainer.id);\r\n        // Add Button\r\n        // $(\".ui-bizagi-button-container\", self.slideContainer).append(self.buttonContainer);\r\n\r\n        // No need to create a real form cause it just shows the back button\r\n        var virtualForm = $.extend({\r\n            originalProperties: {\r\n                uniqueId: 101,\r\n                id: 101,\r\n            },\r\n        }, self.slideFormParams);\r\n        virtualForm.container = self.slideContainer.element;\r\n\r\n        self.slideFormParams.navigation.setNavigationButtons(virtualForm);\r\n\r\n        content.find(\".ui-slide-upload-link\").click(function () {\r\n            $.when(bizagi.showConfirmationBox(bizagi.localization.getResource(\"render-tablet-slide-upload-confirmation\")))\r\n                .done(function () {\r\n                    window.location.href = params.url;\r\n                });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Go back and destroy\r\n     * @returns {}\r\n     */\r\n    goBack: function () {\r\n        var self = this;\r\n\r\n        self.slideContainer.destroy();\r\n    },\r\n\r\n    /**\r\n     * Process render buttons\r\n     * @param {} options\r\n     * @returns {}\r\n     */\r\n    _renderButtons: function (options) {\r\n        var self = this;\r\n        var content = $(\"<div class=\\\"bz-slide-button-container\\\"></div>\");\r\n\r\n        $.each(options.buttons, function (ui, value) {\r\n            $(\"<div class=\\\"action-button\\\">\" + value.text + \"</div>\").click(\r\n                value.click\r\n            ).appendTo(content);\r\n        });\r\n\r\n        self.buttonContainer = content;\r\n    }\r\n});","/**\r\n *   Name: Bizagi Tablet slide form implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   Serves as an slide form that can render a inner form\r\n */\r\n\r\n// Extends itself\r\n$.Class.extend('bizagi.rendering.tablet.startForm', {}, {\r\n\r\n    /* CONSTRUCTOR\r\n     =====================================================*/\r\n    init: function (dataService, renderFactory, slideFormParams) {\r\n\r\n        var self = this;\r\n\r\n        // Define instance variables\r\n        self.dataService = dataService;\r\n        self.renderFactory = renderFactory;\r\n        self.slideFormParams = slideFormParams || {};\r\n\r\n        // Create container        \r\n        self.slideContainer = self.slideFormParams.navigation.createRenderContainer({title: self.slideFormParams.title});\r\n        self.configureViewHandlers();\r\n    },\r\n\r\n    /**\r\n     * Handlers kendo view\r\n     * @returns {}\r\n     */\r\n    configureViewHandlers: function () {\r\n        var self = this;\r\n    },\r\n\r\n    /**\r\n     * Go back and destroy\r\n     * @returns {}\r\n     */\r\n    goBack: function () {\r\n        var self = this;\r\n        self.slideContainer.destroy();\r\n    },\r\n\r\n    /**\r\n     * Render the form\r\n     * The params are the same that will be send to the ajax service\r\n     * @param {} params\r\n     * @returns {} Returns a deferred\r\n     */\r\n    render: function (params) {\r\n        var self = this;\r\n        // Fill content\r\n        self.renderSlideForm(params);\r\n    },\r\n\r\n    /* RENDERS slideForm\r\n     =====================================================*/\r\n    renderSlideForm: function (params) {\r\n\r\n        var self = this;\r\n\r\n        var defer = new $.Deferred();\r\n\r\n        // Load template and data\r\n        $.when(self.dataService.getStartForm(params)).then(function (data) {\r\n            /*** SUCCESS FILTER **/\r\n            // Apply editable param\r\n            if (params.editable === false) {\r\n                data.form.properties.editable = false;\r\n            }\r\n\r\n            // Render dialog template\r\n            var formClass = bizagi.rendering.tablet.form.extend({\r\n                submitForm: function () {\r\n                    if (self.form) {\r\n                        this.endLoading();\r\n                        // Perform validations\r\n                        if (self.form.validateForm()) {\r\n                            // Collect data\r\n                            var data = {};\r\n\r\n                            self.form.collectRenderValues(data);\r\n\r\n                            // Add page cache for this form\r\n                            data.idPageCache = self.form.getPageCache();\r\n\r\n                            // Call user callback\r\n                            if (self.slideFormParams.onSave) {\r\n                                $.when(self.slideFormParams.onSave(data))\r\n                                    .done(function (result) {\r\n                                        if (result == null || result == true || result.type == \"success\") {\r\n                                            defer.resolve();\r\n                                            self.goBack();\r\n                                        } else if (result.type == \"validationMessages\") {\r\n                                            // Add validation messages\r\n                                            self.form.addValidationMessage(result.messages);\r\n                                            // Update original value to use as reference to other futures changes in the dialogBox\r\n                                            $.each(data, function (key, value) {\r\n                                                var renders = self.form.getRenders(key);\r\n                                                $.each(renders, function (i, render) {\r\n                                                    render.updateOriginalValue();\r\n                                                });\r\n                                            });\r\n                                        } else if (result.type == \"error\") {\r\n                                            // Add error messages\r\n                                            self.form.addErrorMessage(result.message);\r\n                                        }\r\n                                    });\r\n\r\n                            } else {\r\n                                defer.resolve();\r\n                                self.goBack();\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n\r\n            var containerParams = $.extend({\r\n                type: \"form\",\r\n                data: data.form,\r\n                navigation: self.slideFormParams.navigation,\r\n                view_container: self.slideContainer\r\n            }, {\r\n                renderFactory: self.renderFactory,\r\n                dataService: self.renderFactory.dataService\r\n            });\r\n\r\n            self.form = new formClass(containerParams);\r\n\r\n\r\n            // Attach a refresh handler to recreate all the form\r\n            self.form.bind(\"refresh\", function (_, refreshParams) {\r\n                refreshParams = $.extend({\r\n                    selectedTabs: self.form.getSelectedTabs(),\r\n                    isRefresh: true\r\n                }, params, refreshParams, {idStartScope: self.form.properties.idStartScope});\r\n\r\n                self.renderSlideForm(refreshParams);\r\n            });\r\n\r\n            self.form.buttons = [\r\n                $.extend(\r\n                    self.form.buttons[0] || {},\r\n                    {\r\n                        \"caption\": self.slideFormParams.saveButtonLabel,\r\n                        \"actions\": [\"submitData\", \"refresh\"],\r\n                        \"submitData\": true,\r\n                        \"refresh\": true,\r\n                        \"ordinal\": 0,\r\n                        \"action\": \"save\",\r\n                        \"save\": true,\r\n                        \"style\": \"\",\r\n                    })];\r\n\r\n            // Return rendering promise\r\n            return self.form.render();\r\n        }).done(function (element) {\r\n            // Append form  in the view\r\n            self.slideContainer.element.html(element);\r\n\r\n            if (!params.isRefresh) {\r\n                self.slideFormParams.navigation.navigate(self.slideContainer.id);\r\n            }\r\n\r\n            $('.ui-bizagi-button-container div', self.form.container).remove();\r\n\r\n            $('.ui-bizagi-button-container', self.form.container).append('<div ordinal=\"0\" id=\"formButton0\" class=\"action-button ui-bizagi-form-button\">' + (self.slideFormParams.saveButtonLabel ? self.slideFormParams.saveButtonLabel : bizagi.localization.getResource(\"render-form-dialog-box-save\")) + '</div>').delegate('div[ordinal=\"0\"]', 'click', function () {\r\n                self.form.submitForm();\r\n            });\r\n\r\n            $('.ui-bizagi-button-container', self.form.container).append('<div ordinal=\"1\" id=\"formButton1\" class=\"action-button ui-bizagi-form-button\">' + bizagi.localization.getResource(\"render-form-dialog-box-cancel\") + '</div>').delegate('div[ordinal=\"1\"]', 'click', function () {\r\n                self.slideFormParams.onCancel && self.slideFormParams.onCancel();\r\n                self.goBack();\r\n            });\r\n\r\n            //self.view.scroller.reset();\r\n            // Publish an event to check if the form has been set in the DOM\r\n            self.form.triggerHandler(\"ondomincluded\");\r\n        }).fail(function (xhr, errorType, message) {\r\n            /*** FAIL FILTER **/\r\n            var errorTemplate = self.renderFactory.getCommonTemplate(\"form-error\");\r\n            var error_message = message.message || \"Error\";\r\n\r\n            $.fasttmpl(errorTemplate, {message: error_message}).appendTo(self.slideContainer.element);\r\n            // Navigate on view\r\n            self.slideFormParams.navigation.navigate(self.slideContainer.id);\r\n        });\r\n\r\n        return defer.promise();\r\n    }\r\n});","/**\r\n *   Name: Bizagi tablet ECM Slide Implementation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will shows a ECM form\r\n */\r\n$.Class.extend(\"bizagi.rendering.tablet.slide.ecm\", {}, {\r\n\r\n    /**\r\n     * Constructor\r\n     * @param dataService\r\n     * @param renderFactory\r\n     * @param slideFormParams\r\n     */\r\n    init: function (dataService, renderFactory, slideFormParams) {\r\n        var self = this;\r\n\r\n        // Define instance variables\r\n        self.dataService = dataService;\r\n        self.renderFactory = renderFactory;\r\n\r\n        self.slideFormParams = slideFormParams || {};\r\n        self.slideFormDeferred = new $.Deferred();\r\n\r\n        // Create container\r\n        self.container = self.slideFormParams.navigation.createRenderContainer({title: self.slideFormParams.title});\r\n    },\r\n\r\n    /**\r\n     * Render the form\r\n     * @param params\r\n     */\r\n    render: function (params) {\r\n\r\n        // Fill content\r\n        this.renderSlideForm(params);\r\n\r\n        // Return promise\r\n        return this.slideFormDeferred.promise();\r\n    },\r\n\r\n    renderSlideForm: function (params) {\r\n        var self = this;\r\n        var data = self.getMetadataForm(params);\r\n\r\n        // Load template and data\r\n        self.form = self.renderFactory.getContainer({\r\n            type: \"form\",\r\n            data: data.form,\r\n            navigation: self.slideFormParams.navigation,\r\n            view_container: self.container\r\n        });\r\n\r\n        // Binds the view close event\r\n       /* self.container.element.bind(\"close\", function () {\r\n            // delete self.container;\r\n            console.log(\"closed!\");\r\n        });*/\r\n\r\n        $.when(self.form.render())\r\n            .done(function ($renderEdition) {\r\n\r\n                // Append form in the slide view\r\n                self.container.element.html($renderEdition);\r\n\r\n                self.slideFormParams.navigation.navigate(self.container.id);\r\n\r\n                self.processButtons(self.form, params);\r\n                self.container.setNavigationButtons(self.form);\r\n\r\n                // Publish an event to check if the form has been set in the DOM\r\n                self.form.triggerHandler(\"ondomincluded\");\r\n\r\n                // Attach a refresh handler to recreate all the form\r\n                /*self.form.bind(\"refresh\", function () {\r\n                    // self.renderSlideForm(params);\r\n                });*/\r\n\r\n            }).always(function () {\r\n            self.slideFormDeferred.resolve();\r\n        });\r\n\r\n    },\r\n\r\n    /**\r\n     * Shows the slideForm form container in the browser\r\n     * @returns {} Returns a promise that the dialog will be closed\r\n     */\r\n    processButtons: function (form, params) {\r\n        var self = this;\r\n\r\n        form.buttons = [\r\n            {\r\n                ordinal: 0,\r\n                action: \"save\",\r\n                caption: bizagi.localization.getResource(\"render-form-dialog-box-save\"),\r\n                callback: self.onSaveDataMetadataForm.bind(self, params.fileData)\r\n            },\r\n            {\r\n                ordinal: 1,\r\n                action: \"back\",\r\n                caption: bizagi.localization.getResource(\"render-form-dialog-box-close\"),\r\n                callback: function () {\r\n                    self.slideFormParams.onCancel({});\r\n                    self.goBack();\r\n                }\r\n            }\r\n        ];\r\n\r\n        // Add save button if the form is editable\r\n        if (!self.slideFormParams.editable) {\r\n            form.buttons.shift();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Process render data\r\n     * @param params\r\n     * @returns {{form: *, type: string}}\r\n     */\r\n    getMetadataForm: function (params) {\r\n        var self = this;\r\n        var data = {\r\n            type: \"form\",\r\n            form: {\r\n                elements: [],\r\n                pageCacheId: params.pageCacheId,\r\n                sessionId: params.sessionId,\r\n                properties: {\r\n                    id: 101,\r\n                    xpathContext: params.xpathContext,\r\n                    editable: self.slideFormParams.editable,\r\n                    orientation: self.slideFormParams.orientation || \"ltr\"\r\n                }\r\n            }\r\n        };\r\n\r\n        // Mapping metadata to render\r\n        $.each(params.metadata, function (index, item) {\r\n            var renderType = self.getRenderType(item.metadataType);\r\n\r\n            var newRender = Object.assign({\r\n                \"id\": (index + 1),\r\n                \"xpath\": item.metadataId,\r\n                \"displayName\": item.description,\r\n                \"required\": bizagi.util.parseBoolean(item.required) === true,\r\n                \"editable\": bizagi.util.parseBoolean(item.readOnly) === false,\r\n                \"value\": item.value\r\n            }, renderType);\r\n\r\n            data.form.elements.push({\"render\": {\"properties\": newRender}});\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Get type of render\r\n     * @param type\r\n     * @returns {*}\r\n     */\r\n    getRenderType: function (type) {\r\n        switch (type.toUpperCase()) {\r\n            case \"INTEGER\":\r\n                return {\r\n                    type: \"number\",\r\n                    dataType: 2,\r\n                    allowDecimals: false,\r\n                    thousands: false\r\n                };\r\n            case \"DECIMAL\":\r\n                return {\r\n                    type: \"number\",\r\n                    dataType: 10,\r\n                    allowDecimals: true,\r\n                    thousands: true\r\n                };\r\n            case \"DATETIME\":\r\n                return {type: \"date\", dataType: 12};\r\n            case \"BOOL\":\r\n                return {type: \"boolean\", dataType: 5};\r\n            case \"STRING\":\r\n            default:\r\n                return {\r\n                    type: \"text\",\r\n                    dataType: 15,\r\n                    maxLength: 50,\r\n                    autoExtend: false\r\n                };\r\n\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Save data to ECM form\r\n     * @returns {jQuery}\r\n     * @param fileData\r\n     */\r\n    onSaveDataMetadataForm: function (fileData) {\r\n        var self = this;\r\n        var deferred = $.Deferred();\r\n\r\n        if (self.form.validateForm()) {\r\n            // Check if the add form has data\r\n            var formData = {};\r\n            self.form.collectRenderValuesForSubmit(formData);\r\n\r\n            // Turn off flag\r\n            $.forceCollectData = false;\r\n\r\n            if (!bizagi.util.isMapEmpty(formData)) {\r\n\r\n                var metadataValues = Object.keys(formData)\r\n                    .map(function (key, index) {\r\n                        return {\"idMetadata\": key, \"value\": formData[key]};\r\n                    });\r\n\r\n                var params = {\r\n                    \"idFileUpload\": fileData.idFileUpload,\r\n                    \"fileName\": fileData.fileName,\r\n                    \"idPageCache\": fileData.idPageCache,\r\n                    \"xpathContext\": fileData.xpathContext,\r\n                    \"xPath\": fileData.xpath,\r\n                    \"idAttrib\": fileData.idAttrib\r\n                };\r\n\r\n                params.metaValues = JSON.encode({metadataValues: metadataValues});\r\n                bizagi.loading.start();\r\n\r\n                $.when(self.dataService.updateECMMetadata(params))\r\n                    .done(function (fileProperties) {\r\n                        if (fileProperties && fileProperties.idFileUpload) {\r\n\r\n                            self.slideFormParams.onSave({\r\n                                update: true,\r\n                                idFileUpload: fileProperties.idFileUpload,\r\n                                fileName: fileData.fileName\r\n                            });\r\n\r\n                            deferred.resolve({update: true});\r\n                        }\r\n\r\n                        self.goBack();\r\n\r\n                    }).fail(function (message) {\r\n                    self.form.addValidationMessage(message.message);\r\n                    deferred.reject();\r\n                }).always(function () {\r\n                    bizagi.loading.stop();\r\n                });\r\n            } else {\r\n                self.slideFormParams.onSave({update: false});\r\n                deferred.resolve({update: false});\r\n                self.goBack();\r\n            }\r\n        }\r\n\r\n        deferred.promise();\r\n    },\r\n\r\n    /**\r\n     * Go back and destroy\r\n     */\r\n    goBack: function () {\r\n        this.container.destroy();\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Container Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n */\r\n\r\n// Extends itself\r\nbizagi.rendering.container.extend(\"bizagi.rendering.tablet.container\", {}, {\r\n    /**\r\n     * Starts waiting signal for async stuff\r\n     */\r\n    startLoading: function () {\r\n    },\r\n\r\n    /**\r\n     * Ends waiting for async stuff\r\n     */\r\n    endLoading: function () {\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render base\r\nbizagi.rendering.render.extend(\"bizagi.rendering.tablet.render\", bizagi.rendering.render.base.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.render\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        this._super(data);\r\n\r\n        var formContainer = this.getFormContainer();\r\n        this.formParams = formContainer.getParams();\r\n    },\r\n\r\n    /**\r\n     * Returns the label element usually to apply styles\r\n     */\r\n    getLabel: function () {\r\n        if (!this.label)\r\n            this.label = $(\".bz-form-label label\", this.element || this.observableElement);\r\n\r\n        return this.label;\r\n    },\r\n\r\n    /**\r\n     * Return the label\r\n     */\r\n    getFormattingLabel: function () {\r\n        // TODO: Despues de cambiar a genome desktop, validar se solo se deja este metodo en la base\r\n        return this.getLabel();\r\n    },\r\n\r\n    /**\r\n     * Template method to get the control element\r\n     */\r\n    getControl: function () {\r\n        if (!this.control || this.control.length === 0)\r\n            this.control = $(\".bz-control\", this.element || this.observableElement);\r\n\r\n        if (!this.control || this.control.length === 0) return null;\r\n\r\n        return this.control;\r\n    },\r\n\r\n    /**\r\n     * Template method to get the control filler element\r\n     */\r\n    getControlFiller: function () {\r\n        if (!this.controlFiller)\r\n            this.controlFiller = $(\".bz-form-item__control\", this.element || this.observableElement);\r\n\r\n        return this.controlFiller;\r\n    },\r\n\r\n    getContainerMessage: function () {\r\n        if (!this.containerMessage)\r\n            this.containerMessage = $(\".bz-form-message__text\", this.element || this.observableElement);\r\n\r\n        return this.containerMessage;\r\n    },\r\n\r\n    getColumnContainerMessage: function () {\r\n        if (!this.containerMessage)\r\n            this.containerMessage = $(\".bz-form-cell-message__text\", this.element || this.observableElement);\r\n\r\n        return this.containerMessage;\r\n    },\r\n\r\n    /**\r\n     * Starts waiting signal for async stuff\r\n     */\r\n    startLoading: function () {\r\n    },\r\n\r\n    /**\r\n     * Ends waiting for async stuff\r\n     */\r\n    endLoading: function () {\r\n    },\r\n\r\n    /**\r\n     * Return the right display option class\r\n     * @param {} displayType\r\n     */\r\n    getDisplayOptionClass: function (displayType) {\r\n        if (displayType === \"normal\" || displayType === \"both\") {\r\n            return \"bz-form-item--display-normal\";\r\n        } else if (displayType === \"vertical\") {\r\n            return \"bz-form-item--display-vertical\";\r\n        } else if (displayType === \"reversed\") {\r\n            return \"bz-form-item--display-reversed\";\r\n        } else if (displayType === \"label\") {\r\n            return \"bz-form-item--display-label\";\r\n        } else if (displayType === \"value\") {\r\n            return \"bz-form-item--display-value\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Customizes render display type with custom css classes\r\n     * @param displayType\r\n     */\r\n    changeDisplayOption: function (displayType) {\r\n        // var self = this,\r\n        // el = self.element;\r\n\r\n        // Clean old display type\r\n        // el.removeClass('ui-bizagi-render-display-normal ui-bizagi-render-display-vertical ui-bizagi-render-display-reversed')\r\n        //   .removeClass('ui-bizagi-render-display-vertical-reversed ui-bizagi-render-display-label ui-bizagi-render-display-value');\r\n        // el.addClass(self.getDisplayOptionClass(displayType));\r\n    },\r\n\r\n    /**\r\n     * Return the right align class\r\n     * @param alignType\r\n     * @returns {*}\r\n     */\r\n    getAlignClass: function (alignType) {\r\n        return alignType;\r\n    },\r\n\r\n    /**\r\n     * Customizes render label align\r\n     * @param alignType\r\n     */\r\n    changeLabelAlign: function (alignType) {\r\n        // var self = this;\r\n\r\n        // Get label\r\n        // var label = self.getLabel();\r\n\r\n        // Remove old label align\r\n        // label.removeClass('ui-bizagi-render-align-left ui-bizagi-render-align-center ui-bizagi-render-align-right');\r\n\r\n        // Set label align\r\n        // label.addClass(self.getAlignClass(alignType));\r\n    },\r\n\r\n    /**\r\n     * Customizes render value align\r\n     * @param alignType\r\n     */\r\n    changeValueAlign: function (alignType) {\r\n        // var self = this;\r\n\r\n        // Get control\r\n        // var controlFiller = self.getControlFiller();\r\n        //\r\n        // // Remove old value align\r\n        // controlFiller.removeClass('ui-bizagi-render-align-left ui-bizagi-render-align-center ui-bizagi-render-align-right');\r\n        //\r\n        // // Set value align\r\n        // controlFiller.addClass(self.getAlignClass(alignType));\r\n    },\r\n\r\n    /**\r\n     * Customizes render label and value width\r\n     * TODO: Review implementation on execution\r\n     */\r\n    customizeRenderWidth: function () {\r\n        var self = this;\r\n        var label = self.getLabel();\r\n        var properties = self.properties;\r\n        var controlFiller = self.getControlFiller();\r\n\r\n        // Read values\r\n        // If the label width or the value width are 0, the BAS means that no value is used, so we need to adjust them to 50%\r\n        var labelWidth = properties.labelWidth ? (properties.labelWidth != '0' ? properties.labelWidth : '50%') : null;\r\n        var valueWidth = properties.valueWidth ? (properties.valueWidth != '0' ? properties.valueWidth : '50%') : null;\r\n\r\n        // Normalize percentages\r\n        if (labelWidth && !valueWidth) {\r\n            labelWidth = bizagi.util.percent2Number(labelWidth);\r\n            valueWidth = 100 - labelWidth;\r\n\r\n        } else if (!labelWidth && valueWidth) {\r\n            valueWidth = bizagi.util.percent2Number(valueWidth);\r\n            labelWidth = 100 - valueWidth;\r\n\r\n        } else {\r\n            labelWidth = bizagi.util.percent2Number(labelWidth);\r\n            valueWidth = bizagi.util.percent2Number(valueWidth);\r\n\r\n            // Check 100% percentage\r\n            if ((labelWidth + valueWidth) != 100) {\r\n                valueWidth = 100 - labelWidth;\r\n            }\r\n        }\r\n\r\n        // Now apply width\r\n        label.width(labelWidth + \"%\");\r\n        controlFiller.width((valueWidth - 0.01) + \"%\");\r\n    },\r\n\r\n    /**\r\n     * Adds a validation message to the render\r\n     * @param message\r\n     */\r\n    setValidationMessage: function (message) {\r\n        // Call base\r\n        this._super(message);\r\n\r\n        var isGridControl = (this.properties.type === \"grid\");\r\n        var isColumn = (this.grid && this.column && /column/.test(this.properties.type));\r\n        var $message = isColumn ? this.getColumnContainerMessage() : this.getContainerMessage();\r\n\r\n        if (message && message.length > 0) {\r\n            message = message.replace(/<\\w+>([^<]*)<\\/\\w+>/g, \"$1\");\r\n\r\n            $message.attr(\"data-error\", message);\r\n            $message.text(message);\r\n\r\n            if (this.element){\r\n                isGridControl ? this.element.addClass(\"bz-form-item-grid--error\") : this.element.addClass(\"bz-form-item--error\");\r\n            }\r\n        } else {\r\n            $message.text(\"\");\r\n            if (this.element){\r\n                isGridControl ? this.element.removeClass(\"bz-form-item-grid--error\") : this.element.removeClass(\"bz-form-item--error\");\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n\r\n        if (!self.properties.editable && self.properties.display !== \"check\") {\r\n            // Render as simple value\r\n            var displayValue = self.getDisplayValue(value);\r\n\r\n            if (typeof (displayValue) == \"string\" || typeof (displayValue) == \"number\") {\r\n                $(control).html(\"<label class='bz-form-label'>\" + displayValue + \"</label>\");\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * in mobiles, don't apply styles to icon's elements\r\n     */\r\n    getElementsToStylize: function (context) {\r\n        return $(\".bz-input\", context);\r\n    },\r\n\r\n    getFormParams: function () {\r\n        return this.formParams || {};\r\n    },\r\n\r\n    changeRequired: function (argument) {\r\n        // Update properties\r\n        this.properties.required = argument;\r\n\r\n        if (bizagi.util.parseBoolean(argument) && this.properties.editable) {\r\n            this.element.addClass(\"bz-form-item--required\");\r\n        } else {\r\n            this.element.removeClass(\"bz-form-item--required\");\r\n        }\r\n\r\n        // Perform validations again to check if the form is valid after this change\r\n        this.triggerRenderValidate();\r\n    },\r\n\r\n    changeRequiredLabel: function (argument) {\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     */\r\n    clearDisplayValue: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        var input = control.find(\"input\").filter(function (index, ele) {\r\n            return ele.type !== \"file\" && ele.type !== \"radio\" && ele.type !== \"checkbox\"\r\n        });\r\n\r\n        if (input.length > 0) {\r\n            input.val(self.getValue());\r\n        } else {\r\n            self.setDisplayValue(\"\");\r\n        }\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Form Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n *   -   Will apply a desktop form template\r\n */\r\n\r\n// Extends from container tablet base\r\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.form\", bizagi.rendering.form.prototype);\r\n// Auto extend\r\nbizagi.rendering.tablet.form.extend(\"bizagi.rendering.tablet.form\", {}, {\r\n\r\n    /**\r\n     * CONSTRUCTOR\r\n     *\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    init: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        // Define variables\r\n        self.warnings = {};\r\n        self.errors = {};\r\n\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize the container's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var form = self.container;\r\n\r\n        // Process complex-gateway\r\n        self.configureComplexGateway()\r\n\r\n        // Process buttons\r\n        self.processButtons(form);\r\n\r\n        // Check for dom included event\r\n        self.bind(\"ondomincluded\", function () {\r\n            // Creates validation controller after the form is ready\r\n            self.validationController = new bizagi.command.controllers.validation(self, self.validations);\r\n            // Creates action controller after the form is ready\r\n            self.actionController = new bizagi.command.controllers.action(self, self.actions);\r\n\r\n            // Resolve this deferred to start executing DOM dependant plugins\r\n            //self.configureMediaQueryHandlers();\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n\r\n        //Event to notify the native code the form will be showing a modal view \r\n        self.bind(\"modalViewDidAppear\", function () {\r\n            self.params.navigation.modalViewDidAppear();\r\n        });\r\n\r\n        //Event to notify the native code the form will be hiding a modal view \r\n        self.bind(\"modalViewDidDisappear\", function () {\r\n            self.params.navigation.modalViewDidDisappear();\r\n        });\r\n\r\n    },\r\n\r\n    /**\r\n     * Just to tablet devices is called after the form is in the dom\r\n     * in order to define if the form must be showed vertical\r\n     * @param {}\r\n     * @returns {}\r\n     */\r\n    /* configureMediaQueryHandlers: function () {\r\n        var self = this;\r\n        var mediaquery = window.matchMedia(\"(max-width: 600px)\");\r\n\r\n        function handleOrientationChange(mediaquery) {\r\n            if (mediaquery.matches) {\r\n                // mediaquery dentro de 600                \r\n                if (self.container) {\r\n                    $(\".ui-bizagi-render\", self.container).addClass(\"vertical\");\r\n                }\r\n            } else {\r\n                // mediaquery fuera de 600                \r\n                if (self.container) {\r\n                    $(\".ui-bizagi-render\", self.container).removeClass(\"vertical\");\r\n                }\r\n            }\r\n        }\r\n\r\n        mediaquery.addListener(handleOrientationChange);\r\n        handleOrientationChange(mediaquery);\r\n    }, */\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each container after processed\r\n     *\r\n     * @param {} container\r\n     * @returns {}\r\n     */\r\n    postRenderContainer: function (container) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        self._super(container);\r\n        var buttons = self.getButtons();\r\n\r\n        //disable overflow-scrolling touch untill the form is loaded QA-2178\r\n        if (bizagi.util.detectDevice() != \"tablet_android\") {\r\n            $(\".km-native-scroller\").css(\"-webkit-overflow-scrolling\", \"inherit\");\r\n        }\r\n\r\n        // Show warnings\r\n        if (!bizagi.util.isObjectEmpty(self.warnings)) {\r\n            var warningContainer = $('<ul class=\"ui-bizagi-form-warnings\"></ul>');\r\n            for (var key in self.warnings) {\r\n                warningContainer.append($('<li>' + key + '</li>'));\r\n            }\r\n\r\n            // Add button\r\n            $(\"<button>\" + \"X\" + \"</button>\").appendTo(warningContainer);\r\n\r\n            // Append to body \r\n            warningContainer.prependTo(self.container);\r\n            warningContainer.click(function () {\r\n                warningContainer.detach();\r\n            });\r\n        }\r\n\r\n        // Show errors\r\n        if (!bizagi.util.isObjectEmpty(self.errors)) {\r\n            var errorContainer = $('<ul class=\"ui-bizagi-form-errors\"></ul>');\r\n            for (var ekey in self.errors) {\r\n                errorContainer.append($('<li>' + ekey + '</li>'));\r\n            }\r\n\r\n            // Add button\r\n            $(\"<button>\" + \"X\" + \"</button>\").prependTo(errorContainer);\r\n\r\n            // Append to body \r\n            errorContainer.appendTo(self.container);\r\n            errorContainer.click(function () {\r\n                errorContainer.detach();\r\n            });\r\n\r\n            // Hide routing buttons when an error was found\r\n            $.each(properties.buttons, function (i, button) {\r\n                if (button.routing) {\r\n                    self.getButtons().eq(i).prop(\"disabled\", true);\r\n                }\r\n            });\r\n        }\r\n\r\n        //Set button length\r\n        var lengthButtons = (buttons) ? buttons.length : 0;\r\n\r\n        if (lengthButtons) {\r\n\r\n            $(document).data(\"auto-save\", \"auto-save\");\r\n\r\n            //bind event auto-save\r\n            $(document).unbind(\"save-form\").bind(\"save-form\", function (e, deferredSave) {\r\n                self.autoSaveEvents(deferredSave);\r\n            });\r\n\r\n            //bind event beforeunload\r\n            $(window).unbind('beforeunload').bind('beforeunload', function (e) {\r\n                var newData = {};\r\n                self.collectRenderValues(newData);\r\n\r\n                //if there are changes in the form show a message\r\n                if (!$.isEmptyObject(newData) && $(document).data('auto-save'))\r\n                    return bizagi.localization.getResource(\"confirmation-savebox-message2\");\r\n\r\n                return;\r\n            });\r\n\r\n        }\r\n\r\n        //enable overflow-scrolling touch to avoid black frame over the form QA-2178\r\n        if (bizagi.util.detectDevice() != \"tablet_android\") {\r\n            setTimeout(function () {\r\n                $(\".km-native-scroller\").css(\"-webkit-overflow-scrolling\", \"touch\");\r\n            }, 1000);\r\n        }\r\n\r\n    },\r\n    /**\r\n     * Auto Save Events\r\n     *\r\n     * @param {} deferredSave\r\n     * @param {} saveBox\r\n     * @returns {}\r\n     */\r\n    autoSaveEvents: function (deferredSave, saveBox) {\r\n        var self = this;\r\n        var data = {};\r\n\r\n        self.collectRenderValues(data);\r\n\r\n        if (!$.isEmptyObject(data)) {\r\n\r\n            $.when(bizagi.showSaveBox(bizagi.localization.getResource(\"confirmation-savebox-message1\"), \"Bizagi\", \"warning\")).done(function () {\r\n                self.saveForm();\r\n                deferredSave.resolve();\r\n            }).fail(function () {\r\n                deferredSave.resolve();\r\n            });\r\n\r\n        } else {\r\n            deferredSave.resolve();\r\n        }\r\n    },\r\n\r\n    internalSubmitForm: function (buttonProperties) {\r\n        var self = this;\r\n        // Assemble the actions\r\n        var actions = [];\r\n        var defer = $.Deferred();\r\n        var submitDataAction = null, executeButtonAction = null, performAction = null, checkpointAction = null,\r\n            commitAction = null;\r\n        var data;\r\n\r\n        // Fill data hash\r\n        if (buttonProperties.submitData || buttonProperties.executeRule || buttonProperties.createnewcase) {\r\n            // Collect data\r\n            data = self.collectRenderValuesForSubmit();\r\n        }\r\n\r\n        // Start asynchronous operation\r\n        $.when(self.startLoading()).done(function () {\r\n            $('html, body').animate({scrollTop: $('.ui-bizagi-loading-icon')}, 'slow');\r\n        });\r\n\r\n        // Prepare actions\r\n        if (buttonProperties.executeRule) {  // When the button has to execute any rule (MUST SUBMIT DATA BEFORE ALWAYS)\r\n\r\n            submitDataAction = self.dataService.submitData({\r\n                action: \"SUBMITDATA\",\r\n                data: data,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true\r\n            });\r\n            submitDataAction.tag = \"submitData\";\r\n\r\n            checkpointAction = self.prepareCheckpointAction(buttonProperties.id);\r\n\r\n            // Reset data because when an execute rule operation has been performed, it saved already all the data\r\n            data = {};\r\n            executeButtonAction = self.dataService.executeButton({\r\n                idRender: buttonProperties.id,\r\n                xpathContext: self.properties.xpathContext || \"\",\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true\r\n            });\r\n            executeButtonAction.tag = \"executeRule\";\r\n\r\n            commitAction = self.prepareCommitAction(buttonProperties.id);\r\n        }\r\n\r\n        if (buttonProperties.next || buttonProperties.back || buttonProperties.save || buttonProperties.createnewcase) {\r\n            // Verify transitions\r\n            if (self.transitions) {\r\n                var transitions = [];\r\n                $.each(this.activeTransitions, function (key, value) {\r\n                    (value) ? transitions.push(key) : \"\";\r\n                });\r\n\r\n                if (bizagi.util.countProps(transitions) == 0) {\r\n                    bizagi.showMessageBox(bizagi.localization.getResource(\"render-widget-complexgateway-path\"), bizagi\r\n                        .localization.getResource(\"render-widget-complexgateway-error\"), \"info\", false);\r\n                    self.endLoading();\r\n                    defer.reject();\r\n                    return defer.promise();\r\n                }\r\n            }\r\n\r\n            performAction = self.dataService.submitData({\r\n                action: buttonProperties.action,\r\n                forcePlanCompletion: buttonProperties.forcePlanCompletion,\r\n                data: data,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true,\r\n                transitions: transitions || \"\",\r\n                contexttype: self.properties.contextType,\r\n                surrogatekey: self.properties.surrogateKey\r\n            });\r\n\r\n            performAction.tag = \"performAction\";\r\n        }\r\n\r\n        if (executeButtonAction) {\r\n            actions.push(submitDataAction);\r\n\r\n            //Validates if the method CHECKPOINT is supported\r\n            if (checkpointAction) {\r\n                actions.push(checkpointAction);\r\n            }\r\n\r\n            actions.push(executeButtonAction);\r\n\r\n            ///Validates if the method COMMIT is supported\r\n            if (commitAction) {\r\n                actions.push(commitAction);\r\n            }\r\n\r\n            actions.push(executeButtonAction);\r\n        }\r\n\r\n        if (performAction) {\r\n            actions.push(performAction);\r\n        }\r\n\r\n        // Execute the batch\r\n        bizagi.chrono.initAndStart(\"submitForm-ajax\");\r\n\r\n        //Evaluate if there are deferreds to evaluate, like inline add in grid, that must send a ADDRELATIONWITHDATA before to savedata\r\n        var flowControlDeferred = new $.Deferred();\r\n        if (data && data.deferreds) {\r\n            $.when.apply(this, data.deferreds)\r\n                .done(function (response) {\r\n                    flowControlDeferred.resolve(response);\r\n                })\r\n                .fail(function () {\r\n                    flowControlDeferred.reject();\r\n                    console.log(\"Error: It was not possible resolve async actions on form \")\r\n                });\r\n        } else {\r\n            flowControlDeferred.resolve();\r\n        }\r\n\r\n        $.when(flowControlDeferred).done(function () {\r\n            bizagi.util.tablet.startLoading();\r\n            $.when(self.dataService.multiaction().execute({actions: actions})).done(function (responses) {\r\n                bizagi.chrono.stop(\"submitForm-ajax\");\r\n                // Find validations\r\n                var bHasValidations;\r\n                $.each(responses, function (i, response) {\r\n                    if (response.result.type == \"validationMessages\") {\r\n                        // Something went wrong, we gotta display messages in notifications grid\r\n                        self.addValidationMessage(response.result.messages);\r\n                        bHasValidations = true;\r\n                    }\r\n                });\r\n\r\n                if (!bHasValidations) {\r\n                    // Everything went ok .. succesfully response from the server\r\n                    if (!self.postProcessButton(responses, buttonProperties)) {\r\n                        return;\r\n                    }\r\n\r\n                    // After successfully response refresh the form\r\n                    if (buttonProperties.refresh) {\r\n                        self.refreshForm();\r\n                    }\r\n\r\n                    // If needs routing publish an event\r\n                    if (buttonProperties.routing) {\r\n                        self.triggerHandler(\"routing\", {\r\n                            idCase: self.params.idCase\r\n                        });\r\n                    }\r\n\r\n                    // Create case\r\n                    if (buttonProperties.createnewcase) {\r\n                        if (responses.length > 0) {\r\n                            self.triggerHandler(\"routing\", {\r\n                                idCase: responses[0].result.IdCase,\r\n                                caseNumber: responses[0].result.CaseNumber\r\n                            });\r\n                        }\r\n                    }\r\n                } else {\r\n                    if (buttonProperties.executeRule) {\r\n                        self.sendRollbackAction(buttonProperties.id);\r\n                    }\r\n                }\r\n\r\n                //Removes the nonSupportedMethods to prevent further iterations\r\n                delete self.nonSupportedMethods;\r\n\r\n                defer.resolve();\r\n            }).fail(function (_, _, response) {\r\n                if (buttonProperties.executeRule) {\r\n                    self.sendRollbackAction(buttonProperties.id);\r\n                }\r\n\r\n                if (response && response.error && (response.error.errorType === \"WaitForCompletionPlanException\" ||\r\n                    response.error.errorType === \"InvalidPlanStateException\" || response.error.errorType === \"CustomMessageException\")) {\r\n                    self.endLoading();\r\n                    $.when(bizagi.showConfirmationBox(bizagi.localization.getResource(response.error.message), null, false)).then(function () {\r\n                        return $.when(self.internalSubmitForm($.extend({}, buttonProperties, {forcePlanCompletion: true})));\r\n                    }).done(function () {\r\n                        defer.resolve();\r\n                    }).fail(function () {\r\n                        defer.reject();\r\n                    });\r\n                } else {\r\n                    self.failHandler({\"error\": typeof (response) === \"undefined\" ? bizagi.localization.getResource(\"workportal-general-error\") : response});\r\n                    defer.reject(response);\r\n                }\r\n            }).always(function () {\r\n                bizagi.util.tablet.stopLoading();\r\n            });\r\n        }).always(function () {\r\n            bizagi.util.tablet.stopLoading();\r\n        });\r\n        return defer.promise();\r\n    },\r\n\r\n    prepareCheckpointAction: function (id) {\r\n        return bizagi.util.validateFeatureSupport(\"commitRollbackActions\") ? this._super(id) : null;\r\n    },\r\n\r\n    prepareCommitAction: function (id) {\r\n        return bizagi.util.validateFeatureSupport(\"commitRollbackActions\") ? this._super(id) : null;\r\n    },\r\n\r\n    /**\r\n     * Retorna el pane donde se pintó la forma para facilitar navegacion de kendo\r\n     * @returns {*}\r\n     */\r\n    getPane: function () {\r\n        var self = this;\r\n        return self.pane;\r\n    },\r\n\r\n    /* TEMPLATE METHOD TO GET THE BUTTONS OBJECTS\r\n     ======================================================*/\r\n    getButtons: function () {\r\n        var self = this;\r\n\r\n        if (self.getParams() && (handler = self.getParams().getButtons))\r\n            handler(self);\r\n\r\n        return $(\".ui-bizagi-button-container :button\", self.container);\r\n    },\r\n\r\n    processButtons: function () {\r\n        var self = this;\r\n        var params = self.getParams();\r\n\r\n        //si no es con un if es con un publish\r\n        if (params && params.processButtons) {\r\n            var handler = params.processButtons;\r\n            handler(self);\r\n        }\r\n\r\n        var properties = self.properties;\r\n        var buttons = self.getButtons();\r\n\r\n        properties.buttons = self.buttons || buttons;\r\n\r\n        //to cache a submit Data Buttom if exist\r\n        self.saveButton = null;\r\n        self.nextButton = null;\r\n\r\n        //Set saveButton and nextButton if exist\r\n        for (var i = 0, length = properties.buttons.length; i < length; i++) {\r\n            if (properties.buttons[i].action == 'save') {\r\n                self.saveButton = properties.buttons[i];\r\n            } else if (properties.buttons[i].action == 'next') {\r\n                self.nextButton = properties.buttons[i];\r\n            }\r\n        }\r\n\r\n        var navigation = self.getNavigation();\r\n\r\n        if (typeof (navigation) !== \"undefined\") {\r\n            //si tiene un viewConteiner sera proque es una forma dentro de container de edicion\r\n            var view_container = self.getViewContainer();\r\n            if (typeof view_container !== \"undefined\") {\r\n                view_container.setNavigationButtons(self);\r\n            } else {\r\n                navigation.setNavigationButtons(self);\r\n            }\r\n        }\r\n\r\n        self._super();\r\n    },\r\n\r\n    /*\r\n     *   Refresh the current form\r\n     */\r\n    refreshForm: function (focus) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var params = self.getParams();\r\n        var deferred = $.Deferred();\r\n        var options;\r\n\r\n        focus = focus || self.getFocus();\r\n\r\n        // Normalize new focus structure if not present\r\n        if (focus && !focus.id) {\r\n            focus = {\r\n                id: focus\r\n            };\r\n        }\r\n\r\n        options = {\r\n            idCase: self.params.idCase || \"\",\r\n            idWorkitem: self.params.idWorkitem || \"\",\r\n            idTask: self.params.idTask || \"\",\r\n            focus: focus,\r\n            selectedTabs: self.getSelectedTabs(),\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            isRefresh: true,\r\n            action: self.getEndPointAction(),\r\n            idStartScope: self.properties.idStartScope || \"\",\r\n            navigation: params.navigation,\r\n            view_container: params.view_container\r\n        };\r\n\r\n        if (params.postRenderEdit || params.processButtons) {\r\n            options.isOfflineForm = self.params.isOfflineForm || false;\r\n            options.formsRenderVersion = self.params.formsRenderVersion || 0;\r\n            options.postRenderEdit = params.postRenderEdit;\r\n            options.processButtons = params.processButtons;\r\n            options.originalParams = params.originalParams || {};\r\n            options.getButtons = params.getButtons;\r\n        }\r\n\r\n        $(\".km-native-scroller\").css(\"-webkit-overflow-scrolling\", \"inherit\");\r\n\r\n        // Notify the refresh event so the consumer takes the decision about what to do\r\n        self.startLoading();\r\n        $.when(self.triggerHandler(\"refresh\", options)).done(function () {\r\n            self.endLoading();\r\n\r\n            setTimeout(function () {\r\n                $(\".km-native-scroller\").css(\"-webkit-overflow-scrolling\", \"touch\");\r\n            }, 1000);\r\n\r\n            deferred.resolve();\r\n        }).fail(function () {\r\n            self.endLoading();\r\n            deferred.reject();\r\n        });\r\n        return deferred.promise();\r\n    },\r\n\r\n    checkWidgetsData: function () {\r\n        var popupResponse = null;\r\n        if (bizagi.workportal.tablet.popup) {\r\n            if (bizagi.workportal.tablet.popup.instance) {\r\n                if (bizagi.workportal.tablet.popup.instance.getResponseValues) {\r\n                    popupResponse = bizagi.workportal.tablet.popup.instance.getResponseValues(bizagi.workportal.tablet.popup.instance.getResponseValuesParams);\r\n                    if (popupResponse === null) {\r\n                        bizagi.showMessageBox(bizagi.localization.getResource(\"workportal-widget-complexgateway-path\"),\r\n                            bizagi.localization.getResource(\"workportal-widget-complexgateway-error\"));\r\n                        return -1;\r\n                    } else {\r\n                        bizagi.workportal.tablet.popup.instance.dontClose = false;\r\n                        bizagi.workportal.tablet.popup.instance.close();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return popupResponse;\r\n    },\r\n\r\n    repaintComplexGateway: function () {\r\n        var self = this;\r\n        if (self.focus !== undefined) {\r\n            if (self.focus.idCaseObject !== undefined) {\r\n                if (self.focus.idCaseObject.isComplex !== undefined) {\r\n                    self.dataService.getWorkitems({\r\n                        idCase: self.focus.idCaseObject.idCase\r\n                    }).done(function (data) {\r\n                        if (data.workItems.length == 1) {\r\n                            if (data.workItems[0].taskType == \"ComplexGateway\") {\r\n                                var transitions = data.workItems[0].transitions;\r\n\r\n                                self.currentPopup = \"complexgateway\";\r\n                                $(document).triggerHandler(\"popupWidget\", {\r\n                                    widgetName: bizagi.workportal.widgets.widget.BIZAGI_WORKPORTAL_WIDGET_COMPLEXGATEWAY,\r\n                                    options: {\r\n                                        transitions: transitions,\r\n                                        sourceElement: \".ui-bizagi-form\",\r\n                                        insertAfter: \".ui-bizagi-form .ui-bizagi-button-container\",\r\n                                        height: 'auto',\r\n                                        offset: \"8 0\", //x y\r\n                                        activeScroll: false,\r\n                                        dontClose: true,\r\n                                        closed: function () {\r\n                                            self.currentPopup = null;\r\n                                        }\r\n                                    }\r\n                                });\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /* METHOD TO ADD WARNINGS TO THE FORM\r\n    ======================================================*/\r\n    addWarning: function (message) {\r\n        var self = this;\r\n        self.warnings[message] = message;\r\n    },\r\n\r\n    /* METHOD TO ADD ERRORS TO THE FORM\r\n    ======================================================*/\r\n    addError: function (message) {\r\n        var self = this;\r\n        self.errors[message] = message;\r\n    },\r\n\r\n    /*  Executes a single button action\r\n    ======================================================= */\r\n    processButton: function (buttonProperties) {\r\n        var self = this;\r\n        var deferred = $.Deferred();\r\n\r\n        // Disable routing button\r\n        if (!bizagi.util.isObjectEmpty(self.errors)) {\r\n            deferred.resolve();\r\n            if (bizagi.util.parseBoolean(buttonProperties.routing))\r\n                return deferred.promise();\r\n        }\r\n\r\n        // Call base\r\n        return this._super(buttonProperties);\r\n    },\r\n\r\n\r\n    getNavigation: function () {\r\n        var params = this.getFormContainer().getParams();\r\n        return params.navigation;\r\n    },\r\n\r\n    getViewContainer: function () {\r\n        var params = this.getFormContainer().getParams();\r\n        return params.view_container;\r\n    },\r\n\r\n    isFloatingButtonsEnabled: function () {\r\n        var navigation = this.getNavigation();\r\n        return navigation && navigation.isFloatingButtonsEnabled();\r\n    },\r\n\r\n    isFormButtonsEnabled: function () {\r\n        var navigation = this.getNavigation();\r\n        return navigation && navigation.isFormButtonsEnabled();\r\n    },\r\n\r\n    /**\r\n     *   Adds an overlay to the form, and sets a waiting message\r\n     *\r\n     *   @argument {bool} delay Apply delay\r\n     */\r\n    startLoading: function () {\r\n        bizagi.loading.start();\r\n    },\r\n\r\n    /*\r\n    *   Removes the overlay and restores the form edition\r\n    */\r\n    endLoading: function () {\r\n        bizagi.loading.stop();\r\n    },\r\n\r\n    dispose: function (params) {\r\n        var self = this;\r\n\r\n        // Active refresh on tablet\r\n        if (typeof (params) === \"undefined\" || (typeof (params.isRefresh) === \"undefined\" || params.isRefresh == false)) {\r\n            self._super();\r\n        }\r\n    },\r\n\r\n    failHandler: function (error) {\r\n        var self = this;\r\n        self._super(error);\r\n\r\n        var error_obj = {};\r\n        try {\r\n            error_obj = JSON.parse(error) || {};\r\n        } catch (e) {\r\n            error_obj = (error.length && error.length > 1) ? error[0] : error;\r\n        } finally {\r\n\r\n            //This double validation has the purpose to get the real error object from two different levels ( error.error or error.error.error )\r\n            if (error_obj.error) error_obj = error_obj.error;\r\n            if (error_obj.error) error_obj = error_obj.error;\r\n\r\n            //trigger the routing event in order to refresh the case\r\n            if (typeof error_obj.code !== \"undefined\" && error_obj.code === \"AUTH_ERROR\") {\r\n\r\n               /* $.notifier.add({\r\n                    class_name: \"error\",\r\n                    title: \"Error\",\r\n                    text: bizagi.localization.getResource(\"render-idle-expired-error\", \"Idle timer expired. For safety reasons this view will be refreshed automatically in 5 seconds. Note that any unsaved data is lost.\").replace(\"%s\", \"5\"),\r\n                    sticky: false,\r\n                    time: 5000\r\n                });*/\r\n\r\n                setTimeout(function () {\r\n                    self.triggerHandler(\"routing\", {\r\n                        idCase: self.params.idCase,\r\n                        idWorkitem: self.params.idWorkitem\r\n                    });\r\n                }, 5000);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Build the container html\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"form\");\r\n        var idCase = \"\";\r\n\r\n        // Render the form\r\n        var html = $.fasttmpl(template, {\r\n            buttons: self.buttons,\r\n            transitions: self.transitions,\r\n            uniqueId: properties.uniqueId,\r\n            helptext: properties.helpText,\r\n            mode: self.getMode(),\r\n            queryForm: self.getFormType() == \"queryForm\",\r\n            summaryForm: self.params.summaryForm || false,\r\n            globalForm: self.properties.displayAsReadOnly || false,\r\n            idCase: idCase,\r\n            displayName: self.params.displayName || idCase,\r\n            processPath: properties.processPath,\r\n            breadCrumb: properties.breadCrumb,\r\n            orientation: properties.orientation\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Configure actions to complex-gateway\r\n     */\r\n    configureComplexGateway: function () {\r\n        var self = this;\r\n        var complexGatewayContainer;\r\n        var form = self.container;\r\n\r\n        if (form.length > 1) {\r\n            $(form.children()).each(function () {\r\n                if ($(this).hasClass('.bz-complex-gateway'))\r\n                    complexGatewayContainer = this;\r\n            });\r\n        } else {\r\n            complexGatewayContainer = $(\".bz-complex-gateway\", form);\r\n        }\r\n\r\n        // activeTransitions is used to store ids of activities in Complex Gateway\r\n        self.activeTransitions = {};\r\n\r\n        // Set events for complex gateway interface\r\n        $(\".bz-checkbox__input\", complexGatewayContainer).on(\"click\", function () {\r\n            var $selected = $(this);\r\n            var transitionId = $selected.data(\"value\") || \"\";\r\n\r\n            if (typeof self.activeTransitions[transitionId] == \"undefined\") {\r\n                self.activeTransitions[transitionId] = false;\r\n            }\r\n\r\n            self.activeTransitions[transitionId] = $selected.is(':checked') || false;\r\n\r\n        });\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi tablet Panel Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n */\r\n\r\n// Extends from container tablet base\r\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.panel\", bizagi.rendering.panel.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.panel.extend(\"bizagi.rendering.tablet.panel\", {}, {});\r\n","/**\r\n *   Name: Bizagi Tablet ContentPanel Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the content panel class to adjust to tablet devices\r\n */\r\n\r\n// Extends from container tablet base\r\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.contentPanel\", bizagi.rendering.contentPanel.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.contentPanel.extend(\"bizagi.rendering.tablet.contentPanel\", {}, {});\r\n","/*\r\n*   Name: Bizagi tablet Nested Form Extension\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define a nested form container class for tablet devices\r\n*/\r\n\r\n// Extends from panel tablet base\r\nbizagi.rendering.tablet.panel.extend(\"bizagi.rendering.tablet.nestedForm\", {}, {\r\n\r\n});","/**\r\n *   Name: Bizagi Tablet Tab Container Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n */\r\n\r\n// Extends from container tablet base\r\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.tab\", bizagi.rendering.tab.prototype);\r\n// Auto extend\r\nbizagi.rendering.tablet.tab.extend(\"bizagi.rendering.tablet.tab\", {}, {\r\n\r\n    /* POST RENDER CONTAINER ACTIONS\r\n    =================================================*/\r\n    postRenderContainer: function (container) {\r\n        var self = this;\r\n\r\n        this._super(container);\r\n\r\n        container.material_bizagi_tabs({\r\n            direction: this.properties.orientation,\r\n            active_index_tab: this.activeTab\r\n        }).on(\"updateActive\", function (ev, info) {\r\n            ev.stopPropagation();\r\n\r\n            self.setActiveTab(info.index);\r\n\r\n        });\r\n\r\n        $(\"> .bz-tabs > .bz-tab\", container).rippleEffect();\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Panel Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n */\r\n\r\n// Extends from container tablet base\r\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.tabItem\", bizagi.rendering.tabItem.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.tabItem.extend(\"bizagi.rendering.tablet.tabItem\", {}, {\r\n    /**\r\n     * Change selected item\r\n     *\r\n     * @param {} argument\r\n     * @returns {}\r\n     */\r\n    setAsActiveContainer: function (argument) {\r\n        var self = this;\r\n\r\n        $.when(self.ready()).done(function () {\r\n            var tabItem = $(\"[data-reference='#ui-bizagi-tab-\" + self.properties.id + \"']\", self.parent.tabs);\r\n\r\n            tabItem.css(\"display\", \"\");\r\n            tabItem.click();\r\n        });\r\n    },\r\n    /* \r\n    *   Focus on container\r\n    */\r\n    focus: function () {\r\n        // Activate the tab if it hasn't been loaded\r\n        this.activate();\r\n\r\n        // Set this tab as an active container\r\n        this.setAsActiveContainer();\r\n\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     *  Hides / Show container\r\n     *\r\n     * @param {} argument\r\n     * @returns {}\r\n     */\r\n    changeVisibility: function (argument) {\r\n        var self = this;\r\n\r\n        // Store in properties\r\n        self.properties.visible = bizagi.util.parseBoolean(argument);\r\n\r\n        $.when(self.ready()).done(function () {\r\n            var tabItem = $(\"[data-reference='#ui-bizagi-tab-\" + self.properties.id + \"']\", self.parent.tabs);\r\n            var activeTab = self.parent.container.material_bizagi_tabs(\"getActiveTab\");\r\n\r\n            // Hide - show the render\r\n            if (self.properties.visible) {\r\n                self.container.css(\"display\", \"\");\r\n                tabItem.css(\"display\", \"\");\r\n\r\n\r\n                if (self.properties.counter === activeTab.index) {\r\n                    tabItem.css(\"display\", \"\");\r\n                    self.setAsActiveContainer();\r\n                } else {\r\n                    self.container.css(\"display\", \"none\");\r\n                }\r\n            } else {\r\n                self.container.css(\"display\", \"none\");\r\n                tabItem.css(\"display\", \"none\");\r\n\r\n                // If we are focus in the same tab is going to be invisible\r\n                activeTab = self.parent.container.material_bizagi_tabs(\"getActiveTab\");\r\n\r\n                if (self.properties.counter === activeTab.index) {\r\n                    self.parent.container.material_bizagi_tabs(\"moveToNextTab\");\r\n                } else {\r\n                    self.parent.container.material_bizagi_tabs(\"refreshPositions\");\r\n                }\r\n            }\r\n        });\r\n    }\r\n});\r\n","/*\r\n*   Name: BizAgi tablet Horizontal Container Extension\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will redefine the horizontal container class to adjust to tablet devices\r\n*/\r\n\r\n// Extends from container tablet base\r\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.horizontal\", bizagi.rendering.horizontal.prototype);\r\n// Auto extend\r\nbizagi.rendering.tablet.horizontal.extend(\"bizagi.rendering.tablet.horizontal\", {}, {\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi tablet Layout Extension\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will redefine the layout class to adjust to tablet devices\r\n*/\r\n\r\n// Extends from container desktop base\r\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.layout\", bizagi.rendering.layout.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.layout.extend(\"bizagi.rendering.tablet.layout\", {}, {\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi Tablet Accordion Container Extension\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will redefine the container class to adjust to tablet devices\r\n*/\r\n\r\n// Extends from container tablet base\r\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.accordion\", bizagi.rendering.accordion.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.accordion.extend(\"bizagi.rendering.tablet.accordion\", {}, {\r\n\r\n})","/*\r\n*   Name: BizAgi Tablet Panel Extension\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will redefine the container class to adjust to tablet devices\r\n*/\r\n\r\n// Extends from container tablet base\r\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.accordionItem\", bizagi.rendering.accordionItem.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.accordionItem.extend(\"bizagi.rendering.tablet.accordionItem\", {}, {\r\n\r\n\r\n    /* \r\n    *   Change selected item \r\n    */\r\n    setAsActiveContainer: function (argument) {\r\n        \r\n    },\r\n\r\n    /* \r\n    *   Focus on container\r\n    */\r\n    focus: function () {        \r\n        this.setAsActiveContainer();\r\n\r\n        // Call base\r\n        this._super();\r\n    }        \r\n});\r\n","/*\r\n *   Name: Bizagi Tablet Group Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the group class to adjust to tablet devices\r\n */\r\n\r\n// Extends from container tablet base\r\nbizagi.rendering.tablet.container.extend(\"bizagi.rendering.tablet.group\", bizagi.rendering.group.prototype);\r\n// Auto extend\r\nbizagi.rendering.tablet.group.extend(\"bizagi.rendering.tablet.group\", {}, {\r\n\r\n    /**\r\n    * Method to customize the container's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        $(\">h5.bz-collapsible__header\", self.container).bind(\"click\", function () {\r\n            $(self.container).toggleClass(\"bz-collapsible--collapsed\");\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each container after processeds\r\n     * @param {} group      \r\n     */\r\n    postRenderContainer: function (group) {\r\n        // Call base\r\n        this._super(group);\r\n        if (this.properties.collapse) {\r\n            this.collapse();\r\n        }\r\n    },\r\n\r\n    /**\r\n    * Check if group its open\r\n    * \r\n    * @return boolean\r\n    */\r\n    isOpen: function () {\r\n        return this.container.hasClass(\"bz-collapsible--collapsed\") ? false : true;\r\n    },\r\n\r\n    /**\r\n     * Focus on container     \r\n     */\r\n    focus: function () {\r\n        // Expand container\r\n        this.expand();\r\n\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     * Expands group container \r\n     * @returns {} \r\n     */\r\n    expand: function () {\r\n        if (!this.isOpen()) {\r\n            $(\">h5.bz-collapsible__header\", this.container).trigger(\"click\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Collapses group container \r\n     * @returns {} \r\n     */\r\n    collapse: function () {\r\n        if (this.isOpen()) {\r\n            $(\">h5.bz-collapsible__header\", this.container).trigger(\"click\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Expands or collapse the container from actions\r\n     * @param {} argument      \r\n     */\r\n    toogleContainer: function (argument) {\r\n        if (argument) {\r\n            this.expand();\r\n        } else {\r\n            this.collapse();\r\n        }\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi tablet Search Form Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n */\r\n\r\nbizagi.rendering.tablet.form.extend(\"bizagi.rendering.tablet.searchForm\", bizagi.rendering.searchForm.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.searchForm.extend(\"bizagi.rendering.tablet.searchForm\", {}, {\r\n    /*\r\n    *   Render the results of the query\r\n    *   Resolved in each device\r\n    */\r\n    renderResult: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Creates grid definition\r\n        var data = {};\r\n        data.properties = {\r\n            displayName: self.getResource(\"render-search-advanced-results-label\"),\r\n            type: \"grid\",\r\n            xpath: \"searchForm\" + properties.id,\r\n            id: properties.id,\r\n            skipInitialLoad: true,\r\n            rowsPerPage: 10,\r\n            visible: false,\r\n            sortBy: properties.sortBy,\r\n            sortOrder: properties.sortOrder,\r\n            overrideGetRemoteData: function (params) {\r\n                return self.getRemoteData(params);\r\n            }\r\n        };\r\n\r\n        data.elements = [];\r\n\r\n        // Creates columns\r\n        var columns = properties.columns;\r\n        $.each(columns, function (i) {\r\n            var column = {\r\n                render: {}\r\n            };\r\n\r\n            column.render.properties = {\r\n                displayName: columns[i].caption,\r\n                xpath: columns[i].xpath,\r\n                editable: false\r\n            };\r\n\r\n            $.extend(column.render.properties, self.parseAdditionalProperties(columns[i].dataType));\r\n\r\n            // Next conditional added to print only columns and not labels\r\n            // if type = label then column is not rendered on the results table\r\n            if (columns[i].dataType == 0)\r\n                column.render.properties.columnVisible = false;\r\n\r\n            // if column is number or monetary push allowDecimals property\r\n            if (columns[i].dataType == 7 || columns[i].dataType == 8)\r\n                column.render.properties.allowDecimals = columns[i].allowDecimals;\r\n\r\n            // if column is real or float set allowDecimals property to true\r\n            if (columns[i].dataType == 10 || columns[i].dataType == 11)\r\n                column.render.properties.allowDecimals = true;\r\n\r\n            // if column is date push showtime property\r\n            if (columns[i].dataType == 12)\r\n                column.render.properties.showTime = columns[i].showTime;\r\n\r\n            data.elements.push(column);\r\n        });\r\n\r\n        var grid = self.renderFactory.getRender({\r\n            type: \"grid\",\r\n            data: data,\r\n            parent: self,\r\n            mode: self.getMode()\r\n        });\r\n\r\n        grid.properties.inlineAdd = false;\r\n        grid.properties.allowDelete = false;\r\n        grid.properties.allowAdd = false;\r\n        grid.properties.allowEdit = false;\r\n\r\n        // Saves reference\r\n        self.resultsGrid = grid;\r\n\r\n        return grid.render();\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize each container after processed\r\n    */\r\n    postRenderContainer: function (container) {\r\n        var self = this;\r\n        var searchCriteria = container.find(\".bz-container__search-criteria\");\r\n        var results = container.find(\".bz-container__search-results\");\r\n        var childrenElements = searchCriteria.children();\r\n        var mode = self.getMode();\r\n\r\n        // Process children elements\r\n        self.container = container;\r\n        $.each(childrenElements, function (i, childElement) {\r\n            childElement = $(childElement);\r\n            var id = Number(childElement.data(\"unique-id\"));\r\n            if (id) {\r\n                var child = self.childrenHash[id];\r\n                if (child) {\r\n                    var type = child.getElementType();\r\n                    if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER) child.postRenderElement(childElement);\r\n                    if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) child.postRenderContainer(childElement);\r\n                }\r\n            }\r\n        });\r\n\r\n        // Process result\r\n        var grid = $(results.children()[0]);\r\n        self.resultsGrid.postRenderElement(grid);\r\n\r\n        // Apply handlers\r\n        if (mode == \"execution\") {\r\n            self.configureHandlers();\r\n        }\r\n\r\n    \t// Configure view\r\n        if (mode == \"design\") {\r\n            self.configureDesignView();\r\n        }\r\n\r\n        // Configure view\r\n        if (mode == \"layout\") {\r\n\r\n            self.configureDesignView();\r\n            self.configureLayoutView();\r\n        }\r\n\r\n    },\r\n\r\n    /*\r\n    *   Customize the container's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n\r\n        // Saves reference\r\n        self.criteriaContainer = $(\".bz-container__search-criteria\", self.container);\r\n        self.resultsContainer = $(\".bz-container__search-results\", self.container);\r\n\r\n        // Bind to grid row select event\r\n        self.resultsGrid.bind(\"rowSelected\", function (e, ui) {\r\n            if (self.properties.searchParams.hasOwnProperty(\"multiSelect\")) {\r\n                self.trigger(\"multiSelect\", ui);\r\n            } else {\r\n                // Trigger event to bubble up to main container\r\n                self.trigger(\"instanceSelected\", ui);\r\n            }\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Refresh the result panel, making it to query data with current criteria\r\n    */\r\n    refreshResults: function () {\r\n        var self = this;\r\n\r\n        self.trigger(\"instancerefresh\");\r\n        self.resultsGrid.refresh();\r\n    },\r\n\r\n    /*\r\n    * Method added for IPAD version. Before showing search results form\r\n    */\r\n    onSearchFinished: function () {\r\n        var self = this;\r\n\r\n        if (!self.properties.deviceMaxRecordsExceeded) {\r\n\r\n            // Next line returns visibility with the results of the search\r\n            self.resultsGrid.changeVisibility(true);\r\n\r\n            if (self.properties)\r\n                if (self.properties.records == 0) {\r\n                    $(\".bz-container__search-results label\", self.container).hide();\r\n                } else {\r\n                    $(\".bz-container__search-results label\", self.container).show();\r\n                }\r\n        }\r\n    }\r\n});\r\n","/*\r\n*   Name: Bizagi Tablet Render Text Extension\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will redefine the text render class to adjust to tablet devices\r\n*/\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.text\", bizagi.rendering.text.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.text.extend(\"bizagi.rendering.tablet.text\", {}, {\r\n    \r\n    //#region Side effects funtions\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed         \r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n        \r\n        // Set the default maxlenght for the input\r\n        if (this.properties.maxLength > 0) {\r\n            this.input.attr('maxlength', this.properties.maxLength);\r\n        }\r\n    },\r\n\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"text-readOnly\");\r\n        var value = this.getValue();\r\n        value = (typeof value !== \"undefined\" && value !== null) ? bizagi.util.sanitizeHTML(value) : \"\";\r\n        \r\n        var data = {\r\n            value: value,\r\n            editable: this.properties.editable\r\n        };\r\n\r\n        return $.fasttmpl(template, data);\r\n    },\r\n    \r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value     \r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n        value = this.validateValue((typeof (decodedValue) == \"string\" ? decodedValue : \"\"), self.properties.maxLength);\r\n\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n\r\n        if (value) {\r\n            value = $.br2nl(value).replaceAll('\\\\n', '\\n') ;            \r\n        }\r\n\r\n       // Set value in input           \r\n        if (self.properties.editable){                   \r\n            self.input.val(value);\r\n        } else {\r\n            $(\".bz-text-readonly\", self.getControl()).html(bizagi.util.sanitizeHTML(value));\r\n        }   \r\n    },\r\n\r\n    attachRetypeDouble: function () {\r\n        var self = this;\r\n        var element = self.element;\r\n\r\n        var input = $(\"input\", element);\r\n        if (!input || input.length === 0) return;\r\n\r\n        // Apply blur handler to check value\r\n        input.blur(function () {\r\n            var control = $(this);\r\n            self.retypeDouble(control);\r\n        });\r\n    },\r\n\r\n    retypeDouble: function (control) {\r\n        var self = this;\r\n        var currentValue = control.val();\r\n        var isVisible = $(control).attr(\"type\") !== \"hidden\" && $(control).css(\"display\") !== \"none\" && $(control).css(\"visibility\") !== \"hidden\";\r\n\r\n        if (isVisible) {\r\n            if (!control.data(\"oldValue\") || $(this).data(\"oldValue\") === \"\") {\r\n\r\n                // Check that there is something in the value or if a value has already been set\r\n                if (currentValue === \"\" || currentValue === control.attr(\"newValue\")) return;\r\n\r\n                self.createTooltip(control, currentValue, self.getResource(\"render-number-retype\"))\r\n\r\n            } else {\r\n                // Check that there is something in the value\r\n                if (currentValue === \"\") return;\r\n\r\n                if (currentValue !== control.data(\"oldValue\")) {\r\n                    self.setValue(\"\");\r\n\r\n                    self.createTooltip(control, \"\", self.getResource(\"render-text-retype-error\"))\r\n                } else {\r\n\r\n                    control.data(\"newValue\", currentValue);\r\n                    control.data(\"oldValue\", \"\");\r\n\r\n                    // Destroy tooltips\r\n                    control.tooltip(\"destroy\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    getElementsToStylize: function ($context) {        \r\n        return this.properties.editable ? $(\"input\", $context) : $(\".bz-text-readonly\", $context); \r\n    },\r\n    //#endregion Side effects funtions\r\n      \r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Text Extension\r\n *   Author: UI Forms Team\r\n *   Comments: Extended text implementation\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.extendedText\", bizagi.rendering.extendedText.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.extendedText.extend(\"bizagi.rendering.tablet.extendedText\", {\r\n    minLines: 2,\r\n    maxLines: 8,\r\n    maxCharactersToShow: 200\r\n}, {\r\n\r\n    //#region Side effects funtions\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        self._super();        \r\n        self.textarea = self.getControl().find(\"textarea\");        \r\n        if (self.textarea) self.textarea.css({resize: \"vertical\"});        \r\n    },\r\n\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n        var maxLines = this.properties.maxLines;\r\n        this.properties.maxLines = maxLines > this.Class.maxLines ? this.Class.maxLines : (maxLines < this.Class.minLines ? this.Class.minLines : maxLines);\r\n\r\n        // Check if offline forms is supported\r\n        this.isOfflineForm = bizagi.util.isOfflineForm({context: this});\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"extendedText-readOnly\");\r\n        var value = this.getValue();\r\n        value = (typeof value !== \"undefined\" && value !== null) ? bizagi.util.sanitizeHTML(value) : \"\";\r\n        var showChar = this.Class.maxCharactersToShow;\r\n\r\n        var startString = value.substr(0, showChar);\r\n        var endString = value.substr(showChar - 1, value.length - showChar);\r\n\r\n        var data = {\r\n            \"value\": value,\r\n            \"startString\": startString,\r\n            \"endString\": endString\r\n        };\r\n\r\n        return $.fasttmpl(template, data);\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the redered control\r\n     * @param {} value\r\n     */\r\n    setDisplayValue: function(value) {\r\n       var self = this;\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n        value = self.validateValue(typeof (decodedValue) == \"string\" ? decodedValue : \"\", self.properties.maxLength);\r\n\r\n        // Call base        \r\n        self.setValue(value, false);\r\n\r\n        if (value) {\r\n            value = $.br2nl(value).replaceAll('\\\\n', '\\n') ;            \r\n        }\r\n        \r\n        // Set value in input\r\n        if (self.properties.editable){   \r\n            self.textarea.val(value);\r\n        } else {\r\n            $(\".bz-textarea-readonly\", self.getControl()).html(bizagi.util.sanitizeHTML(value));\r\n        }        \r\n    },\r\n\r\n    /**\r\n     * Method to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super();\r\n\r\n        // Define max length of element\r\n        if (self.properties.maxLength > 0) {\r\n            self.textarea.attr(\"maxlength\", self.properties.maxLength);\r\n            self.actualMaxLength = self.properties.maxLength;\r\n        }\r\n        $(self.textarea).bind(\"focus keyup paste\", function (e) {\r\n            if (e.which === 8 || e.which === 46) {\r\n                var currentRow = self.textarea.prop(\"rows\");\r\n                if (currentRow > self.properties.maxLines) {\r\n                    self.textarea.prop(\"rows\", self.properties.maxLines);\r\n                }\r\n            }\r\n            self.updateTextareaSize(this);\r\n        });\r\n\r\n        $(self.textarea).bind(\"blur\", function (e) {\r\n            self.textarea.prop(\"rows\", self.properties.maxLines);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sets the functions when the control is readonly\r\n     */\r\n    configureHandlersReadOnly: function () {\r\n        var self = this;\r\n\r\n        var $control = this.getControl();\r\n        $(\".bz-textarea-readonly\", $control).on(\"click\", \".bz-read-more\", function (e) {\r\n            if ($(e.delegateTarget).hasClass(\"bz-textarea-readonly--active\")) {\r\n                $(e.delegateTarget).removeClass(\"bz-textarea-readonly--active\");\r\n                $(this).html(self.getResource(\"workportal-project-discussion-comment-viewmore\"));\r\n            } else {\r\n                $(e.delegateTarget).addClass(\"bz-textarea-readonly--active\");\r\n                $(this).html(self.getResource(\"workportal-project-discussion-comment-viewless\"));\r\n            }\r\n            return false;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Changes control's height when it's auto extended\r\n     * @param {Object} control HTML Object          \r\n     */\r\n    updateTextareaSize: function (textarea) {\r\n        if (this.properties.autoExtend) {\r\n            var currentRows = $(textarea).prop(\"rows\");\r\n            if (textarea.scrollHeight > textarea.offsetHeight && currentRows >= this.Class.minLines && currentRows < this.Class.maxLines) {\r\n                //Extend the rows\r\n                $(textarea).prop(\"rows\", (currentRows + 1));\r\n                this.updateTextareaSize(textarea);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Handler of retype double actions\r\n     */\r\n    attachRetypeDouble: function () {\r\n        var self = this;\r\n        var element = self.element;\r\n\r\n        var input = $(\"input, textarea\", element);\r\n        if (!input || input.length === 0) return;\r\n\r\n        // Apply blur handler to check value\r\n        input.blur(function () {\r\n            var control = $(this);\r\n            var previousValue = self.previousValue;\r\n            var value = self.value;\r\n\r\n            if (previousValue != null && value != previousValue) {\r\n                if ($(this).data(\"newValue\") != undefined && control.val() != $(this).data(\"newValue\")) {\r\n                    $(this).data().newValue = undefined;\r\n                }\r\n            }\r\n\r\n            self.retypeDouble(control);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Handler of retype double actions\r\n     */\r\n    retypeDouble: function (control) {\r\n        var self = this;\r\n        var currentValue = control.val();\r\n        var isVisible = $(control).attr(\"type\") !== \"hidden\" && $(control).css(\"display\") !== \"none\" && $(control).css(\"visibility\") !== \"hidden\";\r\n\r\n        if (isVisible) {\r\n\r\n            if (!control.data(\"oldValue\") || $(this).data(\"oldValue\") === \"\") {\r\n\r\n                // Check that there is something in the value or if a value has already been set\r\n                if (currentValue === \"\" || currentValue === control.attr(\"newValue\")) return;\r\n\r\n                self.createTooltip(control, currentValue, self.getResource(\"render-number-retype\"))\r\n\r\n            } else {\r\n                // Check that there is something in the value\r\n                if (currentValue == \"\") return;\r\n\r\n                if (currentValue !== control.data(\"oldValue\")) {\r\n                    self.setValue(\"\");\r\n\r\n                    self.createTooltip(control, \"\", self.getResource(\"render-text-retype-error\"))\r\n                } else {\r\n                    control.data(\"newValue\", currentValue);\r\n                    control.data(\"oldValue\", \"\");\r\n\r\n                    // Destroy tooltips\r\n                    control.tooltip(\"destroy\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n     /**\r\n     * Gets jQuery Object to stylize\r\n     * @param {jQuery Object} $context jQuery Object          \r\n     */\r\n    getElementsToStylize: function ($context) {\r\n        return this.properties.editable ? $(\"textarea\", $context) : $(\".bz-textarea-readonly\", $context); \r\n    },\r\n\r\n    //#endregion Side effects funtions\r\n});","/**\r\n *   Name: Bizagi Tablet Render Label Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the label render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.label\", bizagi.rendering.label.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.label.extend(\"bizagi.rendering.tablet.label\", {}, {});","/**\r\n *   Name: Bizagi Tablet Render Number Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the number render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.number\", bizagi.rendering.number.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.number.extend(\"bizagi.rendering.tablet.number\", {}, {\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"number\");\r\n\r\n        return $.fasttmpl(template, {\r\n            value: self.getDisplayValue(),\r\n            editable: self.properties.editable,\r\n            type: \"text\",\r\n            isDesign: self.getMode() !== \"execution\"\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self.setValue(value, false);\r\n\r\n        // Set value in input\r\n        if (value != null && self.properties.editable) {\r\n            self.numericInput.val(value);\r\n\r\n            self.value = self.properties.value = value;\r\n\r\n            // Formats the input\r\n            self.executeFormatCurrencyPlugin();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Retype function\r\n     */\r\n    attachRetypeDouble: function () {\r\n        var self = this;\r\n        var element = self.element;\r\n\r\n        var input = $(\"input\", element);\r\n        if (!input || input.length === 0) return;\r\n\r\n        // Apply blur handler to check value\r\n        input.blur(function () {\r\n            var control = $(this);\r\n            var previousValue = self.previousValue;\r\n            var value = self.value;\r\n            var typeControl = self.parent.properties.type;\r\n\r\n            if (typeControl === \"grid\") {\r\n                if (previousValue != null && value !== previousValue) {\r\n                    if ($(this).data(\"newValue\") !== undefined && control.val() !== $(this).data(\"newValue\"))\r\n                        $(this).data().newValue = undefined;\r\n                }\r\n\r\n                self.retypeDouble(control);\r\n            } else {\r\n                self.retypeDouble(control);\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Retype function\r\n     * @param control\r\n     */\r\n    retypeDouble: function (control) {\r\n        var self = this;\r\n        var currentValue = control.val();\r\n        var isVisible = $(control).attr(\"type\") !== \"hidden\" && $(control).css(\"display\") !== \"none\" &&\r\n            $(control).css(\"visibility\") !== \"hidden\";\r\n\r\n        if (isVisible && $(this).data(\"newValue\") == undefined) {\r\n\r\n            if (!control.data(\"oldValue\") || $(this).data(\"oldValue\") === \"\") {\r\n\r\n                // Check that there is something in the value or if a value has already been set\r\n                if (currentValue === \"\" || currentValue === control.attr(\"newValue\")) return;\r\n\r\n                self.createTooltip(control, currentValue, self.getResource(\"render-number-retype\"))\r\n\r\n            } else {\r\n                // Check that there is something in the value\r\n                if (currentValue === \"\") return;\r\n\r\n                if (currentValue !== control.data(\"oldValue\")) {\r\n                    self.setValue(\"\");\r\n\r\n                    self.createTooltip(control, \"\", self.getResource(\"render-text-retype-error\"))\r\n                } else {\r\n\r\n                    control.data(\"newValue\", currentValue);\r\n                    control.data(\"oldValue\", \"\");\r\n\r\n                    // Destroy tooltips\r\n                    control.tooltip(\"destroy\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Context to apply styles\r\n     * @param context\r\n     * @returns {jQuery|HTMLElement}\r\n     */\r\n    getElementsToStylize: function ($context) {\r\n        return $(\"input\", $context); \r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Money Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the money render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.money\", bizagi.rendering.number.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.money.extend(\"bizagi.rendering.tablet.money\", bizagi.rendering.money.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.money.extend(\"bizagi.rendering.tablet.money\", {}, {\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"number\");\r\n\r\n        return $.fasttmpl(template, {\r\n            value: self.getDisplayValue(),\r\n            editable: self.properties.editable,\r\n            type: \"text\",\r\n            isDesign: self.getMode() !== \"execution\"\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self.setValue(value, false);\r\n\r\n        // Set value in input\r\n        if (value !== undefined && value !== null && self.properties.editable) {\r\n            self.numericInput.val(value);\r\n\r\n            // Formats the input\r\n            self.executeFormatCurrencyPlugin();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Context to apply styles\r\n     * @param context\r\n     * @returns {jQuery|HTMLElement}\r\n     */\r\n    getElementsToStylize: function ($context) {\r\n        return $(\"input\", $context); \r\n    }\r\n});\r\n","/*\r\n *   Name: Bizagi Rendering Tablet numberScientificNotation\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a base class to define the Scientific number notation\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.numberScientificNotation\", bizagi.rendering.numberScientificNotation.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.numberScientificNotation.extend(\"bizagi.rendering.tablet.numberScientificNotation\", {}, {    \r\n\r\n    /*\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        self.inputDisplay = $('input', control).first();\r\n        self.numericInput = self.input = $('input', control).last();\r\n\r\n        // Add numeric plugin to avoid invalid keystrokes\r\n        self.numericInput.numericSN(self.properties.decimalSymbol);\r\n\r\n        // Attach Format Currency Plugin to format the input\r\n        self.attachFormatSientificNotation();\r\n\r\n    },\r\n\r\n    setDisplayValue: function(value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var value = bizagi.util.scientificNotationFormat(value, properties.decimalSymbol, 38);\r\n        var displayValue = bizagi.util.scientificNotationFormat(value, properties.decimalSymbol, 20);\r\n\r\n\r\n        this._super(displayValue);\r\n\r\n        // Set value in input\r\n        if (value != null && properties.editable) {\r\n            self.numericInput.val(value);\r\n            self.inputDisplay.val(displayValue);\r\n        }\r\n\r\n    },\r\n\r\n    attachFormatSientificNotation: function () {\r\n        var self = this;\r\n\r\n        self.inputDisplay.focus(function(){\r\n            $(this).val(self.getDisplayValue());\r\n        });\r\n\r\n        // Attach events\r\n        self.inputDisplay.blur(function () {\r\n            if (typeof (self.getFormContainer().validationController) == \"undefined\") self.getFormContainer().validationController = new bizagi.command.controllers.validation(self.getFormContainer(), self.validations);\r\n\r\n            var scientificNotationNumber = bizagi.util.scientificNotationFormat(self.inputDisplay.val(), self.properties.decimalSymbol,  38);\r\n            var scientificNotationNumberDisplay = bizagi.util.scientificNotationFormat(self.inputDisplay.val(), self.properties.decimalSymbol,  20);\r\n\r\n            self.numericInput.val(scientificNotationNumber);\r\n            self.inputDisplay.val(scientificNotationNumberDisplay);\r\n            // Updates internal value\r\n            self.setValue(scientificNotationNumber);\r\n        });\r\n    }\r\n});","/**\r\n *   Name: Bizagi Tablet Render Date Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the Date render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.date\", bizagi.rendering.date.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.date.extend(\"bizagi.rendering.tablet.date\", {\r\n    MAX_YEARS_DISPLAY: 100\r\n}, {\r\n\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var value = this.getFormattedDate(this.getValue(), this.properties.showTime, true)\r\n        value = bizagi.util.dateFormatter.formatDate(value, this.properties.fullFormat);\r\n        var data = {value: value, editable: this.properties.editable};\r\n        var template = this.renderFactory.getTemplate(\"readonly\");\r\n        return $.fasttmpl(template, data);\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this.input = $(\"input\", this.getDateControl());\r\n    },\r\n\r\n    /**\r\n     * To configure the mobiscroll plugin\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n        this.input = $(\"input\", this.getDateControl());\r\n    },\r\n\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var controlElements = self.properties.showTime ? [\"calendar\", \"time\"] : [\"calendar\"];\r\n\r\n        var defaultDateControl = self.getFormattedDate(self.properties.value, self.properties.showTime, true);\r\n        var minDateControl = self.getFormattedDate(self.properties.minValue, self.properties.showTime, false);\r\n        var maxDateControl = self.getFormattedDate(self.properties.maxValue, self.properties.showTime, false);\r\n\r\n        var timeFormat = self.properties.showTime ? self.getTimeFormat() : \"\";\r\n\r\n        // Adds a gap of years to show if the user doest not include min years\r\n        if (isNaN(Date.parse(minDateControl))) {\r\n            minDateControl = new Date();\r\n            minDateControl.setFullYear(minDateControl.getFullYear() - self.Class.MAX_YEARS_DISPLAY);\r\n            minDateControl.setHours(0, 0, 0, 0);\r\n        }\r\n\r\n        // Adds a gap of years to show if the user doest not include min years\r\n        if (isNaN(Date.parse(maxDateControl))) {\r\n            maxDateControl = new Date();\r\n            maxDateControl.setFullYear(maxDateControl.getFullYear() + self.Class.MAX_YEARS_DISPLAY);\r\n            maxDateControl.setHours(23, 59, 59);\r\n        }\r\n\r\n        $(\".bz-input-icon\", this.getControl()).mobiscroll().calendar({\r\n            mode: \"mixed\", // Specify scroller mode like: mode: 'mixed' or omit setting to use default\r\n            display: \"bottom\", // Specify display mode like: display: 'bottom' or omit setting to use default\r\n            controls: controlElements,\r\n            min: minDateControl,\r\n            max: maxDateControl,\r\n            defaultValue: defaultDateControl,\r\n            timeFormat: timeFormat,\r\n            showScrollArrows: true,\r\n            lang: bizagi.util.languages[BIZAGI_LANGUAGE] || \"en\",\r\n            headerText: \"{value}\",\r\n            buttons: [\r\n                \"set\",\r\n                {\r\n                    text: this.getResource(\"render-plugin-search-users-clear-button-name\"),\r\n                    handler: function (e, inst) {\r\n                        self.date = undefined;\r\n                        self.time = undefined;\r\n                        self.timeS = undefined;\r\n                        self.onChangeHandler(true);\r\n                        inst.clear();\r\n                    }\r\n                },\r\n                \"cancel\"\r\n            ],\r\n            onSet: function (valueText, inst) {\r\n                var data = inst.getVal();\r\n                self.date = {\"day\": data.getDate(), \"month\": data.getMonth(), \"year\": data.getFullYear()};\r\n\r\n                //Checks if its has time, and included it\r\n                if (self.properties.showTime) {\r\n                    self.time = {\"hours\": data.getHours(), \"minutes\": data.getMinutes()};\r\n                    if (!self.is24h) {\r\n                        self.timeS = data.getHours() < 12 ? \"am\" : \"pm\";\r\n                    }\r\n                }\r\n\r\n                self.onChangeHandler();\r\n            },\r\n            onBeforeShow: function (event, inst) {\r\n                // Your custom event handler goes here\r\n                self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n\r\n                self.changeMinValue(self.properties.minValue);\r\n                self.changeMaxValue(self.properties.maxValue);\r\n\r\n                //TODO temporal fix in ios tablet when a notification container is already displayed (QAF-6385 / MOB-171), review mobiscroll.min versions\r\n                if (bizagi.util.isiOSDevice()) {\r\n                    $(\".ui-bizagi-notifications-container\").css(\"display\", \"none\");\r\n                }\r\n            },\r\n            onClose: function (event, inst) {\r\n                // Your custom event handler goes here\r\n                self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                $(\".mbsc-fr-scroll\").css(\"overflow-y\", \"auto\");\r\n            },\r\n            onShow: function (event, inst) {\r\n                $(\".mbsc-fr-scroll\").css(\"overflow-y\", \"hidden\");\r\n            }\r\n        });\r\n\r\n        // Bind event for change value\r\n        this.input.on(\"focus\", function (e) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n\r\n            if (bizagi.util.isCordovaSupported() && bizagi.util.isAndroidDevice()) {\r\n                cordova.plugins.Keyboard.disableScroll(true);\r\n                cordova.plugins.Keyboard.close();\r\n            }\r\n        });\r\n\r\n        //Set input displayValue if it has default value\r\n        if (self.properties.displayValue === \"\" && self.properties.value) {\r\n            var date = self.getFormattedDate(self.properties.value, self.properties.showTime, true, false);\r\n            if (typeof (date) !== \"undefined\") {\r\n                var displayValue = bizagi.util.dateFormatter.formatDate(date, self.properties.fullFormat);\r\n                this.input.prop(\"value\", displayValue);\r\n            }\r\n        }\r\n\r\n        this.input.attr(\"keyboard\", \"disable\");\r\n    },\r\n\r\n    /**\r\n     * Configure the timeformat\r\n     */\r\n    getTimeFormat: function () {\r\n        if (this.properties.timeFormat.indexOf(\"H\") !== -1 || this.properties.timeFormat.indexOf(\"HH\") !== -1) {\r\n            this.is24h = true;\r\n            return \"HH:ii\";\r\n        } else {\r\n            this.is24h = false;\r\n            return \"hh:ii A\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Get Date whit the Invariant and ISO Format applied.\r\n     */\r\n    getFormattedDate: function (date, showTime, initializer) {\r\n        var self = this;\r\n\r\n        if (!date || bizagi.util.isObjectEmpty(date)) return;\r\n        date = (typeof date != \"string\") ? date.toString() : date;\r\n        //There are some dates that haven't time,... actions and validations for example or when we have to put a initial value (default value without time),\r\n        //in that cases we should identify the case and if the date haven't the time value, we have to add (00:00:00) it to can apply the format (getDateFromInvariant).\r\n        var time = (showTime && (self.getTime() === \"0:0\" || initializer)) ? \" \" + date.substr(date.length - 8, date.length) : \"\";\r\n\r\n        var currentDate = (initializer && showTime && time.split(\"/\").length > 1) || (date.split(\":\").length === 1) ? date += \" 00:00:00\" : date;\r\n        date = bizagi.util.dateFormatter.getDateFromInvariant(currentDate, showTime);\r\n\r\n        var currentTime = showTime ? time !== \"\" ? time : \" \" + self.getTime() : \" 00:00\";\r\n        var fullDateFormated = self.setHour(self.getFullFormatedDate(date, currentTime));\r\n\r\n        fullDateFormated = bizagi.util.dateFormatter.getDateFromISO(fullDateFormated, true);\r\n\r\n        return fullDateFormated;\r\n    },\r\n\r\n    /**\r\n     * Changes the render min value\r\n     * @param {} value\r\n     */\r\n    changeMinValue: function (value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var dateControl = self.getDateControl();\r\n\r\n        // Set value in control\r\n        if (value && self.properties.editable) {\r\n            if (typeof (value) === \"number\") {\r\n                value = new Date(value);\r\n                dateControl.mobiscroll('option', {min: value});\r\n                value = bizagi.util.dateFormatter.formatInvariant(value, properties.showTime); // Set as invariant\r\n            } else {\r\n                dateControl.mobiscroll('option', {min: bizagi.util.dateFormatter.getDateFromInvariant(value, true)});\r\n            }\r\n\r\n            properties.minValue = value;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Changes the render max value\r\n     * @param {} value\r\n     */\r\n    changeMaxValue: function (value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var dateControl = self.getDateControl();\r\n\r\n        // Set value in control\r\n        if (value && self.properties.editable) {\r\n            if (typeof (value) === \"number\") {\r\n                value = new Date(value);\r\n                dateControl.mobiscroll('option', {max: value});\r\n                value = bizagi.util.dateFormatter.formatInvariant(value, properties.showTime); // Set as invariant\r\n            } else {\r\n                dateControl.mobiscroll('option', {max: bizagi.util.dateFormatter.getDateFromInvariant(value, true)});\r\n            }\r\n\r\n            properties.maxValue = value;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Set the display value on input\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var date = self.getFormattedDate(value, self.properties.showTime, false);\r\n        var displayValue = self.preprocessDateValue(date);\r\n\r\n        self.input = self.input ? self.input : self.getDateControl();\r\n\r\n        if (self.properties.editable === false) {\r\n            // Render as simple value\r\n            if (typeof (displayValue) === \"string\" || typeof (displayValue) === \"number\") {\r\n                self.input.html(displayValue);\r\n            }\r\n        } else {\r\n            self.input.prop(\"value\", displayValue);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Get the DOM Control\r\n     */\r\n    getDateControl: function () {\r\n        return $(\".bz-input-icon\", this.getControl());\r\n    },\r\n\r\n    /**\r\n     * Get Time from mobiscroll\r\n     */\r\n    getTime: function () {\r\n        var self = this;\r\n\r\n        //Converting the time in 24h format.\r\n        if (self.properties.showTime && (self.time && self.time[\"minutes\"] !== \"\")) {\r\n            var time = self.time[\"hours\"] + \":\" + self.time[\"minutes\"];\r\n            time += self.timeS;\r\n\r\n            if (time.indexOf(\"am\") != -1 && self.time[\"hours\"] == 12) {\r\n                time = time.replace(\"12\", \"0\");\r\n            }\r\n\r\n            if (time.indexOf(\"pm\") != -1 && self.time[\"hours\"] < 12) {\r\n                time = time.replace(self.time[\"hours\"], (parseInt(self.time[\"hours\"]) + 12));\r\n            }\r\n\r\n            return time.replace(/(am|pm)/, '');\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Get Date from mobiscroll\r\n     * */\r\n    getDate: function () {\r\n        if (this.date && this.date[\"month\"] !== \"\") {\r\n            return this.date[\"year\"] + \"-\" + (parseInt(this.date[\"month\"]) + 1) + \"-\" + this.date[\"day\"];\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Set the control value when the control change\r\n     */\r\n    onChangeHandler: function (isClearButton) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var currentDate = self.getDate();\r\n        var currentTime = (properties.showTime) ? \" \" + self.getTime() : \" 0:00\";\r\n\r\n        // If curren date is empty reset actual value\r\n        if ((currentDate === \"\" && !properties.showTime) || (currentDate === \"\" && currentTime === \"\") || (isClearButton)) {\r\n            self.setValue(\"\");\r\n            self.input.prop('value', \"\");\r\n            properties.displayValue = \"\";\r\n        } else {\r\n            var formatedFullDate = self.setHour(self.getFullFormatedDate(currentDate, currentTime));\r\n\r\n            formatedFullDate = bizagi.util.dateFormatter.getDateFromISO(formatedFullDate, true);\r\n\r\n            if (!formatedFullDate || formatedFullDate == 0) return;\r\n\r\n            // Set date value\r\n            self.setNewDateValue(formatedFullDate, properties.showTime);\r\n\r\n            var displayValue = self.preprocessDateValue(formatedFullDate);\r\n            properties.displayValue = displayValue;\r\n\r\n            self.input.prop(\"value\", self.properties.displayValue);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Apply the final format that will be showed on the input\r\n     */\r\n    getFullFormatedDate: function (currentDate, currentTime) {\r\n        var fullDate = \"\";\r\n\r\n        if (currentDate.length > 0) {\r\n            fullDate = currentDate;\r\n        } else if (currentDate !== undefined) {\r\n            fullDate = bizagi.util.dateFormatter.formatISO(currentDate, false);\r\n        } else {\r\n            fullDate = bizagi.util.dateFormatter.formatISO(new Date(), false);\r\n        }\r\n\r\n        fullDate += currentTime;\r\n        var dateFromFormat = bizagi.util.dateFormatter.getDateFromFormat(fullDate, \"yyyy-MM-dd H:m\");\r\n\r\n        return bizagi.util.dateFormatter.formatDate(dateFromFormat !== 0 ? dateFromFormat : currentDate, \"yyyy-MM-dd H:mm:ss\");\r\n    },\r\n\r\n    /**\r\n     * Set the control value\r\n     */\r\n    setNewDateValue: function (formatedFullDate, showTime) {\r\n        var value = \"\";\r\n\r\n        if (formatedFullDate != \"\")\r\n            value = bizagi.util.dateFormatter.formatInvariant(formatedFullDate, showTime);\r\n\r\n        this.setValue(value);\r\n    },\r\n\r\n    /**\r\n     * Removing the time when be necesary\r\n     */\r\n    applyDateFormat: function (date, showTime) {\r\n        if (!showTime) {\r\n            var initIndexTime = null;\r\n\r\n            if (date.indexOf(\"00:00\") != -1) {\r\n                initIndexTime = date.indexOf(\"00:00\");\r\n            } else if (date.indexOf(\"0:00\") != -1) {\r\n                initIndexTime = date.indexOf(\"0:00\");\r\n            } else if (date.indexOf(\"12:00\") != -1) {\r\n                initIndexTime = date.indexOf(\"12:00\");\r\n            } else {\r\n                initIndexTime = \"-1\";\r\n            }\r\n\r\n            var endIndexTime = initIndexTime + 8;\r\n            date = initIndexTime === -1 ? date : date.replace(date.substring(initIndexTime, endIndexTime), \"\").replace(\" am\", \"\").replace(\" pm\", \"\");\r\n        }\r\n\r\n        return date;\r\n    },\r\n\r\n    /*\r\n     *  Checks if the date could be localized using site language\r\n     */\r\n    preprocessDateValue: function (date) {\r\n        return bizagi.util.dateFormatter.formatDate(date, this.properties.fullFormat);\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var bValid = true;\r\n        var value = self.getValue();\r\n\r\n        if (value) {\r\n            if (bizagi.util.parseBoolean(properties.editable)) {\r\n                value = bizagi.util.dateFormatter.getDateFromInvariant(value);\r\n\r\n                if (value != 0) {\r\n                    // Clear time for validations\r\n                    value.setHours(0, 0, 0, 0);\r\n\r\n                    // Check min value and max value\r\n                    if (properties.minValue && typeof (properties.minValue) === 'string') {\r\n                        bValid = self.validateMinAndMaxValue(value, true, properties, invalidElements) ? false : bValid;\r\n                    }\r\n\r\n                    if (properties.maxValue && typeof (properties.maxValue) === 'string') {\r\n                        bValid = self.validateMinAndMaxValue(value, false, properties, invalidElements) ? false : bValid;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (bizagi.util.parseBoolean(properties.editable)) {\r\n            // Check required\r\n            if (properties.required && !self.hasValue()) {\r\n                self.showMandatoryMessage(properties, invalidElements);\r\n            }\r\n        }\r\n\r\n        if (bValid) {\r\n            // Clear error message\r\n            self.setValidationMessage(\"\");\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * To validate the min and max values\r\n     * @param {} value\r\n     * @param {} isMinValue\r\n     * @param {} properties\r\n     * @param {} invalidElements\r\n     */\r\n    validateMinAndMaxValue: function (value, isMinValue, properties, invalidElements) {\r\n        var vValue = bizagi.util.dateFormatter.getDateFromInvariant(isMinValue ? properties.minValue : properties.maxValue);\r\n\r\n        //In case the value from the minValue or maxValue are assigned from a Date control that does not have the option  \"showTime!\r\n        if (vValue == 0) {\r\n            var resultValue = \"\";\r\n            if (properties.timeFormat.indexOf(\":ss\") == -1) {\r\n                if (isMinValue) {\r\n                    resultValue = properties.minValue + \":00\";\r\n                } else {\r\n                    resultValue = properties.maxValue + \":00\";\r\n                }\r\n            }\r\n\r\n            vValue = bizagi.util.dateFormatter.getDateFromFormat(resultValue, properties.fullFormat + \":ss\");\r\n        }\r\n\r\n        vValue.setHours(0, 0, 0, 0);\r\n\r\n        if ((isMinValue && value < vValue) || (!isMinValue && value > vValue)) {\r\n            var formatedDate = bizagi.util.dateFormatter.formatDate(vValue, properties.fullFormat);\r\n            var message = \"\";\r\n\r\n            if (isMinValue) {\r\n                message = this.getResource(\"render-date-minimum-validation\").replaceAll(\"#label#\", properties.displayName).replaceAll(\"#minValue#\", formatedDate);\r\n            } else {\r\n                message = this.getResource(\"rendr-date-maximum-validation\").replaceAll(\"#label#\", propertiee).replaceAll(\"#maxValue#\", formatedDate);\r\n            }\r\n\r\n            invalidElements.push({xpath: properties.xpath, message: message});\r\n            return true;\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * To show the mandatory values message\r\n     * */\r\n    showMandatoryMessage: function (properties, invalidElements) {\r\n        var self = this;\r\n        var message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n\r\n        invalidElements.push({xpath: properties.xpath, message: message});\r\n\r\n        return false;\r\n    },\r\n\r\n    setHour: function (date) {\r\n        return date.replace(\" 0:\", \" 00:\").replace(\" 1:\", \" 01:\").replace(\" 2:\", \" 02:\").replace(\" 3:\", \" 03:\").replace(\" 4:\", \" 04:\").replace(\" 5:\", \" 05:\").replace(\" 6:\", \" 06:\").replace(\" 7:\", \" 07:\").replace(\" 8:\", \" 08:\").replace(\" 9:\", \" 09:\");\r\n    },\r\n\r\n    /**\r\n     * Cleans the control fields as it requires\r\n     */\r\n    clearDisplayValue: function () {\r\n        var self = this;\r\n\r\n        self.date = undefined;\r\n        self.time = undefined;\r\n        self.timeS = undefined;\r\n        self.onChangeHandler(true);\r\n        self.setDisplayValue('');\r\n    },\r\n    isValidMinMaxValue: function () {\r\n        var self = this;\r\n        var isValid = true;\r\n        var value = self.getValue();\r\n\r\n        if (value) {\r\n            value = bizagi.util.dateFormatter.getDateFromInvariant(value);\r\n\r\n            if (value !== 0) {\r\n                // Clear time for validations\r\n                value.setHours(0, 0, 0, 0);\r\n\r\n                // Check min value and max value\r\n                if (self.properties.minValue && typeof (self.properties.minValue) === 'string')\r\n                    isValid = self.validateMinAndMaxValue(value, true);\r\n\r\n                if (self.properties.maxValue && typeof (self.properties.maxValue) === 'string')\r\n                    isValid = self.validateMinAndMaxValue(value, false);\r\n            }\r\n        }\r\n\r\n        return isValid;\r\n    },\r\n\r\n    validateMinAndMaxValue: function (currentDate, isMinValue) {\r\n        var self = this;\r\n        var date = isMinValue ? self.properties.minValue : self.properties.maxValue;\r\n        var formattedDate = bizagi.util.dateFormatter.getDateFromInvariant(date);\r\n\r\n        formattedDate.setHours(0, 0, 0, 0);\r\n\r\n        return !((isMinValue && currentDate < formattedDate) || (!isMinValue && currentDate > formattedDate));\r\n\r\n    },\r\n\r\n    getElementsToStylize: function ($context) {\r\n        return $(\"input\", $context);\r\n    }\r\n});","/**\r\n *   Name: Bizagi Tablet Render Yes-No Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the Yes-No render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.yesno\", bizagi.rendering.yesno.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.yesno.extend(\"bizagi.rendering.tablet.yesno\", {}, {\r\n\r\n    /**\r\n     * Method to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var $control = this.getControl();\r\n        this.radio = $control.find(\"input[type=radio]\");\r\n\r\n        if (this.properties.editable && (this.value == null || this.value === undefined) && this.properties.value != null) {\r\n            this.value = this.properties.value;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"readonly\");\r\n\r\n        return $.fasttmpl(template, {value: this.getDisplayValue()});\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        var $control = this.getControl();\r\n        this.radio = $control.find(\"input\");\r\n\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var $control = this.getControl();\r\n        var parsedValue = bizagi.util.parseBoolean(value);\r\n\r\n        this.setValue(parsedValue, false);\r\n        if (this.properties.editable) {\r\n            if (parsedValue) {\r\n                $control.find(\"input[value=true]\").prop('checked', true);\r\n                $control.find(\"input[value=false]\").prop('checked', false);\r\n            } else {\r\n                $control.find(\"input[value=false]\").prop('checked', true);\r\n                $control.find(\"input[value=true]\").prop('checked', false);\r\n            }\r\n        } else {\r\n            this.radio.val((this.getDisplayValue()));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n\r\n        self.radio.change(function () {\r\n            var $selected = $(this);\r\n            var value = $selected.prop('value');\r\n\r\n            if (self.value !== value) {\r\n                self.setValue(value);\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Context to apply styles\r\n     * @param context\r\n     * @returns {jQuery|HTMLElement}\r\n     */\r\n    getElementsToStylize: function (context) {\r\n        return $(\"label.bz-radio__label\", context);\r\n    },\r\n\r\n    /**\r\n     * Cleans current data\r\n     */\r\n    cleanData: function () {\r\n        var value = {id: \"\", label: \"\"};\r\n        this.setValue(value, false);\r\n\r\n        this.clearDisplayValue();\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     */\r\n    clearDisplayValue: function () {\r\n        if (this.properties.editable) {\r\n            this.radio.prop('checked', false);\r\n        } else {\r\n            this.radio.val(this.getDisplayValue());\r\n        }\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Check\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the Check render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.check\", bizagi.rendering.check.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.check.extend(\"bizagi.rendering.tablet.check\", {}, {\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var $control = this.getControl();\r\n        this.check = $control.find(\"input\");\r\n\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"readonly\");\r\n\r\n        return $.fasttmpl(template, {value: this.getDisplayValue()});\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        var $control = this.getControl();\r\n        this.check = $control.find(\"input\");\r\n\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Render as simple value\r\n        var displayValue = bizagi.util.parseBoolean(value);\r\n\r\n        // Set internal value\r\n        this.setValue(displayValue, false);\r\n\r\n        if (this.properties.editable) {\r\n            if (displayValue) {\r\n                this.check.attr(\"checked\", \"checked\");\r\n            } else {\r\n                this.check.removeAttr(\"checked\");\r\n            }\r\n        } else {\r\n            this.check.val((this.getDisplayValue()));\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n\r\n        this.check.on(\"click\", function (evt) {\r\n            var isCheck = $(this).is(':checked');\r\n\r\n            self.setValue(isCheck, true);\r\n\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Cleans current data\r\n     */\r\n    cleanData: function () {\r\n        this.setDisplayValue(false);\r\n        this.setValue(false, false);\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Tablet Render option select\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   Renders an option html input with attached handlers\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.combo\", bizagi.rendering.combo.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.combo.extend(\"bizagi.rendering.tablet.combo\", {\r\n    /*\r\n     *   Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"combo\");\r\n\r\n        return $.fasttmpl(template, {\r\n            editable: this.properties.editable,\r\n            value: this.getDisplayValue()\r\n        });\r\n\r\n    },\r\n\r\n    postRender: function() {\r\n        this._super();\r\n        this.itemSelected = undefined;\r\n    },   \r\n\r\n    /**\r\n     * Add event handlers to the combo control\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        if (self.getMode() !== \"execution\") {\r\n            return;\r\n        }\r\n\r\n        $(\".bz-form-combo\", control).bind(\"click\", function () {\r\n\r\n            $(this).mobileView({\r\n                customHeader: $.fasttmpl(self.renderFactory.getTemplate(\"modal-header-search\"), {}),\r\n                displayName: self.properties.displayName || \"\",\r\n                orientation: self.properties.orientation || \"\",\r\n                contentTemplate: \"\",\r\n                style: \"width: 80%; height: 70%\",\r\n                close: function () {\r\n                    self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                },\r\n\r\n                open: function () {\r\n                    self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n                },\r\n\r\n                configureActions: function (context) {\r\n                    var params = {};\r\n\r\n                    if (self.isDependant && self.properties && (/cascadingcombo/i.test(self.properties.type)) && self.getParentCombo) {\r\n                        var parentValue = self.getParentCombo().getValue();\r\n                        if (parentValue && parentValue.id) {\r\n                            params[self.Class.BA_ACTION_PARAMETER_PREFIX + \"parent\"] = parentValue.id;\r\n                        }\r\n                    }\r\n\r\n                    $.when(self.renderCombo(params)).done(function (list) {\r\n                        $(\".bz-modal-view__content\", context.content).html(list);\r\n                        self.configureModalViewHandlers(context);\r\n                    })\r\n                }\r\n            });\r\n        });\r\n\r\n    },\r\n\r\n    processComboData: function (data) {\r\n        var self = this;\r\n        data.forEach(function (value) {\r\n            self.validateValue(value);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Setting the display value, always you call a setDisplayValue yor are performinng a setValue under the hood.\r\n     * */\r\n    setDisplayValue: function (value) {\r\n        var comboValue;\r\n        value = this.mapValue(value);\r\n\r\n        if (value && (typeof value === \"object\" && typeof value.label !== \"undefined\")) {\r\n\r\n            if (value.label !== \"\" && !bizagi.util.isNumeric(value.label)) {\r\n                comboValue = value.label;\r\n            } else {\r\n                var selected = this.findDataValueById(value.value);\r\n                comboValue = selected ? selected.value : \"\";\r\n            }\r\n\r\n            if ($.isArray(comboValue)) {\r\n                comboValue = comboValue.join(\" - \");\r\n            }\r\n\r\n            value = ({ \"id\": value.id, \"value\": comboValue });\r\n        }\r\n\r\n        var control = this.getControl();\r\n        if(this.properties.editable){\r\n            $(\"input\", control).val(this.formatItem(value.value));\r\n        }else{\r\n            $(control).html(this.formatItem(value.value));\r\n        }\r\n        \r\n\r\n        //Set Value\r\n        this.selectedValue = value;\r\n        this.setValue(value);\r\n    },\r\n\r\n    /**\r\n     * Set the handlers for the modal elements\r\n     * @param {kendoModalObject} context full modal object\r\n     */\r\n    configureModalViewHandlers: function (context) {\r\n        var self = this;\r\n\r\n        $(\".bz-list__item\", context.content).on(\"click\", function () {\r\n            var valueObjet = {\r\n                \"id\": $(this).data(\"value\"),\r\n                \"value\": $(this).text()\r\n            };\r\n\r\n            if (valueObjet.id == \"\") {\r\n                valueObjet.value = \"\";\r\n            }\r\n            \r\n            self.itemSelected = true; //must be before the setDisplayValue\r\n            self.setDisplayValue(valueObjet);\r\n            self.trigger(\"select\", [valueObjet, false]);\r\n            context.close();\r\n        });\r\n\r\n        var $elementsList = $(\".bz-list li\", context.content);\r\n        var $clearButton = $(\".bz-modal-view__clear\", context.header);\r\n        var $searchInput = $(\".bz-modal-view__search\", context.header);\r\n\r\n        $(\"[data-action=close]\", context.header).bind(\"click\", function () {\r\n            context.close();\r\n        });\r\n\r\n        $clearButton.bind(\"click\", function () {\r\n            $searchInput.val(\"\").trigger(\"change\");\r\n        });\r\n        // Filtering list\r\n        $searchInput.bind(\"change keyup\", function () {\r\n            if (this.value == \"\") {\r\n                $clearButton.removeClass(\"bz-modal-view__clear--visible\");\r\n            } else {\r\n                $clearButton.addClass(\"bz-modal-view__clear--visible\");\r\n            }\r\n            self.filterList(this.value, $elementsList);\r\n        }).focus();\r\n    },\r\n\r\n    cleanData: function () {\r\n        var self = this;\r\n        var value = {id: \"\", label: \"\"};\r\n\r\n        self.setDisplayValue(value);\r\n    },\r\n    \r\n    /**\r\n     * Filtering list of elements\r\n     * @returns {}\r\n     */\r\n    filterList: function (search, $li) {\r\n\r\n        $li.filter(function () {\r\n            var stringContainer = $(this).text().toUpperCase();\r\n            var stringToSearch = search.toUpperCase();\r\n\r\n            if (stringContainer.indexOf(stringToSearch) >= 0) {\r\n                return $(this);\r\n            } else {\r\n                $(this).hide();\r\n            }\r\n        }).show();\r\n    },\r\n\r\n    /**\r\n     * Print the list of elements to show in the modal\r\n     * @param {object} data list of elements to print\r\n     */\r\n    renderComboTemplate: function (data) {\r\n        var template = this.renderFactory.getTemplate(\"combo-list\");\r\n        var value = this.getValue();\r\n        value = (value !== null && typeof value !== \"undefined\") ? value : {\"id\": \"\", \"value\": \"\"};\r\n\r\n        return $.fasttmpl(template, {\r\n            \"items\": data,\r\n            \"selectedId\": value.id,\r\n            \"hasItems\": data.length > 0\r\n        }, {\r\n            \"validateItem\": this.validateValue\r\n        });\r\n    },\r\n\r\n    getElementsToStylize: function ($context) {\r\n        return this.properties.editable ? $(\"input\", $context) : $(\".readonly-control\", $context);\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Render CollectionNavigator\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for collection navigator renders\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.collectionnavigator\", bizagi.rendering.collectionnavigator.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.collectionnavigator.extend(\"bizagi.rendering.tablet.collectionnavigator\", {}, {\r\n\r\n    /**\r\n     * Method to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this.getControlFiller().addClass(\"bz-form-item__control--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this.getControlFiller().addClass(\"bz-form-item__control--hidden\");\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Tablet Render upload Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the upload render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.upload\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n    BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX,\r\n    BA_PAGE_CACHE: bizagi.render.services.service.BA_PAGE_CACHE\r\n}, bizagi.rendering.upload.prototype);\r\n\r\n// Extends itself\r\nbizagi.rendering.tablet.upload.extend(\"bizagi.rendering.tablet.upload\", {\r\n    QUALITY_PICTURE: 50,\r\n    LIMIT: 1, // The maximum number of media in the device user can record in a single capture operation.\r\n    EXTENSIONSIMG: [\"image/jpeg\", \"jpeg\", \"image\", \"png\", \"jpg\", \"bmp\"],\r\n    EXTENSIONSFILE: [\"doc\", \"docx\", \"xls\", \"xlsx\", \"ppt\", \"pptx\", \"pdf\", \"zip\", \"rar\", \"txt\"],\r\n    EXTENSIONSVIDEO: [\"video/quicktime\", \"quicktime\", \"qt\", \"mov\"],\r\n    EXTENSIONSAUDIO: [\"audio/wav\", \"audio\", \"wav\", \"mp3\"]\r\n}, {\r\n    /**\r\n     * Whether or not is a native device\r\n     * @var isNative boolean\r\n     */\r\n    isNative: false,\r\n\r\n    /**\r\n     * Whether or not we are offline\r\n     * @var isOfflineForm boolean\r\n     */\r\n    isOfflineForm: false,\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Check if offline forms is supported\r\n        this.isOfflineForm = bizagi.util.isOfflineForm({context: this});\r\n        this.isNative = bizagi.util.isCordovaSupported();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"upload\");\r\n\r\n        return this.renderItem(template, {});\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"upload-readonly\");\r\n        var data = {\r\n            noFiles: this.filesCount === 0\r\n        };\r\n\r\n        return this.renderItem(template, data);\r\n    },\r\n\r\n    /**\r\n     * Method to render items\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderItem: function (template, data) {\r\n        var self = this;\r\n        var items = \"\";\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, data);\r\n\r\n        // Render current children\r\n        for (var i = 0; i < self.filesCount; i++) {\r\n            var file = {id: self.files[i][0], fileName: self.files[i][1]};\r\n            var item = self.renderUploadItem(file);\r\n            items += item;\r\n        }\r\n\r\n        html = self.replaceFilesHtml(html, items);\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var $control = this.getControl();\r\n\r\n        this.$contentFile = $(\".bz-file-upload__container\", $control);\r\n        this.$inputFile = $(\".bz-file-upload__input\", $control);\r\n        this.$nativeFile = $(\".bz-file-upload__native\", $control);        \r\n    },\r\n\r\n    /**\r\n     * Add action handlers\r\n     */\r\n    configureHandlers: function () {\r\n        this.checkFileExtensions();\r\n        this.attachEvents();\r\n    },\r\n\r\n    /**\r\n     * Method to customize the render's behaviour to add handlers when the control is readonly\r\n     */\r\n    configureHandlersReadOnly: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        // Handler to download a file\r\n        $(\"ul.bz-readonly-lists\", $control).on(\"click\", \".bz-file .bz-file-name\", function () {\r\n            var item = $(this).parent(\".bz-file\");\r\n            var file = item.data();\r\n\r\n            bizagi.loading.start();\r\n\r\n            $.when(bizagi.util.media.downloadFile(file.url, file.title)).fail(function (error) {\r\n                self.executeFormFailHandler(error);\r\n            }).always(function () {\r\n                bizagi.loading.stop();\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to configure the actions with control\r\n     * @return {}\r\n     */\r\n    attachEvents: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        // Attach all events\r\n        this.$contentFile.off(\"click\").on(\"click\", function (evt) {\r\n            self.chooseFile();\r\n        });\r\n\r\n        // Handler to download the file\r\n        $(\"ul.bz-files\", $control).on(\"click\", \".bz-file .bz-file-name\", function () {\r\n            var item = $(this).parent(\".bz-file\");\r\n            var file = item.data();\r\n\r\n            bizagi.loading.start();\r\n\r\n            $.when(bizagi.util.media.downloadFile(file.url, file.title)).fail(function (error) {\r\n                self.executeFormFailHandler(error);\r\n            }).always(function () {\r\n                bizagi.loading.stop();\r\n            });\r\n        });\r\n\r\n        // Attach delete option & Removes a file from the upload control\r\n        $(\"ul.bz-files\", $control).on(\"click\", \".bz-file .bz-icn\", function () {\r\n            var item = $(this).parent(\".bz-file\");\r\n            var file = item.data();\r\n\r\n            self.removeFile(item, file.id);\r\n        });\r\n\r\n        if (self.isNative) {\r\n            // Upload files\r\n            this.$nativeFile.off(\"click\").actionSheet({\r\n                actions: self.getUploadChoices(),\r\n                actionClicked: function (action) {\r\n                    self.handlerUploadFile(action.guid);\r\n                },\r\n                appear: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n                },\r\n                cancelClicked: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                }\r\n            });\r\n\r\n            // Resolution upload\r\n            $(\".bz-file-upload__resolution\", $control).off(\"click\").actionSheet({\r\n                actions: bizagi.util.media.getImageResolutionSizes(),\r\n                withoutCancel: true,\r\n                actionClicked: function (action) {\r\n                    bizagi.loading.start();\r\n\r\n                    $.when(self.handlerResolutionUpload(action.guid)).always(function () {\r\n                        bizagi.loading.stop();\r\n                    });\r\n                },\r\n                appear: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n                },\r\n                cancelClicked: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                }\r\n            });\r\n        } else {\r\n\r\n            // Attach event to web upload-control\r\n            this.$inputFile.off(\"change\").on(\"change\", function () {\r\n                self.addFile();\r\n                this.value = \"\";\r\n            });\r\n\r\n            // Just in case\r\n            this.$inputFile.off(\"click\").on(\"click\", function (evt) {\r\n                evt.stopPropagation();\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Handler of upload files\r\n     * @param {} ordinal\r\n     * @returns {}\r\n     */\r\n    handlerUploadFile: function (ordinal) {\r\n        var self = this;\r\n        var actionSelected = ordinal || 0;\r\n\r\n        switch (actionSelected) {\r\n            case 2:\r\n\r\n                navigator.camera.getPicture(function (dataImage) {\r\n                    self.dataImage = dataImage;\r\n                    var extensions = self.Class.EXTENSIONSIMG.concat(self.Class.EXTENSIONSVIDEO);\r\n\r\n                    bizagi.loading.start();\r\n\r\n                    $.when(bizagi.util.media.checkMaxSize(dataImage, self.properties))\r\n                        .then(function () {\r\n                            //Gets the real properties for the file\r\n                            return $.when(bizagi.util.media.getFileDataInfo(self.dataImage))\r\n                                .then(function (fileData) {\r\n                                    self.fileProperties = fileData;\r\n\r\n                                    if (bizagi.util.media.checkFileTypes(fileData, self.properties, extensions)) {\r\n                                        // \"new Blob\" constructor is not supported in android version 4.2.2\r\n                                        var version = bizagi.util.getAndroidVersion();\r\n\r\n                                        if (!bizagi.util.isAndroid()) {\r\n                                            return $.when(bizagi.util.media.modalResolutionUpload()).then(function (buttonIndex) {\r\n                                                if (buttonIndex <= bizagi.util.media.getImageResolutionItems().length) {\r\n                                                    return self.handlerResolutionUpload(buttonIndex);\r\n                                                }\r\n                                            });\r\n\r\n                                        } else {\r\n                                            // Force click to show actionSheet menu\r\n                                            $(\".bz-file-upload__resolution\", self.getControl()).click();\r\n                                        }\r\n                                    }\r\n                                });\r\n                        }).always(function () {\r\n                        bizagi.loading.stop();\r\n                    });\r\n\r\n                }, self.onFail.bind(self), {\r\n                    quality: self.Class.QUALITY_PICTURE,\r\n                    sourceType: Camera.PictureSourceType.PHOTOLIBRARY,\r\n                    correctOrientation: true\r\n                });\r\n                break;\r\n            case 1:\r\n                navigator.camera.getPicture(function (dataImage) {\r\n                        bizagi.loading.start();\r\n\r\n                        $.when(bizagi.util.media.checkMaxSize(dataImage, self.properties)).then(function () {\r\n                            return $.when(bizagi.util.media.getFileDataInfo(dataImage)).then(function (fileData) {\r\n                                self.fileProperties = fileData;\r\n                                return self.saveImage(dataImage);\r\n                            });\r\n                        }).always(function () {\r\n                            bizagi.loading.stop();\r\n                        });\r\n                    },\r\n                    self.onFail.bind(self), {\r\n                        quality: self.Class.QUALITY_PICTURE,\r\n                        sourceType: navigator.camera.PictureSourceType.CAMERA,\r\n                        mediaType: navigator.camera.MediaType.PICTURE,\r\n                        destinationType: Camera.DestinationType.FILE_URI,\r\n                        correctOrientation: true,\r\n                        targetWidth: 1280,\r\n                        targetHeight: 960\r\n                    });\r\n                break;\r\n            case 3:\r\n                navigator.device.capture.captureVideo(function (dataVideo) {\r\n                    bizagi.loading.start();\r\n\r\n                    $.when(bizagi.util.media.checkMaxSizeVideo(dataVideo, self.properties))\r\n                        .then(function () {\r\n                            return self.saveVideo(dataVideo);\r\n                        }).always(function () {\r\n                        bizagi.loading.stop();\r\n                    });\r\n\r\n                }, self.onFail.bind(self), {limit: self.Class.LIMIT});\r\n                break;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Handler of resolution upload\r\n     * @param {} ordinal\r\n     * @returns {}\r\n     */\r\n    handlerResolutionUpload: function (ordinal) {\r\n        var self = this;\r\n        var actionSelected = ordinal || 0;\r\n\r\n        // If original, save image normally, if not, reduce quality and size\r\n        if (actionSelected === bizagi.util.media.ResolutionType.ORIGINAL) {\r\n            return self.saveImage(self.dataImage);\r\n        } else {\r\n            var resolution = bizagi.util.media.getImageResolution(actionSelected);\r\n\r\n            return $.when(bizagi.util.media.transformImageSize(self.dataImage, resolution)).then(function (result) {\r\n                self.editedImageURL = result.localUrl;\r\n                self.properties.url = result.base64Image;\r\n\r\n                return self.saveImage(self.dataImage);\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Send image using HTTP\r\n     * @param {} dataImage\r\n     */\r\n    saveImage: function (dataImage) {\r\n        var self = this;\r\n        var dataItem = \"\";\r\n\r\n        if (self.editedImageURL) {\r\n            dataItem = self.editedImageURL;\r\n        } else if (self.fileProperties) {\r\n            dataItem = self.fileProperties.url;\r\n        }\r\n\r\n        // Fix android 4.4 getting images from recent folder\r\n        var dataFile = bizagi.util.media.getImagePath(dataItem);\r\n        var data = {\r\n            dataFile: dataFile,\r\n            fileName: self.fileProperties.name,\r\n            mimeType: \"image/jpeg\"\r\n        };\r\n\r\n        // Cleans variables related previous uploads\r\n        self.editedImageURL = null;\r\n        self.fileProperties = null;\r\n\r\n        return this.uploadFile(data);\r\n    },\r\n\r\n    /**\r\n     * Method to save a video file\r\n     * @param {} dataVideo\r\n     * @returns {}\r\n     */\r\n    saveVideo: function (dataVideo) {\r\n        var data = {\r\n            dataFile: dataVideo[0].fullPath,\r\n            fileName: dataVideo[0].name,\r\n            mimeType: \"video/quicktime\"\r\n        };\r\n\r\n        return this.uploadFile(data);\r\n    },\r\n\r\n    /**\r\n     * Method to save a file\r\n     * @param data\r\n     * @returns {*|void}\r\n     */\r\n    uploadFile: function (data) {\r\n        var self = this;\r\n        var params = {};\r\n        var addParams = self.buildAddParams();\r\n        addParams.queueID = \"q_\" + bizagi.util.encodeXpath(self.getUploadXpath());\r\n\r\n        params.data = addParams;\r\n        params.options = new FileUploadOptions();\r\n        params.options.fileKey = \"file\";\r\n        params.options.fileName = data.fileName;\r\n        params.options.uploadKey = {key: addParams[\"h_xpath\"]};\r\n        params.options.addUrl = self.properties.addUrl;\r\n        params.dataFile = data.dataFile;\r\n\r\n        if (data.mimeType)\r\n            params.options.mimeType = data.mimeType;\r\n\r\n        return $.when(bizagi.util.media.uploadFile(params)).then(function (result) {\r\n            var response = JSON.parse(decodeURIComponent(result.response));\r\n\r\n            if (response.type === \"error\") {\r\n                bizagi.showMessageBox(response.message, response.errorType);\r\n            } else {\r\n                self.onUploadFileCompleted(response);\r\n            }\r\n        }).fail(function (error) {\r\n            self.executeFormFailHandler(error);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * onFail\r\n     * @param {} error\r\n     */\r\n    onFail: function (error) {\r\n        var messageError = bizagi.util.processFailMessage(error);\r\n\r\n        bizagi.loading.stop();\r\n\r\n        if (messageError && typeof (messageError) === \"string\" && messageError.indexOf(\"No Activity found to handle Intent\") !== -1) {\r\n            var hasResource = bizagi.util.isValidResource(\"render-upload-error-media-app\");\r\n            var message = hasResource ? bizagi.localization.getResource(\"render-upload-error-media-app\") : \"Your device does not have an app to execute this action.\";\r\n\r\n            bizagi.showMessageBox(message);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * onUploadFileCompleted\r\n     * @param {} result\r\n     */\r\n    onUploadFileCompleted: function (result) {\r\n        var self = this;\r\n        var $wrapper = $(\".bz-files\", self.getControl());\r\n\r\n        if (result.id && result.fileName) {\r\n            // Locate it before the upload wrapper\r\n            var newItem = self.renderUploadItem(result);\r\n            $wrapper.append(newItem);\r\n\r\n            // Increment counter\r\n            self.filesCount = self.filesCount + 1;\r\n\r\n            // Copy the files value but not its reference\r\n            var files = self.files.slice();\r\n\r\n            //Add the new item to this temporal array\r\n            files.push([result.id, result.fileName]);\r\n\r\n            // Update value\r\n            self.setValue(files, true);\r\n\r\n            // Check maxFiles\r\n            self.checkMaxFiles();\r\n\r\n            self.editedImageURL = null;\r\n        } else {\r\n            bizagi.showMessageBox(result.message, \"Error\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check maximum number of files\r\n     */\r\n    checkMaxFiles: function () {\r\n        if (this.isMaxFilesReached()) {\r\n            $(this.$contentFile).addClass(\"bz-file-upload__container--hidden\");\r\n        } else {\r\n            $(this.$contentFile).removeClass(\"bz-file-upload__container--hidden\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if the maximum number of files than can be uploaded has been reached\r\n     * @returns {}\r\n     */\r\n    isMaxFilesReached: function () {\r\n        var maxFiles = this.properties.maxfiles;\r\n        var actualFiles = this.properties.value ? this.properties.value.length : 0;\r\n\r\n        return maxFiles !== 0 && (this.filesCount >= maxFiles && actualFiles >= maxFiles);\r\n    },\r\n\r\n    /**\r\n     * Check allow extensions and define possible choices\r\n     * @returns {}\r\n     */\r\n    checkFileExtensions: function () {\r\n        var self = this;\r\n        var validExtensions = self.properties.validExtensions || \"\";\r\n\r\n        self.validOptions = {video: false, image: false, file: false};\r\n\r\n        // Preprocess the extensions string\r\n        validExtensions = validExtensions.replace(/\\s+/g, \"\").toLowerCase();\r\n\r\n        if (typeof (validExtensions) === \"undefined\" || validExtensions === \"\") {\r\n            self.validOptions = {video: true, image: true, file: true};\r\n        } else {\r\n            validExtensions = validExtensions.split(\";\");\r\n\r\n            if (validExtensions.length === 1 && validExtensions[0].indexOf(\"*.*\") !== -1) {\r\n                self.validOptions.video = true;\r\n                self.validOptions.image = true;\r\n            } else {\r\n                for (var i = 0, length = validExtensions.length; i < length; i++) {\r\n                    validExtensions[i] = validExtensions[i].replace(\"*.\", \"\");\r\n\r\n                    if (self.Class.EXTENSIONSFILE.toString().indexOf(validExtensions[i]) >= 0) {\r\n                        self.validOptions.file = true;\r\n                    } else if (self.Class.EXTENSIONSIMG.toString().indexOf(validExtensions[i]) >= 0) {\r\n                        self.validOptions.image = true;\r\n                    } else if (self.Class.EXTENSIONSVIDEO.toString().indexOf(validExtensions[i]) >= 0) {\r\n                        self.validOptions.video = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Media is not supported then upload control is disabled\r\n        if (!self.validOptions.file && !self.validOptions.image && !self.validOptions.video) {\r\n            $(self.$contentFile).addClass(\"bz-file-upload__container--hidden\");\r\n        }\r\n\r\n        // Limit of files is reached then upload control is disabled\r\n        if (self.isMaxFilesReached() || (!self.isNative && (!bizagi.util.media.fileAPISupported() || self.isOfflineForm))) {\r\n            $(this.$contentFile).addClass(\"bz-file-upload__container--hidden\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Build add params to send to the server\r\n     * @param {} dataFile\r\n     */\r\n    buildAddFileParams: function (dataFile) {\r\n        var self = this;\r\n        var prefix = self.Class.BA_CONTEXT_PARAMETER_PREFIX;\r\n\r\n        // Get form data for POSTing\r\n        var formData = new FormData();\r\n        var form = self.getFormContainer();\r\n\r\n        // Build add params to send to the server\r\n        formData.append(prefix + \"xpath\", self.getUploadXpath());\r\n        formData.append(prefix + \"idRender\", self.properties.id);\r\n        formData.append(prefix + \"xpathContext\", self.properties.xpathContext);\r\n        formData.append(prefix + self.Class.BA_PAGE_CACHE, self.properties.idPageCache);\r\n        formData.append(self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\", form.properties.sessionId);\r\n        formData.append(self.properties.xpath, dataFile);\r\n\r\n        if (self.properties.contexttype)\r\n            formData.append(prefix + \"contexttype\", self.properties.contexttype);\r\n\r\n        try {\r\n            if (typeof (BIZAGI_SESSION_NAME) !== \"undefined\") {\r\n                formData.append(BIZAGI_SESSION_NAME, form.properties.sessionId);\r\n            } else {\r\n                formData.append(\"JSESSIONID\", form.properties.sessionId);\r\n            }\r\n        } catch (e) {\r\n            formData.append(\"JSESSIONID\", form.properties.sessionId);\r\n        }\r\n\r\n        return formData;\r\n    },\r\n\r\n    /**\r\n     * Process an upload file into the server\r\n     * @param {} dataFile\r\n     * @returns {}\r\n     */\r\n    processUploadFile: function (dataFile) {\r\n        var data = {\r\n            url: this.properties.addUrl,\r\n            formData: this.buildAddFileParams(dataFile)\r\n        };\r\n\r\n        return this.dataService.processUploadFile(data);\r\n    },\r\n\r\n    /**\r\n     * Remove data of file upload\r\n     */\r\n    clearDisplayValue: function () {\r\n        var self = this;\r\n        var items = $(\".bz-files\", self.getControl());\r\n\r\n        $(\".bz-file\", items).each(function (index, item) {\r\n            item = $(item);\r\n            var file = item.data();\r\n\r\n            self.removeFile(item, file.id);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Add upload options\r\n     */\r\n    getUploadChoices: function () {\r\n        var self = this;\r\n        var itemsUpload = [];\r\n\r\n        // Take photo, Choose photo\r\n        if (self.validOptions.image) {\r\n            itemsUpload.push({\r\n                \"guid\": 1,\r\n                \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-take-photo\")\r\n            });\r\n            itemsUpload.push({\r\n                \"guid\": 2,\r\n                \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-choose-photo\")\r\n            });\r\n        }\r\n\r\n        // Take video\r\n        if (self.validOptions.video) {\r\n            itemsUpload.push({\r\n                \"guid\": 3,\r\n                \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-take-video\")\r\n            });\r\n        }\r\n\r\n        // Stores the upload options        \r\n        return [].concat(itemsUpload);\r\n    },\r\n\r\n    /**\r\n     * Call the form failhandler with an specific error\r\n     * @param {} error\r\n     * @returns {}\r\n     */\r\n    executeFormFailHandler: function (error) {\r\n        var errorResponse = \"\";\r\n\r\n        if (error && error.responseText) {\r\n            errorResponse = error.responseText;\r\n        } else {\r\n            errorResponse = bizagi.localization.getResource(\"workportal-general-error\");\r\n        }\r\n\r\n        this.getFormContainer().failHandler(errorResponse);\r\n    },\r\n\r\n    /**\r\n     * Method to add new file from native or hybrid environment\r\n     */\r\n    chooseFile: function () {\r\n        if (this.isNative) {\r\n            this.$nativeFile.click();\r\n        } else if (bizagi.util.media.fileAPISupported() && !this.isOfflineForm) {\r\n            this.$inputFile.click();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to add new file\r\n     */\r\n    addFile: function () {\r\n        var self = this;\r\n        var dataFile = this.$inputFile[0].files[0];\r\n        var extensions = self.Class.EXTENSIONSIMG.concat(self.Class.EXTENSIONSFILE, self.Class.EXTENSIONSVIDEO);\r\n\r\n        dataFile.fullPath = this.$inputFile[0].value;\r\n        bizagi.loading.start();\r\n\r\n        if (bizagi.util.media.checkMaxSizeFile(dataFile, self.properties) && bizagi.util.media.checkFileTypes(dataFile, self.properties, extensions)) {\r\n\r\n            $.when(self.processUploadFile(dataFile))\r\n                .then(function (result) {\r\n                    self.onUploadFileCompleted(JSON.parse(decodeURIComponent(result)));\r\n                }).fail(function (error) {\r\n                self.executeFormFailHandler(error);\r\n            }).always(function () {\r\n                bizagi.loading.stop();\r\n            });\r\n        } else {\r\n            bizagi.loading.stop();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to remove item\r\n     * @param item\r\n     * @param id\r\n     */\r\n    removeFile: function (item, id) {\r\n        var self = this;\r\n\r\n        $.when(self.deleteUploadItem(item, id)).done(function () {\r\n            // Remove item\r\n            item.hide();\r\n            item.remove();\r\n\r\n            // Update value\r\n            self.setValue(self.files, false);\r\n\r\n            // Check maxFiles\r\n            self.checkMaxFiles();\r\n\r\n            // Trigger change\r\n            self.triggerRenderChange();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Template for upload items\r\n     */\r\n    getTemplateItemName: function () {\r\n        return \"upload-item\";\r\n    },\r\n\r\n    getElementsToStylize: function(context){\r\n        return $(\".bz-input-icon__input\", context);\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Tablet Render upload Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the label render class to adjust to tablets devices\r\n */\r\n\r\n// Extends itself\r\nbizagi.rendering.tablet.upload.extend(\"bizagi.rendering.tablet.upload.offline\", {\r\n    QUALITY_PICTURE: 50,\r\n    LIMIT: 1, // The maximum number of media in the device user can record in a single capture operation.\r\n    EXTENSIONSIMG: [\"image/jpeg\", \"jpeg\", \"image\", \"png\", \"jpg\", \"bmp\"],\r\n    EXTENSIONSFILE: [\"doc\", \"docx\", \"xls\", \"xlsx\", \"ppt\", \"pptx\", \"pdf\", \"zip\", \"rar\", \"txt\"],\r\n    EXTENSIONSVIDEO: [\"video/quicktime\", \"quicktime\", \"qt\", \"mov\"],\r\n    EXTENSIONSAUDIO: [\"audio/wav\", \"audio\", \"wav\", \"mp3\"]\r\n}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        var self = this;\r\n        this._super(data);\r\n\r\n        var maxFileSizeOfProperty = Number(this.properties.maxSize) || 1048576;\r\n        var maxFileSizeOfUser = typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\" ? Number(BIZAGI_SETTINGS.UploadMaxFileSize) : 1048576;\r\n\r\n        this.properties.maxSize = maxFileSizeOfProperty < maxFileSizeOfUser ? maxFileSizeOfProperty : maxFileSizeOfUser;\r\n\r\n        this.updateFilesCount();\r\n    },\r\n    /**\r\n     * Method to render items\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderItem: function (template, data) {\r\n        var self = this;\r\n        var items = \"\";\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, data);\r\n\r\n        // Render current children\r\n        for (var i = 0; i < self.files.length; i++) {\r\n            var file = self.files[i];\r\n            if(file.status && file.status !== \"deleted\" && file.status !== \"new-deleted\"){\r\n                var item = self.renderUploadItem(file, i);\r\n                items += item;\r\n            }\r\n        }\r\n\r\n        html = self.replaceFilesHtml(html, items);\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to customize the render's behaviour to add handlers when the control is readonly\r\n     */\r\n    configureHandlersReadOnly: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        // Handler to download the file\r\n        $(\"ul.bz-files\", $control).on(\"click\", \".bz-file .bz-file-name\", function () {\r\n            var item = $(this).parent(\".bz-file\");\r\n            self.openOfflineFile(item);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to configure the actions with control\r\n     * @return {}\r\n     */\r\n    attachEvents: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        // Attach all events\r\n        this.$contentFile.off(\"click\").on(\"click\", function (evt) {\r\n            if(self.isNative)\r\n                self.$nativeFile.click();\r\n            else\r\n                self.$inputFile.click();\r\n                self.$inputFile.off(\"change\").on(\"change\", function(){\r\n                    self.handlerWebUploadFile();\r\n                });\r\n        });\r\n\r\n        // Handler to download the file\r\n        $(\"ul.bz-files\", $control).on(\"click\", \".bz-file .bz-file-name\", function () {\r\n            var item = $(this).parent(\".bz-file\");\r\n            self.openOfflineFile(item);\r\n        });\r\n\r\n        // Attach delete option & Removes a file from the upload control\r\n        $(\"ul.bz-files\", $control).on(\"click\", \".bz-file .bz-icn\", function () {\r\n            var item = $(this).parent(\".bz-file\");\r\n            self.removeOfflineFile(item);\r\n        });\r\n\r\n        if (self.isNative) {\r\n            // Upload files\r\n            this.$nativeFile.off(\"click\").actionSheet({\r\n                actions: self.getUploadChoices(),\r\n                actionClicked: function (action) {\r\n                    // this.getBoundingClientRect()\r\n                    self.handlerUploadFile(action.guid);\r\n                },\r\n                appear: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n                },\r\n                cancelClicked: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    //Only should be used for testing purposes\r\n    handlerWebUploadFile: function(){\r\n        var self = this;\r\n        var dataFile = self.$inputFile[0].files[0];\r\n        \r\n        var fileId = bizagi.util.randomNumber();\r\n        var fileName, mimeType;\r\n        \r\n        $.when(self.getBlobFromPath(dataFile))\r\n        .then( function(blob){            \r\n            bizagi.loading.start();\r\n            mimeType = blob.type;\r\n            fileName = blob.name;\r\n            return self.saveOfflineFile(blob, fileId, mimeType);\r\n        }).then( function(saveResponse){\r\n            self.onUploadOfflineFileCompleted(fileName, mimeType, fileId);\r\n        }).always( function(){\r\n            bizagi.loading.stop();\r\n        })\r\n        self.$inputFile[0].value = \"\";\r\n    },\r\n\r\n    /**\r\n     * Handler of upload image\r\n     * @param {} ordinal\r\n     * @returns {}\r\n     */\r\n    handlerUploadFile: function (ordinal) {\r\n        var self = this;\r\n        var actionSelected = ordinal || 0;\r\n        switch (actionSelected) {\r\n            case 2:\r\n                navigator.camera.getPicture(function (dataImage) {\r\n                    self.dataImage = dataImage;\r\n                    var extensions = self.Class.EXTENSIONSIMG.concat(self.Class.EXTENSIONSVIDEO);\r\n\r\n                    bizagi.loading.start();\r\n\r\n                    $.when(bizagi.util.media.checkMaxSize(dataImage, self.properties))\r\n                        .then(function () {\r\n                            //Gets the real properties for the file\r\n                            return $.when(bizagi.util.media.getFileDataInfo(self.dataImage))\r\n                                .then(function (fileData) {\r\n                                    self.fileProperties = fileData;\r\n                                    if (bizagi.util.media.checkFileTypes(fileData, self.properties, extensions)) {\r\n                                        return self.saveImage(self.dataImage);\r\n                                    }\r\n                                });\r\n                        }).always(function () {\r\n                        bizagi.loading.stop();\r\n                    });\r\n\r\n                }, self.onFail.bind(self), {\r\n                    quality: self.Class.QUALITY_PICTURE,\r\n                    sourceType: Camera.PictureSourceType.PHOTOLIBRARY,\r\n                    correctOrientation: true\r\n                });\r\n                break;\r\n            case 1:\r\n                navigator.camera.getPicture(function (dataImage) {\r\n                        bizagi.loading.start();\r\n\r\n                        $.when(bizagi.util.media.checkMaxSize(dataImage, self.properties)).then(function () {\r\n                            return $.when(bizagi.util.media.getFileDataInfo(dataImage)).then(function (fileData) {\r\n                                self.fileProperties = fileData;\r\n                                return self.saveImage(dataImage);\r\n                            });\r\n                        }).always(function () {\r\n                            bizagi.loading.stop();\r\n                        });\r\n                    },\r\n                    self.onFail.bind(self), {\r\n                        quality: self.Class.QUALITY_PICTURE,\r\n                        sourceType: navigator.camera.PictureSourceType.CAMERA,\r\n                        mediaType: navigator.camera.MediaType.PICTURE,\r\n                        destinationType: Camera.DestinationType.FILE_URI,\r\n                        correctOrientation: true,\r\n                        targetWidth: 1280,\r\n                        targetHeight: 960\r\n                    });\r\n                break;\r\n            default:\r\n                console.log(\"The option is not supported!\")\r\n                break;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Add the interactions to the upload control items\r\n     * @return {}\r\n     */\r\n    addInteractions: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Attach delete option & Removes a file from the upload control\r\n        $(\"ul.bz-files\", control).on(\"click\", \".bz-file .bz-file__delete\", function () {\r\n            var item = $(this).parent(\".bz-file\");\r\n            self.removeOfflineFile(item);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Collect Data\r\n     * @param {} renderValues\r\n     * @returns {}\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n\r\n        if (self.filesCount > 0) {\r\n            renderValues[self.properties.xpath] = self.files;\r\n        } else if (self.properties.method === \"delete\") {\r\n            renderValues[self.properties.xpath] = [];\r\n\r\n            delete self.properties.method;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Send image using HTTP\r\n     * @param {} dataImage\r\n     */\r\n    saveImage: function (dataImage) {\r\n        var self = this;\r\n        bizagi.loading.start();\r\n\r\n        var fileId = bizagi.util.randomNumber();\r\n        var fileName = self.fileProperties.name\r\n        var mimeType;\r\n\r\n        //TODO: SWAT Check if the file already exists\r\n        $.when(self.getBlobFromPath(dataImage))\r\n        .always( function(){\r\n            bizagi.loading.stop();\r\n        })\r\n        .then( function(blob){\r\n            mimeType = blob.type;\r\n            fileName = blob.name;\r\n            return self.saveOfflineFile(blob, fileId, mimeType);\r\n        }).then( function(saveResponse){            \r\n            self.onUploadOfflineFileCompleted(fileName, mimeType, fileId);            \r\n        });\r\n        self.$inputFile[0].value = \"\";\r\n    },\r\n\r\n    /**\r\n     * Check allow extensions and define possible choices\r\n     * Only support to image in offline capability\r\n     * @returns {}\r\n     */\r\n    checkFileExtensions: function () {\r\n        var self = this;\r\n        var validExtensions = self.properties.validExtensions || \"\";\r\n\r\n        self.validOptions = {video: false, image: false, file: false};\r\n\r\n        // Preprocess the extensions string\r\n        validExtensions = validExtensions.replace(/\\s+/g, \"\").toLowerCase();\r\n\r\n        if (typeof (validExtensions) === \"undefined\" || validExtensions === \"\") {\r\n            self.validOptions.image = true;\r\n        } else {\r\n            validExtensions = validExtensions.split(\";\");\r\n\r\n            if (validExtensions.length === 1 && validExtensions[0].indexOf(\"*.*\") !== -1) {\r\n                self.validOptions.image = true;\r\n            } else {\r\n                for (var i = 0, length = validExtensions.length; i < length; i++) {\r\n                    validExtensions[i] = validExtensions[i].replace(\"*.\", \"\");\r\n\r\n                    if (self.Class.EXTENSIONSIMG.toString().indexOf(validExtensions[i]) >= 0) {\r\n                        self.validOptions.image = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Media is not supported then upload control is disabled\r\n        if (!self.validOptions.image) {\r\n            $(self.$contentFile).addClass(\"bz-file-upload__container--hidden\");\r\n        }\r\n\r\n        // Limit of files is reached then upload control is disabled\r\n        if (self.isMaxFilesReached() || !bizagi.util.media.fileAPISupported() ) {\r\n            $(this.$contentFile).addClass(\"bz-file-upload__container--hidden\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * onUploadOfflineFileCompleted\r\n     * @param {} result\r\n     */\r\n    onUploadOfflineFileCompleted: function (fileName, mimeType, fileId) {\r\n        var self = this;\r\n        var $wrapper = $(\".bz-files\", self.getControl());\r\n\r\n        var fileUploaded = {\r\n            id: fileId,\r\n            fileName: fileName,\r\n            mimeType: mimeType,\r\n            status: \"new\"\r\n        };\r\n\r\n        // Locate it before the upload wrapper\r\n        var newItem = self.renderUploadItem(fileUploaded, self.files.length);\r\n        $wrapper.append(newItem);\r\n\r\n        // Increment counter\r\n        self.filesCount = self.filesCount + 1;\r\n\r\n        // Copy the files value but not its reference\r\n        var files = self.files.slice();\r\n\r\n        //Add the new item to this temporal array\r\n        files.push(fileUploaded);\r\n\r\n        // Update value\r\n        self.setValue(files, false);\r\n\r\n        // Check maxFiles\r\n        self.checkMaxFiles(); \r\n    },\r\n\r\n    /**\r\n     * Renders a single upload item\r\n     * @param file\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderUploadItem: function (file, index) {\r\n        var self = this;\r\n        var itemTemplate = self.getTemplateItemName();\r\n        var template = self.renderFactory.getTemplate(itemTemplate);\r\n\r\n        var html = $.fasttmpl(template, {\r\n            url: \"javascript:void(0);\",\r\n            id: file.id,\r\n            allowDelete: self.properties.allowDelete || false,\r\n            filename: file.fileName,\r\n            index: index\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * This render cannot be sent because it is full ajax\r\n     * @returns {}\r\n     */\r\n    canBeSent: function () {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Fail action\r\n     * @param {} evt\r\n     * @returns {}\r\n     */\r\n    failReadFile: function (evt) {\r\n        try {\r\n            bizagi.log(\"Error code: \" + evt.target.error.code);\r\n        } catch (e) {\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Fail action\r\n     * @param {} error\r\n     * @returns {}\r\n     */\r\n    onFail: function (error) {\r\n        this._super(error);\r\n    },\r\n\r\n    /**\r\n     * Method to remove item\r\n     * @param item\r\n     * @param id\r\n     */\r\n    removeOfflineFile: function (item) {\r\n        var self = this;\r\n        var file = item.data();\r\n        var fileIndex = file.index;\r\n\r\n        // Mark the file as deleted\r\n        var fileValue = self.files[fileIndex];\r\n        if( !fileValue){\r\n            //Nothing to do\r\n            return;\r\n        }\r\n        if(fileValue.status !== \"new\"){\r\n            fileValue.status = \"deleted\";\r\n        }\r\n        else {\r\n            fileValue.status = \"new-deleted\";\r\n        }        \r\n\r\n        // Remove item\r\n        item.hide();\r\n        item.remove();\r\n\r\n        // Update value\r\n        self.setValue(self.files, false);\r\n\r\n        // Check maxFiles\r\n        self.checkMaxFiles();\r\n\r\n        // Trigger change\r\n        self.triggerRenderChange();\r\n    },\r\n\r\n    /**\r\n     * Update the filesCount attribute based on the status (new|deleted) of each file\r\n     */\r\n    updateFilesCount: function(){\r\n        var self = this;\r\n        var files = this.properties.value;\r\n\r\n        for(var i=0; i < files.length; i++){\r\n            var status = files[i].status;\r\n            if( status && status.includes(\"deleted\") ) {\r\n                self.filesCount= self.filesCount - 1;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n        self._super(value, triggerEvents);\r\n        self.updateFilesCount();\r\n        if (self.filesCount === 0) {\r\n            self.properties.method = \"delete\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if the maximum number of files than can be uploaded has been reached\r\n     * @returns {}\r\n     */\r\n    isMaxFilesReached: function () {\r\n        var maxFiles = this.properties.maxfiles;\r\n        return maxFiles !== 0 && (this.filesCount >= maxFiles);\r\n    },\r\n\r\n    openOfflineFile: function(item) {\r\n        var self = this;\r\n        var file = item.data();\r\n        var dataIndex = file.index;\r\n        var selectedValue = typeof (dataIndex) == \"number\" ? self.properties.value[dataIndex] : null;\r\n        if (selectedValue) {\r\n            var formParams = self.getFormParams();\r\n            var getFileParams = {\r\n                idCase: formParams.idCase,\r\n                idWorkitem: formParams.idWorkitem,\r\n                id: self.properties.xpath + '.' + selectedValue.id,\r\n                offlineType: formParams.offlineType\r\n            }\r\n            bizagi.loading.start();\r\n            $.when(self.dataService.getOfflineFile( getFileParams, \"blob\", selectedValue.mimeType))\r\n            .done( function(binaryFile){\r\n                var fileName = file.title;\r\n                bizagi.util.media.handleBinaryFile( binaryFile, fileName);\r\n            })\r\n            .fail( function(error){\r\n                console.log(\"Error opening offline file\", error);\r\n            })\r\n            .always( function() {\r\n                bizagi.loading.stop();\r\n            });\r\n        }\r\n    },\r\n\r\n    getBlobFromPath: function(path){\r\n        var blobPromise = new $.Deferred();\r\n        var self = this;\r\n\r\n        if(self.isNative){\r\n            var fileName = self.fileProperties.name;            \r\n            if (!bizagi.util.isAndroidDevice()) {\r\n                path = bizagi.util.media.normalizeIOSFilePath(path);\r\n            }\r\n            else{\r\n                // Fix android 4.4 getting images from recent folder\r\n                path = bizagi.util.media.getImagePath(path);\r\n            }\r\n            \r\n            var errorHandler = function (error) {\r\n                console.log('Error converting path to blob', error);  \r\n                blobPromise.reject(error);\r\n            };\r\n    \r\n            window.resolveLocalFileSystemURL(path, function (fileEntry) {\r\n                fileEntry.file(function (file) {    \r\n                    var reader = new FileReader();\r\n                    reader.onloadend = function () {\r\n                        var blob = new Blob([this.result], {type: file.type});\r\n                        blob.name = fileName;\r\n                        blobPromise.resolve(blob);\r\n                    }\r\n                    reader.readAsArrayBuffer(file);\r\n                }, errorHandler);\r\n            }, errorHandler);\r\n        }\r\n        else {\r\n            //In browser is the File\r\n            blobPromise.resolve(path);\r\n        }\r\n        return blobPromise;\r\n    },\r\n\r\n    saveOfflineFile: function(blobFile, fileId, mimeType){\r\n        var self = this;\r\n        var formParams = self.getFormParams();\r\n        var parameters = {\r\n            idCase: formParams.idCase,\r\n            idWorkitem: formParams.idWorkitem,\r\n            id: self.properties.xpath + '.' + fileId,\r\n            operationType: \"edition\",\r\n            offlineType: formParams.offlineType\r\n        }        \r\n        return self.dataService.saveOfflineFile(parameters, blobFile, mimeType);\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Grid Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the grid render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.grid\", bizagi.rendering.grid.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.grid.extend(\"bizagi.rendering.tablet.grid\", {\r\n    GRID_PAGE_SIZE: 10\r\n}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n        var data = params.data;\r\n\r\n        // Create a single instance for each cell\r\n        data.properties.singleInstance = false;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Create a data-structure to keep track of each cell properties\r\n        this.cellMetadata = {};\r\n\r\n        // Check if offline forms is supported\r\n        this.isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var form = self.getFormContainer();\r\n\r\n        // If not helptext configured, Just apply display-type: vertical, align it to the left\r\n        if (self.properties.helpText && self.properties.helpText != null && self.properties.helpText != \"\") {\r\n            properties.displayType = \"value\";\r\n        } else {\r\n            properties.displayType = \"vertical\";\r\n        }\r\n\r\n        properties.labelAlign = \"left\";\r\n\r\n        if (properties.groupBy || properties.groupSummary) {\r\n            // Add warning\r\n            form.addWarning(self.getResource(\"render-tablet-warning-grid\"));\r\n        }\r\n    },\r\n\r\n    /* method overrides\r\n    *  from base or virtual\r\n    */\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n\r\n        // Create a single instance for each cell\r\n        data.properties.singleInstance = false;\r\n\r\n        // Call base\r\n        this._super(data);\r\n    },\r\n\r\n    /*\r\n    * Updates manually the affected cell \r\n    */\r\n    updateAffectedCellManually: function () {\r\n    },\r\n\r\n    /*\r\n    * Get the row index using the key as a reference\r\n    */\r\n    getRowIndexByKey: function () {\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    postRender: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        self.initialLoadDone = false;\r\n        self.isPaginatorActive = false;\r\n\r\n        // Call base \r\n        self._super();\r\n\r\n        // Find component holder\r\n        self.grid = $(\">div\", control);\r\n\r\n        // Hide common label\r\n        self.getLabel().hide();\r\n\r\n        // Grid plugin\r\n        self.applyGridPlugin();\r\n\r\n        // Set initial data\r\n        if (properties.data) {\r\n\r\n            self.updateData(properties.data);\r\n\r\n            // Trigger change in order to start up the actions when the controls is ready\r\n            $.when(self.ready()).done(function () {\r\n                self.triggerRenderChange({changed: false});\r\n            });\r\n        }\r\n\r\n        // Execute pending actions\r\n        self.initialLoadDone = true;\r\n\r\n        for (var i in self.pendingActions) {\r\n            if (self.pendingActions.hasOwnProperty(i)) {\r\n                self.pendingActions[i].method.apply(self, self.pendingActions[i].arguments);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {}\r\n     */\r\n    applyGridPlugin: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n        var grid = self.grid;\r\n\r\n        // Build column metadata\r\n        var columns = self.buildColumnModel();\r\n\r\n        var columnsTotalizers = $.grep(columns, function (a) {\r\n            return (a.summarizeBy);\r\n        });\r\n\r\n        // Apply grid plugin\r\n        grid.bizagi_grid_tablet({\r\n            columns: columns,\r\n            maxColumns: 4,\r\n            title: properties.displayName,\r\n            isOfflineForm: self.isOfflineForm || false,\r\n            mode: mode,\r\n            template: {\r\n                grid: self.renderFactory.getTemplate(\"bizagi.grid.grid\"),\r\n                waiting: self.renderFactory.getTemplate(\"bizagi.grid.waiting\"),\r\n                table: self.renderFactory.getTemplate(\"bizagi.grid.table\"),\r\n                emptyTable: self.renderFactory.getTemplate(\"bizagi.grid.table.empty\"),\r\n                column: self.renderFactory.getTemplate(\"bizagi.grid.column\"),\r\n                specialColumn: self.renderFactory.getTemplate(\"bizagi.grid.column.special\"),\r\n                row: self.renderFactory.getTemplate(\"bizagi.grid.row\"),\r\n                rowButtons: self.renderFactory.getTemplate(\"bizagi.grid.row.buttons\"),\r\n                cell: self.renderFactory.getTemplate(\"bizagi.grid.cell\"),\r\n                specialCell: self.renderFactory.getTemplate(\"bizagi.grid.cell.special\"),\r\n                pager: self.renderFactory.getTemplate(\"bizagi.grid.pager\"),\r\n                buttons: self.renderFactory.getTemplate(\"bizagi.grid.buttons\"),\r\n                dynamicPager: self.renderFactory.getTemplate(\"bizagi.grid.dynamicpager\"),\r\n                totalizer: self.renderFactory.getTemplate(\"bizagi.grid.totalizer\")\r\n            },\r\n            actions: {\r\n                add: properties.allowAdd, //|| properties.inlineAdd,\r\n                edit: (properties.allowEdit && properties.withEditForm && properties.data != null),\r\n                details: properties.allowDetail,\r\n                remove: properties.allowDelete,\r\n                inlineAdd: false, //properties.inlineAdd,\r\n                allowMore: properties.allowMore,\r\n                enableXlsExport: false,\r\n                enablePdfExport: false,\r\n                hasTotalizer: columnsTotalizers.length > 0 && properties.data.rows.length > 0 ? true : false\r\n            },\r\n            pageRequested: function (ui) {\r\n                if (mode != \"execution\") return;\r\n                self.fetchData(ui.page, ui.sortBy, ui.sortType);\r\n            },\r\n            sortRequested: function (ui) {\r\n                if (mode != \"execution\") return;\r\n                self.fetchData(ui.page, ui.sortBy, ui.sortType);\r\n            },\r\n            drawCell: function (ui) {\r\n                return self.drawCell(ui.column, ui.key, ui.value, ui.isNewRow);\r\n            },\r\n            cellReady: function (ui) {\r\n                return self.onCellReady(ui.column, ui.key, ui.cell, ui.isNewRow);\r\n            },\r\n            rowSelected: function (ui) {\r\n                if (mode != \"execution\") return;\r\n                self.triggerHandler(\"rowSelected\", { id: ui.key, data: ui });\r\n            },\r\n            addRow: function (ui) {\r\n                if (mode != \"execution\") return;\r\n                self.addRow();\r\n            },\r\n            editRow: function (ui) {\r\n                if (mode != \"execution\") return;\r\n                self.editRow(ui.key);\r\n            },\r\n            deleteRow: function (ui) {\r\n                if (mode != \"execution\") return;\r\n                self.deleteRow(ui.key);\r\n            },\r\n            moreRows: function (ui) {\r\n                if (mode != \"execution\")\r\n                    return;\r\n                self.moreRows(ui);\r\n            },\r\n            showFormDetails: function (ui) {\r\n                self.showDetailForm(ui.key);\r\n            },\r\n            showMore: function (ui) {\r\n                if (mode != \"execution\") return;\r\n                self.showMore(ui.key);\r\n            },\r\n            totalData: function (ui) {\r\n                if (mode != \"execution\") return;\r\n                self.onTotalData();\r\n            }\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Method to render non editable values\r\n    */\r\n    postRenderReadOnly: function () {\r\n        // Do the same as the post-render            \r\n        this.postRender();\r\n    },\r\n\r\n    /**\r\n     *   Creates the column model required to initialize the grid plugin\r\n     */\r\n    buildColumnModel: function () {\r\n        var self = this;\r\n        var columns = self.columns;\r\n\r\n        // Create id column first\r\n        var keyColumn = {\r\n            name: \"id\",\r\n            index: 0,\r\n            label: \"id\",\r\n            hidden: true,\r\n            align: \"center\",\r\n            required: false,\r\n            key: true\r\n        };\r\n\r\n        // Add to column model\r\n        var columnModel = [];\r\n        columnModel.push(keyColumn);\r\n\r\n        $.each(columns, function (index, column) {\r\n\r\n            // Set grid column\r\n            column.columnIndex = index + 1;\r\n            var columnLabel = !bizagi.util.isEmpty(column.properties.displayName) ? column.properties.displayName : \" \";\r\n            var gridColumn = {\r\n                name: column.properties.xpath,\r\n                index: index + 1,\r\n                label: columnLabel,\r\n                required: column.properties.required || false,\r\n                key: false,\r\n                hidden: (!column.properties.visible || column.properties.type == \"columnHidden\" || column.properties.columnVisible == false),\r\n                summarizeBy: (column.properties.totalize && column.properties.totalize.operation ? column.properties.totalize.operation : undefined),\r\n                bizAgiProperties: column.properties\r\n            };\r\n\r\n            columnModel.push(gridColumn);\r\n        });\r\n\r\n        return columnModel;\r\n    },\r\n\r\n    /**\r\n     * Makes the grid to refresh\r\n     */\r\n    refresh: function () {\r\n        this.fetchData();\r\n    },\r\n\r\n    /*\r\n    *   Holds the execution until the grid data is ready after a load operation\r\n    */\r\n    dataReady: function () {\r\n        return this.dataReadyDeferred != null ? this.dataReadyDeferred.promise() : null;\r\n    },\r\n\r\n    /*\r\n    * Update data from local changes\r\n    */\r\n    loadChanges: function (rows) {\r\n        var self = this;\r\n        var idRow = [], i;\r\n\r\n        // get data from the rows\r\n        for (i = 0, length = rows.length; i < length; i++) {\r\n            idRow.push([rows[i][0], i]); // save id and index\r\n        }\r\n\r\n        for (i = 0, idRowLength = idRow.length; i < idRowLength; i++) {\r\n            var properties = self.changes[idRow[i][0]];\r\n            var index;\r\n            // search for changes\r\n            if (properties !== undefined) {\r\n                var xpath, columnNumber;\r\n                index = idRow[i][1];\r\n\r\n                // update all properties in data\r\n                for (xpath in properties) {\r\n                    if (properties.hasOwnProperty(xpath)) {\r\n                        columnNumber = self.getColumn(xpath).columnIndex;\r\n                        rows[index][columnNumber] = properties[xpath];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Method to set data and update the grid\r\n    */\r\n    updateData: function (data) {\r\n        var self = this;\r\n        var grid = self.grid;\r\n        var columns = self.columns;\r\n\r\n        // Set value in control\r\n        if (data) {\r\n            self.properties.data = data;\r\n            self.setCellOverrides(data, columns);\r\n            grid.bizagi_grid_tablet(\"setData\", data);\r\n\r\n\r\n            if (self.properties.data && self.properties.data.total > self.Class.GRID_PAGE_SIZE) {\r\n                self.alternativePaginator();\r\n                self.isPaginatorActive = true;\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Method to fetch data from the server and then update the data\r\n    */\r\n    fetchData: function (page, sortBy, sortType) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        self.dataReadyDeferred = new $.Deferred();\r\n\r\n        // Define defaults\r\n        page = page || (properties.page || 1);\r\n        sortBy = sortBy || (properties.sortBy || \"\");\r\n        sortType = sortType || (properties.sortOrder || \"asc\");\r\n\r\n        // Update control properties\r\n        properties.page = page;\r\n        properties.sortBy = sortBy;\r\n        properties.sortType = sortType;\r\n        properties.sort = sortBy + \" \" + sortType;\r\n\r\n        // Start loading to avoid multiple calls to the server\r\n        self.startLoading();\r\n\r\n        $.when(self.getRemoteData())\r\n            .then(function (data) {\r\n                if (data) {\r\n                    if (data.deviceMaxRecordsExceeded) {\r\n                        bizagi.showMessageBox(bizagi.localization.getResource(\"render-search-maximum-records-allowed\"));\r\n                    } else {\r\n                        if (self.isRTL()) {\r\n                            data.rows = self.changeOrderData(data.rows);\r\n                        }\r\n                        self.loadChanges(data.rows);\r\n                        self.updateData(data);\r\n                        self.triggerRenderChange();\r\n                        self.dataReadyDeferred.resolve();\r\n                    }\r\n                }\r\n            }).always(function () {\r\n            self.endLoading();\r\n        });\r\n    },\r\n\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var grid = self.grid;\r\n\r\n        // Save pending inline add rows\r\n        if (self.grid && (self.properties.inlineAdd || self.properties.inlineEdit)) {\r\n            var newKeys = grid.bizagi_grid_tablet.hasOwnProperty(\"getNewRowKeys\") ? grid.bizagi_grid_tablet(\"getNewRowKeys\") : [];\r\n\r\n            // Save new rows then save the whole screen\r\n            if (newKeys.length > 0 && !self.properties.alreadySaved && self.isValid()) {\r\n                var saveDeferred = self.saveInlineAddedRows(newKeys, true);\r\n\r\n                // Add to deferred collections in order to sync when saving\r\n                renderValues.deferreds = renderValues.deferreds || [];\r\n                renderValues.deferreds.push(saveDeferred);\r\n            }\r\n\r\n            // Remove adding keys from current changes\r\n            for (var i = 0; i < newKeys.length; i++) {\r\n                if (self.changes[newKeys[i]]) {\r\n                    delete self.changes[newKeys[i]];\r\n                }\r\n            }\r\n        }\r\n\r\n        // Call base method\r\n        self._super(renderValues);\r\n    },\r\n\r\n    /*\r\n    *   Customizes the content drawing inside the cell\r\n    */\r\n    drawCell: function (column, key, value, isNewRow) {\r\n        var self = this;\r\n        if (column.key) return value;\r\n\r\n        self.newRecords = self.newRecords || {};\r\n        // Get render column\r\n        var columnIndex = column.index - 1;\r\n        var renderColumn = self.columns[columnIndex];\r\n\r\n        // Get cell properties\r\n        if (!self.cellMetadata[key]) self.cellMetadata[key] = {};\r\n        if (!self.cellMetadata[key][columnIndex]) self.cellMetadata[key][columnIndex] = {};\r\n        var properties = self.cellMetadata[key][columnIndex].properties || renderColumn.originalProperties;\r\n\r\n        var visible = properties.visible !== undefined ? properties.visible : true;\r\n        var editable = properties.editable !== undefined ? properties.editable : true;\r\n        properties.editable = false;\r\n\r\n        // Show editable cell when we are performing inline add operation\r\n        if (isNewRow) editable = true;\r\n        renderColumn.properties.displayType = 'value';\r\n\r\n        if (key == \"summary\") {\r\n            editable = false;\r\n        }\r\n\r\n        // Set the value of labelAlign and valueAlign to use the rendering in the base\r\n        //TODO: validar despues que sucede si se adiciona a la base para todos los dispositivos\r\n        /*renderColumn.properties.labelAlign = \"center\"\r\n        if (renderColumn.properties.columntitlealign) {\r\n            renderColumn.properties.labelAlign = renderColumn.properties.columntitlealign;\r\n        }\r\n\r\n        renderColumn.properties.valueAlign = \"center\"\r\n        if (renderColumn.properties.columnAlign) {\r\n            renderColumn.properties.valueAlign = renderColumn.properties.columnAlign;\r\n        }*/\r\n\r\n        if (properties.visible) {\r\n            var defer = new $.Deferred();\r\n\r\n            $.when(renderColumn.renderReadOnly(key, value)).done(function (cell) {\r\n                // Register array with new records              \r\n                for (var j = 0; j < self.columns.length; j++) {\r\n                    self.cellOverrides[key] = self.cellOverrides[key] || {};\r\n                    self.getCellOverride(key, j).visible = true;\r\n                }\r\n                defer.resolve(cell);\r\n            });\r\n            //return renderColumn.renderReadOnly(key, value);\r\n            return defer.promise();\r\n        } else {\r\n\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n\r\n    /*\r\n    *   Executes when the cell is ready and inserted into the DOM\r\n    */\r\n    onCellReady: function (column, key, cell, isNewRow) {\r\n        var self = this;\r\n\r\n        // Get render column\r\n        var columnIndex = column.index - 1;\r\n        var renderColumn = self.columns[columnIndex];\r\n        var properties = ((self.cellMetadata[key][columnIndex] != undefined) ? self.cellMetadata[key][columnIndex].properties : undefined) || renderColumn.originalProperties;\r\n        var visible = properties.visible !== undefined ? properties.visible : true;\r\n        var editable = properties.editable !== undefined ? properties.editable : true;\r\n\r\n        // Show editable cell when we are performing inline add operation\r\n        if (isNewRow) editable = true;\r\n        else editable = false;\r\n        if (visible) {\r\n            if (editable) {\r\n                // Set editable\r\n                var originalEditable = renderColumn.properties.editable;\r\n                renderColumn.properties.editable = editable;\r\n\r\n                if (renderColumn.properties.submitOnChange) {\r\n                    var control = renderColumn.getDecorated(key);\r\n                    if (control) {\r\n                        control.properties.submitOnChangexpathContext = self.properties.xpath + \"[]\";\r\n                    }\r\n                }\r\n\r\n\r\n                // Execute cell post render\r\n                renderColumn.postRender(key, cell);\r\n\r\n                // Restore editable\r\n                renderColumn.properties.editable = originalEditable;\r\n            } else {\r\n                renderColumn.postRenderReadOnly(key, cell);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     *  Adds a row to the grid\r\n     */\r\n    addRow: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var formParams = self.getFormParams();\r\n\r\n        // Start loading\r\n        self.startLoading();\r\n\r\n        // Send add request\r\n        $.when(self.submitAddRequest())\r\n            .done(function (newid) {\r\n\r\n                // Show a slide with new form after that\r\n                var slideView = new bizagi.rendering.tablet.slide.view(self.dataService, self.renderFactory, {\r\n                    title: self.properties.displayName || \"\",\r\n                    container: form.container,\r\n                    formParams: formParams,\r\n                    navigation: formParams.navigation,\r\n                    showSaveButton: true,\r\n                    onSave: function (data) {\r\n                        return self.submitSaveRequest(newid, data);\r\n                    }\r\n                });\r\n\r\n                // End Loading\r\n                self.endLoading();\r\n\r\n                var recordXpath = properties.xpath + \"[id=\" + newid + \"]\";\r\n\r\n                slideView.render({\r\n                    idRender: properties.id,\r\n                    recordXPath: recordXpath,\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache,\r\n                    requestedForm: \"addForm\",\r\n                    url: properties.addPage,\r\n                    formParams: formParams,\r\n                    navigation: formParams.navigation\r\n                }).done(function () {\r\n\r\n                    self.endLoading();\r\n\r\n                    if (!properties.submitOnChange) {\r\n                        // Reload grid\r\n                        self.fetchData();\r\n\r\n                    } else {\r\n                        // Submits the entire form\r\n                        self.submitOnChange();\r\n                    }\r\n\r\n                }).fail(function () {\r\n                    self.endLoading();\r\n                    self.submitRollbackRequest();\r\n                });\r\n            });\r\n\r\n    },\r\n\r\n    /**\r\n     *  Edits a row in the grid\r\n     */\r\n    editRow: function (id) {\r\n\r\n        if (id == 0) {\r\n            bizagi.showMessageBox(bizagi.localization.getResource(\"render-grid-message-no-selected-row\"), bizagi.localization.getResource(\"render-grid-header-no-selected-row\"));\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Use tablet inline edit when there are no edit form\r\n        if (properties.inlineEdit == true && properties.allowEdit == false) {\r\n            self.editInline(id);\r\n            return;\r\n        }\r\n\r\n        if (self.cleanActionChanges && self.cleanActionChanges[id] !== undefined) {\r\n\r\n            self.changes = self.cleanActionChanges;\r\n            var data = $.extend(self.changes[id], {});\r\n            data.idPageCache = properties.idPageCache;\r\n\r\n            $(\".ui-tooltip\").remove();\r\n\r\n            $.when(self.submitSaveRequest(id, data)).done(function () {\r\n                // Set loading status\r\n                self.startLoading();\r\n\r\n                if (!properties.submitOnChange) {\r\n                    // Reload grid\r\n                    self.endLoading();\r\n\r\n                    self.fetchData();\r\n                } else {\r\n                    // Submits the entire form\r\n                    self.submitForGridChange().always(function () {\r\n                        self.endLoading();\r\n\r\n                        // Send edit request\r\n                        self.executeSubmitEditRequest(id);\r\n                    });\r\n                }\r\n            });\r\n        } else {\r\n            self.executeSubmitEditRequest(id);\r\n        }\r\n    },\r\n\r\n    executeSubmitEditRequest: function (id) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var formParams = self.getFormParams();\r\n\r\n\r\n        var slideView = new bizagi.rendering.tablet.slide.view(self.dataService, self.renderFactory, {\r\n            title: self.properties.displayName || \"\",\r\n            container: form.container,\r\n            formParams: formParams,\r\n            navigation: formParams.navigation,\r\n            showSaveButton: true,\r\n            onSave: function (data) {\r\n                return self.submitSaveRequest(id, data);\r\n            }\r\n        });\r\n\r\n        self.startLoading();\r\n\r\n        $.when(self.submitEditRequest(id))\r\n            .done(function () {\r\n\r\n                // Show dialog with new form after that\r\n                var recordXpath = properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n                slideView.render({\r\n                    idRender: properties.id,\r\n                    recordXPath: recordXpath,\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache,\r\n                    requestedForm: \"editForm\",\r\n                    url: properties.editPage,\r\n                    formParams: formParams,\r\n                    navigation: formParams.navigation\r\n                }).done(function () {\r\n                    if (!properties.submitOnChange) {\r\n                        // Reload grid\r\n                        self.fetchData();\r\n\r\n                    } else {\r\n                        // Submits the entire form\r\n                        self.submitOnChange();\r\n                    }\r\n                }).fail(function () {\r\n                    self.startLoading();\r\n                    $.when(self.submitRollbackRequest()).always(function () {\r\n                        self.endLoading();\r\n                    });\r\n                });\r\n            }).always(function () {\r\n            self.endLoading();\r\n        });\r\n    },\r\n\r\n    showDetailForm: function (id) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var formParams = self.getFormParams();\r\n\r\n        var slideView = new bizagi.rendering.tablet.slide.view(self.dataService, self.renderFactory, {\r\n            title: self.properties.displayName || \"\",\r\n            container: form.container,\r\n            formParams: formParams,\r\n            navigation: formParams.navigation,\r\n            showSaveButton: false\r\n        });\r\n\r\n        // Show dialog with new form after that\r\n        var recordXpath = properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n        slideView.render({\r\n            idRender: properties.id,\r\n            recordXPath: recordXpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            requestedForm: \"detailForm\",\r\n            url: properties.editPage,\r\n            formParams: formParams,\r\n            navigation: formParams.navigation\r\n        });\r\n    },\r\n    /**\r\n     *  Deletes  a row to the grid\r\n     */\r\n    deleteRow: function (id) {\r\n        if (id === 0) {\r\n            bizagi.showMessageBox(\r\n                bizagi.localization.getResource(\"render-grid-message-no-selected-row\"),\r\n                bizagi.localization.getResource(\"render-grid-header-no-selected-row\")\r\n            );\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n\r\n        bizagi.showConfirmationBox(this.getResource(\"render-grid-delete-confirmation\"))\r\n            .done(function () {\r\n                // Do a grid record deletion\r\n                $.when(self.submitDeleteRequest(id))\r\n                    .done(function (data) {\r\n                        // Reload grid\r\n                        self.fetchData();\r\n\r\n                        if (data.type === \"success\") {\r\n                            // Trigger the event\r\n                            //'key' must be included to trigger a single call to actions and validations\r\n                            //line 310 bizagi.command.controllers.action\r\n                            self.triggerRenderChange({ rowDeleted: true, changed: false, key: id });\r\n                        }\r\n                    });\r\n            });\r\n    },\r\n\r\n    moreRows: function (ui) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (typeof properties.originalrowsPerPage === \"undefined\") {\r\n            properties.originalrowsPerPage = properties.rowsPerPage;\r\n        }\r\n\r\n        properties.rowsPerPage += properties.originalrowsPerPage;\r\n\r\n        var dataToSend = {};\r\n        self.collectData(dataToSend);\r\n\r\n        self.startLoading();\r\n\r\n        if (jQuery.isEmptyObject(dataToSend)) {\r\n            self.moreRowsCommon(ui);\r\n            return;\r\n        }\r\n        // Send the data\r\n        self.dataService.submitData({\r\n            action: \"SUBMITONCHANGE\",\r\n            data: dataToSend,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache\r\n        }).done(function () {\r\n\r\n            self.endLoading();\r\n\r\n            self.moreRowsCommon(ui);\r\n        });\r\n\r\n    },\r\n\r\n    moreRowsCommon: function (ui) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        self.fetchData(ui.page, ui.sortBy, ui.sortType);\r\n\r\n        $.when(self.dataReadyDeferred).done(function () {\r\n\r\n            if (properties.records != 0)\r\n                if (properties.records + 1 <= properties.rowsPerPage) {\r\n                    $(\".ui-bizagi-grid-dynamic-pager\", self.getControl()).hide();\r\n                }\r\n\r\n        });\r\n    },\r\n\r\n    /**\r\n     *  Shows more info about a grid row\r\n     */\r\n    showMore: function (id) {\r\n        var self = this;\r\n        var data = self.properties.data;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var formParams = self.getFormParams();\r\n\r\n        // Search row\r\n        var currentRow = [];\r\n        for (var i = 0, length = data.rows.length; i < length; i++) {\r\n            if (data.rows[i][0] == id) {\r\n                currentRow = data.rows[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Render grid view\r\n        var slideView = new bizagi.rendering.tablet.slide.grid(self.dataService, self.renderFactory, {\r\n            title: self.properties.displayName || \"\",\r\n            container: form.container,\r\n            allowEdition: false,\r\n            formParams: formParams,\r\n            navigation: formParams.navigation\r\n        });\r\n\r\n        self.startLoading();\r\n\r\n        slideView.render({\r\n            row: currentRow,\r\n            columns: self.columns,\r\n            pageCacheId: properties.idPageCache,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            sessionId: form.properties.sessionId,\r\n            actions: form.actions,\r\n            formParams: formParams,\r\n            navigation: formParams.navigation\r\n        }).done(function () {\r\n            self.endLoading();\r\n        });\r\n    },\r\n\r\n    /**\r\n     *  Edits the entire row (inline) in another slide\r\n     */\r\n    editInline: function (id) {\r\n        var self = this;\r\n        var data = self.properties.data;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var formParams = self.getFormParams();\r\n\r\n        // Search row\r\n        var currentRow = [];\r\n        for (var i = 0, length = data.rows.length; i < length; i++) {\r\n            if (data.rows[i][0] == id) {\r\n                currentRow = data.rows[i];\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Render grid view\r\n        var slideView = new bizagi.rendering.tablet.slide.grid(self.dataService, self.renderFactory, {\r\n            title: self.properties.displayName || \"\",\r\n            container: form.container,\r\n            formParams: formParams,\r\n            navigation: formParams.navigation,\r\n            allowEdition: true\r\n        });\r\n\r\n        // Render the editable view\r\n        $.when(slideView.render({\r\n            row: currentRow,\r\n            columns: self.columns,\r\n            pageCacheId: properties.idPageCache,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            sessionId: form.properties.sessionId,\r\n            actions: form.actions,\r\n            validations: form.validations,\r\n            formParams: formParams,\r\n            navigation: formParams.navigation\r\n        })).done(function (data) {\r\n            // This code is executed when the user press save on the slide\r\n\r\n            // Update internal data\r\n            for (xpath in data) {\r\n                self.collectGridChange({ id: id, xpath: xpath, value: data[xpath], trigger: false });\r\n            }\r\n\r\n            // Prepare grid data\r\n            var dataToSend = {};\r\n            self.collectData(dataToSend);\r\n\r\n            // Send the data\r\n            self.dataService.submitData({\r\n                action: \"SUBMITONCHANGE\",\r\n                data: dataToSend,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: properties.xpathContext,\r\n                idPageCache: properties.idPageCache\r\n            }).done(function () {\r\n                // After successfully response refresh the grid\r\n                self.fetchData();\r\n            });\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Changes the background for a cell\r\n    */\r\n    changeCellBackgroundColor: function (key, xpath, argument) {\r\n        var self = this;\r\n\r\n        if (self.initialLoadDone) {\r\n            for (var j = 0; j < self.columns.length; j++) {\r\n                var isVisible = self.getCellOverride(key, j).visible;\r\n                if (self.columns[j].properties.xpath == xpath && isVisible) {\r\n                    var cell = self.grid.bizagi_grid_tablet('getCell', key, xpath, j);\r\n\r\n                    if (self.properties.editable) {\r\n                        cell = cell.find(\"input\");\r\n                    }\r\n\r\n                    cell.css(\"background-color\", argument);\r\n                    break;\r\n                }\r\n            }\r\n\r\n        } else {\r\n            if (self.pendingActions) {\r\n                self.pendingActions.push({\r\n                    method: sel * f.changeCellBackgroundColor,\r\n                    arguments: arguments\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Changes the background for a cell\r\n    */\r\n    changeCellColor: function (key, xpath, argument) {\r\n        var self = this;\r\n\r\n        if (self.initialLoadDone) {\r\n            for (var j = 0; j < self.columns.length; j++) {\r\n                if (self.columns[j].properties.xpath == xpath) {\r\n                    var cell = self.grid.bizagi_grid_tablet('getCell', key, xpath, j);\r\n\r\n                    if (self.properties.editable) {\r\n                        cell = cell.find(\"input\");\r\n                    }\r\n\r\n                    cell.css(\"color\", argument);\r\n                    //$(cell).find(\".ui-bizagi-cell-readonly\").css(\"color\", argument);\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            if (self.pendingActions) {\r\n                self.pendingActions.push({\r\n                    method: self.changeCellColor,\r\n                    arguments: arguments\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Changes the visibility for a cell\r\n    */\r\n    changeCellVisibility: function (key, xpath, argument) {\r\n        var self = this;\r\n\r\n        if (self.initialLoadDone) {\r\n            for (var j = 0; j < self.columns.length; j++) {\r\n                if (self.columns[j].properties.xpath == xpath) {\r\n                    var cell = self.grid.bizagi_grid_tablet('getCell', key, xpath, j);\r\n                    // Change visibility\r\n                    if (argument == true) {\r\n                        cell.show();\r\n                    } else {\r\n                        cell.hide();\r\n                    }\r\n\r\n                    self.cellOverrides[key] = self.cellOverrides[key] || {};\r\n                    self.getCellOverride(key, j).visible = argument;\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            if (self.pendingActions) {\r\n                self.pendingActions.push({\r\n                    method: self.changeCellVisibility,\r\n                    arguments: arguments\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *  Changes the required for cell\r\n    */\r\n    changeCellValue: function (key, xpath, argument) {\r\n        var self = this;\r\n        \r\n        if (self.initialLoadDone) {\r\n            var control = self.getControlCell(key, xpath);\r\n            if (control) {\r\n                control.setDisplayValue(argument);\r\n                /*ISUPP 3866 */\r\n                var column = control.column;\r\n                if (column){\r\n                    var _value = column.getValue(key);\r\n                    var compositeValue = column.getCompositeValue(key);\r\n                    control.setDisplayValue(argument);\r\n                    var trigger = false;\r\n                    control.triggerHandler(\"renderchange\", {render: self, changed: true});\r\n                    self.collectGridChange({\r\n                        id: key,\r\n                        xpath: xpath,\r\n                        value: _value,\r\n                        compositeValue: compositeValue,\r\n                        columnIndex: column,\r\n                        trigger: trigger\r\n                    });\r\n                }\r\n            }\r\n        } else {\r\n            if (self.pendingActions) {\r\n                self.pendingActions.push({\r\n                    method: self.setDisplayValue,\r\n                    arguments: arguments\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Sets an error on the cell\r\n    */\r\n    setError: function (key, xpath) {\r\n        var self = this;\r\n\r\n        if (self.initialLoadDone) {\r\n            for (var j = 0; j < self.columns.length; j++) {\r\n                var isVisible = self.getCellOverride(key, j).visible;\r\n                if (self.columns[j].properties.xpath == xpath && isVisible) {\r\n                    var cell = self.grid.bizagi_grid_tablet('getCell', key, xpath, j);\r\n                    cell.parent().addClass(\"ui-bizagi-render-grid-cell-error\");\r\n                    break;\r\n                }\r\n            }\r\n\r\n        } else {\r\n            if (self.pendingActions) {\r\n                self.pendingActions.push({\r\n                    method: self.setError,\r\n                    arguments: arguments\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n        var parentPromise = self._super();\r\n        var inlineAddPromise = self.inlineAddDeferred ? self.inlineAddDeferred.promise() : null;\r\n        return $.when(parentPromise, inlineAddPromise);\r\n    },\r\n\r\n    /*\r\n    *   Method to start loading for ajax data and update the ui\r\n    */\r\n    startLoading: function (bUseTimeout) {\r\n        var self = this;\r\n\r\n        bizagi.loading.start();\r\n\r\n        self._super(bUseTimeout);\r\n    },\r\n\r\n    /*\r\n    *   Method to remove the loading message\r\n    */\r\n    endLoading: function () {\r\n        bizagi.loading.stop();\r\n        this._super();\r\n    },\r\n\r\n    cleanCellData: function (key, xpath) {\r\n        var self = this;\r\n\r\n        if (self.initialLoadDone) {\r\n            var control = self.getControlCell(key, xpath);\r\n            if (control) {\r\n                control.cleanData();\r\n                for (var j = 0; j < self.columns.length; j++) {\r\n                    if (self.columns[j].properties.xpath == xpath) {\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                var rows = self.properties.data.rows;\r\n                var i = 0;\r\n                var rowLength = rows.length;\r\n\r\n                for (; i < rowLength; i++) {\r\n                    if (Number(key) === rows[i][0]) {\r\n                        rows[i][j + 1] = [[\"\", \"\"]];\r\n                        break;\r\n                    }\r\n                }\r\n                self.cellOverrides[key] = self.cellOverrides[key] || {};\r\n                self.getCellOverride(key, j).value = null;\r\n\r\n                if (!self.cleanActionChanges) {\r\n                    self.cleanActionChanges = {};\r\n                }\r\n                if (!self.cleanActionChanges[key]) {\r\n                    self.cleanActionChanges[key] = {};\r\n                }\r\n                self.cleanActionChanges[key][xpath] = \"\";\r\n            }\r\n        } else {\r\n            self.pendingActions.push({\r\n                method: self.cleanData,\r\n                arguments: \"\"\r\n            });\r\n        }\r\n    },\r\n\r\n    onTotalData: function (ui) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var data = properties.data || {};\r\n        var rows = data.rows;\r\n        var rowsLength = rows.length;\r\n        var showTotal = [];\r\n        var columnsModel = self.buildColumnModel();\r\n        var result;\r\n\r\n        bizagi.util.tablet.startLoading();\r\n\r\n        columnsModel.forEach(function callback(column, columnIndex) {\r\n            if (column.bizAgiProperties) {\r\n                operationState = column.bizAgiProperties.totalize.operation;\r\n\r\n                switch (operationState) {\r\n                    case \"sum\":\r\n                        result = rows.sum(function (row) {\r\n                            var return_value = row[columnIndex] !== null ? row[columnIndex] : column.bizAgiProperties.defaultvalue;\r\n                            return Number(return_value)\r\n                        }, columnIndex);\r\n                        break;\r\n\r\n                    case \"count\":\r\n                        result = rows.count(function (row) {\r\n                            //Checks if there is a DefaultValue, so assign it to the returnedvalu in case it doesn't have value\r\n                            var return_value = row[columnIndex] !== null ? row[columnIndex] : column.bizAgiProperties.defaultvalue;\r\n\r\n                            if (!bizagi.util.isArray(return_value)) {\r\n                                return return_value;\r\n                            }\r\n\r\n                            if (bizagi.util.isArray(return_value) && return_value.length > 0) {\r\n                                return return_value; //If the returned value is not undefined, neither null, it will count +1\r\n                            }\r\n                        }, column, columnIndex);\r\n\r\n                        break;\r\n\r\n                    case \"max\":\r\n                        result = rows.max(function (row) {\r\n                            var return_value = row[columnIndex] !== null ? row[columnIndex] : column.bizAgiProperties.defaultvalue;\r\n                            return Number(return_value)\r\n                        }, columnIndex);\r\n\r\n                        break;\r\n\r\n                    case \"min\":\r\n                        result = rows.min(function (row) {\r\n                            var return_value = row[columnIndex] !== null ? row[columnIndex] : column.bizAgiProperties.defaultvalue;\r\n                            return Number(return_value);\r\n                        }, columnIndex);\r\n                        break;\r\n\r\n                    case \"avg\":\r\n                        result = rows.avg(function (row) {\r\n                            var return_value = row[columnIndex] !== null ? row[columnIndex] : column.bizAgiProperties.defaultvalue;\r\n                            return Number(return_value);\r\n                        }, columnIndex);\r\n\r\n                        result = result.toFixed(2);\r\n                        break;\r\n                }\r\n\r\n                if (operationState) {\r\n                    result = self.formatTotalizedResult(operationState, column.bizAgiProperties.type, result);\r\n                    showTotal.push({label: column.label, total: result});\r\n                }\r\n            }\r\n        });\r\n        self.showTotals(showTotal);\r\n        bizagi.loading.stop();\r\n    },\r\n\r\n    formatTotalizedResult: function (operation, controlType, value) {\r\n        switch (operation) {\r\n            case 'sum':\r\n            case 'avg':\r\n            case 'min':\r\n            case 'max':\r\n                if (controlType == \"columnMoney\" || controlType == \"money\") {\r\n                    return bizagi.util.formatMonetaryCell(value);\r\n                }\r\n                break;\r\n        }\r\n\r\n        return value || 0;\r\n    },\r\n\r\n    showTotals: function (params) {\r\n        var self = this;\r\n        var content = $.fasttmpl(self.renderFactory.getTemplate('bizagi.grid.totalizer'), {items: params});\r\n\r\n        self.grid.mobileView({\r\n            displayName: bizagi.localization.getResource(\"render-grid-totalizer\"),\r\n            orientation: self.properties.orientation,\r\n            style: \"width: 80%; height: 70%\",\r\n            transition: \"fade:in\",\r\n            cssClass: \"bz-modal-view--totalizer\",\r\n            showBorder: true,\r\n            contentTemplate: content\r\n        });\r\n    },\r\n\r\n    changeBackgroundColor: function (color) {\r\n        var control = this.getControl();\r\n        if (control) {\r\n            if (color != 'none') {\r\n                $(\".bz-tablet-grid\", control).css(\"background-color\", color);\r\n            } else {\r\n                $(\".bz-tablet-grid\", control).css(\"background-color\", \"\");\r\n            }\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    alternativePaginator: function () {\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Grid Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the offline grid render class to adjust to tablet devices\r\n */\r\n\r\n// Extends itself\r\nbizagi.rendering.tablet.grid.extend(\"bizagi.rendering.tablet.grid.offline\", {\r\n    MAX_ROWS_SUPPORTED: 4\r\n}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Fill default properties\r\n        var form = self.getFormContainer();\r\n        var properties = this.properties;\r\n        properties.data.originalRows = bizagi.clone(properties.data.rows);        \r\n    \r\n        properties.isTaskForm = form.properties.isTaskForm\r\n        //Preload new lines previously added offline and prepare deletions\r\n        self.newRecords = {};\r\n        if(properties[\"new-records\"]) {            \r\n            var newRowKeys = Object.keys(properties[\"new-records\"]);\r\n            for(var k = 0; k< newRowKeys.length;k++) {\r\n                self.newRecords[newRowKeys[k]] = {} \r\n                self.changes[newRowKeys[k]] = properties[\"new-records\"][newRowKeys[k]];\r\n                self.newRecords[newRowKeys[k]].createdOffline = true\r\n            }\r\n        }\r\n        self[\"deleted-records\"] = properties[\"deleted-records\"] ? properties[\"deleted-records\"] : {};\r\n\r\n        // Just apply display-type: vertical, align it to the left\r\n        properties.displayType = \"vertical\";\r\n        properties.labelAlign = \"left\";\r\n\r\n        if (properties.groupBy || properties.groupSummary) {\r\n            // Add warning\r\n            form.addWarning(self.getResource(\"render-tablet-warning-grid\"));\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    postRender: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        self.initialLoadDone = false;\r\n\r\n        // Find component holder\r\n        self.grid = $(\">div\", control);\r\n\r\n        // Hide common label\r\n        self.getLabel().hide();\r\n\r\n        // Grid plugin\r\n        self.applyGridPlugin();\r\n\r\n        // Set initial data\r\n        if (properties.data) {\r\n\r\n            self.updateData(properties.data);\r\n\r\n            // Trigger change in order to start up the actions when the controls is ready\r\n            $.when(self.ready()).done(function () {\r\n                    self.triggerRenderChange({changed: false});\r\n                });\r\n        }\r\n\r\n        // Execute pending actions\r\n        self.initialLoadDone = true;\r\n\r\n        for (var i in self.pendingActions) {\r\n            self.pendingActions[i].method.apply(self, self.pendingActions[i].arguments);\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Method to render non editable values\r\n    */\r\n    postRenderReadOnly: function () {\r\n        var self = this;\r\n\r\n        // Do the same as the post-render            \r\n        self.postRender();\r\n    },\r\n\r\n    /*\r\n    *   Method to render non editable values\r\n    */\r\n    applyGridPlugin: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var grid = self.grid;\r\n        var mode = self.getMode();\r\n\r\n        // Build column metadata\r\n        var columns = self.buildColumnModel();\r\n\r\n        // Apply grid plugin\r\n        grid.bizagi_grid_tablet({\r\n            columns: columns,\r\n            maxColumns: self.Class.MAX_ROWS_SUPPORTED,\r\n            title: properties.displayName,\r\n            isOfflineForm: this.isOfflineForm || false,\r\n            mode: self.getMode(),\r\n            template: {\r\n                grid: self.renderFactory.getTemplate(\"bizagi.grid.grid\"),\r\n                waiting: self.renderFactory.getTemplate(\"bizagi.grid.waiting\"),\r\n                table: self.renderFactory.getTemplate(\"bizagi.grid.table\"),\r\n                emptyTable: self.renderFactory.getTemplate(\"bizagi.grid.table.empty\"),\r\n                column: self.renderFactory.getTemplate(\"bizagi.grid.column\"),\r\n                specialColumn: self.renderFactory.getTemplate(\"bizagi.grid.column.special\"),\r\n                row: self.renderFactory.getTemplate(\"bizagi.grid.row\"),\r\n                cell: self.renderFactory.getTemplate(\"bizagi.grid.cell\"),\r\n                pager: self.renderFactory.getTemplate(\"bizagi.grid.pager\"),\r\n                dynamicPager: self.renderFactory.getTemplate(\"bizagi.grid.dynamicpager\"),\r\n                buttons: self.renderFactory.getTemplate(\"bizagi.grid.offline.buttons\"),\r\n                rowButtons: self.renderFactory.getTemplate(\"bizagi.grid.offline.row.buttons\"),\r\n                specialCell: self.renderFactory.getTemplate(\"bizagi.grid.offline.cell.special\"),\r\n            },\r\n            actions: {\r\n                add: properties.allowAdd,\r\n                edit: (properties.allowEdit && properties.withEditForm && properties.data != null),\r\n                remove: properties.allowDelete,\r\n                details: false,\r\n                inlineAdd: !properties.editable ? properties.inlineAdd: true,\r\n                allowMore: false,\r\n                enableXlsExport: false,\r\n                enablePdfExport: false,\r\n                hasTotalizer: false\r\n            },\r\n            isValid: function () {\r\n                return self.isValidGrid();\r\n            },\r\n            pageRequested: function (ui) {\r\n                if (mode !== \"execution\") return;\r\n                self.fetchData(ui.page, ui.sortBy, ui.sortType);\r\n            },\r\n            drawCell: function (ui) {\r\n                return self.drawCell(ui.column, ui.key, ui.value, ui.isNewRow);\r\n            },\r\n            cellReady: function (ui) {\r\n                return self.onCellReady(ui.column, ui.key, ui.cell, ui.isNewRow);\r\n            },\r\n            rowSelected: function (ui) {\r\n                if (mode !== \"execution\") return;\r\n                self.triggerHandler(\"rowSelected\", {id: ui.key, data: ui});\r\n            },\r\n            addRow: function (ui) {\r\n                if (mode !== \"execution\") return;\r\n                self.addRow();\r\n            },\r\n            editRow: function (ui) {\r\n                if (mode !== \"execution\") return;\r\n                self.editRow(ui.key);\r\n            },\r\n            deleteRow: function (ui) {\r\n                if (mode !== \"execution\") return;\r\n                self.deleteRow(ui.key);\r\n            },\r\n            saveAddedRows: function (ui) {\r\n                self.saveInlineAddedRows(ui.keys);\r\n            },\r\n            beforeInlineAdd: function () {\r\n                self.inlineAddDeferred = new $.Deferred();\r\n            },\r\n            afterInlineAdd: function () {\r\n                if (self.inlineAddDeferred) {\r\n                    self.inlineAddDeferred.resolve();\r\n                }\r\n            },\r\n            cancelEdition: function (ui) {\r\n                self.removeNewRecords(ui);\r\n            },\r\n            removeNewRecords: function (ui) {\r\n                self.removeNewRecords(ui);\r\n            }\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Method to fetch data from the server and then update the data\r\n    */\r\n    fetchData: function (page, sortBy, sortType) {\r\n        var self = this;\r\n\r\n        self.dataReadyDeferred = new $.Deferred();\r\n\r\n        // Start loading to avoid multiple calls to the server\r\n        self.startLoading();\r\n\r\n        $.when(self.getRemoteData()).then(function (data) {\r\n            self.endLoading();\r\n            if (data) {\r\n                self.updateData(data);\r\n                self.triggerRenderChange();\r\n                self.dataReadyDeferred.resolve();\r\n            }\r\n        });\r\n    },\r\n\r\n    processChanges: function () {\r\n        return [];\r\n    },\r\n\r\n    collectOfflineTaskData: function(renderValues) {\r\n        var self = this;        \r\n        var properties = self.properties;\r\n        var errorsMessage = [];\r\n        var internalRedersValues = [];\r\n        var data = self.properties.data;\r\n        var temporalNew = {};\r\n            // Save pending inline add rows\r\n            if (self.isValid(errorsMessage)) {\r\n                for (var id in self.changes) {\r\n                    var sortArray = [];\r\n                    var currentChanges = {};                    \r\n                    for (var columnXpath in self.changes[id]) {\r\n                        \r\n                        if (self.canColumnBeSent(id, columnXpath)) {\r\n                            var columnNumber = self.getColumn(columnXpath).columnIndex - 1;\r\n                            var value = self.changes[id][columnXpath];\r\n\r\n                            if (typeof value === \"string\") {\r\n                                if (value.match(/\\n/gm) !== null) {\r\n                                    value = value.replaceAll(\"\\n\", \"\\\\n\");\r\n                                }\r\n                            }\r\n\r\n                            sortArray[columnNumber] = value;                                  \r\n                            var xpath = properties.xpath + self.buildCellXpathFilter(id) + \".\" + columnXpath;\r\n                            var value = self.changes[id][columnXpath].value?self.changes[id][columnXpath].value:self.changes[id][columnXpath];                                \r\n                            renderValues[xpath] = value;\r\n                            //Changes are store to delete them if the row is new, the rest of changes can be saved by xpath\r\n                            currentChanges[xpath] = value;\r\n                        }\r\n                    }\r\n                    //If new record store action data\r\n                    if(self.newRecords[id]) {\r\n                        //Use - to avoid issues with possible xpaths in renderValues used both in new and deleted records                        \r\n                        var addRowData = {\r\n                            url: properties.addUrl,\r\n                            idRender: properties.id,\r\n                            xpath: properties.xpath,\r\n                            xpathContext: properties.xpathContext,\r\n                            contexttype: properties.contexttype,\r\n                            idPageCache: properties.idPageCache,\r\n                            submitData: self.changes[id],\r\n                            prepare: true,\r\n                            idRow: parseInt(id+'')\r\n                        }\r\n                        temporalNew[id] = addRowData;\r\n                        for(change in currentChanges) {\r\n                            delete renderValues[change];\r\n                        }\r\n                        var details = {};\r\n                        details.idRow = parseInt(id+'');    \r\n                        details.isNew = true;\r\n                        details.changes = self.changes[id];\r\n                        sortArray.push(details);\r\n                        if (!self.newRecords[id].createdOffline)                         \r\n                            internalRedersValues[internalRedersValues.length] = sortArray;                                            \r\n                    }                                                                \r\n                }\r\n            }\r\n            // Get data\r\n            if (JSON.stringify(data.rows) !== JSON.stringify(data.originalRows) || internalRedersValues.length > 0) {\r\n                renderValues[properties.xpath] = renderValues[properties.xpath]? renderValues[properties.xpath]: {}\r\n                if (typeof (data.rows) !== \"undefined\" && internalRedersValues.length > 0) {\r\n                    //Merge new and edited rows only saved for future edition\r\n                    renderValues[properties.xpath].rows = $.merge($.merge([], self.processOldRows(data.rows)),\r\n                        internalRedersValues);\r\n                } else if (typeof (data.rows) !== \"undefined\" && data.rows.length > 0) {\r\n                    renderValues[properties.xpath].rows = self.processOldRows(data.rows);\r\n                } else {\r\n                    renderValues[properties.xpath].rows = internalRedersValues;\r\n                }\r\n                if(self[\"deleted-records\"] && Object.keys(self[\"deleted-records\"]).length > 0 )\r\n                    renderValues[properties.xpath][\"deleted-records\"] = self[\"deleted-records\"];\r\n                if(temporalNew && Object.keys(temporalNew).length > 0)\r\n                    renderValues[properties.xpath][\"new-records\"] = temporalNew;\r\n            }                                                \r\n            \r\n    },\r\n\r\n    /*\r\n    * Old Method that collects data only for Offline start forms and prepares data for AsyncWorkItem\r\n    */\r\n    collectOfflineStartData: function(renderValues){\r\n        var self = this;\r\n        var errorsMessage = [];\r\n        var internalRedersValues = [];\r\n        var properties = self.properties;\r\n        var data = self.properties.data;\r\n        // Save pending inline add rows\r\n        if (self.isValid(errorsMessage)) {\r\n            for (var id in self.changes) {\r\n                var sortArray = [];\r\n                for (var columnXpath in self.changes[id]) {\r\n                    // Check if the render can submit data\r\n                    if (self.canColumnBeSent(id, columnXpath)) {\r\n                        var columnNumber = self.getColumn(columnXpath).columnIndex - 1;\r\n                        var value = self.changes[id][columnXpath];\r\n                        if (typeof value === \"string\") {\r\n                            if (value.match(/\\n/gm) !== null) {\r\n                                value = value.replaceAll(\"\\n\", \"\\\\n\");\r\n                            }\r\n                        }\r\n                        sortArray[columnNumber] = {\r\n                            value: value,\r\n                            xpath: columnXpath,\r\n                            DataType: self.getColumn(columnXpath).properties.dataType\r\n                        };\r\n                    }\r\n                }\r\n                if (typeof (self.properties.data.rows) !== \"undefined\" && self.properties.data.rows.length > 0) {\r\n                    // Search row\r\n                    var currentRow = [];\r\n                    for (var i = 0; i < data.rows.length; i++) {\r\n                        if (data.rows[i][0] == id) {\r\n                            currentRow = data.rows[i];\r\n                            // Delete current data\r\n                            data.rows.splice(i, 1);\r\n                            i--;\r\n                            // Mixed data\r\n                            currentRow = self.processRow(currentRow);\r\n                            sortArray = $.extend(true, currentRow, sortArray);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                internalRedersValues[internalRedersValues.length] = sortArray;\r\n            }\r\n        }\r\n\r\n\r\n        // Get data\r\n        if (JSON.stringify(data.rows) !== JSON.stringify(data.originalRows) || internalRedersValues.length > 0) {\r\n            if (typeof (data.rows) !== \"undefined\" && internalRedersValues.length > 0) {\r\n                renderValues[properties.xpath].rows = $.merge($.merge([], self.processOldRows(data.rows)),\r\n                    internalRedersValues);\r\n            } else if (typeof (data.rows) !== \"undefined\" && data.rows.length > 0) {\r\n                renderValues[properties.xpath].rows = self.processOldRows(data.rows);\r\n            } else {\r\n                renderValues[properties.xpath].rows = internalRedersValues;\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n   collectData: function(renderValues) {\r\n        var self = this;\r\n        self.collectOfflineTaskData(renderValues);       \r\n    },\r\n\r\n    /*\r\n    *   Delete field id array objects\r\n    */\r\n    processOldRows: function (rows) {\r\n        var newRows = [];\r\n        var tempRows = rows;\r\n        var self = this;\r\n        for (var col = 0, leng = tempRows.length; col < leng; col++) {\r\n            var temp = tempRows[col];\r\n            newRows[col] = $.grep(temp, function (n, i) {\r\n                return i > 0;\r\n            });\r\n            \r\n            var details = {};\r\n            details.idRow = parseInt(temp[0]+'');    \r\n            details.isNew = self.newRecords[temp[0]]? true : false;\r\n            details.changes = self.changes[temp[0]] ? self.changes[temp[0]] : {};\r\n            newRows[col].push(details);\r\n        }\r\n\r\n        return newRows;\r\n    },\r\n    /*\r\n    *   Delete field id array\r\n    */\r\n    processRow: function (row) {\r\n        return $.grep(row, function (n, i) {\r\n            return i > 0;\r\n        });\r\n    },\r\n    /*\r\n    *   Customizes the content drawing inside the cell\r\n    */\r\n    drawCell: function (column, key, value, isNewRow) {\r\n        var self = this;\r\n\r\n        if (column.key) return value;\r\n\r\n        if (typeof (value) === \"object\" && value!==null && !isNewRow) {\r\n            value = value.hasOwnProperty(\"value\") ? value.value : value;\r\n        }\r\n\r\n        // Get render column                \r\n        var columnIndex = column.index - 1;\r\n        var renderColumn = self.columns[columnIndex];\r\n        var cellOverride = self.getCellOverride(key, column.index - 1);\r\n\r\n        self.newRecords = self.newRecords || {};\r\n\r\n        // Get cell properties\r\n        if (!self.cellMetadata[key]) self.cellMetadata[key] = {};\r\n        if (!self.cellMetadata[key][columnIndex]) self.cellMetadata[key][columnIndex] = {};\r\n        var properties = self.cellMetadata[key][columnIndex].properties || renderColumn.originalProperties;\r\n\r\n        var visible = properties.visible !== undefined ? properties.visible : true;\r\n        var editable = properties.editable !== undefined ? properties.editable : true;\r\n\r\n        // Apply overrides from cellOverrides\r\n        visible = cellOverride.visible;\r\n        editable = properties.editable ? cellOverride.editable : false;\r\n\r\n        // Show editable cell when we are performing inline add operation\r\n        if (isNewRow) editable = true;\r\n\r\n        // If the cell we are drawing is the summary cell, we need to make it readonly\r\n        if (key === \"summary\") editable = false;\r\n\r\n        renderColumn.properties.displayType = 'value';\r\n        renderColumn.setValue(key, value);\r\n        renderColumn.setSurrogateKey(key);\r\n        renderColumn.properties.data = renderColumn.properties.data || [];\r\n\r\n        // Column search\r\n        if (renderColumn.properties.type === \"columnSearch\" && value != null) {\r\n            for (var i = 0, len = renderColumn.properties.data.length; i < len; i++) {\r\n                if (renderColumn.properties.data[i].id == value) {\r\n                    value = {id: renderColumn.properties.data[i].id, label: renderColumn.properties.data[i].value};\r\n                }\r\n            }\r\n        }\r\n\r\n        if ((renderColumn.properties.type === \"columnCombo\" || renderColumn.properties.type === \"columnList\") && value != null) { //|| renderColumn.properties.type == \"columnRadio\"\r\n            for (var i = 0, len = renderColumn.properties.data.length; i < len; i++) {\r\n                if (renderColumn.properties.data[i].id == value) {\r\n                    value = [[renderColumn.properties.data[i].id, renderColumn.properties.data[i].value]];\r\n                }\r\n            }\r\n        }\r\n\r\n        // Do the render\r\n        if (visible) {\r\n            if (editable) {\r\n                return self.drawEditableCell(renderColumn, properties, key, value, isNewRow);\r\n            } else {\r\n                return self.drawReadonlyCell(renderColumn, properties, key, value);\r\n            }\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Draws the editable version for the cell\r\n    */\r\n    drawEditableCell: function (renderColumn, properties, key, value, isNewRow) {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        // Set editable\r\n        var originalEditable = renderColumn.properties.editable;\r\n        renderColumn.properties.editable = true;\r\n\r\n        // Fix problem when required property lose\r\n        renderColumn.overrideProperties({required: properties.required});\r\n\r\n        // Render cell\r\n        $.when(renderColumn.render(key, value)).done(function (cell) {\r\n            // Register array with new records, just when this is a new-record\r\n            if (isNewRow && !self.newRecords[key]) {\r\n                self.newRecords[key] = {};\r\n            }\r\n\r\n            // convert all row visible\r\n            for (var j = 0; j < self.columns.length; j++) {\r\n                self.cellOverrides[key] = self.cellOverrides[key] || {};\r\n                self.getCellOverride(key, j).visible = (self.getCellOverride(key, j).visible != undefined) ? self.getCellOverride(key, j).visible : true;\r\n            }\r\n\r\n            // Add change handler  \r\n            renderColumn.getDecorated(key).bind(\"renderchange\", function (render) {\r\n                self.onCellChange(renderColumn, cell, key);\r\n            });\r\n\r\n            // Resolve cell\r\n            defer.resolve(cell);\r\n        });\r\n\r\n        // Restore editable\r\n        renderColumn.properties.editable = originalEditable;\r\n\r\n        // Return promise\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Draws the readonly version for the cell\r\n    */\r\n    drawReadonlyCell: function (renderColumn, properties, key, value) {\r\n        var result = \"\";\r\n\r\n        // Use totalizer format when printing summary row\r\n        if (key === \"summary\") {\r\n            var originalFormat = renderColumn.properties.textFormat;\r\n            if (renderColumn.properties.totalize) {\r\n                renderColumn.properties.textFormat = renderColumn.properties.totalize.format;\r\n            }\r\n\r\n            result = renderColumn.renderSummary(key, value);\r\n\r\n            // Restore column format\r\n            renderColumn.properties.textFormat = originalFormat;\r\n        } else {\r\n            result = renderColumn.renderReadOnly(key, value);\r\n        }\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Defines the handler when a cell changes its value\r\n    */\r\n    onCellChange: function (renderColumn, cell, key) {\r\n\r\n        var self = this;\r\n        var _value = renderColumn.getValue(key);\r\n        var compositeValue = renderColumn.getCompositeValue(key);\r\n\r\n        if (renderColumn.properties.type === \"columnDate\" && renderColumn.data.properties.showTime == true) {\r\n\r\n            if (!bizagi.util.isEmpty(_value)) {\r\n                var date = bizagi.util.dateFormatter.getDateFromInvariant(_value, true);\r\n                _value = bizagi.util.dateFormatter.formatInvariant(date, true);\r\n            } else if (_value === \"\") {\r\n                _value = \"\";\r\n            }\r\n        } else if (renderColumn.properties.type === \"columnDate\") {\r\n\r\n            if (!bizagi.util.isEmpty(_value)) {\r\n                var date = bizagi.util.dateFormatter.getDateFromInvariant(_value, false);\r\n                date.setHours(0, 0, 0, 0);\r\n                _value = bizagi.util.dateFormatter.formatInvariant(date, true);\r\n            } else if (_value === \"\") {\r\n                _value = \"\";\r\n            }\r\n        }\r\n\r\n        if (self.properties.allowEdit || self.grid.bizagi_grid_tablet(\"isNewRecord\", key)) {\r\n            var trigger = self.grid.bizagi_grid_tablet(\"isNewRecord\", key) ? false : true;\r\n            self.collectGridChange({\r\n                id: key,\r\n                xpath: renderColumn.properties.xpath,\r\n                value: _value,\r\n                compositeValue: compositeValue,\r\n                columnIndex: renderColumn.columnIndex,\r\n                trigger: trigger\r\n            });\r\n        }\r\n\r\n        // Update change in grid's component data\r\n        self.grid.bizagi_grid_tablet(\"changeCellValue\", key, renderColumn.columnIndex, _value);\r\n\r\n        // If the column has totalizers then we need to refresh the summary\r\n        if (renderColumn.properties.totalize && renderColumn.properties.totalize.operation) {\r\n            self.grid.bizagi_grid_tablet(\"refreshSummary\", renderColumn.columnIndex);\r\n        }\r\n    },\r\n    /*\r\n    *   Collect a single cell change made in the grid to send the data when the user saves the form\r\n    */\r\n    collectGridChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        var id = params.id;\r\n        var xpath = params.xpath;\r\n        var value = params.value;\r\n        var trigger = typeof (params.trigger) !== \"undefined\" ? params.trigger : true;\r\n\r\n        self.changes[id] = self.changes[id] || {};\r\n        self.changes[id][xpath] = value;\r\n\r\n        if (trigger)\r\n            self.triggerRenderChange({key: id, column: xpath});\r\n    },\r\n    /*\r\n    *   Executes when the cell is ready and inserted into the DOM\r\n    */\r\n    onCellReady: function (column, key, cell, isNewRow) {\r\n        // Available editable\r\n        isNewRow = true;\r\n        bizagi.rendering.tablet.grid.prototype.onCellReady.apply(this, arguments);\r\n    },\r\n\r\n    /**\r\n     *  Adds a row to the grid\r\n     */\r\n    addRow: function () {\r\n        bizagi.showMessageBox(bizagi.localization.getResource(\"render-tablet-error-userfield\"), bizagi.localization.getResource(\"render-tablet-error-userfield\"));\r\n    },\r\n\r\n    /**\r\n     *  Edits a row in the grid\r\n     */\r\n    editRow: function (id) {\r\n    },\r\n\r\n    /**\r\n     *  Deletes a row to the grid\r\n     */\r\n    deleteRow: function (id) {\r\n        var self = this;\r\n\r\n        if (!id || id == 0) {\r\n            bizagi.showMessageBox(bizagi.localization.getResource(\"render-grid-message-no-selected-row\"), bizagi.localization.getResource(\"render-grid-header-no-selected-row\"));\r\n            return;\r\n        }\r\n\r\n        bizagi.showConfirmationBox(this.getResource(\"render-grid-delete-confirmation\")).done(function () {\r\n            // Do a grid record deletion\r\n            $.when(self.submitDeleteRequest(id))\r\n                .done(function () {\r\n                    // Reload grid\r\n                    self.fetchData();\r\n                });\r\n        });\r\n    },\r\n\r\n    /**\r\n     *  Edits the entire row (inline) in another slide\r\n     */\r\n    editInline: function (id) {\r\n    },\r\n    /*\r\n    *   Retrieve the data for the new rows and push them into the server\r\n    */\r\n    saveInlineAddedRows: function (keys, bRefresh) {\r\n        var self = this;\r\n        var rows = self.processChanges();\r\n\r\n        if (!bizagi.util.isEmpty(rows)) {\r\n            self.properties.data.rows = $.merge(self.properties.data.rows, rows);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Removes invalid records \r\n    */\r\n    removeNewRecords: function (ui) {\r\n        var self = this;\r\n\r\n        if (ui && ui.keys) {\r\n            $.each(ui.keys, function (_, key) {\r\n                if (self.newRecords[key]) {\r\n                    delete self.newRecords[key];\r\n                    delete self.changes[key]; \r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Fetch the data into a deferred\r\n    */\r\n    getRemoteData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set params\r\n        params = params || {};\r\n\r\n        // Check if a custom method has been given\r\n        if (properties.overrideGetRemoteData) {\r\n            var result = properties.overrideGetRemoteData(params);\r\n            return result != null ? result.promise() : null;\r\n        }\r\n\r\n        // Default ajax call\r\n        var defer = new $.Deferred();\r\n\r\n        // Resolve with remote data\r\n        var data = properties.data;\r\n\r\n        // Resolve with fetched data    \r\n        properties.page = data.page;\r\n        properties.records = data.records;\r\n        properties.totalPages = data.totalPages;\r\n\r\n        // Check RTL\r\n        if (self.isRTL()) {\r\n            data.rows = self.changeOrderData(data.rows);\r\n        }\r\n\r\n        defer.resolve(data);\r\n\r\n        return defer.promise();\r\n    },\r\n    /*\r\n    *   Submits a grid delete record request for the given id \r\n    *   Returns a deferred\r\n    */\r\n    submitDeleteRequest: function (id) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var data = self.properties.data;\r\n        var statusAction = false;            \r\n        // Found row by id\r\n        var currentRow = [];\r\n        for (var i = 0, length = data.rows.length; i < length; i++) {\r\n            if (data.rows[i][0] == id) {\r\n                currentRow = data.rows[i];\r\n\r\n                data.rows.splice(i, 1);\r\n                i--;\r\n\r\n                data.records--;\r\n                statusAction = true;\r\n                if(!self.newRecords[id])\r\n                {\r\n                    var xpath = properties.xpath + self.buildCellXpathFilter(id);\r\n\r\n                    var delInfo = {\r\n                        url: properties.deleteUrl,\r\n                        idRender: properties.id,\r\n                        xpath: xpath,\r\n                        xpathContext: properties.xpathContext,\r\n                        idPageCache: properties.idPageCache,\r\n                        contexttype: properties.contextType,\r\n                        prepare: true\r\n                    }\r\n                    self[\"deleted-records\"][id] = delInfo;\r\n                }\r\n                else {\r\n                    delete self.newRecords[id];\r\n                }\r\n                delete self.changes[id];\r\n                break;\r\n            }\r\n        }\r\n\r\n        return (data.rows);\r\n    },\r\n\r\n    isValidGrid: function () {\r\n        var self = this;\r\n        var errorsMessage = [];\r\n        var form = self.getFormContainer();\r\n\r\n        if (typeof (form.validationController) !== \"undefined\")\r\n            form.validationController.clearValidationMessages();\r\n\r\n        self.isValid(errorsMessage);\r\n\r\n        if (errorsMessage.length > 0) {\r\n            if (typeof (form.validationController) !== \"undefined\") {\r\n                for (var index = 0; index < errorsMessage.length; index++) {\r\n                    form.validationController.showValidationMessage(errorsMessage[index].message, errorsMessage[index].xpath);\r\n                }\r\n            }\r\n\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n});","/**\r\n *   Name: Bizagi Tablet Render Grouped Grid Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the Grouped Grid render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from Grid Tablet base\r\nbizagi.rendering.tablet.grid.extend(\"bizagi.rendering.tablet.grid.grouped\", {}, {\r\n\r\n    /**\r\n     * Method to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this.getControlFiller().addClass(\"bz-form-item__control--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this.getControlFiller().addClass(\"bz-form-item__control--hidden\");\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Tablet Render Search Extension\r\n *   Author: Bizagi UI Forms\r\n *   Comments:\r\n *   -   This script will redefine the Search render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.search\", bizagi.rendering.search.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.search.extend(\"bizagi.rendering.tablet.search\", {\r\n    ADVANCED_SEARCH_ID: -1,\r\n    ADVANCED_ADDITION_ID: -2,\r\n    CLEAR_SEARCH_ID: -3,\r\n    NO_RESULTS_SEARCH_ID: -4,\r\n    DEFAULT_SEARCH_ID: \"\",\r\n    SEARCH_MIN_LENGTH: 3,\r\n    SEARCH_DELAY: 250,\r\n    SEARCH_MAX_RECORDS: 50\r\n}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data submitData\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Check if offline forms is supported\r\n        this.isOfflineForm = bizagi.util.isOfflineForm({context: this});\r\n        this.properties.submitOnChange = this.isOfflineForm ? false : this.properties.submitOnChange;\r\n\r\n        // Store reference of all ajax request in order to run only one instance of them\r\n        this.deferredReference = null;\r\n    },\r\n\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"readonly\");\r\n        var value = this.getDisplayValue();\r\n        var label = value.label || value.value;\r\n\r\n        if (typeof label != \"undefined\") {\r\n            if (typeof label == \"object\")\r\n                label = label.join(\" - \");\r\n        } else {\r\n            label = \"\";\r\n        }\r\n\r\n        if (typeof label == \"string\") {\r\n            if (value.additionallabel) {\r\n                label += \" - \" + value.additionallabel;\r\n            }\r\n\r\n            label = bizagi.util.sanitizeHTML(label);\r\n        }\r\n\r\n        return $.fasttmpl(template, {\r\n            value: label,\r\n            editable: this.properties.editable\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     * @returns {}\r\n     */\r\n    postRender: function () {\r\n        this.searchInput = $(\".bz-input-icon\", this.getControl());\r\n    },\r\n\r\n    postRenderReadOnly: function () {\r\n        this.searchInput = $(\".bz-input-icon\", this.getControl());\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour\r\n     * to add handlers\r\n     * @returns {}\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Select new item\r\n        $(\".bz-input-icon\", control).on(\"click\", function () {\r\n            if (!self.properties.advancedSearch || self.isOfflineForm) {\r\n                self._simplySearchView();\r\n            } else {\r\n                self._advanceSearchView();\r\n            }\r\n        });\r\n\r\n        $(\".bz-icn--clear\", control).bind(\"click\", function (event) {\r\n            // Change display icon\r\n            $(\".bz-input-icon\", control).addClass(\"bz-input-icon--empty\");\r\n\r\n            // Call clean data\r\n            self.cleanData();\r\n\r\n            // Submit info to server\r\n            self.readyActionExecution().done(function () {\r\n                if (self.properties.submitOnChange) {\r\n                    self.submitData();\r\n                }\r\n            });\r\n\r\n            event.stopPropagation();\r\n        });\r\n\r\n    },\r\n\r\n    /**\r\n     * Configure the modalView Handlers for the new suggest control\r\n     * @param {} inputContainer\r\n     * @returns {}\r\n     */\r\n    configureModalViewHandlers: function (modalView) {\r\n        var self = this;\r\n\r\n        // Configuring list as a selectable element\r\n        self.modalViewList = $(\".bz-list\", modalView.content);\r\n\r\n        // Suggest\r\n        var suggestFilter = bizagi.util.debounce(function (value) {\r\n            self.autoCompleteSearchResults($.trim(value));\r\n        }, self.Class.SEARCH_DELAY);\r\n\r\n        $(\"[data-action=close]\", modalView.header).bind(\"click\", function () {\r\n            modalView.close();\r\n        });\r\n\r\n        var $clearButton = $(\".bz-modal-view__clear\", modalView.header);\r\n        var $searchInput = $(\".bz-modal-view__search\", modalView.header);\r\n\r\n        $clearButton.bind(\"click\", function () {\r\n            $searchInput.val(\"\").trigger(\"clean\");\r\n        });\r\n\r\n        // Setting the initial selected display value\r\n        $(\".bz-list\", modalView.content).on(\"click\", \"li\", function () {\r\n            var item = $.data(this).item;\r\n\r\n            if (!item || (item && item.id == self.Class.NO_RESULTS_SEARCH_ID))\r\n                return\r\n\r\n            self.selectItem(item);\r\n\r\n            modalView.close();\r\n        });\r\n\r\n        // Filtering list\r\n        $searchInput.bind(\"clean keyup\", function () {\r\n            if (this.value == \"\") {\r\n                $clearButton.removeClass(\"bz-modal-view__clear--visible\");\r\n            } else {\r\n                $clearButton.addClass(\"bz-modal-view__clear--visible\");\r\n            }\r\n            suggestFilter(this.value);\r\n        }).on(\"focus\", function () {\r\n            modalView.header.addClass(\"bz-modal-view__header--active\");\r\n        }).on(\"blur\", function () {\r\n            modalView.header.removeClass(\"bz-modal-view__header--active\");\r\n        });\r\n    },\r\n\r\n\r\n    /**\r\n     * Opens the search slide\r\n     * @private\r\n     */\r\n    _advanceSearchView: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var formSearchParams = $.extend({}, self.getParams(), {\r\n            container: self.getFormContainer().container,\r\n            title: properties.displayName || \"\",\r\n            allowNew: properties.allowNew\r\n        });\r\n\r\n        // Create slide search object\r\n        var searchForm = new bizagi.rendering.tablet.slide.searchForm(\r\n            self.dataService,\r\n            self.renderFactory,\r\n            properties.searchForms, {\r\n                allowFullSearch: properties.allowFullSearch,\r\n                maxRecords: properties.maxRecords,\r\n                idRender: properties.id,\r\n                navigation: self.getParams().navigation,\r\n                idPageCache: properties.idPageCache,\r\n                orientation: properties.orientation || \"ltr\",\r\n                editable: properties.editable\r\n            }, formSearchParams);\r\n\r\n        // Render the search form\r\n        searchForm.render({\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache\r\n        }).done(function (item) {\r\n            // Set data\r\n            self.setValue(item);\r\n\r\n            self.readyActionExecution().done(function () {\r\n                var form = self.getFormContainer();\r\n\r\n                if (!self.properties.submitOnChange) {\r\n                    $.when(form.submitData()).done(function () {\r\n                        self.refreshControl();\r\n                    });\r\n                }\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Simply search autocomplete\r\n     * @private\r\n     */\r\n    _simplySearchView: function () {\r\n        var self = this;\r\n        var content = self.getContentTemplate();\r\n\r\n        self.searchInput.mobileView({\r\n            customHeader: $.fasttmpl(self.renderFactory.getTemplate(\"modal-header-search\"), {}),\r\n            orientation: self.properties.orientation || \"\",\r\n            contentTemplate: content,\r\n            style: \"width: 80%; height: 70%\",\r\n            close: function () {\r\n                self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n            },\r\n            afterOpenAnimation: function (event) {\r\n                $(\".bz-modal-view__search\", event.view.header).focus();\r\n            },\r\n            open: function (event) {\r\n                self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n            },\r\n            configureActions: function (context) {\r\n                self.configureModalViewHandlers(context);\r\n            }\r\n        });\r\n    },\r\n\r\n    autoCompleteSearchResults: function (currentValue) {\r\n        var self = this;\r\n\r\n        $.when(self.processRequest({term: currentValue}))\r\n            .done(function (response) {\r\n\r\n                self.modalViewList.find(\"li\").remove();\r\n\r\n                for (var i = 0, length = response.length; i < length; i++) {\r\n                    var searchItem = self.renderSearchItem(response[i]);\r\n\r\n                    searchItem.appendTo(self.modalViewList);\r\n                }\r\n            });\r\n    },\r\n\r\n    renderSearchItem: function (item) {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"search.item\");\r\n\r\n        var searchItem = $.tmpl(template, {\r\n            id: item.id,\r\n            label: item.label,\r\n            value: item.value\r\n        });\r\n\r\n        searchItem.data(\"item\", item);\r\n\r\n        return searchItem;\r\n    },\r\n\r\n    processRequest: function (req) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var deferred = new $.Deferred();\r\n\r\n        // Create array for response objects\r\n        var suggestions = [];\r\n\r\n        if (self.properties.allowSuggest && (req.term.length >= self.properties.searchLength)) {\r\n\r\n            // Update term property to reflect the search\r\n            properties.term = req.term;\r\n\r\n            var getSuggestData = self.isOfflineForm ? self.getOfflineData() : self.getData();\r\n\r\n            // Cancel previous request in order to improve the performance\r\n            if (self.deferredReference && typeof (self.deferredReference.reject) === \"function\" && self.deferredReference.state() !== \"resolved\") {\r\n                self.deferredReference.reject({hideStatus: true});\r\n            }\r\n\r\n            self.deferredReference = getSuggestData.done(function (data) {\r\n                if (data && data.length > 0) {\r\n                    data = data.slice(0, properties.maxRecords);\r\n\r\n                    if (data.length > self.Class.SEARCH_MAX_RECORDS) {\r\n                        data = data.slice(0, self.Class.SEARCH_MAX_RECORDS);\r\n\r\n                        suggestions.push({\r\n                            id: self.Class.NO_RESULTS_SEARCH_ID,\r\n                            label: self.getResource(\"render-search-maximum-records-allowed\"),\r\n                            value: \"\"\r\n                        });\r\n\r\n\r\n                    } else {\r\n                        data = data.slice(0, properties.maxRecords);\r\n                    }\r\n\r\n                    // Default value\r\n                    suggestions.push({\r\n                        id: self.Class.DEFAULT_SEARCH_ID,\r\n                        label: self.getResource(\"render-combo-empty-value\"),\r\n                        value: \"\"\r\n                    });\r\n\r\n                    $.each(data, function (i, val) {\r\n                        if (properties.maxRecords === 0 || i < properties.maxRecords) {\r\n                            var parseValue = bizagi.util.highlightMatches(val, req.term);\r\n\r\n                            suggestions.push({id: val.id, label: parseValue, value: val.value});\r\n                        }\r\n                    });\r\n\r\n                } else {\r\n                    suggestions.push({\r\n                        id: self.Class.NO_RESULTS_SEARCH_ID,\r\n                        label: self.getResource(\"render-grid-no-records\"),\r\n                        value: \"\"\r\n                    });\r\n                }\r\n\r\n                deferred.resolve(suggestions);\r\n\r\n            }).fail(function () {\r\n                deferred.reject();\r\n            });\r\n        } else {\r\n            deferred.resolve(suggestions);\r\n        }\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    /**\r\n     * Sets the value to show and calls the method to sets the control value\r\n     * @param {object} value\r\n     * @param {int} value.id\r\n     * @param {string} value.label\r\n     * @param {string=} value.additionallabel\r\n     * @example\r\n     *   value = {\r\n     *     id: 123,\r\n     *     label: \"xx\",\r\n     *     additionallabel: \"yyyy\"\r\n     *   }\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var label = \"\";\r\n\r\n        value = self.mapValue(value);\r\n\r\n        if (value !== null && typeof value !== \"undefined\" && typeof value.id !== \"undefined\") {\r\n            if (value.additionallabel && value.label) {\r\n                label = value.label + \" - \" + value.additionallabel;\r\n            } else if (value.label) {\r\n                label = value.label;\r\n            } else {\r\n                label = \"\";\r\n            }\r\n\r\n            var inputText = self.searchInput.find(\"input\");\r\n            inputText.val(label);\r\n            inputText.attr(\"id\", value.id);\r\n\r\n            if (value.id !== \"\" && self.properties.allowClear) {\r\n                $(\".bz-input-icon\", self.getControl()).removeClass(\"bz-input-icon--empty\");\r\n            }\r\n\r\n            if (self.properties.editable) {\r\n                self.setValue(value, true);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * on the tablet only sends the id to submit in the tablet it send the id and the value\r\n     * @returns {}\r\n     */\r\n    submitData: function () {\r\n        var self = this;\r\n        var data = {};\r\n\r\n        // Add current data\r\n        data[self.properties.xpath] = self.getValue();\r\n\r\n        // Executes submit on change\r\n        if (self.properties.submitOnChange && data[self.properties.xpath].id != undefined)\r\n            self.submitOnChange(data, true);\r\n    },\r\n\r\n    /**\r\n     * Cleans the control's data\r\n     * @returns {}\r\n     */\r\n    cleanData: function () {\r\n        var value = {id: \"\", value: \"\"};\r\n\r\n        if(bizagi.util.isEmpty(this.value)) \r\n            value ={};\r\n\r\n        this.setValue(value);\r\n        this.setDisplayValue(value);\r\n    },\r\n\r\n    getContentTemplate: function () {\r\n        var template = this.renderFactory.getTemplate(\"search.items\");\r\n        var content = $.fasttmpl(template, {});\r\n\r\n        return $.trim(content);\r\n    },\r\n\r\n    selectItem: function (item) {\r\n        var self = this;\r\n        var previousValue = self.hasValue();\r\n        var label = Array.isArray(item.value) ? item.value.join(\" - \") : item.value;\r\n\r\n        self.setDisplayValue({id: item.id, label: label});\r\n\r\n        if (self.properties.allowClear) {\r\n\r\n            if (item.id === self.Class.DEFAULT_SEARCH_ID) {\r\n                self.searchInput.find(\".gn-bz-search__clear\").addClass(\"gn-bz-search--hidden\");\r\n                self.searchInput.find(\".gn-bz-search__icon\").removeClass(\"gn-bz-search--hidden\");\r\n            } else {\r\n                if (!previousValue && item.id !== self.Class.DEFAULT_SEARCH_ID) {\r\n                    self.searchInput.find(\".gn-bz-search__clear\").removeClass(\"gn-bz-search--hidden\");\r\n                    self.searchInput.find(\".gn-bz-search__icon\").addClass(\"gn-bz-search--hidden\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Get offline data for request\r\n     * @param request\r\n     */\r\n    getOfflineData: function () {\r\n        var self = this;\r\n        var dataList = self.properties.data || [];\r\n        var filter = (self.properties.term || \"\").toLowerCase();\r\n\r\n        return $.when(filter.startsWith(\"%%\") ? dataList : dataList.filter(function (item) {            \r\n            var value = item && item.value ? item.value : \"\";\r\n            if(typeof(value) === \"object\"){\r\n                value = value.toString();\r\n            }\r\n            return value.toLowerCase().indexOf(filter) > -1;\r\n        }));\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Letter Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the letter render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.letter\", bizagi.rendering.letter.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.label.extend(\"bizagi.rendering.tablet.letter\", {}, {});\r\n","/**\r\n *   Name: Bizagi Tablet Render Button Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the button render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.button\", bizagi.rendering.button.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.button.extend(\"bizagi.rendering.tablet.button\", {}, {\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     * @returns {}\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n\r\n        $(\":button\", self.getControl()).on(\"click\", function () {\r\n            self.processButton();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Process the button actions workflow\r\n     * @returns {}\r\n     */\r\n    processButton: function () {\r\n        var self = this;\r\n\r\n        if (self.properties.editable) {\r\n\r\n            // Check if action need conformation\r\n            if (self.properties.needsUserConfirmation) {\r\n                $.when(bizagi.showConfirmationBox(self.properties.userConfirmationMessage, \"Bizagi\", \"warning\"))\r\n                    .done(function () {\r\n                        // Trigger change\r\n                        self.triggerRenderChange({pressed: true});\r\n                    });\r\n            } else {\r\n                if (!self.properties.preventDefault)\r\n                    self.runButtonAction();\r\n\r\n                // Trigger change\r\n                self.triggerRenderChange({pressed: true});\r\n            }\r\n        }\r\n    },\r\n    \r\n    getElementsToStylize: function($context){\r\n        return  $(\"button\", $context);         \r\n    }\r\n});\r\n","/*\r\n *   Name: Bizagi Tablet Render fileprint Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the fileprint render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.fileprint\", bizagi.rendering.fileprint.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.fileprint.extend(\"bizagi.rendering.tablet.fileprint\", {}, {\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed \r\n     */\r\n    postRender: function () {        \r\n        this.getControl().parent().hide();\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Link Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the link render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.link\", bizagi.rendering.link.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.link.extend(\"bizagi.rendering.tablet.link\", {}, {\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     * @returns {}\r\n     */\r\n    postRender: function () {\r\n        var $control = this.getControl();\r\n        this.link = $control.find(\".bz-link\");\r\n\r\n        this._super();\r\n\r\n        this.preventDefaultForAnchorTag();\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        var $control = this.getControl();\r\n        this.link = $control.find(\".bz-link\");\r\n\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Set internal value\r\n        this.setValue(value, false);\r\n\r\n        if (this.isValidValue()) {\r\n            // Get the decoded version of the URL\r\n            value = getFullyDecodedURI($.trim(value));\r\n\r\n            this.link.attr(\"href\", value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     * @returns {}\r\n     */\r\n    configureHandlers: function () {\r\n        this.attachEvents();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour\r\n     * to add handlers when the control is readonly\r\n     */\r\n    configureHandlersReadOnly: function () {\r\n        this.attachEvents();\r\n    },\r\n\r\n    /**\r\n     * Configure event handlers\r\n     */\r\n    attachEvents: function () {\r\n        var self = this;\r\n\r\n        if (self.isValidValue()) {\r\n            self.link.on(\"click\", function (evt) {\r\n                evt.preventDefault();\r\n                evt.stopPropagation();\r\n\r\n                var linkEncode = encodeURI(this.getAttribute(\"href\"));\r\n\r\n                self.linkSolver(linkEncode, self.properties.linktarget);\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Checks if the value is a valid url (http/https valid urls)\r\n     * TODO: Check if this validation is necessary\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    isValidValue: function () {\r\n        if (!this.hasValue()) return false;\r\n        var value = $.trim(this.getValue() || \"\");\r\n\r\n        return (value.toLowerCase().match(/^(http|https):\\/\\//) !== null) || false;\r\n    },\r\n\r\n    /**\r\n     * Executes the link\r\n     * @param {} linkEncode\r\n     * @param {} linkTarget\r\n     * @returns {}\r\n     */\r\n    linkSolver: function (linkEncode, linkTarget) {\r\n        if (linkTarget === \"newwindow\" || bizagi.util.isCordovaSupported()) {\r\n            window.open(linkEncode, \"_system\", \"location=yes\");\r\n        } else {\r\n            window.open(linkEncode, \"_system\");\r\n        }\r\n    },\r\n\r\n    processLayout: function (isLabelFormat) {\r\n        if(!isLabelFormat){\r\n             this._super(isLabelFormat, this.properties.textFormat);\r\n        } else {\r\n            if(typeof this.properties.textFormat.background !== \"undefined\"){\r\n                this._super(isLabelFormat, { background: this.properties.textFormat.background });\r\n            }\r\n        }\r\n    },\r\n\r\n    getElementsToStylize: function($context){\r\n        return $(\".bz-link\", $context); \r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Form Link Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the link render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.formLink\", {\r\n    BA_ACTION_PARAMETER_PREFIX: \"p_\",\r\n    BA_CONTEXT_PARAMETER_PREFIX: \"h_\",\r\n    BA_PAGE_CACHE: \"pageCacheId\"\r\n}, bizagi.rendering.formLink.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.formLink.extend(\"bizagi.rendering.tablet.formLink\", {}, {\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     * @returns {}\r\n     */\r\n    configureHandlers: function () {\r\n        this.attachEvents();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour\r\n     * to add handlers when the control is readonly\r\n     */\r\n    configureHandlersReadOnly: function () {\r\n        this.attachEvents();\r\n    },\r\n\r\n    /**\r\n     * Open link display from inside a dialog\r\n     */\r\n    openLink: function () {\r\n        var self = this;\r\n\r\n        // Send edit request\r\n        $.when(self.submitEditRequest())\r\n            .done(function () {\r\n                bizagi.loading.start();\r\n\r\n                $.when(self.paintFormLink()).done(function () {\r\n                    bizagi.loading.stop();\r\n\r\n                }).fail(function () {\r\n                    // Executes Rollback action paintForm\r\n                    bizagi.loading.start();\r\n                    self.rollbackForm();\r\n                }).always(function () {\r\n                    bizagi.loading.stop();\r\n                });\r\n\r\n            }).always(function () {\r\n            bizagi.loading.stop();\r\n        });\r\n    },\r\n\r\n    openLinkRule: function (property) {\r\n        var self = this;\r\n        var def = new $.Deferred();\r\n\r\n        bizagi.loading.start();\r\n\r\n        self.getPropertyValue(property, {})\r\n            .done(function (dataRuleResp) {\r\n\r\n                dataRuleResp = dataRuleResp || {};\r\n\r\n                if (typeof dataRuleResp.messages !== \"undefined\" && dataRuleResp.messages !== null) {\r\n                    var message = dataRuleResp.messages[0];\r\n                    var form = self.getFormContainer();\r\n\r\n                    form.validationController.showErrorMessage(message);\r\n                    def.reject();\r\n                } else {\r\n                    if (property === \"entryrule\") {\r\n                        self.openLink();\r\n                    }\r\n                }\r\n\r\n                def.resolve();\r\n            }).fail(function () {\r\n            def.reject();\r\n        }).always(function () {\r\n            bizagi.loading.stop();\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    paintFormLink: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var formParams = self.getFormParams();\r\n\r\n        var deferred = $.Deferred();\r\n\r\n        // Instantiate slide form object\r\n        var slideView = new bizagi.rendering.tablet.slide.view(self.dataService, self.renderFactory, {\r\n            title: self.properties.displayName || \"\",\r\n            container: form.container,\r\n            navigation: self.getParams().navigation,\r\n            showSaveButton: properties.editable,\r\n            orientation: properties.orientation || \"ltr\",\r\n            onSave: function (data) {\r\n                // When the data is saved then\r\n                return self.actionSave(data).then(function (result) {\r\n                    //Process the result\r\n                    return self.submitForm(result)\r\n                        .done(function () {\r\n                            deferred.resolve(result);\r\n                        }).fail(function () {\r\n                            deferred.reject();\r\n                        });\r\n                }).fail(function (result) {\r\n                    deferred.reject(result);\r\n                });\r\n            },\r\n            goBack: function () {\r\n                self.rollbackForm();\r\n            }\r\n        });\r\n\r\n        slideView.render({\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            recordXPath: self.getFormLinkXpath(),\r\n            requestedForm: \"linkform\",\r\n            editable: properties.editable,\r\n            formParams: formParams,\r\n            url: properties.editPage\r\n        }).fail(function () {\r\n            // Sends a rollback request to delete checkpoints\r\n            deferred.reject();\r\n        });\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    getPropertyValue: function (propertyName, params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n\r\n        self.dataService.multiaction().getPropertyData({\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            property: propertyName,\r\n            extra: params,\r\n            dataType: params ? params.dataType : null\r\n        }).done(function (data) {\r\n            if (data.type === \"error\") {\r\n                // Workflow engine error, we gotta show it with error\r\n                var form = self.getFormContainer();\r\n\r\n                form.validationController.showErrorMessage(data.message);\r\n                defer.reject(data);\r\n            } else {\r\n                defer.resolve(data);\r\n            }\r\n        }).fail(function (jqXHR, textStatus, errorThrown) {\r\n            // Add error messages\r\n            var form = self.getFormContainer();\r\n\r\n            form.validationController.showErrorMessage(jqXHR.message);\r\n\r\n            defer.reject(jqXHR, textStatus, errorThrown);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    actionSave: function (data) {\r\n        var self = this;\r\n        var deferred = $.Deferred();\r\n\r\n        $.when(self.submitSaveRequest(data)).done(function (result) {\r\n            try {\r\n                if (result.type === \"validationMessages\") {\r\n                    // Add validation messages\r\n                    self.form.addValidationMessage(result.messages);\r\n                } else if (result.type === \"error\") {\r\n                    // Add error messages\r\n                    deferred.reject(result);\r\n                }\r\n\r\n                deferred.resolve(result);\r\n            } catch (ex) {\r\n                deferred.reject({noAction: true});\r\n            }\r\n        }).fail(function (data) {\r\n            deferred.reject(data);\r\n        });\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    submitSaveRequest: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Don't send request when the link is not editable\r\n        if (properties.editable === false && !properties.value) {\r\n            return null;\r\n        }\r\n\r\n        var xpath = self.getFormLinkXpath();\r\n        var xpathContext = xpath;\r\n\r\n        if (properties.xpathContext !== undefined && properties.xpathContext !== \"\") {\r\n            xpathContext = xpath ? properties.xpathContext + \".\" + xpath : properties.xpathContext;\r\n        }\r\n\r\n        return self.dataService.saveLinkForm({\r\n            url: properties.saveUrl,\r\n            idRender: properties.id,\r\n            xpathContext: xpathContext,\r\n            submitData: data\r\n        });\r\n    },\r\n\r\n    submitForm: function (result) {\r\n        var self = this;\r\n        var deferred = $.Deferred();\r\n\r\n        var executeSubmitOnChange = true;\r\n\r\n        if (result && result.type === \"validationMessages\") {\r\n            executeSubmitOnChange = false;\r\n        }\r\n\r\n        if (self.properties.hasexitrule) {\r\n            self.closeExitRule().done(function () {\r\n                if (executeSubmitOnChange) {\r\n                    // All commits must be resolved before the submitOnChange is executed\r\n                    self.submitCommitRequest().done(function () {\r\n                        if (self.properties.hasentryrule) {\r\n                            self.submitCommitRequest().done(function () {\r\n                                $.when(self.submitOnChange()).done(function () {\r\n                                    deferred.resolve(result);\r\n                                });\r\n                            });\r\n                        } else {\r\n                            $.when(self.submitOnChange()).done(function () {\r\n                                deferred.resolve(result);\r\n                            });\r\n                        }\r\n                    });\r\n                }\r\n            }).fail(function () {\r\n                deferred.reject();\r\n            });\r\n\r\n        } else if (executeSubmitOnChange) {\r\n            if (executeSubmitOnChange) {\r\n                //  commits must be resolved before the submitOnChange is executed\r\n                self.submitCommitRequest().done(function () {\r\n                    if (self.properties.hasentryrule) {\r\n                        self.submitCommitRequest().done(function () {\r\n                            $.when(self.submitOnChange()).done(function () {\r\n                                deferred.resolve(result);\r\n                            });\r\n                        });\r\n                    } else {\r\n                        $.when(self.submitOnChange()).done(function () {\r\n                            deferred.resolve(result);\r\n                        });\r\n                    }\r\n                }).fail(function () {\r\n                    deferred.reject();\r\n                });\r\n            }\r\n        }\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    closeExitRule: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var def = new $.Deferred();\r\n\r\n        if (properties.hasexitrule) {\r\n            $.when(self.openLinkRule(\"exitrule\")).done(function (result) {\r\n                def.resolve(result);\r\n            }).fail(function () {\r\n                def.reject();\r\n            });\r\n        }\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    rollbackForm: function () {\r\n        var self = this;\r\n        var form = self.form || self.getFormContainer();\r\n\r\n        $.when(self.submitRollbackRequest({idPageCache: form.idPageCache})).done(function () {\r\n            // Sends additional rollback request to delete checkpoint from entry rule\r\n            if (self.properties.hasentryrule) {\r\n                self.submitRollbackRequest({idPageCache: form.idPageCache});\r\n            }\r\n        });\r\n    },\r\n\r\n    getFormLinkXpathContext: function () {\r\n        var xpathContext = this.properties.xpathContext;\r\n        var parentXpathContext = this.getXpathContext();\r\n\r\n        if (parentXpathContext && xpathContext) {\r\n            return xpathContext.indexOf(parentXpathContext) === 0 ? xpathContext : parentXpathContext + \".\" + xpathContext;\r\n        } else {\r\n            return xpathContext;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Configure event handlers\r\n     */\r\n    attachEvents: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        // Bind click event\r\n        $(\"[data-action=open]\", $control).on(\"click\", function () {\r\n            // Open the link inside a slideForm\r\n            if (self.properties.hasentryrule) {\r\n                var form = self.getFormContainer();\r\n\r\n                $.when(form.saveForm()).done(function () {\r\n                    self.submitCheckpointRequest().done(function () {\r\n                        return self.openLinkRule(\"entryrule\");\r\n                    });\r\n                });\r\n            } else {\r\n                self.openLink();\r\n            }\r\n        });\r\n    },\r\n\r\n    processLayout: function (isLabelFormat) {\r\n        if(!isLabelFormat){\r\n             this._super(isLabelFormat, this.properties.textFormat);\r\n        } else {\r\n            if(typeof this.properties.textFormat.background !== \"undefined\"){\r\n                this._super(isLabelFormat, { background: this.properties.textFormat.background });\r\n            }\r\n        }\r\n    },\r\n\r\n    getElementsToStylize: function($context){\r\n        return $(\".bz-link\", $context); \r\n    }\r\n});","/**\r\n *   Name: Bizagi Tablet Render Hidden Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the hidden render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.hidden\", bizagi.rendering.hidden.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.hidden.extend(\"bizagi.rendering.tablet.hidden\", {}, {});\r\n","/**\r\n *   Name: Bizagi Tablet Render list Extension\r\n *   Author: Bizagi UI Forms\r\n *   Comments:\r\n *   -   This script will redefine the list render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.radio\", bizagi.rendering.combo.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.radio.extend(\"bizagi.rendering.tablet.radio\", bizagi.rendering.radio.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.radio.extend(\"bizagi.rendering.tablet.radio\", {}, {\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var $control = this.getControl();\r\n        this.radio = $control.find(\"input[type=radio]\");\r\n\r\n        if (this.properties.editable && (this.value == null || this.value === undefined) && (this.properties.value != null)) {\r\n            this.value = this.properties.value;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"readonly\");\r\n\r\n        return $.fasttmpl(template, {value: this.getDisplayValue()});\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        var $control = this.getControl();\r\n        this.radio = $control.find(\"input\");\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        // Map data from actions\r\n        value = self.mapValue(value);\r\n\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n\r\n        if (value !== undefined && value.id != null && value.id !== \"\") {\r\n\r\n            if (this.properties.editable) {\r\n\r\n                var radioItem = $control\r\n                    .find('input[type=\"radio\"][value=\"' + value.id + '\"]');\r\n\r\n                radioItem.prop('checked', 'checked');\r\n            } else {\r\n                self.radio.val((this.getDisplayValue()));\r\n                self.radio.attr(\"id\", value.id);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Add action handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n\r\n        this.radio.change(function () {\r\n            var $selected = $(this);\r\n            var newValue = {\r\n                id: $selected.prop('value'),\r\n                value: $.trim($selected.siblings(\"label\").text())\r\n            };\r\n\r\n            self.setValue(newValue);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Context to apply styles\r\n     * @param context\r\n     * @returns {jQuery|HTMLElement}\r\n     */\r\n    getElementsToStylize: function (context) {\r\n        return $(\"label.bz-radio__label\", context);\r\n    },\r\n\r\n    /**\r\n     * Cleans current data\r\n     */\r\n    cleanData: function () {\r\n        var value = {id: \"\", label: \"\"};\r\n        this.setValue(value, false);\r\n\r\n        this.clearDisplayValue();\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     */\r\n    clearDisplayValue: function () {\r\n        if (this.properties.editable) {\r\n            this.radio.prop('checked', false);\r\n        } else {\r\n            this.radio.val(this.getDisplayValue());\r\n        }\r\n    }\r\n});\r\n","/**\r\n *   Name: BizAgi Tablet Render Cascading combo Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the cascading combo render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.cascadingCombo\", bizagi.rendering.combo.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.cascadingCombo.extend(\"bizagi.rendering.tablet.cascadingCombo\", bizagi.rendering.cascadingCombo.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.cascadingCombo.extend(\"bizagi.rendering.tablet.cascadingCombo\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n    BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX\r\n}, {\r\n\r\n    /*\r\n       *   Template method to implement in each children to customize each control\r\n       */\r\n    renderControl: function () {\r\n        var mode = this.getMode();\r\n\r\n        // Check if this is a dependant combo\r\n        this.parentCombo = this.getParentCombo();\r\n        if (this.parentCombo != null) {\r\n\r\n            if ((/cascadingcombo/i.test(this.parentCombo.properties.type))) {\r\n                this.isDependant = true;\r\n            }\r\n        }\r\n\r\n        // Apply element plugin, set a flag to avoid dependant combo ajax requests\r\n        this.initializingCascadingCombo = true;\r\n\r\n        if (mode != \"execution\") {\r\n            this.initializingCascadingCombo = false;\r\n        }\r\n\r\n        return bizagi.rendering.tablet.combo.prototype.renderControl.apply(this, arguments);\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    postRender: function () {\r\n        bizagi.rendering.tablet.combo.prototype.postRender.apply(this, arguments);\r\n    },\r\n\r\n    /*\r\n          *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n          */\r\n    configureHandlers: function () {\r\n        // Call base\r\n        this._super();\r\n\r\n        // Call desktop.combo method\r\n        bizagi.rendering.tablet.combo.prototype.configureHandlers.apply(this, arguments);\r\n    },\r\n\r\n    /**\r\n     * Override to avoid the trigguer\r\n     */\r\n    cleanData: function () {\r\n        bizagi.rendering.tablet.combo.prototype.cleanData.apply(this, arguments);\r\n    },\r\n\r\n    /*\r\n    *   Refresh the combo, after it has been painted\r\n    */\r\n    refresh: function (params, isInitialValue) {\r\n        var self = this;\r\n        // Wait until current element is rendered\r\n        $.when(self.isRendered()).done(function () {\r\n            // Clear current control\r\n            var control = self.getControl();\r\n            var mode = self.getMode();\r\n            control.empty();\r\n\r\n            // Render combo again\r\n            $.when(self.renderControl()).then(function (html) {\r\n                // Append new element\r\n                control.html(html);\r\n                // Post-render method\r\n                self.postRender();\r\n\r\n                if (mode == \"execution\") {\r\n                    self.configureHandlers();\r\n                }\r\n\r\n                // Set current value\r\n                if (isInitialValue) {\r\n                    self.setDisplayValue(self.getValue());\r\n                } else {\r\n                    self.setDisplayValue({\r\n                        \"id\": \"\",\r\n                        \"value\": \"\"\r\n                    });\r\n                }\r\n\r\n                if (self.deferredVisible) {\r\n                    self.deferredVisible.resolve();\r\n                }\r\n\r\n                self.trigger(\"select\", [self.getValue(), isInitialValue]);\r\n            });\r\n        });\r\n    },\r\n    /*\r\n    *   Sets the value in the rendered control\r\n    */\r\n    setDisplayValue: function (value) {\r\n        bizagi.rendering.tablet.combo.prototype.setDisplayValue.apply(this, arguments);\r\n    },\r\n\r\n    processComboData: function () {\r\n        bizagi.rendering.tablet.combo.prototype.processComboData.apply(this, arguments);\r\n    },\r\n\r\n    validateValue: function () {\r\n        return bizagi.rendering.tablet.combo.prototype.validateValue.apply(this, arguments);\r\n    },\r\n\r\n    renderComboTemplate: function () {\r\n        return bizagi.rendering.tablet.combo.prototype.renderComboTemplate.apply(this, arguments);\r\n    },\r\n\r\n    configureModalViewHandlers: function () {\r\n        bizagi.rendering.tablet.combo.prototype.configureModalViewHandlers.apply(this, arguments);\r\n    },\r\n\r\n    configureCombo: function () {\r\n        bizagi.rendering.tablet.combo.prototype.configureCombo.apply(this, arguments);\r\n    },\r\n\r\n    changeCombo: function (valueItem, valueObjet) {\r\n        bizagi.rendering.tablet.combo.prototype.changeCombo.apply(this, arguments);\r\n    },\r\n\r\n    /*\r\n    *   Returns the selected value in the template\r\n    */\r\n    getSelectedValue: function () {\r\n        return bizagi.rendering.tablet.combo.prototype.getSelectedValue.call(this, arguments);\r\n    },\r\n\r\n    getTemplateName: function () {\r\n        return \"combo\";\r\n    },\r\n    /**\r\n     * Filtering list of elements\r\n     * @returns {}\r\n     */\r\n    filterList: function (search, $li) {\r\n        return bizagi.rendering.tablet.combo.prototype.filterList.call(this, search, $li);\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render list Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the list render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.list\", bizagi.rendering.combo.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.list.extend(\"bizagi.rendering.tablet.list\", bizagi.rendering.list.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.list.extend(\"bizagi.rendering.tablet.list\", {}, {\r\n\r\n    /*\r\n      *   Template method to implement in each children to customize each control\r\n      */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"list\");\r\n\r\n        return $.fasttmpl(template, {\r\n            editable: this.properties.editable,\r\n            value: this.getDisplayValue()\r\n        });\r\n\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    postRenderReadOnly: function () {\r\n        // Prevent call base\r\n    },\r\n\r\n    /**\r\n     * Add event handlers to the combo control\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        if (self.getMode() !== \"execution\") {\r\n            return;\r\n        }\r\n\r\n        $(\".bz-form-list\", control).bind(\"click\", function () {\r\n            //self.processComboData(self.properties.data);\r\n\r\n            $(this).mobileView({\r\n                customHeader: $.fasttmpl(self.renderFactory.getTemplate(\"modal-header-search\"), {}),\r\n                displayName: self.properties.displayName || \"\",\r\n                orientation: self.properties.orientation || \"\",\r\n                contentTemplate: \"\",\r\n                style: \"width: 80%; height: 70%\",\r\n                close: function () {\r\n                    self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                },\r\n\r\n                open: function () {\r\n                    self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n                },\r\n\r\n                configureActions: function (context) {\r\n                    $.when(self.renderCombo({})).done(function (list) {\r\n                        $(\".bz-modal-view__content\", context.content).html(list);\r\n                        self.configureModalViewHandlers(context);\r\n                    })\r\n                }\r\n            });\r\n        });\r\n\r\n    },\r\n\r\n    processComboData: function (data) {\r\n        var self = this;\r\n        data.forEach(function (value) {\r\n            self.validateValue(value);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Setting the display value, always you call a setDisplayValue yor are performinng a setValue under the hood.\r\n     * */\r\n    setDisplayValue: function (value) {\r\n        var comboValue;\r\n        var control = this.getControl();\r\n\r\n        value = this.mapValue(value);\r\n\r\n        if (value && (typeof value === \"object\" && typeof value.label !== \"undefined\")) {\r\n\r\n            if (value.label !== \"\" && !bizagi.util.isNumeric(value.label)) {\r\n                comboValue = value.label;\r\n            } else {\r\n                var selected = this.findDataValueById(value.value);\r\n                comboValue = selected ? selected.value : \"\";\r\n            }\r\n\r\n            if ($.isArray(comboValue)) {\r\n                comboValue = comboValue.join(\" - \");\r\n            }\r\n\r\n            value = ({\"id\": value.id, \"value\": comboValue});\r\n        }\r\n\r\n        $(\"input\", control).val(this.formatItem(value.value));\r\n\r\n        //Set Value\r\n        this.selectedValue = value;\r\n        this.setValue(value);\r\n    },\r\n\r\n    /**\r\n     * Set the handlers for the modal elements\r\n     * @param {kendoModalObject} context full modal object\r\n     */\r\n    configureModalViewHandlers: function (context) {\r\n        var self = this;\r\n\r\n        $(\".bz-list__item\", context.content).on(\"click\", function () {\r\n            var valueObjet = {\r\n                \"id\": $(this).data(\"value\"),\r\n                \"value\": $(this).text()\r\n            };\r\n\r\n            if (valueObjet.id == \"\") {\r\n                valueObjet.value = \"\";\r\n            }\r\n\r\n            self.setDisplayValue(valueObjet);\r\n            self.trigger(\"select\", [valueObjet, false]);\r\n            context.close();\r\n        });\r\n\r\n        var $elementsList = $(\".bz-list li\", context.content);\r\n        var $clearButton = $(\".bz-modal-view__clear\", context.header);\r\n        var $searchInput = $(\".bz-modal-view__search\", context.header);\r\n\r\n        $(\"[data-action=close]\", context.header).bind(\"click\", function () {\r\n            context.close();\r\n        });\r\n\r\n        $clearButton.bind(\"click\", function () {\r\n            $searchInput.val(\"\").trigger(\"change\");\r\n        });\r\n        // Filtering list\r\n        $searchInput.bind(\"change keyup\", function () {\r\n            if (this.value == \"\") {\r\n                $clearButton.removeClass(\"bz-modal-view__clear--visible\");\r\n            } else {\r\n                $clearButton.addClass(\"bz-modal-view__clear--visible\");\r\n            }\r\n            self.filterList(this.value, $elementsList);\r\n        }).focus();\r\n    },\r\n\r\n    /**\r\n     * Filtering list of elements\r\n     * @returns {}\r\n     */\r\n    filterList: function (search, $li) {\r\n\r\n        $li.filter(function () {\r\n            var stringContainer = $(this).text().toUpperCase();\r\n            var stringToSearch = search.toUpperCase();\r\n\r\n            if (stringContainer.indexOf(stringToSearch) >= 0) {\r\n                return $(this);\r\n            } else {\r\n                $(this).hide();\r\n            }\r\n        }).show();\r\n    },\r\n\r\n    /**\r\n     * Print the list of elements to show in the modal\r\n     * @param {object} data list of elements to print\r\n     */\r\n    renderComboTemplate: function (data) {\r\n        var template = this.renderFactory.getTemplate(\"list-items\");\r\n        var value = this.getValue();\r\n        value = (value !== null && typeof value !== \"undefined\") ? value : {\"id\": \"\", \"value\": \"\"};\r\n\r\n        return $.fasttmpl(template, {\r\n            \"items\": data,\r\n            \"selectedId\": value.id,\r\n            \"hasItems\": data.length > 0\r\n        }, {\r\n            \"validateItem\": this.validateValue\r\n        });\r\n    },\r\n\r\n    getElementsToStylize: function ($context) {\r\n        return this.properties.editable ? $(\"input\", $context) : $(\".readonly-control\", $context);\r\n    }\r\n});\r\n","/*\r\n *   Name: Bizagi Tablet Render Yes-No Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the multiSelect render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.multiSelect\", bizagi.rendering.multiSelect.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.multiSelect.extend(\"bizagi.rendering.tablet.multiSelect\", {\r\n    MORE_OPTION_WIDTH: 40,\r\n    SEARCH_MIN_LENGTH: 1\r\n}, {\r\n\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"searchList.readonly\");\r\n\r\n        // Render template\r\n        var content = $.fasttmpl(template, {\r\n            items: self.properties.value || {},\r\n            editable: self.properties.editable || true\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n\r\n        return content;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n\r\n        if (this.isExecutionMode()) {\r\n            this.getData().done(function (data) {\r\n                self.properties.data = data;\r\n            });\r\n        }\r\n\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n        $(\"[data-action=modal]\", $control).bind(\"click\", function () {\r\n            self.openModalView();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sets the value and display, avoid to include setValue in this method.\r\n     */\r\n    setDisplayValue: function(value){\r\n        var self = this;\r\n        this._super(value);\r\n\r\n        if (value !== undefined) {\r\n            $(\".bz-input-icon__input\", this.getControl()).html(value.map(function(el){\r\n                return self.formatItem(el.value);\r\n            }).join(\", \"));\r\n        }\r\n    },\r\n     /**\r\n     * Opens the modal view\r\n     */\r\n    openModalView: function () {\r\n        var self = this;\r\n        self.getData().done(function (result) {\r\n            var template_content = self.renderFactory.getTemplate('multiselect-list');\r\n            var value = self.getValue();\r\n            if (!$.isArray(value)){\r\n                value = typeof (value) === \"string\" ? JSON.parse(value).value : value.value;\r\n            }\r\n\r\n            var data = {\r\n                values: result,\r\n                isChecked: function (id) {\r\n                    return self.isChecked(value, id);\r\n                }\r\n            };\r\n\r\n            var content = $.fasttmpl(template_content, data, {\r\n                formatItem: self.formatItem\r\n            });\r\n            var template_footer = self.renderFactory.getTemplate(\"modal-footer-done\");\r\n            var footer = $.fasttmpl(template_footer, {});\r\n\r\n            self.getControl().mobileView({\r\n                customHeader: $.fasttmpl(self.renderFactory.getTemplate(\"modal-header-search\"), {}),\r\n                // displayName: self.properties.displayName || \"\",\r\n                orientation: self.properties.orientation || \"\",\r\n                contentTemplate: content,\r\n                footerTemplate: footer,  \r\n                style: \"width: 80%; height: 70%\",\r\n                close: function () {\r\n                    self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                },\r\n                afterOpenAnimation: function(event){\r\n                    $(\".bz-modal-view__search\", event.view.header).focus();\r\n                },\r\n                open: function () {\r\n                    self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n                },\r\n                configureActions: function (modalView) {\r\n                    self.configureModalViewHandlers(modalView);\r\n                }\r\n            });\r\n\r\n            \r\n        });\r\n    },\r\n\r\n    /**\r\n     * Configure the modalView Handlers for the new combo control.\r\n     * */\r\n    configureModalViewHandlers: function (modalView) {\r\n        var self = this;\r\n        \r\n        var $listContainer = $(\".bz-checkbox-list li\", modalView.content);\r\n        //clear button\r\n        var $clearButton = $(\".bz-modal-view__clear\", modalView.header);\r\n        // Suggest input\r\n        var $suggestInput = $(\".bz-modal-view__search\", modalView.header);\r\n\r\n        $suggestInput.on(\"change keyup\", function(){\r\n            if (this.value == \"\"){\r\n                $clearButton.removeClass(\"bz-modal-view__clear--visible\");\r\n            } else {\r\n                $clearButton.addClass(\"bz-modal-view__clear--visible\");\r\n            }\r\n            self.filterList(this.value, $listContainer);\r\n        }).on(\"focus\", function(){\r\n            modalView.header.addClass(\"bz-modal-view__header--active\");\r\n        }).on(\"blur\", function(){\r\n            modalView.header.removeClass(\"bz-modal-view__header--active\");\r\n        });\r\n\r\n        //Clear the search\r\n        $clearButton.on(\"click\", function () {\r\n            $suggestInput.val(\"\").trigger(\"change\");\r\n        });\r\n\r\n        $(\"[data-action=close]\", modalView.header).on(\"click\", function () {\r\n            modalView.close();\r\n        });\r\n\r\n        $(modalView.footer).on(\"click\", \"[data-action=save]\", function (evt) {\r\n            // Create a temporal array\r\n            var newList = [];\r\n\r\n            $.each.call(this, $listContainer, function (index, item) {\r\n                var check = item.querySelector(\"input\");\r\n\r\n                if (check.checked){\r\n                    var id = check.getAttribute(\"data-id\");\r\n                    var element = this.findItemById(id);\r\n                    var value = element.value;\r\n                    newList.push({id: id, value: value});\r\n                }\r\n            }.bind(self));\r\n\r\n            self.setDisplayValue(newList);\r\n\r\n            modalView.close();\r\n        });\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi Tablet Render Association\r\n*   Author: UI Forms Team\r\n*   Comments: Defines the association control\r\n*/\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.association\", bizagi.rendering.association.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.association.extend(\"bizagi.rendering.tablet.association\", {}, {\r\n /**\r\n     * Template method to implement in each children to customize each control\r\n     * \r\n     * @returns {} \r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"association\");\r\n        var def = new $.Deferred();\r\n\r\n        self.properties.property = \"flipped\";\r\n        self.properties.idRender = self.properties.id;\r\n\r\n        // Define flipped\r\n        $.when(self.getFlipAssociation()).done(function (flip) {\r\n            // Make json base, create self.properties.formatJson\r\n            self.makeJsonBase();\r\n\r\n            self.properties.flipped = bizagi.util.parseBoolean(flip) || false;\r\n\r\n            var columnData = self.getColumnData();\r\n\r\n            var html = $.fasttmpl(template, $.extend(self.properties, { columnData: columnData }), {\r\n                getColumnData: self.getColumnData,\r\n                getRightAssociation: self.getRightAssociation\r\n            });\r\n\r\n            /* by default need set self.properties.formatJson */\r\n            self.setValue(JSON.encode(self.properties.formatJson));\r\n\r\n            def.resolve(html);\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n\r\n\r\n    /**\r\n     * Get Left Data, verify if flipper flags sets true\r\n     *\r\n     * @param column {'0'||'1'}\r\n     */\r\n    getColumnData: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var data = [];\r\n\r\n        self.data = properties;\r\n\r\n        var dataAssociation = properties.flipped ? properties.rightData : properties.leftData;\r\n\r\n        $.each(dataAssociation, function (key, item) {\r\n            data.push({\r\n                id: item.id,\r\n                value: item.value,\r\n                association: self.getRightAssociation(item.id)\r\n            });\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n    postRender: function () {\r\n        var self = this;\r\n        var isExecution = self.getMode() === \"execution\";\r\n        var $control = self.getControl();\r\n\r\n        // Cache control\r\n        self.association = $(\".bz-association\", $control);\r\n       \r\n        // Add Events at Association Control\r\n        if (isExecution) {self.addEventControl(); }\r\n               \r\n        self.showDefaultGroupList();\r\n    },\r\n\r\n    showDefaultGroupList: function(){\r\n        var self = this;\r\n        var $control = self.getControl();\r\n        var $groups = $('.bz-association-group', $control);\r\n\r\n        if($groups.length > 0){\r\n            $(\"[data-action='collapse']\", $groups[0]).toggleClass(\"bz-icn--expanded\")\r\n\r\n            $(\".bz-association-group__list\", $groups[0])\r\n                .slideDown(300, function(){                                               \r\n                    $(this).toggleClass(\"bz-association-group__list--hidden\")\r\n                });           \r\n        }\r\n    },\r\n\r\n    /**\r\n     * Add event to control\r\n     * @returns {} \r\n     */\r\n    addEventControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"association\");\r\n        var control = self.getControl();\r\n\r\n        // Bind check toggle\r\n        self.association\r\n            .on(\"change\", \"input:checkbox\", function () {\r\n                var $input = $(this);\r\n                var parentId = $input.data(\"parent-id\");\r\n                var id = $input.data(\"id\");\r\n\r\n                if ($input.prop(\"checked\")) { self.addElement(parentId, id);} \r\n                else { self.removeElement(parentId, id);}\r\n            });\r\n\r\n        // Bind flip actions\r\n        self.association\r\n            .find(\"[data-action='flip']\")\r\n            .click(function () {\r\n                $(control).empty();\r\n\r\n                // Define flipped\r\n                self.properties.flipped = !self.properties.flipped;\r\n\r\n                // Send flip data to server\r\n                self.properties.flipstate = self.properties.flipped;\r\n\r\n                self.dataService.getFlipAssociation(self.properties);\r\n\r\n                var columnData = self.getColumnData();\r\n\r\n                // Render template\r\n                $($.fasttmpl(template, $.extend(self.properties, { columnData: columnData }), {\r\n                    getColumnData: self.getColumnData,\r\n                    getRightAssociation: self.getRightAssociation\r\n                })).appendTo(control);\r\n\r\n                self.postRender();\r\n            });\r\n\r\n            self.association.on(\"click\",  \"[data-action='collapse']\", function(){\r\n                var $element = $(this); \r\n                var $groupList = \r\n                    $element\r\n                        .parents('.bz-association-group')\r\n                        .find(\".bz-association-group__list\");\r\n                                \r\n                self.closeAccordionSection();\r\n                if ($groupList.hasClass(\"bz-association-group__list--hidden\")) {\r\n    \r\n                    $element.toggleClass(\"bz-icn--expanded\");\r\n    \r\n                    $groupList.slideDown(300, function(){                    \r\n                        $(this).toggleClass(\"bz-association-group__list--hidden\");\r\n                    });        \r\n                }                                               \r\n            });\r\n    },\r\n\r\n    closeAccordionSection: function(active){\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        $(\"[data-action='collapse']\", $control).removeClass('bz-icn--expanded'); \r\n\r\n        $(\".bz-association-group__list\", $control)\r\n            .slideUp(300, function(){\r\n                $(this).addClass(\"bz-association-group__list--hidden\");    \r\n            });\r\n    },\r\n\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n\r\n        return self.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Render for readonly\r\n     * @returns {} \r\n     */\r\n    postRenderReadOnly: function () {\r\n        this.postRender();       \r\n    },\r\n    \r\n    /* SET-DISPLAY-VALUE\r\n     =====================================================*/\r\n    setDisplayValue: function (value) {        \r\n        // Set internal value\r\n        this.setValue(value, false);\r\n    },\r\n\r\n    getLabel: function () {\r\n        if (!this.label) {\r\n            var label = $(\"> .bz-form-label\", this.element || this.observableElement);\r\n\r\n            if (label.length > 0)\r\n                this.label = label;\r\n\r\n            return label;\r\n        }\r\n\r\n        return this.label;\r\n    }\r\n});","/**\r\n *   Name: Bizagi Tablet Render ECM Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the ecm render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.ecm\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n    BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX,\r\n    BA_PAGE_CACHE: bizagi.render.services.service.BA_PAGE_CACHE\r\n}, bizagi.rendering.ecm.prototype);\r\n\r\n// Extends itself\r\nbizagi.rendering.tablet.ecm.extend(\"bizagi.rendering.tablet.ecm\", {\r\n    QUALITY_PICTURE: 50,\r\n    LIMIT: 1, // The maximum number of media in the device user can record in a single capture operation.\r\n    EXTENSIONSIMG: [\"image/jpeg\", \"jpeg\", \"image\", \"png\", \"jpg\", \"bmp\"],\r\n    EXTENSIONSFILE: [\"doc\", \"docx\", \"xls\", \"xlsx\", \"ppt\", \"pptx\", \"pdf\", \"zip\", \"rar\", \"txt\"],\r\n    EXTENSIONSVIDEO: [\"video/quicktime\", \"quicktime\", \"qt\", \"mov\"],\r\n    EXTENSIONSAUDIO: [\"audio/wav\", \"audio\", \"wav\", \"mp3\"],\r\n    ERROR_ECM_NO_AVAILABLE: 3,\r\n    ACTION_DETAILS: \"details\",\r\n    ACTION_EDIT: \"edit\"\r\n}, {\r\n\r\n    /**\r\n     * Whether or not is a native device\r\n     * @var isNative boolean\r\n     */\r\n    isNative: false,\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        this.isNative = bizagi.util.isCordovaSupported();\r\n        this.fileData = [];\r\n    },\r\n\r\n    /**\r\n     * Method to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = this.renderFactory.getTemplate(\"ecm\");\r\n\r\n        // Set files property\r\n        self.files = self.properties.value || [];\r\n        self.filesCount = self.files.length;\r\n\r\n        return this.renderItem(template, {});\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"ecm-readonly\");\r\n         var data = {\r\n             noFiles: this.filesCount === 0\r\n         };\r\n\r\n        return this.renderItem(template, data);\r\n    },\r\n\r\n    /**\r\n     * Method to render items\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderItem: function (template, data) {\r\n        var self = this;\r\n        var items = \"\";\r\n        var html = $.fasttmpl(template, data);\r\n\r\n        // Render current children\r\n        for (var i = 0; i < self.filesCount; i++) {\r\n            var item = self.renderUploadItem(self.files[i]);\r\n\r\n            items += item;\r\n        }\r\n\r\n        html = self.replaceFilesHtml(html, items);\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Renders a single upload item\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    renderUploadItem: function (file) {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"ecm-item\");\r\n        var form = self.getFormContainer();\r\n\r\n        var data = {\r\n            id: self.properties.id,\r\n            idFileUpload: file[0],\r\n            fileName: file[1],\r\n            editable: self.properties.editable,\r\n            xPath: self.properties.xpath,\r\n            xpathContext: self.getXpathContext() || form.properties.xpathContext || \"\",\r\n            idPageCache: self.properties.idPageCache,\r\n            idAttrib: self.properties.idAttrib,\r\n            sessionId: form.properties.sessionId\r\n        };\r\n\r\n        // Builds the upload item url\r\n        var originalData = $.extend({}, data);\r\n        data.url = self.buildItemUrl(originalData);\r\n\r\n        // Define File Properties\r\n        file.getFileProperties = $.when(self.renderFileLayout(data));\r\n\r\n        var html = $.fasttmpl(template, data);\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to get properties and metadata of ECM item\r\n     * @param data\r\n     * @returns {*}\r\n     */\r\n    renderFileLayout: function (data) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var deferred = new $.Deferred();\r\n\r\n        var originalData = $.extend({}, data);\r\n\r\n        $.when(\r\n            self.dataService.metadataECMMultiaction().getECMMetadata(data),\r\n            self.dataService.metadataECMMultiaction().getFileProperties(originalData)\r\n        ).done(function (metaData, fileProperties) {\r\n\r\n            if (Array.isArray(fileProperties)) {\r\n                fileProperties = fileProperties[0];\r\n            }\r\n\r\n            if (Array.isArray(metaData)) {\r\n                metaData = metaData[0];\r\n            }\r\n\r\n            fileProperties.idAttrib = self.properties.idAttrib;\r\n            fileProperties.showMetadata = self.properties.showMetadata;\r\n            fileProperties.xpathContext = self.getXpathContext() || form.properties.xpathContext || \"\";\r\n            fileProperties.xpath = self.properties.xpath;\r\n            fileProperties.fileName = data.fileName;\r\n            fileProperties.idPageCache = self.properties.idPageCache;\r\n            fileProperties.fileData = originalData;\r\n\r\n            var result = $.extend({}, fileProperties, metaData);\r\n\r\n            deferred.resolve(result);\r\n\r\n        });\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    /**\r\n     * Replaces a {{files}} tag in the container for the specified \"replace\" element\r\n     * @param html\r\n     * @param replace\r\n     * @returns {*}\r\n     */\r\n    replaceFilesHtml: function (html, replace) {\r\n        return html.replace(\"{{files}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var $control = this.getControl();\r\n\r\n        this.$contentFile = $(\".bz-file-upload__container\", $control);\r\n        this.$inputFile = $(\".bz-file-upload__input\", $control);\r\n        this.$nativeFile = $(\".bz-file-upload__native\", $control);       \r\n    },\r\n\r\n    configureHandlers: function () {\r\n        this.checkFileExtensions();\r\n        this.attachEvents();\r\n    },\r\n\r\n    /**\r\n     * Method to customize the render's behaviour to add handlers when the control is readonly\r\n     */\r\n    configureHandlersReadOnly: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n        // Handler to download the file\r\n        $(\"ul.bz-readonly-lists\", $control).on(\"click\", \".bz-file .bz-file-name\", function () {\r\n            var item = $(this).parent(\".bz-file\");\r\n            var file = item.data();\r\n            bizagi.loading.start();\r\n            $.when(bizagi.util.media.downloadFile(file.url, file.title)).fail(function (error) {\r\n                self.executeFormFailHandler(error);\r\n            }).always(function () {\r\n                bizagi.loading.stop();\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Send image using HTTP\r\n     */\r\n    saveImage: function () {\r\n        var self = this;\r\n        var dataItem = \"\";\r\n\r\n        if (self.editedImageURL) {\r\n            dataItem = self.editedImageURL;\r\n        } else if (self.fileProperties) {\r\n            dataItem = self.fileProperties.url;\r\n        }\r\n\r\n        // Fix android 4.4 getting images from recent folder\r\n        var dataFile = bizagi.util.media.getImagePath(dataItem);\r\n        var data = {\r\n            dataFile: dataFile,\r\n            fileName: self.fileProperties.name,\r\n            mimeType: \"image/jpeg\"\r\n        };\r\n\r\n        // Cleans variables related previous uploads\r\n        self.editedImageURL = null;\r\n        self.fileProperties = null;\r\n\r\n        return this.uploadFile(data);\r\n    },\r\n\r\n    /**\r\n     * Method to save a video file\r\n     * @param {} dataVideo\r\n     * @returns {}\r\n     */\r\n    saveVideo: function (dataVideo) {\r\n        var data = {\r\n            dataFile: dataVideo[0].fullPath,\r\n            fileName: dataVideo[0].name,\r\n            mimeType: \"video/quicktime\"\r\n        };\r\n\r\n        return this.uploadFile(data);\r\n    },\r\n\r\n    /**\r\n     * Method to save a file\r\n     * @param data\r\n     * @returns {*|void}\r\n     */\r\n    uploadFile: function (data) {\r\n        var self = this;\r\n        var params = {};\r\n        var addParams = self.buildAddParams();\r\n\r\n        addParams.queueID = \"q_\" + bizagi.util.encodeXpath(self.getUploadXpath());\r\n        addParams[\"xPath\"] = addParams[\"xPath\"];\r\n        addParams.Filename = data.fileName;\r\n\r\n        params.data = addParams;\r\n        params.options = new FileUploadOptions();\r\n        params.options.fileKey = \"file\";\r\n        params.options.fileName = data.fileName;\r\n        params.options.uploadKey = {key: \"Filedata\"};\r\n        params.options.addUrl = self.properties.addUrl;\r\n        params.dataFile = data.dataFile;\r\n\r\n        if (data.mimeType)\r\n            params.options.mimeType = data.mimeType;\r\n\r\n        return $.when(bizagi.util.media.uploadFile(params)).then(function (result) {\r\n            self.onUploadFileCompleted(JSON.parse(decodeURIComponent(result.response)));\r\n        }).fail(function (error) {\r\n            self.executeFormFailHandler(error);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to configure the actions with control\r\n     * @return {}\r\n     */\r\n    attachEvents: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        // Handlers to management of menu actions\r\n        $.each(self.files, function (i, file) {\r\n            self.attackMenuEvents(file);\r\n        });\r\n\r\n        // Attach all events\r\n        this.$contentFile.off(\"click\").on(\"click\", function (evt) {\r\n            self.chooseFile();\r\n        });\r\n\r\n        // Handler to download the file\r\n        $(\"ul.bz-files\", $control).on(\"click\", \".bz-file .bz-file-name\", function () {\r\n            var item = $(this).parent(\".bz-file\");\r\n            var file = item.data();\r\n\r\n            bizagi.loading.start();\r\n\r\n            $.when(bizagi.util.media.downloadFile(file.url, file.title)).fail(function (error) {\r\n                self.executeFormFailHandler(error);\r\n            }).always(function () {\r\n                bizagi.loading.stop();\r\n            });\r\n        });\r\n\r\n\r\n        if (self.isNative) {\r\n            // Upload files\r\n            this.$nativeFile.off(\"click\").actionSheet({\r\n                actions: self.getUploadChoices(),\r\n                actionClicked: function (action) {\r\n                    self.handlerUploadFile(action.guid);\r\n                },\r\n                appear: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n                },\r\n                cancelClicked: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                }\r\n            });\r\n\r\n            // Resolution upload\r\n            $(\".bz-file-upload__resolution\", $control).off(\"click\").actionSheet({\r\n                actions: bizagi.util.media.getImageResolutionSizes(),\r\n                withoutCancel: true,\r\n                actionClicked: function (action) {\r\n                    bizagi.loading.start();\r\n\r\n                    $.when(self.handlerResolutionUpload(action.guid)).always(function () {\r\n                        bizagi.loading.stop();\r\n                    });\r\n                },\r\n                appear: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n                },\r\n                cancelClicked: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                }\r\n            });\r\n        } else {\r\n\r\n            // Attach event to web upload-control\r\n            this.$inputFile.off(\"change\").on(\"change\", function () {\r\n                self.addFile();\r\n                this.value = \"\";\r\n            });\r\n\r\n            // Just in case\r\n            this.$inputFile.off(\"click\").on(\"click\", function (evt) {\r\n                evt.stopPropagation();\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Update menu options\r\n     * @param $fileItem\r\n     * @param fileProperties\r\n     */\r\n    addMenuEvents: function ($fileItem, fileProperties) {\r\n        var self = this;\r\n        var viewMore = $fileItem.find(\".bz-file-menu\");\r\n        var items = [];\r\n\r\n        if (fileProperties.showMetadata) {\r\n            items.push({\r\n                name: self.getResource(\"render-collection-navigator-details-form\"),\r\n                fn: function () {\r\n                    self.processActionByType(self.Class.ACTION_DETAILS, fileProperties, $fileItem);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (fileProperties.showMetadata && fileProperties.allowUpdateMetadata)\r\n            items.push({\r\n                name: self.getResource(\"render-collection-navigator-edit-form\"),\r\n                fn: function () {\r\n                    self.processActionByType(self.Class.ACTION_EDIT, fileProperties, $fileItem);\r\n                }\r\n            });\r\n\r\n        if (fileProperties.allowCheckOut) {\r\n            items.push({\r\n                name: self.getResource(\"render-ecm-bt-lock\"),\r\n                fn: function () {\r\n                    self.lockECMFile($fileItem, fileProperties);\r\n                }\r\n            });\r\n        }\r\n\r\n        if (fileProperties.allowCancelCheckOut) {\r\n            items.push({\r\n                name: self.getResource(\"render-ecm-bt-unlock\"),\r\n                fn: function () {\r\n                    self.unlockECMFile($fileItem, fileProperties);\r\n                }\r\n            });\r\n        }\r\n\r\n        /*if (fileProperties.allowUpdateContent) {\r\n            items.push({\r\n                name: self.getResource(\"render-ecm-bt-upgrade\"),\r\n                fn: function () {\r\n                    self.processActionByType(\"upgrade\", fileProperties);\r\n                }\r\n            });\r\n        }*/\r\n\r\n        if (fileProperties.allowDelete) {\r\n            items.push({\r\n                name: self.getResource(\"render-ecm-bt-delete\"),\r\n                fn: function () {\r\n                    self.deleteECMFile($fileItem, fileProperties.idFileUpload);\r\n                }\r\n            });\r\n        }\r\n\r\n        // TODO: Check items has data\r\n        viewMore.overflowMenu({items: items});\r\n    },\r\n\r\n    /**\r\n     * Removes a file from the ECM control\r\n     * @param $fileItem\r\n     * @param fileId\r\n     */\r\n    deleteECMFile: function ($fileItem, fileId) {\r\n        var self = this;\r\n\r\n        bizagi.showConfirmationBox(this.getResource(\"render-ecm-confirm-message\"))\r\n            .done(function () {\r\n                $.when(self.deleteUploadItem($fileItem, fileId))\r\n                    .done(function () {\r\n                        // Detach item\r\n                        $fileItem.hide();\r\n                        $fileItem.remove();\r\n\r\n                        // Update value\r\n                        self.setValue(self.files, false);\r\n\r\n                        // Check maxFiles\r\n                        self.checkMaxFiles();\r\n\r\n                        // Trigger change\r\n                        self.triggerRenderChange();\r\n                    });\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Check maximum number of files\r\n     */\r\n    checkMaxFiles: function () {\r\n        if (this.isMaxFilesReached()) {\r\n            $(this.$contentFile).addClass(\"bz-file-upload__container--hidden\");\r\n        } else {\r\n            $(this.$contentFile).removeClass(\"bz-file-upload__container--hidden\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if the maximum number of files than can be uploaded has been reached\r\n     * @returns {}\r\n     */\r\n    isMaxFilesReached: function () {\r\n        var maxFiles = this.properties.maxfiles;\r\n        var actualFiles = this.properties.value ? this.properties.value.length : 0;\r\n\r\n        return maxFiles !== 0 && (this.filesCount >= maxFiles && actualFiles >= maxFiles);\r\n    },\r\n\r\n    /**\r\n     * Call the form failhandler with an specific error\r\n     * @param {} error\r\n     * @returns {}\r\n     */\r\n    executeFormFailHandler: function (error) {\r\n        var errorResponse = \"\";\r\n\r\n        if (error && error.code === this.Class.ERROR_ECM_NO_AVAILABLE) {\r\n            errorResponse = this.getResource(\"render-ecm-service-not-available\");\r\n        } else if (error && error.responseText) {\r\n            errorResponse = error.responseText;\r\n        } else {\r\n            errorResponse = this.getResource(\"render-ecm-service-general-error\");\r\n        }\r\n\r\n        this.getFormContainer().failHandler(errorResponse);\r\n    },\r\n\r\n    lockECMFile: function ($fileItem, fileProperties) {\r\n        var self = this;\r\n\r\n        $.when(self.lockUploadItem(fileProperties.idFileUpload)).done(\r\n            function (result) {\r\n                var file = [result.idFileUpload, fileProperties.fileName];\r\n                var newItem = self.renderUploadItem(file);\r\n\r\n                $fileItem.replaceWith(newItem);\r\n                self.attackMenuEvents(file);\r\n            });\r\n    },\r\n\r\n    unlockECMFile: function ($fileItem, fileProperties) {\r\n        var self = this;\r\n\r\n        $.when(self.unlockUploadItem(fileProperties.idFileUpload))\r\n            .done(function (result) {\r\n                var file = [result.idFileUpload, fileProperties.fileName];\r\n                var newItem = self.renderUploadItem(file);\r\n\r\n                $fileItem.replaceWith(newItem);\r\n                self.attackMenuEvents(file);\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Method to add new file from native or hybrid environment\r\n     */\r\n    chooseFile: function () {\r\n        if (this.isNative) {\r\n            this.$nativeFile.click();\r\n        } else if (bizagi.util.media.fileAPISupported()) {\r\n            this.$inputFile.click();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check allow extensions and define possible choices\r\n     * @returns {}\r\n     */\r\n    checkFileExtensions: function () {\r\n        var self = this;\r\n        var validExtensions = self.properties.validExtensions || \"\";\r\n\r\n        self.validOptions = {video: false, image: false, file: false};\r\n\r\n        // Preprocess the extensions string\r\n        validExtensions = validExtensions.replace(/\\s+/g, \"\").toLowerCase();\r\n\r\n        if (typeof (validExtensions) === \"undefined\" || validExtensions === \"\") {\r\n            self.validOptions = {video: true, image: true, file: true};\r\n        } else {\r\n            validExtensions = validExtensions.split(\";\");\r\n\r\n            if (validExtensions.length === 1 && validExtensions[0].indexOf(\"*.*\") !== -1) {\r\n                self.validOptions.video = true;\r\n                self.validOptions.image = true;\r\n            } else {\r\n                for (var i = 0, length = validExtensions.length; i < length; i++) {\r\n                    validExtensions[i] = validExtensions[i].replace(\"*.\", \"\");\r\n\r\n                    if (self.Class.EXTENSIONSFILE.toString().indexOf(validExtensions[i]) >= 0) {\r\n                        self.validOptions.file = true;\r\n                    } else if (self.Class.EXTENSIONSIMG.toString().indexOf(validExtensions[i]) >= 0) {\r\n                        self.validOptions.image = true;\r\n                    } else if (self.Class.EXTENSIONSVIDEO.toString().indexOf(validExtensions[i]) >= 0) {\r\n                        self.validOptions.video = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Media is not supported then upload control is disabled\r\n        if (!self.validOptions.file && !self.validOptions.image && !self.validOptions.video) {\r\n            $(self.$contentFile).addClass(\"bz-file-upload__container--hidden\");\r\n        }\r\n\r\n        // Limit of files is reached then upload control is disabled\r\n        if (self.isMaxFilesReached() || (!self.isNative && !bizagi.util.media.fileAPISupported())) {\r\n            $(this.$contentFile).addClass(\"bz-file-upload__container--hidden\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Add upload options\r\n     */\r\n    getUploadChoices: function () {\r\n        var self = this;\r\n        var itemsUpload = [];\r\n\r\n        // Take photo, Choose photo\r\n        if (self.validOptions.image) {\r\n            itemsUpload.push({\r\n                \"guid\": 1,\r\n                \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-take-photo\")\r\n            });\r\n            itemsUpload.push({\r\n                \"guid\": 2,\r\n                \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-choose-photo\")\r\n            });\r\n        }\r\n\r\n        // Take video\r\n        if (self.validOptions.video) {\r\n            itemsUpload.push({\r\n                \"guid\": 3,\r\n                \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-take-video\")\r\n            });\r\n        }\r\n\r\n        // Stores the upload options\r\n        return [].concat(itemsUpload);\r\n    },\r\n\r\n    /**\r\n     * Handler of upload files\r\n     * @param {} ordinal\r\n     * @returns {}\r\n     */\r\n    handlerUploadFile: function (ordinal) {\r\n        var self = this;\r\n        var actionSelected = ordinal || 0;\r\n\r\n        switch (actionSelected) {\r\n            case 2:\r\n\r\n                navigator.camera.getPicture(function (dataImage) {\r\n                    self.dataImage = dataImage;\r\n                    var extensions = self.Class.EXTENSIONSIMG.concat(self.Class.EXTENSIONSVIDEO);\r\n\r\n                    bizagi.loading.start();\r\n\r\n                    $.when(bizagi.util.media.checkMaxSize(dataImage, self.properties))\r\n                        .then(function () {\r\n                            // Gets the real properties for the file\r\n                            return $.when(bizagi.util.media.getFileDataInfo(self.dataImage))\r\n                                .then(function (fileData) {\r\n                                    self.fileProperties = fileData;\r\n\r\n                                    if (bizagi.util.media.checkFileTypes(fileData, self.properties, extensions)) {\r\n                                        if (!bizagi.util.isAndroid()) {\r\n                                            return $.when(bizagi.util.media.modalResolutionUpload()).then(function (buttonIndex) {\r\n                                                if (buttonIndex <= bizagi.util.media.getImageResolutionItems().length) {\r\n                                                    return self.handlerResolutionUpload(buttonIndex);\r\n                                                }\r\n                                            });\r\n\r\n                                        } else {\r\n                                            // Force click to show actionsheet menu\r\n                                            $(\".bz-file-upload__resolution\", self.getControl()).click();\r\n                                        }\r\n                                    }\r\n                                });\r\n                        }).always(function () {\r\n                        bizagi.loading.stop();\r\n                    });\r\n\r\n                }, self.onFail.bind(self), {\r\n                    quality: self.Class.QUALITY_PICTURE,\r\n                    sourceType: Camera.PictureSourceType.PHOTOLIBRARY\r\n                });\r\n                break;\r\n            case 1:\r\n                navigator.camera.getPicture(function (dataImage) {\r\n                        bizagi.loading.start();\r\n\r\n                        $.when(bizagi.util.media.checkMaxSize(dataImage, self.properties)).then(function () {\r\n                            return $.when(bizagi.util.media.getFileDataInfo(dataImage)).then(function (fileData) {\r\n                                self.fileProperties = fileData;\r\n                                return self.saveImage(dataImage);\r\n                            });\r\n                        }).always(function () {\r\n                            bizagi.loading.stop();\r\n                        });\r\n                    },\r\n                    self.onFail.bind(self), {\r\n                        quality: self.Class.QUALITY_PICTURE,\r\n                        sourceType: navigator.camera.PictureSourceType.CAMERA,\r\n                        mediaType: navigator.camera.MediaType.PICTURE,\r\n                        destinationType: Camera.DestinationType.FILE_URI,\r\n                        correctOrientation: true,\r\n                        targetWidth: 1280,\r\n                        targetHeight: 960\r\n                    });\r\n                break;\r\n            case 3:\r\n                navigator.device.capture.captureVideo(function (dataVideo) {\r\n                    bizagi.loading.start();\r\n\r\n                    $.when(bizagi.util.media.checkMaxSizeVideo(dataVideo, self.properties))\r\n                        .then(function () {\r\n                            return self.saveVideo(dataVideo);\r\n                        }).always(function () {\r\n                        bizagi.loading.stop();\r\n                    });\r\n\r\n                }, self.onFail.bind(self), {limit: self.Class.LIMIT});\r\n                break;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Catch errors\r\n     * @param {} error\r\n     */\r\n    onFail: function (error) {\r\n        var messageError = bizagi.util.processFailMessage(error);\r\n\r\n        bizagi.loading.stop();\r\n\r\n        if (messageError && typeof (messageError) === \"string\" && messageError.indexOf(\"No Activity found to handle Intent\") !== -1) {\r\n            var hasResource = bizagi.util.isValidResource(\"render-upload-error-media-app\");\r\n            var message = hasResource ? bizagi.localization.getResource(\"render-upload-error-media-app\") : \"Your device does not have an app to execute this action.\";\r\n\r\n            self.performValidationMessage(message);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Adds a validation message to the render\r\n     * @param message\r\n     */\r\n    performValidationMessage: function (message) {\r\n        var fail = bizagi.util.processFailMessage(message);\r\n\r\n        bizagi.showMessageBox(fail);\r\n    },\r\n\r\n    /**\r\n     * Handler of resolution upload\r\n     * @param {} ordinal\r\n     * @returns {}\r\n     */\r\n    handlerResolutionUpload: function (ordinal) {\r\n        var self = this;\r\n        var actionSelected = ordinal || 0;\r\n\r\n        // If original, save image normally, if not, reduce quality and size\r\n        if (actionSelected === bizagi.util.media.ResolutionType.ORIGINAL) {\r\n            return self.saveImage(self.dataImage);\r\n        } else {\r\n            var resolution = bizagi.util.media.getImageResolution(actionSelected);\r\n\r\n            return $.when(bizagi.util.media.transformImageSize(self.dataImage, resolution)).then(function (result) {\r\n\r\n                self.editedImageURL = result.localUrl;\r\n                self.properties.url = result.base64Image;\r\n\r\n                return self.saveImage(self.dataImage);\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to add new file\r\n     */\r\n    addFile: function () {\r\n        var self = this;\r\n        var dataFile = this.$inputFile[0].files[0];\r\n        var extensions = self.Class.EXTENSIONSIMG.concat(self.Class.EXTENSIONSFILE, self.Class.EXTENSIONSVIDEO);\r\n\r\n        dataFile.fullPath = this.$inputFile[0].value;\r\n        bizagi.loading.start();\r\n\r\n        if (bizagi.util.media.checkMaxSizeFile(dataFile, self.properties) && bizagi.util.media.checkFileTypes(dataFile, self.properties, extensions)) {\r\n\r\n            $.when(self.processUploadFile(dataFile)).done(function (result) {\r\n                if (!bizagi.util.isFailResponse(result)) {\r\n                    self.onUploadFileCompleted(JSON.parse(decodeURIComponent(result)));\r\n                } else {\r\n                    self.performValidationMessage(result)\r\n                }\r\n            }).fail(function (error) {\r\n                self.executeFormFailHandler(error);\r\n            }).always(function () {\r\n                bizagi.loading.stop();\r\n            });\r\n        } else {\r\n            bizagi.loading.stop();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Build add params to send to the server\r\n     * @param {} dataFile\r\n     */\r\n    buildAddFileParams: function (dataFile) {\r\n        var self = this;\r\n        var prefix = self.Class.BA_CONTEXT_PARAMETER_PREFIX;\r\n\r\n        // Get form data for POSTing\r\n        var formData = new FormData();\r\n        var form = self.getFormContainer();\r\n        var data = self.buildAddParams();\r\n\r\n        // Build add params to send to the server\r\n        var keys = Object.keys(data);\r\n\r\n        keys.map(function (key) {\r\n            formData.append(key, data[key]);\r\n        });\r\n\r\n        formData.append(\"Filedata\", dataFile);\r\n        formData.append(\"Filename\", dataFile.name.substr(dataFile.name.replace(/([\\\\\\/]+)/g, \"/\").lastIndexOf(\"/\") + 1));\r\n        formData.append(self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\", form.properties.sessionId);\r\n\r\n        if (self.properties.contexttype)\r\n            formData.append(prefix + \"contexttype\", self.properties.contexttype);\r\n\r\n        try {\r\n            if (typeof (BIZAGI_SESSION_NAME) !== \"undefined\") {\r\n                formData.append(BIZAGI_SESSION_NAME, form.properties.sessionId);\r\n            } else {\r\n                formData.append(\"JSESSIONID\", form.properties.sessionId);\r\n            }\r\n        } catch (e) {\r\n            formData.append(\"JSESSIONID\", form.properties.sessionId);\r\n        }\r\n\r\n        return formData;\r\n    },\r\n\r\n    /**\r\n     * Process an upload file into the server\r\n     * @param {} dataFile\r\n     * @returns {}\r\n     */\r\n    processUploadFile: function (dataFile) {\r\n        var data = {\r\n            url: this.properties.addUrl,\r\n            formData: this.buildAddFileParams(dataFile)\r\n        };\r\n\r\n        return this.dataService.processUploadFile(data);\r\n    },\r\n\r\n    /**\r\n     * onUploadFileCompleted\r\n     * @param {} result\r\n     */\r\n    onUploadFileCompleted: function (result) {\r\n        var self = this;\r\n        var $wrapper = $(\".bz-files\", self.getControl());\r\n\r\n        if (result.idFileUpload && result.fileName) {\r\n            var file = [result.idFileUpload, result.fileName];\r\n            var newItem = self.renderUploadItem(file);\r\n\r\n            // Locate it before the upload wrapper\r\n            $wrapper.append(newItem);\r\n\r\n            // Copy the files value but not its reference\r\n            var files = self.files.slice();\r\n\r\n            //Add the new item to this temporal array\r\n            files.push(file);\r\n\r\n            // Update value\r\n            self.setValue(files, true);\r\n\r\n            // Check maxFiles\r\n            self.checkMaxFiles();\r\n            self.attackMenuEvents(file);\r\n\r\n            self.editedImageURL = null;\r\n        } else {\r\n            self.performValidationMessage(result.message);\r\n        }\r\n    },\r\n\r\n    attackMenuEvents: function (file) {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        if (file && file.getFileProperties) {\r\n            $.when(file.getFileProperties).done(function (fileProperties) {\r\n                // TODO: Fail scenario...\r\n                var $fileItem = $(\".\" + self.properties.id + \"-\" + fileProperties.idFileUpload, $control);\r\n\r\n                self.fileData[fileProperties.idFileUpload] = fileProperties.metadata || [];\r\n                self.addMenuEvents($fileItem, fileProperties);\r\n            });\r\n        }\r\n    },\r\n\r\n    processActionByType: function (type, fileData, $fileItem) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n\r\n        bizagi.loading.start();\r\n\r\n        // Instantiate slide form object\r\n        var slideView = new bizagi.rendering.tablet.slide.ecm(self.dataService, self.renderFactory, {\r\n            title: self.properties.displayName || \"\",\r\n            container: form.container,\r\n            navigation: self.getParams().navigation,\r\n            editable: properties.editable && type !== self.Class.ACTION_DETAILS,\r\n            orientation: properties.orientation || \"ltr\",\r\n            onSave: function (result) {\r\n                if (result.update) {\r\n                    var file = [result.idFileUpload, result.fileName];\r\n                    var newItem = self.renderUploadItem(file);\r\n\r\n                    $fileItem.replaceWith(newItem);\r\n                    self.attackMenuEvents(file);\r\n                }\r\n            },\r\n            onCancel: function () {\r\n                // console.log(\"CANCEL\");\r\n            }\r\n        });\r\n\r\n        slideView.render({metadata: fileData.metadata, fileData: fileData})\r\n            .always(function () {\r\n                bizagi.loading.stop();\r\n            });\r\n\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: BizAgi Tablet Render Search List Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the search-list render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.searchList\", bizagi.rendering.searchList.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.searchList.extend(\"bizagi.rendering.tablet.searchList\", {\r\n    SEARCH_MIN_LENGTH: 2,\r\n    SEARCH_MAX_RECORDS: 50,\r\n    SEARCH_DELAY: 250,\r\n    SEARCH_ELEMENTS: {}\r\n}, {\r\n\r\n    renderControl: function() {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"searchList\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            value: properties.value.map(function(el){\r\n                return self.formatItem(el.value);\r\n            }).join(\", \")\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     * @returns {}\r\n     */\r\n    postRender: function () {\r\n        this.searchListInput = $(\".bz-search-list__input\", this.getControl());\r\n    },\r\n\r\n    postRenderReadOnly: function () {\r\n        this.searchListInput = $(\".bz-search-list__input\", this.getControl());\r\n    },\r\n\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"searchList.readonly\");\r\n\r\n        // Render template\r\n        var content = $.fasttmpl(template, {\r\n            items: self.properties.value || {},\r\n            editable: self.properties.editable || true\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n\r\n        return content;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour\r\n     * to add handlers\r\n     * @returns {}\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n\r\n        // Select new item\r\n        self.searchListInput.on(\"click\", function (evt) {\r\n            var parent = $(evt.target).parent() || {};\r\n            if (parent.hasClass('bz-pill')) return;\r\n\r\n            self._searchListViewModal();\r\n        });\r\n    },\r\n\r\n    _searchListViewModal: function () {\r\n        var self = this;\r\n        var header = self.getHeaderTemplate();\r\n        var content = self.getContentTemplate();\r\n        var footer = self.getFooterTemplate();\r\n\r\n        self.searchListInput.mobileView({\r\n            customHeader: header,\r\n            orientation: self.properties.orientation || \"\",\r\n            cssClassHeader: \"bz-modal-view__header-multiple\",\r\n            contentTemplate: content,\r\n            footerTemplate: footer,\r\n            style: \"width: 80%; height: 70%\",\r\n            close: function () {\r\n                $(window).unbind(\"resize\");\r\n                self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n            },\r\n            afterOpenAnimation: function(event){\r\n                $(\".bz-modal-view__search\", event.view.header).focus();\r\n            },\r\n            open: function () {\r\n                self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n            },\r\n            configureActions: function (context) {\r\n                self.adjustResize();\r\n                self.configureModalViewHandlers(context);\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var finalValue = typeof (value) === \"string\" ? JSON.parse(value).value : value.value;\r\n\r\n        // Set internal value\r\n        self.setValue(finalValue);\r\n\r\n        if (value !== undefined) {\r\n            if (self.properties.editable) {\r\n                self.searchListInput.html(finalValue.map(function(el){\r\n                    return self.formatItem(el.value);\r\n                }).join(\", \"));\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Remove a item from the list\r\n     * @param {} element\r\n     * @returns {}\r\n     */\r\n    deleteItem: function (element) {\r\n        var self = this;\r\n        var item = element.parent('div');\r\n\r\n        // Remove from main memory and set the new value\r\n        self.removeElement({ id: item.data(\"id\") });\r\n\r\n        // Remove list element\r\n        item.remove();\r\n    },\r\n\r\n    selectItem: function (item) {\r\n        var templateItem = this.getTagTemplate(item, this.properties.editable);\r\n        this.modalViewTagList.append(templateItem);\r\n    },\r\n\r\n    /**\r\n     * Configure the modalView Handlers for the new suggest control\r\n     * @param {} inputContainer\r\n     * @returns {}\r\n     */\r\n    configureModalViewHandlers: function (modalView) {\r\n        var self = this;\r\n        var modalFooter = modalView.footer;\r\n        var modalHeader = modalView.header;\r\n\r\n        // Initialize data\r\n        var elements = {};\r\n\r\n        if (self.hasValue()) {\r\n            var list = self.getListItems();\r\n            $.each(list, function (index, item) {\r\n                elements[item.id] = item;\r\n            });\r\n        }\r\n\r\n        // Configuring list as a selectable element\r\n        self.modalViewList = $(\".bz-list\", modalView.content);\r\n        self.modalViewTagList = $(\".bz-search-pill__results\", modalHeader);\r\n\r\n        var $clearButton = $(\".bz-modal-view__clear\", modalHeader);\r\n\r\n        // Suggest\r\n        var $suggestInput = $(\".bz-modal-view__search\", modalHeader);\r\n        var suggestFilter = bizagi.util.debounce(function () {\r\n            if (this.value === \"\") {\r\n                $clearButton.removeClass(\"bz-modal-view__clear--visible\");\r\n            } else {\r\n                $clearButton.addClass(\"bz-modal-view__clear--visible\");\r\n            }\r\n            self.autoCompleteSearchResults($.trim(this.value));\r\n        }, this.Class.SEARCH_DELAY);\r\n\r\n        $suggestInput.on(\"change keyup\", suggestFilter).on(\"focus\", function(){\r\n            modalView.header.addClass(\"bz-modal-view__header--active\");\r\n        }).on(\"blur\", function(){\r\n            modalView.header.removeClass(\"bz-modal-view__header--active\");\r\n        });\r\n\r\n        //Clear the search\r\n        $clearButton.bind(\"click\", function(){\r\n            $suggestInput.val(\"\").trigger(\"change\");\r\n        });\r\n\r\n        $(\"[data-action=close]\", modalView.header).bind(\"click\", function () {\r\n            modalView.close();\r\n        });\r\n\r\n\r\n        // Add tags to list\r\n        self.modalViewList.on(\"click\", \"li\", function () {\r\n            var item = $.data(this).item;\r\n\r\n            // Prevent duplicate elements\r\n            if (!item || (item && elements[item.id])) return;\r\n            elements[item.id] = item;\r\n\r\n            // Update state of button\r\n            $(modalFooter).find('.bz-btn').removeClass(\"bz-btn--secundary\");\r\n            $(modalFooter).find('.bz-btn').addClass(\"bz-btn--primary\");\r\n\r\n            // Update list\r\n            if ((Object.keys(elements) || []).length === 1) {\r\n                $(modalHeader).find(\".bz-search-pill__selected \")\r\n                    .removeClass(\"bz-search-pill__selected--hidden\");\r\n            }\r\n            self.selectItem(item);\r\n        });\r\n\r\n        // Remove tags of list\r\n        self.modalViewTagList.on(\"click\", '.bz-pill > .bz-btn-icn', function (evt) {\r\n            evt.preventDefault();\r\n            evt.stopPropagation();\r\n\r\n            var element = $(this);\r\n            var tag = element.parent('div');\r\n\r\n            // Update state of button\r\n            $(modalFooter).find('.bz-btn').removeClass(\"bz-btn--secundary\");\r\n            $(modalFooter).find('.bz-btn').addClass(\"bz-btn--primary\");\r\n\r\n            // Remove from main memory and set the new value\r\n            delete elements[tag.data(\"id\")];\r\n\r\n            // Remove list element\r\n            tag.remove();\r\n            // Update list\r\n            if ((Object.keys(elements) || []).length === 0) {\r\n                $(modalHeader).find(\".bz-search-pill__selected \")\r\n                    .addClass(\"bz-search-pill__selected--hidden\");\r\n            }\r\n        });\r\n\r\n        $(modalFooter).delegate(\"[data-action=save]\", \"click\", function (evt) {\r\n            // Create a temporal array\r\n            var newList = [];\r\n            $.each(elements, function (index, item) {\r\n                newList.push(item);\r\n            });\r\n\r\n            self.setDisplayValue({ value: newList });\r\n\r\n            modalView.close();\r\n        });\r\n    },\r\n\r\n    autoCompleteSearchResults: function (currentValue) {\r\n        var self = this;\r\n\r\n        $.when(self.processRequest({ term: currentValue }))\r\n            .done(function (response) {\r\n\r\n                self.modalViewList.find(\"li\").remove();\r\n\r\n                for (var i = 0, length = response.length; i < length; i++) {\r\n                    var searchItem = self.renderSearchItem(response[i]);\r\n\r\n                    searchItem.appendTo(self.modalViewList);\r\n                }\r\n            });\r\n    },\r\n\r\n    renderSearchItem: function (item) {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"searchList.item\");\r\n\r\n        var searchItem = $.tmpl(template, {\r\n            id: item.id,\r\n            label: item.label,\r\n            value: this.formatItem(item.value)\r\n        });\r\n\r\n        searchItem.data(\"item\", item);\r\n\r\n        return searchItem;\r\n    },\r\n\r\n    /**\r\n     * Process the request data for the autocomplete control\r\n     * @param {} req\r\n     * @returns {}\r\n     */\r\n    processRequest: function (req) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var deferred = new $.Deferred();\r\n\r\n        // Create array for response objects   \r\n        var suggestions = [];\r\n\r\n        if (req.term.length >= this.Class.SEARCH_MIN_LENGTH) {\r\n\r\n            // Update term property to reflect the search\r\n            properties.term = req.term;\r\n\r\n            // Cancel previous request in order to improve the performance\r\n            if (self.deferredReference && typeof (self.deferredReference.reject) === \"function\" &&\r\n                self.deferredReference.state() !== \"resolved\") {\r\n                self.deferredReference.reject({ hideStatus: true });\r\n            }\r\n\r\n            self.deferredReference = self.getData().done(function (data) {\r\n                if (data && data.length > 0) {\r\n                    data = data.slice(0, properties.maxRecords);\r\n\r\n                    if (data.length > self.Class.SEARCH_MAX_RECORDS) {\r\n                        data = data.slice(0, self.Class.SEARCH_MAX_RECORDS);\r\n\r\n                        suggestions.push({\r\n                            id: self.Class.NO_RESULTS_SEARCH_ID,\r\n                            label: self.getResource(\"render-search-maximum-records-allowed\"),\r\n                            value: \"\"\r\n                        });\r\n\r\n\r\n                    } else {\r\n                        data = data.slice(0, properties.maxRecords);\r\n                    }\r\n\r\n                    $.each(data, function (i, val) {\r\n                        if (properties.maxRecords === 0 || i < properties.maxRecords) {\r\n                            var parseValue = bizagi.util.highlightMatches(val, req.term);\r\n\r\n                            suggestions.push({ id: val.id, label: parseValue, value: val.value });\r\n                        }\r\n                    });\r\n\r\n                } else {\r\n                    suggestions.push({\r\n                        id: self.Class.NO_RESULTS_SEARCH_ID,\r\n                        label: self.getResource(\"render-grid-no-records\"),\r\n                        value: \"\"\r\n                    });\r\n                }\r\n\r\n                deferred.resolve(suggestions);\r\n\r\n            }).fail(function () {\r\n                deferred.reject();\r\n            });\r\n\r\n        } else {\r\n            deferred.resolve(suggestions);\r\n        }\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    getContentTemplate: function () {\r\n        var self = this;\r\n        var value = self.getValue();\r\n        var finalValue = typeof (value) === \"string\" ? JSON.parse(value).value : value.value;\r\n\r\n        var template = this.renderFactory.getTemplate(\"searchList.items\");\r\n        var content = $.fasttmpl(template, {\r\n            items: finalValue || {},\r\n            editable: self.properties.editable || true\r\n        },{\r\n            formatItem: self.formatItem\r\n        });\r\n\r\n        return $.trim(content);\r\n    },\r\n\r\n    getFooterTemplate: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"searchList.actions\");\r\n        var content = $.fasttmpl(template, {\r\n            items: self.properties.value || {},\r\n            editable: self.properties.editable || true\r\n        });\r\n\r\n        return $.trim(content);\r\n    },\r\n\r\n    getTagTemplate: function (item, editable) {\r\n        var template = this.renderFactory.getTemplate(\"searchList.tag\");\r\n        var content = $.fasttmpl(template, {\r\n            id: item.id,\r\n            label: item.label,\r\n            value: this.formatItem(item.value),\r\n            editable: editable\r\n        });\r\n        return $.trim(content);\r\n    },\r\n\r\n    adjustResize: function () {\r\n        var self = this;\r\n        var initialScreenSize = window.innerHeight;\r\n\r\n        $(window).off(\"resize\").on(\"resize\", bizagi.util.debounce(function () {\r\n            var that = $(this);\r\n\r\n            // Hide the footer\r\n            if (that.height() < initialScreenSize) {\r\n                $(\".bz-mobile-view__footer_content\").addClass(\"bz-hidden\");\r\n            } else {\r\n                $(\".bz-mobile-view__footer_content\").removeClass(\"bz-hidden\");\r\n            }\r\n        }, self.Class.SEARCH_DELAY));\r\n    },\r\n\r\n    getHeaderTemplate: function () {\r\n        var self = this;\r\n        var value = self.getValue();\r\n        var finalValue = typeof (value) === \"string\" ? JSON.parse(value).value : value.value;\r\n        var template = this.renderFactory.getTemplate(\"searchList-modal-header\");\r\n\r\n        var content = $.fasttmpl(template, {\r\n            items: finalValue || {},\r\n            editable: self.properties.editable || true,\r\n            emptyItems: (finalValue || []).length === 0,\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n\r\n        return $.trim(content);\r\n    }\r\n});\r\n","\r\n/*\r\n*   Name: BizAgi User Field render tablet Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define the basic behaviour for userfields\r\n*/\r\n\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.userfieldWrapper\", bizagi.rendering.userfieldWrapper.prototype);\r\n\r\nbizagi.rendering.tablet.userfieldWrapper.extend(\"bizagi.rendering.tablet.userfieldWrapper\", {}, {\r\n\r\n    /** \r\n    *   Load userfield\r\n    */\r\n    getUserfieldControl: function () {\r\n        var self = this;\r\n        var sControl = self.userfieldName;\r\n        var mode = self.getMode();\r\n        var exists = (mode !== \"execution\") || eval(\"bizagi.rendering.tablet.\" + sControl + \" !== undefined\");\r\n        var def = new $.Deferred();\r\n        if (exists) {\r\n            // Creates the userfield instance\r\n            // Set true argument for tabItem\r\n            $.when(self.parent.ready()).done(function () {\r\n                def.resolve(self.createUserfieldInstance(sControl));\r\n            });\r\n\r\n        } else {\r\n            // Call ajax service in order to retrieve user field definitions\r\n            $.when(self.dataService.getUserfieldDefinition({ userfield: self.userfieldGuid, device: \"tablet\" })).pipe(function (data) {\r\n                // Load userfield in memory\r\n                self.loadUserfield(data);\r\n\r\n                // Creates the userfield instance\r\n                def.resolve(self.createUserfieldInstance(sControl));\r\n            });\r\n        }\r\n\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n * Creates the userfield instance when the userfield prototype is loaded in memory \r\n */\r\n    createUserfieldInstance: function (sControl) {\r\n        var self = this;\r\n        var control;\r\n        try {\r\n            // Create a dynamic function to avoid problem with eval calls when minifying the code\r\n            var dynamicFunction = \"var baDynamicFn = function(renderParams){ \\r\\n\";\r\n            dynamicFunction += \"return new bizagi.rendering.tablet.\" + sControl + \"(renderParams);\\r\\n\";\r\n            dynamicFunction += \"}\\r\\n\";\r\n            dynamicFunction += \"baDynamicFn\";\r\n            dynamicFunction = eval(dynamicFunction);\r\n\r\n            // Call the dynamic function\r\n            control = dynamicFunction(self.initialParams);\r\n        } catch (e) {\r\n            // If the call fails, return the default user field\r\n            control = self.getUserFieldInstance(self.initialParams);\r\n        }\r\n        control.properties.isUserField = true;\r\n\r\n        // Save userfield instance\r\n        self.userfieldInstance = control;\r\n\r\n        // Create proxy methods from the wrapper to the userfield instance\r\n        self.replicateUserfieldMethods(control);\r\n\r\n        // Replicate renderchange event from wrapped element to grid if applies\r\n        self.userfieldInstance.bind(\"renderchange\", function () {\r\n            self.triggerHandler(\"renderchange\", arguments);\r\n        });\r\n\r\n        return control;\r\n    },\r\n\r\n    /**\r\n     * Load userfield into memory\r\n     */\r\n    loadUserfield: function (data) {\r\n        var self = this;\r\n        self.properties.styleGuid = self.properties.styleGuid || Math.guid();\r\n\r\n        try {\r\n            // Parse data\r\n            try { data = eval(data); } catch (e) { bizagi.log(\"Could not parse result userfield \" + self.userfieldName, e.message); }\r\n\r\n            // Iterate elements\r\n            $.each(data, function (index, val) {\r\n                if (val.type == \"js\") {\r\n                    try {\r\n                        function replaceWithDevice(str)\r\n                        {\r\n                            return str.replace(/bizagi.rendering/gi, \"bizagi.rendering.tablet\");\r\n                        }\r\n                        val.content = val.content.replace(/bizagi\\.rendering\\.[^\\s]+\\.extend(\\s|\\n|\\s)*\\((\\s|\\n|\\s)*\\\"bizagi\\.rendering\\.[^\\s]+\\\"/gmi, replaceWithDevice);\r\n                        window.eval(val.content);\r\n                    } catch (ex) { bizagi.log(\"Could not parse result userfield3 \" + self.userfieldName, ex.message); };\r\n                }\r\n                if (val.type == \"css\") {\r\n                    bizagi.util.loadStyle(val.content, self.properties.styleGuid);\r\n                }\r\n            });\r\n\r\n            // Replicate userfield methods to the wrapper\r\n            var control = eval(\"bizagi.rendering.\" + self.userfieldName);\r\n\r\n        } catch (e) { bizagi.log(\"Could not parse result userfield \" + self.userfieldName, e.message); };\r\n    },\r\n\r\n\r\n    getUserFieldInstance: function (params) {\r\n        var mode = this.getMode();\r\n        // If the call fails, return the default user field\r\n        return (mode === \"execution\") ? \r\n                    new bizagi.rendering.tablet.defaultUserField(params):\r\n                    new bizagi.rendering.tablet.designUserField(params);\r\n    }\r\n});\r\n\r\n// Auto-extension\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.basicUserField\", bizagi.rendering.userfieldDefinition.prototype);\r\n\r\nbizagi.rendering.tablet.basicUserField.extend(\"bizagi.rendering.tablet.basicUserField\", bizagi.rendering.basicUserField.prototype);\r\n\r\nbizagi.rendering.tablet.basicUserField.extend(\"bizagi.rendering.tablet.basicUserField\", {}, {\r\n\r\n\t/*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Check if the userfield is supported\r\n        if (!this.isSupported()) {\r\n            var form = self.getFormContainer();\r\n            form.addError(self.getResource(\"render-tablet-error-userfield\"));\r\n        }\r\n    },\r\n\r\n\t/*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    getEditableControl: function () {\r\n        if (!this.isSupported()) {\r\n            return bizagi.rendering.defaultUserField.prototype.getEditableControl.apply(this, arguments);\r\n        }\r\n    },\r\n\r\n\t/*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    getReadonlyControl: function () {\r\n        if (!this.isSupported()) {\r\n            return bizagi.rendering.defaultUserField.prototype.getReadonlyControl.apply(this, arguments);\r\n        }\r\n    },\r\n\r\n\t/*\r\n\t*   Returns if the userfield is supported in this device\r\n\t*/\r\n    isSupported: function () { return true; }\r\n});\r\n\r\n/*\r\n*   Default implementation for user fields\r\n*/\r\nbizagi.rendering.tablet.basicUserField.extend(\"bizagi.rendering.tablet.defaultUserField\", {}, {\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    getEditableControl: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n        var controlName = properties.control.replace(/column/g, \"\");\r\n        self.input = $(\"<label>Userfield: \" + controlName + \" not found</label>\").appendTo(control);\r\n        self.input.addClass(\"ui-bizagi-render-userfield-notSupported\");\r\n        return self.input;\r\n    },\r\n\r\n\t/*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    getReadonlyControl: function () {\r\n        return this.getEditableControl();\r\n    },\r\n\r\n    /*\r\n\t*  Dont send the data to the server\r\n\t*/\r\n    collectData: function (renderValues) {\r\n    }\r\n});","/**\r\n *   Name: Bizagi Render Image Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the image render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.image\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n    BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX,\r\n    BA_PAGE_CACHE: bizagi.render.services.service.BA_PAGE_CACHE\r\n}, bizagi.rendering.image.prototype);\r\n\r\n// Extends itself\r\nbizagi.rendering.tablet.image.extend(\"bizagi.rendering.tablet.image\", {\r\n    QUALITY_PICTURE: 80,\r\n    EXTENSIONSIMG: [\"jpeg\", \"jpg\", \"png\"]\r\n}, {\r\n\r\n    /**\r\n     * DOM input to handle HTML uploads\r\n     * @var $inputFile jQuery DOM\r\n     */\r\n    $inputFile: null,\r\n    /**\r\n     * Whether or not is a native device 'Just a shortcut\r\n     * @var isNative boolean\r\n     */\r\n    isNative: false,\r\n\r\n    /**\r\n     * Whether or not we are offline 'Just a shortcut\r\n     * @var isOfflineForm boolean\r\n     */\r\n    isOfflineForm: false,\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Check if offline forms is supported\r\n        this.isOfflineForm = bizagi.util.isOfflineForm({context: this});\r\n        this.isNative = bizagi.util.isCordovaSupported();\r\n\r\n        if (this.isOfflineForm) {\r\n            var maxFileSizeOfProperty = Number(this.properties.maxSize) || 1048576;\r\n            var maxFileSizeOfUser = typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\" ? Number(BIZAGI_SETTINGS.UploadMaxFileSize) : 1048576;\r\n\r\n            this.properties.maxSize = maxFileSizeOfProperty < maxFileSizeOfUser ? maxFileSizeOfProperty : maxFileSizeOfUser;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * This method tries to get the HTML template an render the current object inside\r\n     * @return {jQuery} $.Deferred()\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"image\");\r\n\r\n        return $.fasttmpl(template, {url: \"\"});\r\n    },\r\n\r\n    getElementsToStylize: function (context) {\r\n        return $({});\r\n    },\r\n\r\n    /**\r\n     * There is no difference when rendering a readonly image, so...\r\n     * @return {jQuery} $.Deferred()\r\n     */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n        var template = this.renderFactory.getTemplate(\"image-readonly\");\r\n        var def = new $.Deferred();\r\n\r\n        $.when(self.buildItemUrl()).done(function (dataUrl) {\r\n            var url = dataUrl || \"\";\r\n\r\n            if (!self.isDisposed()) {\r\n                self.properties.url = url;\r\n                self.properties.value = url.length > 0 ? [url] : null;\r\n\r\n                self.setValue(self.properties.value);\r\n\r\n                var html = $.fasttmpl(template, {url: self.properties.url});\r\n                def.resolve(html);\r\n            }\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * After rendering element\r\n     */\r\n    postRender: function () {\r\n        var $control = this.getControl();\r\n        this.$inputFile = $(\".bz-image__input\", $control);\r\n        this.$nativeFile = $(\".bz-image__native\", $control);\r\n\r\n        if (!this.isDesignMode())\r\n            this.showAsyncImage();       \r\n    },\r\n    /**\r\n     * Add action handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var $control = this.getControl();\r\n\r\n        // Attach all events\r\n        $control.on(\"click\", \"[data-action=upload]\", function (evt) {\r\n            self.choosePhoto();\r\n        });\r\n\r\n        if (this.isNative) {\r\n            // Upload Image Options\r\n            this.$nativeFile.off(\"click\").actionSheet({\r\n                actions: self.getUploadChoices(),\r\n                actionClicked: function (action) {\r\n                    switch (action.guid) {\r\n                        case 1:\r\n                            self.imageAdd();\r\n                            break;\r\n                        case 2:\r\n                            self.imageAdd(true);\r\n                            break;\r\n                        default:\r\n                    }\r\n                },\r\n                appear: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n                },\r\n                cancelClicked: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                }\r\n            });\r\n\r\n            $(\".bz-image__resolution\", $control).off(\"click\").actionSheet({\r\n                actions: bizagi.util.media.getImageResolutionSizes(),\r\n                withoutCancel: true,\r\n                actionClicked: function (action) {\r\n                    bizagi.loading.start();\r\n\r\n                    $.when(self.resolutionButtonHandler(action.guid))\r\n                        .always(function () {\r\n                            bizagi.loading.stop();\r\n                        });\r\n\r\n                },\r\n                appear: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n                },\r\n                cancelClicked: function (action) {\r\n                    self.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n                }\r\n            });\r\n        } else {\r\n\r\n            // Image change (Hybrid only)\r\n            this.$inputFile.off(\"change\").on(\"change\", function () {\r\n                self.imageAdd();\r\n                this.value = \"\";\r\n            });\r\n\r\n            // Just in case\r\n            this.$inputFile.off(\"click\").on(\"click\", function (evt) {\r\n                evt.stopPropagation();\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour\r\n     * to add handlers when the control is readonly\r\n     */\r\n    configureHandlersReadOnly: function () {\r\n        var self = this;\r\n        var $control = this.getControl();\r\n\r\n        $control.on(\"click\", \".bz-image\", function () {\r\n            self.imagePreview();\r\n        })\r\n    },\r\n\r\n    /**\r\n     * Add an image\r\n     * @param useCamera boolean Whether or not to use device's camera\r\n     */\r\n    imageAdd: function (useCamera) {\r\n        var self = this;\r\n\r\n        if (!this.isNative) {\r\n            var extensions = this.Class.EXTENSIONSIMG;\r\n            var dataFile = this.$inputFile[0].files[0];\r\n\r\n            dataFile.fullPath = this.$inputFile[0].value;\r\n\r\n            bizagi.loading.start();\r\n\r\n            if (bizagi.util.media.checkMaxSizeFile(dataFile, self.properties) && bizagi.util.media.checkFileTypes(dataFile, self.properties, extensions)) {\r\n\r\n                $.when(self.performUploadFile(dataFile))\r\n                    .always(function () {\r\n                        bizagi.loading.stop();\r\n                    });\r\n\r\n            } else {\r\n                bizagi.loading.stop();\r\n            }\r\n        } else {\r\n\r\n            var options = {\r\n                quality: self.Class.QUALITY_PICTURE,\r\n                targetWidth: 1280,\r\n                targetHeight: 960,\r\n                correctOrientation: true\r\n            };\r\n\r\n            if (!useCamera) {\r\n                var coordinates = self.getControl()[0].getBoundingClientRect();\r\n\r\n                options = {\r\n                    quality: self.Class.QUALITY_PICTURE,\r\n                    sourceType: Camera.PictureSourceType.PHOTOLIBRARY,\r\n                    popoverOptions: new CameraPopoverOptions(coordinates.left, coordinates.top - 20, 200, 100, 4),\r\n                    destinationType: navigator.camera.DestinationType.FILE_URI,\r\n                    correctOrientation: true\r\n                };\r\n            }\r\n\r\n            navigator.camera.getPicture(function (dataImage) {\r\n\r\n                bizagi.loading.start();\r\n\r\n                $.when(bizagi.util.media.checkMaxSize(dataImage, self.properties)).then(function () {\r\n                    return $.when(bizagi.util.media.getFileDataInfo(dataImage)).then(function (fileData) {\r\n                        if (bizagi.util.media.checkFileTypes(fileData, self.properties, self.Class.EXTENSIONSIMG)) {\r\n\r\n                            self.dataImage = dataImage;\r\n                            self.fileProperties = fileData;\r\n\r\n                            // \"new Blob\" constructor is not supported in android version 4.2.2\r\n                            var version = bizagi.util.getAndroidVersion();\r\n                            if ((version && version <= 4.2) || self.isOfflineForm) {\r\n\r\n                                return $.when(self.performUploadFile(self.dataImage))\r\n                                    .always(function () {\r\n                                        bizagi.loading.stop();\r\n                                    });\r\n\r\n                            } else {\r\n\r\n                                if (!bizagi.util.isAndroid()) {\r\n                                    return $.when(bizagi.util.media.modalResolutionUpload())\r\n                                        .then(function (buttonIndex) {\r\n                                            if (buttonIndex <= bizagi.util.media.getImageResolutionItems().length) {\r\n                                                return self.resolutionButtonHandler(buttonIndex);\r\n                                            }\r\n                                        });\r\n\r\n                                } else {\r\n                                    // Force click to show actionsheet menu\r\n                                    $(\".bz-image__resolution\", self.getControl()).click();\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n\r\n                }).always(function () {\r\n                    bizagi.loading.stop();\r\n                });\r\n            }, self.onFail, options);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * onFail\r\n     * @param {} error\r\n     * @returns {}\r\n     */\r\n    onFail: function (error) {\r\n        bizagi.loading.stop();\r\n    },\r\n\r\n    /**\r\n     * Remove the current image\r\n     */\r\n    imageDelete: function () {\r\n        var self = this;\r\n\r\n        bizagi.showConfirmationBox(self.getResource(\"render-grid-delete-confirmation\"))\r\n            .done(function () {\r\n                bizagi.loading.start();\r\n\r\n                $.when(self.dataService.deleteImage({\r\n                    url: self.properties.deleteUrl,\r\n                    idRender: self.properties.id,\r\n                    xpath: self.properties.xpath,\r\n                    xpathContext: self.properties.xpathContext,\r\n                    idPageCache: self.properties.idPageCache,\r\n                    contexttype: self.properties.contexttype\r\n                })).done(function () {\r\n                    self.uploadFileCompleted();\r\n                }).fail(function (msg) {\r\n                    var message;\r\n                    var responseText = msg.responseText;\r\n\r\n                    try {\r\n                        message = JSON.parse(responseText);\r\n                        message = message.message || responseText;\r\n                    } catch (e) {\r\n                        message = responseText;\r\n                    }\r\n\r\n                    self.setValidationMessage(message);\r\n\r\n                }).always(function () {\r\n                    bizagi.loading.stop();\r\n                });\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Send file using HTTP\r\n     * @param dataFile\r\n     * @return {jQuery} $.Deferred()\r\n     */\r\n    uploadFile: function (dataFile) {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        if (!this.isOfflineForm) {\r\n            if (this.isNative) {\r\n\r\n                var params = {};\r\n                var addParams = self.buildAddParams();\r\n                var fileName = self.fileProperties.name;\r\n\r\n                if (self.editedImageURL) {\r\n                    params.dataFile = self.editedImageURL;\r\n                } else if (self.fileProperties) {\r\n                    params.dataFile = self.fileProperties.url;\r\n                }\r\n\r\n                addParams.queueID = \"q_\" + bizagi.util.encodeXpath(self.getUploadXpath());\r\n\r\n                params.data = addParams;\r\n                params.options = new FileUploadOptions();\r\n                params.options.fileKey = \"file\";\r\n                params.options.fileName = fileName;\r\n                params.options.mimeType = \"image/jpeg\";\r\n                params.options.uploadKey = {key: addParams[\"h_xpath\"]};\r\n                params.options.addUrl = self.properties.addUrl;\r\n\r\n                //Cleans variables related previous uploads\r\n                self.editedImageURL = null;\r\n                self.fileProperties = null;\r\n\r\n                // Fix android 4.4 getting images from recent folder\r\n                params.dataFile = bizagi.util.media.getImagePath(params.dataFile);\r\n\r\n                $.when(bizagi.util.media.uploadFile(params)).done(function (response) {\r\n                    var response = JSON.parse(decodeURIComponent(response.response));\r\n\r\n                    if (response.type === \"error\") {\r\n                        defer.reject(response);\r\n                    } else {\r\n                        defer.resolve(response);\r\n                    }\r\n                }).fail(function (error) {\r\n                    defer.reject(error);\r\n                });\r\n            } else {\r\n\r\n                if (bizagi.util.media.checkMaxSizeFile(dataFile, self.properties) &&\r\n                    bizagi.util.media.checkFileTypes(dataFile, self.properties, self.Class.EXTENSIONSIMG)) {\r\n\r\n                    self.dataService.processUploadFile({\r\n                        url: self.properties.addUrl,\r\n                        formData: self.buildAddFileParams(dataFile)\r\n                    }).done(function (response) {\r\n                        defer.resolve(response);\r\n                    }).fail(function (error) {\r\n                        defer.reject(error);\r\n                    });\r\n                } else {\r\n                    defer.reject();\r\n                }\r\n            }\r\n        } else {\r\n            // Save the image\r\n            self.saveImageOffline(dataFile, defer);\r\n\r\n            // Enables canbesent on offline mode\r\n            // In order to evaluate the xpath in synchronization phase\r\n            // The value collected always will be \"\"\r\n            self.canBeSent = function () {\r\n                $.forceCollectData = true;\r\n                return true;\r\n            };\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * File upload is done\r\n     * @param context\r\n     */\r\n    uploadFileCompleted: function () {\r\n        try {\r\n            this.showAsyncImage();\r\n            this.editedImageURL = null;\r\n        } catch (error) {\r\n            // TODO: Review scenario\r\n            this.getFormContainer().refreshForm();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Show async image\r\n     * */\r\n    showAsyncImage: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n        var $wrapper = $(\".bz-input-icon\", $control);\r\n\r\n        $.when(self.renderUploadItem()).done(function (htmlImage) {\r\n            if (!self.isDisposed()) {\r\n\r\n                // Empty container and add new image\r\n                $wrapper.empty();\r\n                $wrapper.append(htmlImage);\r\n\r\n                var action = self.hasValue() ? \"update\" : \"upload\";\r\n\r\n                $wrapper.attr(\"data-action\", action);\r\n                self.setValue(self.properties.value);\r\n\r\n                // Attack events to overflow-menu\r\n                if (self.hasValue()) {\r\n                    self.configureMenu();\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * resolutionButtonHandler\r\n     * @param ordinal\r\n     */\r\n    resolutionButtonHandler: function (ordinal) {\r\n        var self = this;\r\n        var actionSelected = ordinal || 0;\r\n\r\n        // If original, save image normally, if not, reduce quality and size\r\n        if (actionSelected === bizagi.util.media.ResolutionType.ORIGINAL) {\r\n            return self.performUploadFile(self.dataImage);\r\n        } else {\r\n\r\n            var resolution = bizagi.util.media.getImageResolution(actionSelected);\r\n\r\n            return $.when(bizagi.util.media.transformImageSize(self.dataImage, resolution)).then(function (result) {\r\n\r\n                self.editedImageURL = result.localUrl;\r\n                self.properties.url = result.base64Image;\r\n\r\n                return self.performUploadFile(self.dataImage);\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Render edition view\r\n     * @returns {}\r\n     */\r\n    imagePreview: function () {\r\n        var self = this;\r\n        var baseParams = self.getParams();\r\n        var container = baseParams.navigation.createRenderContainer({\r\n            title: self.properties.displayName,\r\n            view: {\r\n                zoom: true,\r\n                useNativeScrolling: false\r\n            }\r\n        });\r\n\r\n        var template = self.renderFactory.getTemplate(\"image-preview\");\r\n        var imageData = {\"url\": self.value && self.value[0] !== \"\" ? self.value[0] : \"\"};\r\n        var img = $.fasttmpl(template, imageData);\r\n\r\n        container.element.css(\"display\", \"none\");\r\n        self.inputEdition = container.element.html(img);\r\n        baseParams.navigation.navigate(container.id);\r\n\r\n        if (self.isOfflineForm) {\r\n            container.element.on(\"close\", self.onPreviewActionBack.bind(self));\r\n        }\r\n\r\n        bizagi.loading.start();\r\n\r\n        // TODO: Review fail scenario, should it call the forms.failHandler method?\r\n        $.when(self.buildFullItemUrl()).done(function (dataUrl) {\r\n            container.element.css(\"display\", \"block\");\r\n\r\n            if (dataUrl.indexOf(\"error\") < 0) {\r\n                var $preview = $(\".bz-image__preview-item:first\", container.element).attr(\"src\", dataUrl);\r\n                var originalImageWidth = $preview.css(\"width\");\r\n\r\n                originalImageWidth = Number(originalImageWidth.substring(0, originalImageWidth.length - 2));\r\n\r\n                if (self.properties.width !== -1 && self.properties.width < originalImageWidth) {\r\n                    $preview.css(\"width\", \"100%\");\r\n                }\r\n            }\r\n        }).always(function () {\r\n            bizagi.loading.stop();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Build add params to send to the server\r\n     * @param {} dataFile\r\n     * @returns {}\r\n     */\r\n    buildAddFileParams: function (dataFile) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var prefix = self.Class.BA_CONTEXT_PARAMETER_PREFIX;\r\n\r\n        // Get form data for POSTing\r\n        var formData = new FormData();\r\n        var form = self.getFormContainer();\r\n\r\n        // Build add params to send to the server\r\n        formData.append(prefix + \"xpath\", properties.xpath);\r\n        formData.append(prefix + \"idRender\", properties.id);\r\n        formData.append(prefix + \"xpathContext\", properties.xpathContext);\r\n        formData.append(prefix + self.Class.BA_PAGE_CACHE, properties.idPageCache);\r\n        formData.append(self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\", form.properties.sessionId);\r\n        formData.append(prefix + \"action\", \"savefile\");\r\n        formData.append(self.properties.xpath, dataFile);\r\n\r\n        if (properties.contexttype) {\r\n            formData.append(prefix + \"contexttype\", properties.contexttype);\r\n        }\r\n\r\n        try {\r\n            if (typeof (BIZAGI_SESSION_NAME) !== \"undefined\") {\r\n                formData.append(BIZAGI_SESSION_NAME, form.properties.sessionId);\r\n            } else {\r\n                formData.append(\"JSESSIONID\", form.properties.sessionId);\r\n            }\r\n        } catch (e) {\r\n            formData.append(\"JSESSIONID\", form.properties.sessionId);\r\n        }\r\n\r\n        return formData;\r\n    },\r\n\r\n    /**\r\n     * Call the form failhandler with an specific error\r\n     * @param {} error\r\n     * @returns {}\r\n     */\r\n    executeFormFailHandler: function (error) {\r\n        var self = this;\r\n        var errorResponse = error.responseText ? error.responseText : bizagi.localization.getResource(\"workportal-general-error\");\r\n\r\n        self.getFormContainer().failHandler(errorResponse);\r\n    },\r\n\r\n    /**\r\n     * Execute upload file\r\n     * @param {} context\r\n     * @param {} dataImage\r\n     * @returns {}\r\n     */\r\n    performUploadFile: function (dataImage) {\r\n        var self = this;\r\n\r\n        return $.when(self.uploadFile(dataImage))\r\n            .done(function (result) {\r\n                self.uploadFileCompleted();\r\n            }).fail(function (error) {\r\n                self.executeFormFailHandler(error);\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Choose photo\r\n     */\r\n    choosePhoto: function () {\r\n        if (this.isNative) {\r\n            this.$nativeFile.click();\r\n        } else if (bizagi.util.media.fileAPISupported()) {\r\n            this.$inputFile.click();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Process an action in order to do something with the image\r\n     */\r\n    configureMenu: function () {\r\n        var self = this;\r\n        var items = [];\r\n        var $control = this.getControl();\r\n        var $viewMore = $(\".bz-input-icon__input + .bz-icn\", $control);\r\n        var allowDelete = self.isOfflineForm ? false : self.properties.allowDelete && self.properties.editable;\r\n\r\n        items.push({\r\n            name: bizagi.localization.getResource(\"workportal-actionsheet-upload-image-preview\"),\r\n            fn: function () {\r\n                self.imagePreview();\r\n            }\r\n        });\r\n\r\n        items.push({\r\n            name: bizagi.localization.getResource(\"workportal-actionsheet-upload-choose-photo\"),\r\n            fn: function () {\r\n                self.choosePhoto();\r\n            }\r\n        });\r\n\r\n        if (allowDelete) {\r\n            items.push({\r\n                name: bizagi.localization.getResource(\"workportal-actionsheet-upload-remove-photo\"),\r\n                fn: function () {\r\n                    self.imageDelete();\r\n                }\r\n            });\r\n        }\r\n\r\n        $viewMore.overflowMenu({items: items});\r\n    },\r\n\r\n    /**\r\n     * Add upload options\r\n     */\r\n    getUploadChoices: function () {\r\n        return [\r\n            {\"guid\": 1, \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-choose-photo\")},\r\n            {\"guid\": 2, \"displayName\": bizagi.localization.getResource(\"workportal-actionsheet-upload-take-photo\")}\r\n        ];\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param params\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (params) {\r\n        var self = this;\r\n        if(self.isOfflineForm){\r\n            return self.buildItemUrlOffline(params);\r\n        }\r\n        \r\n        var properties = self.properties;\r\n        var def = new $.Deferred();\r\n        var url = \"\";\r\n\r\n        if (!this.isExecutionMode()) {\r\n            url = \"\";\r\n            def.resolve(url);\r\n        } else {\r\n            var parameters = {\r\n                url: properties.dataUrl,\r\n                xpath: properties.xpath,\r\n                idRender: properties.id,\r\n                xpathContext: properties.xpathContext,\r\n                idPageCache: properties.idPageCache,\r\n                property: params && params.property ? params.property : \"fileContent\",\r\n                dataType: \"text\"\r\n            };\r\n\r\n            if (properties.contexttype) {\r\n                parameters.contexttype = properties.contexttype;\r\n            }\r\n\r\n            if (properties.isUserPreference) {\r\n                self.currentUser = bizagi.currentUser.idUser;\r\n                parameters.xpathContext = \"@Context.Users[id == \" + self.currentUser + \"]\";\r\n                parameters.contexttype = \"entity\";\r\n                parameters.surrogatekey = self.currentUser;\r\n            }\r\n            \r\n            self.dataService.multiaction().getPropertyData(parameters, \"text\")\r\n                .done(function (data) {\r\n                    if (data.charAt(0) === \"\\\"\") {\r\n                        data = data.slice(1, -1);\r\n                    }\r\n\r\n                    if (data !== \"\") {\r\n                        url = \"data:image/png;base64,\" + data;\r\n                    }\r\n\r\n                    def.resolve(url);\r\n                });\r\n        }\r\n        return def.promise();\r\n    },\r\n    \r\n\r\n    /**\r\n     * Refresh data\r\n     * @param {} event\r\n     */\r\n    onPreviewActionBack: function (event) {\r\n        var self = this;\r\n        var dataUrl = $(\".bz-image__preview-item\", event.target).attr(\"src\") || \"\";\r\n\r\n        var dataUrlToSave = dataUrl.length > 0 ? [].concat(dataUrl) : null;\r\n        self.setValue(dataUrlToSave);\r\n    },\r\n\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        if(self.isOfflineForm && bizagi.util.isOfflineFormsV2Supported() && self.controlValueIsChanged()){\r\n            var xpath = self.properties.xpath;\r\n            var value = self.getValue();\r\n            if (!bizagi.util.isEmpty(xpath)) {\r\n                //Only form mark the xpath as edited in the db\r\n                //The value is taked from attachments\r\n                renderValues[xpath] = \"*\";\r\n            }\r\n        }\r\n        else{\r\n            this._super(renderValues);\r\n        }\r\n    }\r\n\r\n});\r\n\r\n","/**\r\n *   Name: Bizagi Tablet Render Document Generator Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the document generator render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.document\", bizagi.rendering.document.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.document.extend(\"bizagi.rendering.tablet.document\", {\r\n    ACTION_SHOW: \"show\",\r\n    ACTION_DOWNLOAD: \"download\",\r\n    ACTION_DELETE: \"delete\"\r\n}, {\r\n\r\n    /**\r\n     * This method tries to get the HTML template an render the current object inside\r\n     * @return {jQuery} $.Deferred()\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = this.renderFactory.getTemplate(self.getTemplate());\r\n        var documents = this.properties.value || [];\r\n\r\n        var data = {\r\n            downloadalldocuments: this.properties.downloadalldocuments,\r\n            allowgenerate: this.properties.allowGenerate,\r\n            noFiles: documents ? (documents.length === 0) : true,\r\n            append: this.properties.append,\r\n            caption: this.properties.caption\r\n        };\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, data);\r\n\r\n        // Render current children\r\n        var items = this.renderDocumentsHtml(documents);\r\n        html = this.replaceFilesHtml(html, items);\r\n\r\n        // Render current children\r\n        var actions = this.renderActionsHtml(documents, data.noFiles, data.downloadalldocuments);\r\n        html = this.replaceActionsHtml(html, actions);\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var $control = this.getControl();\r\n\r\n        this.$inputDocument = $(\".bz-document-template__container\", $control);\r\n        this.$listDocuments = $(\"[data-component=files]\", $control);\r\n        this.$listActions = $(\"[data-component=actions]\", $control);\r\n\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n        var template = this.renderFactory.getTemplate(self.getTemplateReadonly());\r\n        var documents = this.properties.value || [];\r\n        var noFiles = documents ? (documents.length === 0) : true;\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {noFiles: noFiles});\r\n\r\n        // Render current children\r\n        var items = this.renderDocumentsHtml(documents);\r\n        html = this.replaceFilesHtml(html, items);\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        var $control = this.getControl();\r\n\r\n        this.$listDocuments = $(\"[data-component=files]\", $control);\r\n    },\r\n\r\n    /**\r\n     * TMethod to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n\r\n        // Attach handler\r\n        this.$inputDocument.on(\"click\", function (evt) {\r\n            self.properties.buttonExecuted = true;\r\n\r\n            if (self.properties.validate) {\r\n                // Check if the form is valid, then generate\r\n                if (self.validateContainer()) self.documentTemplateGenerate();\r\n            } else {\r\n                // Just generate the form\r\n                self.documentTemplateGenerate();\r\n            }\r\n\r\n            self.properties.buttonExecuted = false;\r\n        });\r\n\r\n        // Configure delete and preview handler\r\n        this.$listDocuments.on(\"click\", \"[data-action]\", function (evt) {\r\n            var $context = $(this);\r\n\r\n            var item = $context.parent(\".bz-document\");\r\n            var documentFile = item.data();\r\n            var action = $context.data(\"action\");\r\n\r\n            self.processAction(action, documentFile);\r\n        });\r\n\r\n        // Configure delete and download handler\r\n        self.$listActions.on(\"click\", \"[data-action]\", function (evt) {\r\n            var $context = $(this);\r\n\r\n            var item = $context.parent(\".bz-document__download\");\r\n            var documentFile = item.data();\r\n            var action = $context.data(\"action\");\r\n\r\n            self.processAction(action, documentFile);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to customize the render's behaviour to add handlers when the control is readonly\r\n     */\r\n    configureHandlersReadOnly: function () {\r\n        var self = this;\r\n\r\n        // Configure delete and preview handler\r\n        this.$listDocuments.on(\"click\", \"[data-action]\", function (evt) {\r\n            var $context = $(this);\r\n\r\n            var item = $context.parent(\".bz-document\");\r\n            var documentFile = item.data();\r\n            var action = $context.data(\"action\");\r\n\r\n            self.processAction(action, documentFile);\r\n        });\r\n    },\r\n    \r\n    /**\r\n     * This method must be implemented by the specific class of each device. (Virtual method)\r\n     * @param file\r\n     * @returns {*|*|*}\r\n     */\r\n    renderAllDocumentDownload: function (file) {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(self.getTemplateDownload());\r\n        var url = self.buildAllDocumentsUrl();\r\n\r\n        // Don't render urls when not running in execution mode\r\n        if (!this.isExecutionMode()) url = \"javascript:void(0);\";\r\n\r\n        var html = $.fasttmpl(template, {\r\n            url: url,\r\n            filename: file.fileName,\r\n            joined: true\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Redraw documents when needed\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    redrawDocuments: function (documents, noFiles, downloadAllDocuments) {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n        var $documentContainer = $(\"[data-component='files']\", $control);\r\n        var $actionContainer = $(\"[data-component='actions']\", $control);\r\n\r\n        // Clear current links\r\n        $documentContainer.empty();\r\n        $actionContainer.empty();\r\n\r\n        // Draw links again\r\n        var items = this.renderDocumentsHtml(documents);\r\n        $documentContainer.append(items);\r\n\r\n        // Check if there are documents and the flag to download all are available to show the link.\r\n        var actions = this.renderActionsHtml(documents, noFiles, downloadAllDocuments);\r\n        $actionContainer.append(actions);\r\n\r\n        //Set value\r\n        self.setValue(documents);\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed (Virtual method)\r\n     * @param url\r\n     * @param filename\r\n     */\r\n    showDocumentPreview: function (url, filename) {\r\n        bizagi.loading.start();\r\n\r\n        $.when(bizagi.util.media.downloadFile(url, filename))\r\n            .fail(function (error) {\r\n                if (error.responseText) {\r\n                    self.getFormContainer().failHandler(error.responseText);\r\n                }\r\n            }).always(function () {\r\n            bizagi.loading.stop();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Process request of DocumentTemplateGenerate action\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    resolveDocumentTemplateGenerate: function (documents, noFiles, downloadAllDocuments) {\r\n        // Redraw documents\r\n        this.redrawDocuments(documents, noFiles, downloadAllDocuments);\r\n        this.value = documents;\r\n    },\r\n\r\n    /**\r\n     * Process request of DocumentTemplateGenerate action\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    resolveDeleteDocumentTemplate: function (documents, noFiles, downloadAllDocuments) {\r\n        // Redraw documents\r\n        this.redrawDocuments(documents, noFiles, downloadAllDocuments);\r\n        this.value = documents;\r\n    },\r\n\r\n    processAction: function (action, documentFile) {\r\n        if (action === this.Class.ACTION_DELETE) {\r\n            this.deleteDocumentTemplate(documentFile.filename);\r\n        } else if (action === this.Class.ACTION_SHOW) {\r\n            this.showDocumentPreview(documentFile.url, documentFile.filename);\r\n        } else if (action === this.Class.ACTION_DOWNLOAD) {\r\n            this.showDocumentPreview(documentFile.url, documentFile.filename);\r\n        }\r\n    }\r\n});\r\n","/*\r\n*   Name: Bizagi Render Geolocation control\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will redefine the geolocation render class to adjust to tablet devices\r\n*/\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.geolocation\", bizagi.rendering.geolocation.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.geolocation.extend(\"bizagi.rendering.tablet.geolocation\", {\r\n    ALLOW_UPDATE: \"update\"\r\n}, {\r\n\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var $control = this.getControl();\r\n        this.coordinate = $control.find(\"input\");\r\n\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"readonly\");\r\n\r\n        return $.fasttmpl(template, {value: this.getDisplayValue()});\r\n    },\r\n\r\n    /**\r\n     * Method to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        var $control = this.getControl();\r\n        this.coordinate = $control.find(\"input\");\r\n\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     * @returns {}\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        // If the control doesn't have a value set the position\r\n        if (self.value == null) {\r\n            self.updateDisplayValue();\r\n        }\r\n\r\n        $control.on(\"click\", \"[data-action=\" + self.Class.ALLOW_UPDATE + \"]\", self.processAction.bind(self));\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var def = new $.Deferred();\r\n\r\n        if (value != null && value !== \"\") {\r\n            if (self.coordinate)\r\n                self.coordinate.val(self.performPrecision(value));\r\n\r\n            // Set internal value\r\n            self.setValue(value, false);\r\n            def.resolve();\r\n        } else {\r\n            var onSuccess = function (position) {\r\n                var coordinates = position.coords.latitude + \" \" + position.coords.longitude;\r\n\r\n                self.coordinate.val(self.performPrecision(coordinates));\r\n\r\n                // Set internal value\r\n                self.setValue(coordinates, false);\r\n                def.resolve();\r\n            };\r\n\r\n            var onFail = function (message) {\r\n                def.reject(message);\r\n            };\r\n\r\n            if (bizagi.util.isCordovaSupported() && bizagi.util.isiOSDevice()) {\r\n                navigator.geolocation.getCurrentPosition(onSuccess, onFail);\r\n            } else {\r\n                self.getCurrentPosition(onSuccess, onFail);\r\n            }\r\n        }\r\n\r\n        return def.promise();\r\n    },\r\n\r\n\r\n    updateDisplayValue: function () {\r\n        var self = this;\r\n\r\n        self.setDisplayValue().then(function () {\r\n            self.setValidationMessage(\"\");\r\n        }).fail(function (message) {\r\n            self.coordinate.val(\"\");\r\n            self.setValidationMessage(message);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Process an action in order to do something with the geolocation\r\n     */\r\n    processAction: function () {\r\n        this.coordinate.empty();\r\n        this.updateDisplayValue();\r\n    },\r\n\r\n    getElementsToStylize: function ($context) {\r\n        return this.properties.editable ? $(\"input\", $context) : $(\".readonly-control\", $context); \r\n    }\r\n});","/**\r\n * Tablet definition of Action Launcher\r\n *\r\n * @author: Ricardo Pérez\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.actionLauncher\", bizagi.rendering.actionLauncher.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.actionLauncher.extend(\"bizagi.rendering.tablet.actionLauncher\", {}, {\r\n /**\r\n     * Render a specific implementation for Desktop device\r\n     */\r\n    postRender: function () {\r\n        if (this.getMode() == \"design\"){\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n        self.actions = [];\r\n        self.startLoading();\r\n        // Define params to get list of actions        \r\n        $.when(self.dataService.multiaction().getActions(self.processPropertyValueArgs))\r\n            .then(function (response) {\r\n                response = self.getPropertiesActionLaucher(response);\r\n                self.actions = response;\r\n                self.deferredActions.resolve(response);\r\n\r\n                if (self.actions.length > 0) {\r\n                    $(\"[data-element='actions-add-btn']\", control).show();\r\n                }\r\n                else{\r\n                    $(\"[data-element='actions-add-btn']\", control).hide();\r\n                }\r\n\r\n                if (properties.isHorizontal) {\r\n                    if (properties.templatetype != \"none\") {\r\n                        return self.dataService.multiaction().getPropertyData(self.processPropertyValueDataTmplArgs)\r\n                            .then(function (templateData) {\r\n                                return self.engine.render($.extend(templateData, {\r\n                                    isDefaultTemplate: properties.templatetype === \"default\",\r\n                                    sessionId: self.properties.sessionId\r\n                                }), self.processPropertyValueDataTmplArgs);\r\n                            }).then(function (tmpl) {\r\n                                template = self.renderFactory.getTemplate(\"render-actionLauncher-horizontal\");\r\n                                var html = $($.fasttmpl(template, {\r\n                                    template: true\r\n                                }));\r\n\r\n                                $(\".bz-template\", html.wrap(\"<div>\").parent()).append(tmpl);\r\n                                return html;\r\n                            });\r\n                    }\r\n                }\r\n                else{\r\n                    template = self.renderFactory.getTemplate(\"render-actionLauncher-horizontal\");\r\n                    return $.fasttmpl(template, {\r\n                        template: false\r\n                    });\r\n                }\r\n            }).done(function (html) {\r\n                $(\"[data-element='template-container']\", control).append(html);\r\n                self.configureActionsHandlers();\r\n                self.configureTemplateHandlers();\r\n            }).always(function () {\r\n                self.endLoading();\r\n            });\r\n    },\r\n\r\n\r\n    /**\r\n     * Validates if the action launcher control contains a valid value\r\n     * @returns {boolean}\r\n     */\r\n    hasValue: function () {\r\n        var value = this.getValue();\r\n        return typeof value !== \"undefined\" && value !== null && value.length > 0;\r\n    },\r\n\r\n    /**\r\n     * Add binding to html elements\r\n     */\r\n    configureActionsHandlers: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var actionLauncherControls = $(\".action-launcher-control\", control);\r\n\r\n        //Binding for click action on buttons\r\n        actionLauncherControls.on(\"click\", function () {\r\n            var item = self.actions[parseInt($(this).data(\"index\"))];\r\n            var action = {\r\n                guidProcess: item[0],\r\n                guidAction: item[4],\r\n                displayName: item[1],\r\n                actionType: item[3],\r\n                xpathContext: typeof item[5] !== \"undefined\" && item[5] === \"true\",\r\n                readOnlyForm: item[6] || false,\r\n                guidEntity: self.properties.guidEntity,\r\n                xpathActions: self.properties.xpathActions || \"\"\r\n            };\r\n\r\n            self.processAction(action);\r\n        });\r\n\r\n        var actions = [];\r\n        for (var i = 0, length = self.actions.length; i < length; i++) {\r\n            actions.push({\r\n                guid: self.actions[i][0],\r\n                displayName: self.actions[i][1]\r\n            });\r\n        }\r\n\r\n\r\n        //Binding for click action sheet\r\n        $(\"[data-element='actions-add-btn']\", control).actionSheet({\r\n            actions: actions,\r\n            actionClicked: function (action) {\r\n                var item = self.actions.find(function (element) {\r\n                    return element[0] == action.guid;\r\n                });\r\n\r\n                self.processAction({\r\n                    guidProcess: item[0],\r\n                    guidAction: item[4],\r\n                    displayName: item[1],\r\n                    actionType: item[3],\r\n                    xpathContext: typeof item[5] !== \"undefined\" && item[5] === \"true\",\r\n                    readOnlyForm: item[6] || false,\r\n                    xpathActions: self.properties.xpathActions || \"\"\r\n                });\r\n            }\r\n        });\r\n\r\n        //Catch the typed text in the search field and filter the action list\r\n        $.expr[\":\"].FilterAction = function (entity, i, array) {\r\n            var search = array[3];\r\n            if (!search) {\r\n                return false;\r\n            }\r\n            return new RegExp(search, \"i\").test($(entity).text());\r\n        };\r\n        $(\"input#ui-bizagi-render-action-launcher-filter-input\", control).keyup(function () {\r\n            var search = $(this).val();\r\n            $(\".action-launcher-control\", control).show();\r\n            if (search) {\r\n                $(\".action-launcher-control\", control)\r\n                    .not(\":FilterAction(\" + search + \")\").hide();\r\n            }\r\n        });\r\n    },\r\n    /**\r\n     *\r\n     */\r\n    configureTemplateHandlers: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        //Catch the event from the layout link\r\n        self.engine.subscribe(\"onLoadDataNavigation\", function (ev, params) {\r\n            params.filters = [];\r\n            self.triggerGlobalHandler(\"dataNavigation\", params);\r\n        });\r\n\r\n        $(\".bz-template-more-or-less\", control).bind(\"click\", function(){\r\n            $(\".bz-template\", control).toggleClass(\"bz-template--collapsed\");\r\n        });\r\n    },\r\n    /**\r\n     *\r\n     * @param action\r\n     */\r\n    processAction: function (action) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n        var multipleSelection = (typeof properties.multipleSelection == \"undefined\") ? true : properties.multipleSelection;\r\n\r\n        if (multipleSelection) {\r\n            // If this is a form and has been queued, so open it\r\n            if (action.actionType == \"Form\" && self.countSameActions(action) >= 1 && !action.xpathContext) {\r\n                //Open action\r\n                $(\".action-to-execute-control[data-guidaction='\" + action.guidAction + \"'] label\", control).click();\r\n            } else {\r\n                $.when(self.actionManager(action)).done(function (act) {\r\n                    self.executeAction(act);\r\n                });\r\n            }\r\n        } else if (self.getValue().length > 0) {\r\n            self.showConfirmationDialog(action);\r\n        } else {\r\n            $.when(self.actionManager(action)).done(function (act) {\r\n                self.executeAction(act);\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param data\r\n     * @param action\r\n     */\r\n    notifyExecution: function (data, action) {\r\n        var self = this;\r\n\r\n        if (data.response == \"success\") {\r\n            $.notifier.add({\r\n                class_name: \"success\",\r\n                title: action.displayName,\r\n                text: self.getResource(\"render-action-launcher-success-excecution\").replace('%s', action.displayName),\r\n                sticky: false\r\n            });\r\n        } else {\r\n            $.notifier.add({\r\n                class_name: \"error\",\r\n                title: action.displayName,\r\n                text: self.getResource(\"render-action-launcher-failed-excecution\").replace('%s', action.displayName),\r\n                sticky: false\r\n            });\r\n        }\r\n    },\r\n    /**\r\n     *\r\n     * @param action\r\n     * @returns {*}\r\n     */\r\n    processActionForm: function (action) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var formParams = self.getParams();\r\n\r\n        var additionalXpaths = self.properties.additionalXpath.join(\",\");\r\n        var xpathContext = (action.xpathContext) ? self.properties.xpathActions + \".\" + action.xpathContext : self.properties.xpathActions;\r\n        var def = new $.Deferred();\r\n\r\n        // Show dialog with new form after that\r\n        var slideForm = new bizagi.rendering.tablet.slide.form(self.dataService, self.renderFactory, {\r\n            title: properties.detailLabel || bizagi.localization.getResource(\"render-grid-details-form\"),\r\n            navigation: formParams.navigation,\r\n            showSaveButton: true,\r\n            cancelButtonLabel: bizagi.localization.getResource(\"render-form-dialog-box-close\"),\r\n            onSave: function (data) {\r\n                // Submit the form\r\n                return self.dataService.multiaction().submitData({\r\n                    action: \"SAVE\",\r\n                    data: data,\r\n                    xpathContext: slideForm.form.properties.xpathContext,\r\n                    idPageCache: data.idPageCache,\r\n                    isOfflineForm: false,\r\n                    isActionStartForm: true\r\n                }).done(function (savedData) {\r\n                    if (!action.editMode && self.countSameActions(action) === 0) {\r\n                        action.idStartScope = savedData.IdScope;\r\n                    }\r\n                    def.resolve(savedData.IdScope);\r\n                });\r\n            },\r\n            onCancel: function (data) {\r\n\r\n            }\r\n        });\r\n\r\n        var renderParams = {\r\n            \"idForm\": action.guidProcess,\r\n            \"contextType\": \"start\",\r\n            \"idCase\": self.properties.caseId,\r\n            \"idWorkitem\": self.typeForm != \"SummaryForm\" ? formParams.idWorkitem : undefined,\r\n            \"additionalXpaths\": additionalXpaths,\r\n            \"xpathContext\": xpathContext,\r\n            \"idStartScope\": action.idStartScope,\r\n            \"surrogateKey\": self.properties.surrogatedKey,\r\n            \"readOnlyForm\": action.readOnlyForm,\r\n            \"recordXpath\": action.recordXpath\r\n        };\r\n\r\n        if (action.actionType === \"Form\") {\r\n            renderParams.contextType = \"entitytemplate\";\r\n            renderParams.xpathContext = undefined;\r\n            renderParams.guidEntity = action.guidEntity;\r\n            renderParams.rewriteContextType = true;\r\n        }\r\n\r\n        slideForm.render(renderParams);\r\n\r\n        return def.promise();\r\n    },\r\n    /**\r\n     *\r\n     * @param action\r\n     * @returns {*}\r\n     */\r\n    processActionFormCollection: function (action) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var additionalXpaths = self.properties.additionalXpath.join(\",\");\r\n        var def = new $.Deferred();\r\n        var xpathContext = (action.xpathContext) ? self.properties.xpathActions + \".\" + action.xpathContext : self.properties.xpathActions;\r\n        var xpathPattern = \"%s[id=%s]\";\r\n        var xpathPatternWithoutkey = \"%s[]\";\r\n        var xpathContextWithKey = (xpathContext !== \"\") ? printf(xpathPattern, xpathContext, action.idEntity) : xpathContext;\r\n        var xpathContextWithoutKey = (xpathContext !== \"\") ? printf(xpathPatternWithoutkey, xpathContext) : xpathContext;\r\n        var formParams = form.getParams();\r\n\r\n        var slideForm = new bizagi.rendering.tablet.slide.form(self.dataService, self.renderFactory, {\r\n            title: properties.detailLabel || bizagi.localization.getResource(\"render-grid-details-form\"),\r\n            navigation: formParams.navigation,\r\n            showSaveButton: true,\r\n            cancelButtonLabel: bizagi.localization.getResource(\"render-form-dialog-box-close\"),\r\n            onSave: function (data) {\r\n                if (action.editMode) {\r\n                    return self.dataService.multiaction().submitData({\r\n                        action: \"SAVE\",\r\n                        data: data,\r\n                        xpathContext: xpathContextWithKey,\r\n                        idPageCache: data.idPageCache,\r\n                        isOfflineForm: false,\r\n                        isActionStartForm: true\r\n                    }).done(function (savedData) {\r\n                        def.resolve(savedData.IdScope);\r\n                    });\r\n                } else {\r\n                    return self.dataService.addGridRecordData({\r\n                        idRender: properties.id,\r\n                        //xpath: properties.xpath,\r\n                        xpathContext: xpathContext,\r\n                        contexttype: \"start\",\r\n                        idPageCache: data.idPageCache,\r\n                        submitData: data\r\n                    }).done(function (savedData) {\r\n                        action.idStartScope = savedData.IdScope;\r\n                        action.idEntity = savedData.IdEntity;\r\n                        self.addActionToQueue(action);\r\n                        def.resolve(savedData.IdScope);\r\n                    });\r\n                }\r\n            },\r\n            onCancel: function (data) {\r\n\r\n            }\r\n        });\r\n\r\n        slideForm.render({\r\n            \"idForm\": action.guidProcess,\r\n            \"contextType\": \"start\",\r\n            \"idCase\": formParams.idCase,\r\n            \"additionalXpaths\": additionalXpaths,\r\n            \"xpathContext\": (action.editMode) ? xpathContextWithKey : xpathContextWithoutKey,\r\n            \"idStartScope\": action.idStartScope,\r\n            \"surrogateKey\": self.properties.surrogatedKey,\r\n            \"readOnlyForm\": action.readOnlyForm,\r\n            \"recordXpath\": action.recordXpath\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n    /**\r\n     * Process a start form\r\n     * @param args\r\n     * @return {*}\r\n     */\r\n    processStartForm: function (args) {\r\n        var self = this;\r\n        var def = new $.Deferred();\r\n        args = args || {};\r\n        var formParams = self.getFormContainer().getParams();\r\n\r\n        // Show dialog\r\n        var slideForm = new bizagi.rendering.tablet.startForm(self.dataService, self.renderFactory, {\r\n            title: args.title || \"\",\r\n            navigation: formParams.navigation,\r\n            saveButtonLabel: (self.typeForm == \"GlobalForm\" || self.typeForm == \"SummaryForm\")\r\n                ? bizagi.localization.getResource(\"render-form-button-create\")\r\n                : bizagi.localization.getResource(\"render-form-dialog-box-save\"),\r\n            onSave: function (data) {\r\n                // Submit the form\r\n                return self.dataService.multiaction().submitData({\r\n                    action: \"SAVE\",\r\n                    data: data,\r\n                    xpathContext: self.properties.xpathContext,\r\n                    idPageCache: data.idPageCache,\r\n                    isOfflineForm: false,\r\n                    isActionStartForm: true\r\n                }).done(function (savedData) {\r\n                    def.resolve(savedData.IdScope);\r\n                });\r\n            }\r\n        });\r\n        // Render the search form\r\n        slideForm.render({\r\n            guidprocess: args.guidprocess,\r\n            idStartScope: args.idStartScope,\r\n            idCase: self.properties.caseId,\r\n            idWorkitem: self.typeForm != \"SummaryForm\" ? formParams.idWorkitem : undefined,\r\n            additionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n            surrogatedKey: self.properties.surrogatedKey,\r\n            recordXpath: args.recordXpath,\r\n            mappingstakeholders: true\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n    /**\r\n     *\r\n     * @param action\r\n     */\r\n    executeAction: function (action) {\r\n        var self = this;\r\n\r\n        if (self.typeForm == \"GlobalForm\" || self.typeForm == \"SummaryForm\") {\r\n            var message = bizagi.localization.getResource(\"render-action-launcher-immediatly-action-confirmation\");\r\n\r\n            $.when(bizagi.showConfirmationBox(message, \"Bizagi\", \"info\"))\r\n                .done(function () {\r\n                    self.executeActionImmediately(action);\r\n                });\r\n        } else {\r\n            self.addActionToQueue(action);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Show the confirmation dialog\r\n     * bizagi.createOkCancelPopup\r\n     * @param action\r\n     * */\r\n    showConfirmationDialog: function (action) {\r\n        var self = this;\r\n        var message = bizagi.localization.getResource(\"render-action-launcher-single-action-confirmation\");\r\n\r\n        $.when(bizagi.showConfirmationBox(message, \"Bizagi\", \"info\"))\r\n            .done(function () {\r\n                self.setValue([]);\r\n\r\n                $.when(self.actionManager(action)).done(function (act) {\r\n                    self.executeAction(act);\r\n                });\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Render actual value of control and set events\r\n     * @param data\r\n     */\r\n    setDisplayValue: function (data) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var actionsToExecuteContainer = $(\"[data-element='actions-container']\", control);\r\n        var template = self.renderFactory.getTemplate(\"render-actionLauncher-actions-to-execute\");\r\n\r\n        self.configureQueueVisibility();\r\n\r\n        $.when(self.deferredActions).done(function (listOfActions) {\r\n            var getMappingAction = function (guidAction) {\r\n                var mapping = [];\r\n                $.each(listOfActions, function (key, value) {\r\n                    if (value[4] == guidAction) {\r\n                        mapping = value;\r\n                    }\r\n                });\r\n\r\n                return mapping;\r\n\r\n            };\r\n\r\n            $.each(data, function (key, value) {\r\n                var mapping = getMappingAction(value.guidAction);\r\n                data[key].displayName = mapping[1];\r\n                data[key].guidProcess = mapping[0];\r\n                data[key].actionType = mapping[3];\r\n                data[key].xpathContext = mapping[5];\r\n                data[key].readOnlyForm = mapping[6];\r\n\r\n                if (data[key].params && data[key].params.idStartScope) {\r\n                    data[key].idStartScope = data[key].params.idStartScope;\r\n                }\r\n                if (data[key].params && data[key].params.idPageCache) {\r\n                    data[key].idPageCache = data[key].params.idPageCache;\r\n                }\r\n                if (data[key].params && data[key].params.idEntity) {\r\n                    data[key].idEntity = data[key].params.idEntity;\r\n                }\r\n            });\r\n\r\n            if (data.length > 0){\r\n                $.when($.fasttmpl(template, { actions: data })).done(function (html) {\r\n                    actionsToExecuteContainer.empty();\r\n                    actionsToExecuteContainer.append(html);\r\n\r\n                    var removeActionSelector = $(\".bz-actions-to-execute .bz-btn-icn\", actionsToExecuteContainer);\r\n                    var openActionSelector = $(\"label\", actionsToExecuteContainer);\r\n\r\n                    removeActionSelector.on(\"click\", function () {\r\n                        var index = $(this).parent().data(\"index\");\r\n                        self.removeActionToQueue(index);\r\n                    });\r\n\r\n                    openActionSelector.on(\"click\", function () {\r\n                        var target = $(this).parent();\r\n                        var type = target.data(\"actiontype\");\r\n                        var guidprocess = target.data(\"guidprocess\");\r\n                        var idStartScope = target.data(\"idstartscope\");\r\n                        var title = target.data(\"title\");\r\n                        // When undefined return string \"undefined\" instead of type \"undefined\"\r\n                        var xpathContext = target.data(\"xpathcontext\");\r\n                        var readOnlyForm = target.data(\"readonlyform\") || false;\r\n                        var idEntity = target.data(\"identity\") || \"\";\r\n                        var guidAction = target.data(\"guidaction\");\r\n                        var recordXpath = xpathContext || self.properties.xpathContext;\r\n                        switch (type) {\r\n                            case \"Process\":\r\n                                if (idStartScope) {\r\n                                    self.processStartForm({\r\n                                        guidprocess: guidprocess,\r\n                                        idStartScope: idStartScope,\r\n                                        title: title,\r\n                                        xpathContext: xpathContext,\r\n                                        recordXpath: recordXpath\r\n                                    });\r\n                                }\r\n                                break;\r\n                            case \"Form\":\r\n                                var action = {\r\n                                    guidProcess: guidprocess,\r\n                                    idStartScope: idStartScope,\r\n                                    editMode: true,\r\n                                    xpathContext: xpathContext,\r\n                                    readOnlyForm: readOnlyForm,\r\n                                    idEntity: idEntity,\r\n                                    recordXpath: recordXpath\r\n                                };\r\n\r\n                                if (action.xpathContext) {\r\n                                    self.processActionFormCollection(action);\r\n                                } else {\r\n                                    // Convert string \"undefined\" into type \"undefined\"\r\n                                    action.xpathContext = undefined;\r\n\r\n                                    // Add parameters if action form\r\n                                    var extraParams = {};\r\n                                    var dataAction = self.value.filter(function (item) {\r\n                                        return item.guidAction == guidAction;\r\n                                    });\r\n\r\n                                    if (dataAction.length > 0) {\r\n                                        extraParams = {\r\n                                            actionType: \"Form\",\r\n                                            contextType: \"entitytemplate\",\r\n                                            guidEntity: self.properties.guidEntity || dataAction[0].guidEntity\r\n                                        }\r\n                                    }\r\n\r\n                                    self.processActionForm($.extend(action, extraParams));\r\n                                }\r\n                                break;\r\n                            case \"Rule\":\r\n                                // Rules dont have forms or something like that\r\n                                break;\r\n                        }\r\n                    });\r\n                });\r\n            }else{\r\n                actionsToExecuteContainer.empty();\r\n            }\r\n\r\n        });\r\n    },\r\n    /**\r\n     * Show container if it has actions\r\n     */\r\n    configureQueueVisibility: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var actionsToExecuteContainer = $(\".bz-action-launcher-actions-to-execute-container\", control);\r\n        var actionsToExecuteTitle = $(\".action-to-execute-label\", control);\r\n\r\n        if (self.getValue().length > 0) {\r\n            actionsToExecuteContainer.show();\r\n            actionsToExecuteTitle.show();\r\n        } else {\r\n            actionsToExecuteContainer.hide();\r\n            actionsToExecuteTitle.hide();\r\n        }\r\n    }\r\n});","/**\r\n * Tablet definition of entity template\r\n *\r\n * @author: Ricardo Pérez\r\n */\r\n\r\nbizagi.rendering.tablet.actionLauncher.extend(\"bizagi.rendering.tablet.entityTemplate\", {}, {\r\n /**\r\n     * Render a specific implementation for tablet device\r\n     */\r\n    postRender: function() {\r\n        if (this.getMode() == \"design\"){\r\n            return;\r\n        }\r\n\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n        self.actions = [];\r\n        self.configureQueueVisibility();\r\n        self.startLoading();\r\n\r\n        // Define params to get template               \r\n        self.dataService.multiaction().getPropertyData(self.processPropertyValueDataTmplArgs)\r\n            .then(function(templateData) {\r\n                return self.engine.render(templateData, self.processPropertyValueDataTmplArgs)\r\n                    .then(function(tmpl) {\r\n                        var template = self.renderFactory.getTemplate(\"render-actionLauncher-horizontal\")\r\n                        var html = $($.fasttmpl(template, { template: true }));\r\n                        $(\".bz-template\", html.wrap(\"<div>\").parent()).append(tmpl);\r\n\r\n                        if (properties.allowactions) {\r\n                           return self.dataService.multiaction().getActions(self.processPropertyValueArgs)\r\n                                .then(function(response) {\r\n                                    self.deferredActions.resolve(response);\r\n                                    self.actions = response;\r\n\r\n                                    if (self.actions.length > 0) {\r\n                                        $(\"[data-element='actions-add-btn']\", control).show();\r\n                                    }\r\n                                    else{\r\n                                        $(\"[data-element='actions-add-btn']\", control).hide();\r\n                                    }\r\n                                    return html;\r\n                                });\r\n                        }\r\n                        else{\r\n                            return html;    \r\n                        }\r\n                    });\r\n                    \r\n            }).done(function(html) {\r\n                $(\"[data-element='template-container']\", control).append(html);\r\n                self.configureActionsHandlers();\r\n                self.configureTemplateHandlers();\r\n            }).always(function() {\r\n                self.endLoading();\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Add binding to html elements\r\n     */\r\n    configureActionsHandlers: function() {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var entityTemplateControls = $(\".action-launcher-control\", control);\r\n\r\n        /**\r\n         * Binding for click action on buttons\r\n         */\r\n        entityTemplateControls.on(\"click\", function() {\r\n            var item = self.actions[parseInt($(this).data(\"index\"))];\r\n            var action = {\r\n                guidProcess: item[0],\r\n                guidAction: item[4],\r\n                displayName: item[1],\r\n                actionType: item[3],\r\n                xpathContext: (typeof item[5] !== \"undefined\" && item[5] === \"true\"),\r\n                xpathActions: self.properties.xpathActions || \"\"\r\n            };\r\n\r\n            if (action.actionType === \"Form\") {\r\n                action.xpathContext = undefined;\r\n                action.contextType = \"entitytemplate\";\r\n                action.guidEntity = self.properties.guidEntity;\r\n            }\r\n\r\n            self.processAction(action);\r\n        });\r\n\r\n        var actions = [];\r\n        for (var i = 0, len = self.actions.length; i < len; i++) {\r\n            actions.push({\r\n                guid: self.actions[i][0],\r\n                displayName: self.actions[i][1]\r\n            });\r\n        }\r\n\r\n        /**\r\n         * Binding for click action sheet\r\n         */\r\n        $(\"[data-element='actions-add-btn']\", control).actionSheet({\r\n            actions: actions,\r\n            actionClicked: function(action) {\r\n                var item = self.actions.find(function(e) {\r\n                    return e[0] == action.guid;\r\n                });\r\n                self.processAction({\r\n                    guidProcess: item[0],\r\n                    guidAction: item[4],\r\n                    displayName: item[1],\r\n                    actionType: item[3],\r\n                    xpathContext: (typeof item[5] !== \"undefined\" && item[5] === \"true\")\r\n                });\r\n            }\r\n        });\r\n\r\n    },\r\n\r\n    configureTemplateHandlers: function() {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        /**\r\n         * Catch the event from the layout link\r\n         */\r\n        self.engine.subscribe(\"onLoadDataNavigation\", function(ev, params) {\r\n            params.filters = [];\r\n            params.calculateFilters = params.calculateFilters || true;\r\n\r\n            self.triggerGlobalHandler(\"dataNavigation\", params);\r\n        });\r\n\r\n        $(\".bz-template-more-or-less\", control).bind(\"click\", function(){\r\n            $(\".bz-template\", control).toggleClass(\"bz-template--collapsed\");\r\n        });\r\n    }\r\n});","/**\r\n * Device definition of Polymorphic launcher\r\n *\r\n * @author: Ricardo Perez\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.polymorphicLauncher\", bizagi.rendering.polymorphicLauncher.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.polymorphicLauncher.extend(\"bizagi.rendering.tablet.polymorphicLauncher\", {}, {\r\n    /**\r\n        * Render a specific implementation for Tablet device\r\n        */\r\n    postRender: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n        var html, template;\r\n\r\n        if (mode == \"design\" || !self.properties.surrogatedKey) {\r\n            return \"\";\r\n        }\r\n\r\n        self.configureQueueVisibility();\r\n\r\n\t\t/**\r\n\t\t * Define params to get list of actions\r\n\t\t */\r\n        return $.when(self.dataService.multiaction().getPolymorphicActions(self.processPropertyValueArgs)).done(function (response) {\r\n            // Convert default response to tree data structure\r\n            response = self.dataService.serializePolymorphicActions(response);\r\n            self.totalActions = bizagi.clone(response);\r\n            var actions = bizagi.clone(response);\r\n            self.lessActions = bizagi.clone(actions);\r\n\r\n            // NOTE: Code extracted\r\n            var templateArguments = {\r\n                actions: actions,\r\n                allowSearch: properties.allowSearch,\r\n                treeActionsList: self.getTreeItems(actions)\r\n            };\r\n            template = self.renderFactory.getTemplate(\"render-polymorphicLauncher-vertical-tree\");\r\n\r\n            var control = self.getControl();\r\n            var actionsContainer = $(\".bz-polymorphic-launcher__constructors\", control);\r\n            actionsContainer.append($.fasttmpl(template, templateArguments));\r\n            self.bindHandlers();\r\n        });\r\n    },\r\n\r\n\t/**\r\n\t * Get rendered html of each node of constructors\r\n\t * @param actions\r\n\t * @param level\r\n\t * @return {string}\r\n\t */\r\n    getTreeItems: function (actions, level) {\r\n        var self = this;\r\n        var item = \"<ul>\";\r\n        var templateTreeItem = self.renderFactory.getTemplate(\"render-polymorphicLauncher-vertical-tree-item\");\r\n        actions = actions || {};\r\n        level = level || 1;\r\n\r\n        $.each(actions, function (key, value) {\r\n            item += $.fasttmpl(templateTreeItem, value);\r\n\r\n            if (value.children) {\r\n                item += self.getTreeItems(value.children, level + 1);\r\n            }\r\n        });\r\n        item += \"</ul>\";\r\n        return item;\r\n    },\r\n\r\n\t/**\r\n\t * Add binding to html elements\r\n\t */\r\n    bindHandlers: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var actionLauncherControls = $(\".bz-polymorphic-launcher__constructors li span\", control);\r\n\r\n        //Binding for click action on buttons\r\n        actionLauncherControls.on(\"click\", function () {\r\n            var $targetData = $(this).parent();\r\n            var action = {\r\n                guidEntity: $targetData.data(\"guidentity\"),\r\n                guidObject: $targetData.data(\"guidobject\"),\r\n                guidConstructor: $targetData.data(\"guidconstructor\"),\r\n                displayName: $targetData.data(\"display-name\"),\r\n                actionType: $targetData.data(\"action-type\"),\r\n                xpathContext: $targetData.data(\"xpathcontext\")\r\n            };\r\n            self.onActionClicked(action);\r\n        });\r\n        //Catch the typed text in the search field and filter the action list\r\n        $.expr[\":\"].FilterAction = function (entity, i, array) {\r\n            var search = array[3];\r\n            if (!search) {\r\n                return false;\r\n            }\r\n            return new RegExp(search, \"i\").test($(entity).text());\r\n        };\r\n        $(\"input[data-action=search]\", control).keyup(function () {\r\n            var search = $(this).val();\r\n            $(\".bz-polymorphic-launcher__constructors li\", control).show();\r\n            if (search) {\r\n                $(\".bz-polymorphic-launcher__constructors li\", control).not(\":FilterAction(\" + search + \")\").hide();\r\n            }\r\n        });\r\n\r\n    },\r\n\t/**\r\n\t * Execute an Action\r\n\t * @param action\r\n\t */\r\n    onActionClicked: function (action) {\r\n        var self = this;\r\n\r\n        $.when(self.actionManager(action)).done(function (act) {\r\n            self.executeAction(act);\r\n        });\r\n    },\r\n\t/**\r\n\t * Show a message when action has been executed\r\n\t * @param status\r\n\t * @param action\r\n\t */\r\n    notifyExecution: function (status, action) {\r\n        var self = this;\r\n        if (status == \"success\") {\r\n            $.notifier.add({\r\n                class_name: \"success\",\r\n                title: action.displayName,\r\n                text: self.getResource(\"render-action-launcher-success-excecution\").replace('%s', action.displayName),\r\n                sticky: false\r\n            });\r\n\r\n        } else {\r\n            $.notifier.add({\r\n                class_name: \"error\",\r\n                title: action.displayName,\r\n                text: self.getResource(\"render-action-launcher-failed-excecution\").replace('%s', action.displayName),\r\n                sticky: false\r\n            });\r\n        }\r\n    },\r\n\t/**\r\n\t * Show a dialog with a form\r\n\t * @param action\r\n\t * @return {*}\r\n\t */\r\n    processActionForm: function (action) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var additionalXpaths = self.properties.additionalXpath.join(\",\");\r\n        var def = new $.Deferred();\r\n        var xpathContext = action.xpathContext || \"\";\r\n        var formParams = form.getParams();\r\n\r\n        var recordXpath = self.properties.recordXpath;\r\n\r\n        // Show dialog with new form after that\r\n        var slideForm = new bizagi.rendering.tablet.slide.form(self.dataService, self.renderFactory, {\r\n            title: properties.detailLabel || bizagi.localization.getResource(\"render-grid-details-form\"),\r\n            navigation: formParams.navigation,\r\n            showSaveButton: true,\r\n            cancelButtonLabel: bizagi.localization.getResource(\"render-form-dialog-box-close\"),\r\n            onSave: function (data) {\r\n                var pageCache = data.idPageCache;\r\n                data.idPageCache = null;\r\n                // Submit the form\r\n                return self.dataService.multiaction().submitData({\r\n                    action: \"SAVE\",\r\n                    data: data,\r\n                    xpathContext: slideForm.form.properties.xpathContext, //self.properties.xpathContext,\r\n                    idPageCache: pageCache,\r\n                    isOfflineForm: false,\r\n                    isActionStartForm: true\r\n                }).done(function (savedData) {\r\n                    if (!action.editMode && self.countSameActions(action) == 0) {\r\n                        action.idStartScope = savedData.IdScope;\r\n                    }\r\n                    def.resolve(savedData.IdScope);\r\n                });\r\n            },\r\n            onCancel: function (data) {\r\n\r\n            }\r\n        });\r\n\r\n        slideForm.render({\r\n            \"idForm\": action.guidObject,\r\n            \"contextType\": \"entity\",\r\n            \"guidEntity\": action.guidEntity,\r\n            \"idCase\": self.properties.caseId,\r\n            \"idWorkitem\": self.typeForm != \"SummaryForm\" ? formParams.idWorkitem : undefined,\r\n            \"additionalXpaths\": additionalXpaths,\r\n            //\"xpathContext\": xpathContext,\r\n            \"idStartScope\": action.idStartScope,\r\n            \"surrogateKey\": self.properties.surrogatedKey,\r\n            \"recordXpath\": recordXpath\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n\t/**\r\n\t * Process a start form\r\n\t * @param args\r\n\t * @return {*}\r\n\t */\r\n    processStartForm: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var def = new $.Deferred();\r\n        var formParams = form.getParams();\r\n        args = args || {};\r\n\r\n\r\n        var slideForm = new bizagi.rendering.tablet.startForm(self.dataService, self.renderFactory, {\r\n            //showSaveButton: properties.editable,\r\n            maximized: properties.maximized,\r\n            title: args.title || \"\",\r\n            navigation: formParams.navigation,\r\n            saveButtonLabel: (self.typeForm == \"GlobalForm\" || this.typeForm == \"SummaryForm\") ? bizagi.localization.getResource(\"render-form-button-create\") : bizagi.localization.getResource(\"render-form-dialog-box-save\"),\r\n            onSave: function (data) {\r\n                form.startLoading();\r\n\r\n                // Submit the form\r\n                return self.dataService.multiaction().submitData({\r\n                    action: \"SAVE\",\r\n                    data: data,\r\n                    xpathContext: self.properties.xpathContext,\r\n                    idPageCache: data.idPageCache,\r\n                    isOfflineForm: false,\r\n                    isActionStartForm: true\r\n                }).done(function (savedData) {\r\n                    form.endLoading();\r\n                    def.resolve(savedData.IdScope);\r\n                });\r\n            }\r\n        });\r\n\r\n        slideForm.render({\r\n            guidprocess: args.guidprocess,\r\n            idStartScope: args.idStartScope,\r\n            idCase: self.properties.caseId,\r\n            idWorkitem: self.typeForm != \"SummaryForm\" ? formParams.idWorkitem : undefined,\r\n            additionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n            surrogatedKey: self.properties.surrogatedKey,\r\n            recordXpath: args.recordXpath,\r\n            mappingstakeholders: true\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\t/**\r\n\t * Execute and action if a form is global form or summary, or send to queue\r\n\t * @param action\r\n\t */\r\n    executeAction: function (action) {\r\n        var self = this;\r\n\r\n        if (self.typeForm == \"GlobalForm\" || self.typeForm == \"SummaryForm\") {\r\n            var message = bizagi.localization.getResource(\"render-action-launcher-immediatly-action-confirmation\");\r\n\r\n            $.when(bizagi.showConfirmationBox(message, \"Bizagi\", \"info\"))\r\n                .done(function () {\r\n                    self.executeActionImmediately(action);\r\n                });\r\n        } else {\r\n            self.addActionToQueue(action);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Show confirmation dialog\r\n     * @param action\r\n     */\r\n    showConfirmationDialog: function (action) {\r\n        var self = this;\r\n        var message = bizagi.localization.getResource(\"render-action-launcher-single-action-confirmation\");\r\n\r\n        $.when(bizagi.showConfirmationBox(message, \"Bizagi\", \"info\"))\r\n            .done(function () {\r\n                self.setValue([]);\r\n\r\n                $.when(self.actionManager(action))\r\n                    .done(function (act) {\r\n                        self.executeAction(act);\r\n                    });\r\n            });\r\n    },\r\n\r\n\t/**\r\n\t * Render actual value of control and set events\r\n\t * @param data\r\n\t */\r\n    setDisplayValue: function (data) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var actionsToExecuteContainer = $(\".bz-polymorphic-launcher-constructors-to-execute-container\", control);\r\n        var template = self.renderFactory.getTemplate(\"render-polymorphicLauncher-actions-to-execute\");\r\n        self.configureQueueVisibility();\r\n\r\n        $.when($.fasttmpl(template, { actions: data })).done(function (html) {\r\n            actionsToExecuteContainer.empty();\r\n            actionsToExecuteContainer.append(html);\r\n            var removeActionSelector = $(\".bz-pill .bz-btn-icn\", actionsToExecuteContainer);\r\n            var openActionSelector = $(\".bz-pill__label\", actionsToExecuteContainer);\r\n            removeActionSelector.on(\"click\", function () {\r\n                var index = $(this).parent().data(\"index\");\r\n                self.removeActionToQueue(index);\r\n            });\r\n            openActionSelector.bind(\"click\", function () {\r\n                var $target = $(this).parent();\r\n                var type = $target.data(\"actiontype\");\r\n                var guidprocess = $target.data(\"guidprocess\");\r\n                var idStartScope = $target.data(\"idstartscope\");\r\n                var title = $target.data(\"title\");\r\n                var xpathContext = $target.data(\"xpathcontext\");\r\n                var idEntity = $target.data(\"identity\") || \"\";\r\n                var guidEntity = $target.data(\"guidentity\");\r\n                var recordXpath = xpathContext || self.properties.xpathContext;\r\n\r\n                switch (type) {\r\n                    case \"Process\":\r\n                        if (idStartScope) {\r\n                            self.processStartForm({\r\n                                guidprocess: guidprocess,\r\n                                idStartScope: idStartScope,\r\n                                title: title,\r\n                                xpathContext: xpathContext,\r\n                                recordXpath: recordXpath\r\n                            });\r\n                        }\r\n                        break;\r\n                    case \"Form\":\r\n                        var action = {\r\n                            guidProcess: guidprocess,\r\n                            idStartScope: idStartScope,\r\n                            editMode: true,\r\n                            xpathContext: xpathContext,\r\n                            idEntity: idEntity,\r\n                            guidEntity: guidEntity,\r\n                            guidObject: guidprocess\r\n                        };\r\n\r\n                        self.processActionForm(action);\r\n                        break;\r\n                    case \"Rule\":\r\n                        // Rules dont have forms or something like that\r\n                        break;\r\n                }\r\n            });\r\n        });\r\n    },\r\n\t/**\r\n\t * Show container if it has actions\r\n\t */\r\n    configureQueueVisibility: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var actionsToExecuteContainer = $(\".bz-polymorphic-launcher-constructors-to-execute-container\", control);\r\n        var actionsToExecuteTitle = $(\".bz-polymorphic-launcher__title\", control);\r\n        if (self.getValue().length > 0) {\r\n            actionsToExecuteContainer.show();\r\n            actionsToExecuteTitle.show();\r\n        } else {\r\n            actionsToExecuteContainer.hide();\r\n            actionsToExecuteTitle.hide();\r\n        }\r\n    }\r\n});","/*  \r\n *   Name: BizAgi Tablet Render list Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the list render class to adjust to desktop devices\r\n */\r\n\r\n// Extends from render tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.checkList\", bizagi.rendering.checkList.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.checkList.extend(\"bizagi.rendering.tablet.checkList\", {}, {\r\n/**\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this._super();        \r\n        this.properties.unique = Math.ceil(Math.random() * 1000);        \r\n        this.properties.required = true;\r\n    },\r\n\r\n    /**\r\n     *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        // Call base\r\n        self._super();\r\n        $(\"input[type=checkbox]\", self.getControl()).bind(\"change\", function () {\r\n            var itemId = $(this).data(\"item-guid\");\r\n            self.onCheckListGroupChange(itemId, this.checked);\r\n        });\r\n    },\r\n\r\n    onCheckListGroupChange: function (itemId, checked) {\r\n        var self = this;\r\n        var item;\r\n        var items = $.grep(self.properties.items, function (element, index) {\r\n            return element.guid === itemId;\r\n        });\r\n        if (items && items.length > 0) {\r\n            item = items[0];\r\n        }\r\n        item.checked = checked;\r\n    },\r\n\r\n    /**\r\n     *   Sets the value in the rendered control\r\n     */\r\n    clearDisplayValue: function () {\r\n        $(\"input[type=checkbox]\", this.getControl()).removeAttr(\"checked\");\r\n    },\r\n\r\n    setDisplayValue : function (value){\r\n        var self = this;\r\n    }\r\n});\r\n","/*  \r\n *   Name: BizAgi Desktop Render list Extension\r\n *   Author: Iván Ricardo Taimal Narváez\r\n *   Comments:\r\n *   -   This script will redefine the list render class to adjust to desktop devices\r\n */\r\n\r\n// Extends from base list\r\nbizagi.rendering.tablet.checkList.extend(\"bizagi.rendering.tablet.activityCheckList\", {}, {\r\n   /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n        var goal = (this.properties.activityDescription && this.properties.activityDescription !== \"\") \r\n        ?  bizagi.localization.getResource(\"workportal-project-plan-activity-goal\") + \": \" + this.properties.activityDescription : \"\";\r\n        this.properties.displayName = (goal !== \"\") ? goal : bizagi.localization.getResource(\"workportal-project-plan-activity-work-title\");\r\n        this.properties.displayType = \"vertical\";\r\n    },\r\n    /*\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n        // Call base\r\n        this._super();\r\n\r\n        self.newItemName = $(\".bz-checkList__input\", $control);\r\n        self.addEditButton = $(\".add-edit-item-button-checklist\", $control);\r\n        self.cancelEditButton = $(\".cancel-edit-item-button-checklist\", $control);\r\n\r\n        self.additionalElements();\r\n        self.notifyLoadItems();        \r\n    },\r\n\r\n    notifyLoadItems: function(){\r\n        var self = this;\r\n        setTimeout(function(){\r\n            var resolvedItems = self.properties.items.filter(function(i){\r\n                return i.resolved\r\n            }).length;\r\n            bizagi.util.setItemLocalStorage(\"newChanges\", JSON.stringify({\r\n                'hasChanges': true,\r\n                'idActivity': self.properties.idActivity,\r\n                'itemsResolved': resolvedItems,\r\n                'items': self.properties.items,\r\n                'progress': self.properties.activityWork\r\n            }));\r\n\r\n            bizagi.webpart.publish(\"onLoadDataItemsFromFormActivityPlan\", { \"items\": self.properties.items, \"activityWork\": self.properties.activityWork });\r\n        }, 100);\r\n    },\r\n\r\n    additionalElements: function () {\r\n        var self = this;\r\n\r\n        if (self.addEditButton && self.addEditButton.length > 0) {\r\n            self.addEditButton.hide();\r\n        }\r\n        if (self.cancelEditButton && self.cancelEditButton.length > 0) {\r\n            self.cancelEditButton.hide();\r\n        }\r\n        //control.parent().addClass(\"render-activity-check\");\r\n    },\r\n\r\n    configureHandlers: function() {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        this._super();\r\n        $(\"[data-action=add]\", control).unbind(\"click\").click(function() {\r\n            var itemSelected = $(\".bz-checkList__item.bz-checkList__item--selected\", self.control);\r\n            if (itemSelected.length <= 0) {\r\n                self.prepareNewItem();\r\n            } else {\r\n                $(\".bz-checkList__input\", itemSelected).focus();\r\n            }\r\n        });\r\n\r\n        $(\"[data-action=delete]\", self.control).bind(\"click\", function() {\r\n            var that = this;\r\n            var message = bizagi.localization.getResource(\"workportal-widget-reports-confirm\");\r\n            var contentHolder = $(this).closest(\".bz-checkList__item\");\r\n\r\n            contentHolder.addClass(\"ui-bizagi-to-remove\");\r\n           \r\n            $.when(bizagi.showConfirmationBox(message, \"Bizagi\", \"info\"))\r\n                .done(function() {\r\n\r\n                    var itemId = $(that).closest(\".bz-checkList__item\").data(\"item-guid\");\r\n\r\n                    self.deleteItem(itemId);\r\n                }).fail(function() {\r\n                    contentHolder.removeClass(\"ui-bizagi-to-remove\");\r\n                });\r\n        });\r\n\r\n        $(\"label[data-action=edit-item]\", self.control).bind(\"click\", function() {\r\n            var element = $(this).closest(\".bz-checkList__item\");\r\n            var itemId = element.data(\"item-guid\");\r\n            var itemPosition = element.data(\"item-position\");\r\n\r\n            self.selectItem(itemId, itemPosition);\r\n        });\r\n    },\r\n\r\n    selectItem: function(itemId) {\r\n        var self = this;\r\n\r\n        for (var i = 0, length = self.properties.items.length; i < length; i++) {\r\n            if (self.properties.items[i].guid === itemId) {\r\n                self.properties.items[i].selected = true;\r\n            } else {\r\n                self.properties.items[i].selected = false;\r\n            }\r\n        }\r\n\r\n        self.repaintControl();\r\n\r\n        var itemSelected = $(\".bz-checkList__item.bz-checkList__item--selected\", self.getControl());\r\n        var itemSelectedName = $(\".bz-checkList__input\", itemSelected);\r\n        var itemContent = itemSelectedName.val();\r\n\r\n        itemSelectedName.focus();\r\n        itemSelectedName[0].setSelectionRange(itemContent.length, itemContent.length);\r\n\r\n        self.addSelectedHandlers();\r\n    },\r\n\r\n    deleteItem: function(itemId) {\r\n        var self = this;\r\n\r\n        for (var i = 0, length = self.properties.items.length; i < length; i++) {\r\n            if (self.properties.items[i].guid === itemId) {\r\n                self.properties.items.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        self.setValue(self.properties.items);\r\n        self.repaintControl();\r\n        self.addSelectedHandlers();\r\n    },\r\n\r\n    prepareNewItem: function () {\r\n        var self = this;\r\n        var newItem = {\r\n            guid: Math.guid(),\r\n            resolved: false,\r\n            name: \"\",\r\n            selected: true\r\n        };\r\n\r\n        self.properties.items.push(newItem);\r\n        self.repaintControl();\r\n        self.newItemName.focus();\r\n\r\n        self.newItemName.blur(function () {\r\n             var itemSelected = $(\".bz-checkList__item.bz-checkList__item--selected\", self.control);\r\n             var itemSelectedName = $(\".bz-checkList__input\", itemSelected);\r\n             var valueInput = itemSelectedName.val();\r\n\r\n             if(valueInput === \"\" && self.properties.items && self.properties.items.length >= 1\r\n                    && self.properties.items.slice(-1)[0].name === \"\"){\r\n                self.properties.items.pop();\r\n             }\r\n         });\r\n        self.addSelectedHandlers();\r\n        self.newItemName.keypress(function (event) {\r\n            if (event.which == 13) {\r\n                event.preventDefault();\r\n                self.addItem();\r\n                self.prepareNewItem();\r\n            }\r\n        });\r\n    },\r\n\r\n    addSelectedHandlers: function () {\r\n        var self = this;\r\n        var itemSelected = $(\".bz-checkList__item.bz-checkList__item--selected\", self.control);\r\n        var itemSelectedName = $(\".bz-checkList__input\", itemSelected);\r\n        itemSelectedName.focus();\r\n        $(\"[data-action=accept-edit]\", itemSelected).bind(\"click\", function () {\r\n            var newItemName = itemSelectedName.val();\r\n            if (newItemName && newItemName !== \"\") {\r\n                self.addItem();\r\n            }\r\n        });\r\n\r\n        \r\n        $(\"[data-action=cancel-edit]\", itemSelected).bind(\"click\", function (e) {\r\n            var newItemName = itemSelectedName.val();\r\n            var element = $(this).closest(\".bz-checkList__item\");\r\n            var itemPosition = element.data(\"item-position\");\r\n            var guidItem = element.data(\"item-guid\");\r\n\r\n            if (newItemName && newItemName !== \"\" && self.properties.items[itemPosition].name !== \"\") {\r\n                self.properties.items[itemPosition].selected = false;\r\n            }\r\n            if (newItemName === \"\" || self.properties.items[itemPosition].name === \"\") {\r\n                self.deleteItem(guidItem);\r\n            }\r\n            //self.addButton.show();\r\n            self.repaintControl();\r\n        });\r\n    },\r\n\r\n    addItem: function () {\r\n        var self = this;\r\n        var $control = self.getControl();\r\n\r\n        var itemSelected = $(\".bz-checkList__item.bz-checkList__item--selected\", $control);\r\n        var itemSelectedName = $(\".bz-checkList__input\", itemSelected);\r\n        var newItemName = itemSelectedName.val();\r\n\r\n        $.each(self.properties.items, function (index, item) {\r\n            if (item.selected) {\r\n                item.name = newItemName;\r\n                item.selected = false;\r\n            }\r\n        });\r\n        self.updateOriginalValue();\r\n        self.setValue(self.properties.items);\r\n        self.repaintControl();\r\n    },\r\n\r\n    repaintControl: function () {\r\n        var self = this;\r\n        var checkListHtml = self.renderControl();\r\n        $(\"[data-component=checkList]\", self.control).replaceWith(checkListHtml);\r\n        self.postRender();\r\n        self.configureHandlers();\r\n    },\r\n\r\n    onCheckListGroupChange: function (itemId, checked) {\r\n        var self = this;\r\n        var item;\r\n        var items = $.grep(self.properties.items, function (element, index) {\r\n            return element.guid === itemId;\r\n        });\r\n        if (items && items.length > 0) {\r\n            item = items[0];\r\n        }\r\n        item.resolved = checked;\r\n        self.setValue(self.properties.items);\r\n        self.refreshValue(self.properties.items);\r\n    },\r\n\r\n    refreshValue: function(items){\r\n        var self = this,\r\n            length = items.length,\r\n            completed = 0;\r\n\r\n        for (var i = 0; i < length; i++) {\r\n            if (items[i].resolved) {\r\n                completed += 1;\r\n            }\r\n        }\r\n\r\n        if (length > 0) {\r\n            self.properties.activityWork = Math.floor(100 * completed / length);\r\n        }\r\n        else {\r\n            self.properties.activityWork = 100;\r\n        }\r\n\r\n        self.notifyLoadItems();\r\n    },\r\n\r\n    getValue: function () {\r\n        var self = this;\r\n        return self.value || [];\r\n    },\r\n\r\n    controlValueIsChanged: function () {\r\n        var self = this;\r\n        var originalValue = JSON.stringify(self.properties.originalValue);\r\n        var newValue = JSON.stringify(self.value);\r\n        return originalValue !== newValue;\r\n    },\r\n\r\n    /*\r\n     *   Updates original value for some comparisons\r\n     */\r\n    updateOriginalValue: function () {\r\n        var self = this;\r\n        self.properties.originalValue = bizagi.clone(self.value);\r\n    },\r\n\r\n    /*\r\n     *   Add the render data to the given collection in order to send data to the server\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Add the render value\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n        var idActivity = self.properties.idActivity;\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            if (!bizagi.util.isEmpty(xpath) && !bizagi.util.isEmpty(idActivity)) {\r\n                if (Array.isArray(value)) {\r\n                    renderValues[properties.xpath] = {\r\n                        idActivity: idActivity,\r\n                        items: value\r\n                    };\r\n                } else if (value === \"\") {\r\n                    renderValues[properties.xpath] = \"\";\r\n                }\r\n            }\r\n        }else{\r\n            bizagi.util.setItemLocalStorage(\"newChanges\", JSON.stringify({\r\n                'hasChanges': false\r\n            }));\r\n        }\r\n    },\r\n\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties,\r\n            message;\r\n        var items = self.getValue();\r\n        message = self.getResource(\"render-activity-check-list-validation\");\r\n        for (var i = 0; i < items.length; i+=1) {\r\n            var item = items[i];\r\n            if (!item.resolved) {\r\n                invalidElements.push({\r\n                    xpath: properties.xpath,\r\n                    message: message\r\n                });\r\n                break;\r\n            }\r\n        }\r\n    }\r\n});\r\n","/*  \r\n *   Name: Bizagi Tablet Range Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the range render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from render Tablet base\r\nbizagi.rendering.tablet.render.extend(\"bizagi.rendering.tablet.range\", bizagi.rendering.range.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.range.extend(\"bizagi.rendering.tablet.range\", {}, {\r\n\r\n    /**\r\n     * Render a specific implementation for tablet device\r\n     */\r\n    postRender: function() {        \r\n        var properties = this.properties;\r\n    },\r\n    /**\r\n     * Render actual value of control and set events\r\n     * @param data\r\n     */\r\n    setDisplayValue: function(data) {\r\n        var control = this.getControl();\r\n    }\r\n\r\n});","/*  \r\n *   Name: Bizagi Tablet Range Date Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the range date render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from range tablet base\r\nbizagi.rendering.tablet.range.extend(\"bizagi.rendering.tablet.rangeDate\", bizagi.rendering.rangeDate.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.rangeDate.extend(\"bizagi.rendering.tablet.rangeDate\", {}, {\r\n\r\n    /**\r\n     * Render actual value of control and set events\r\n     * @param data\r\n     */\r\n    setDisplayValue: function (data) {        \r\n        var control = this.getControl();\r\n    }\r\n});","/*  \r\n *   Name: Bizagi Tablet Range Date Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the range date render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from range tablet base\r\nbizagi.rendering.tablet.range.extend(\"bizagi.rendering.tablet.rangeMoney\", bizagi.rendering.rangeMoney.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.rangeMoney.extend(\"bizagi.rendering.tablet.rangeMoney\", {}, {\r\n\r\n\t/**\r\n\t * Render a specific implementation for Desktop device\r\n\t */\r\n\tpostRender: function() {\r\n\t\tvar minControl = new bizagi.rendering.money(this.getRenderProperties(\"min\"));\r\n\t\tvar maxControl = new bizagi.rendering.money(this.getRenderProperties(\"max\"));\r\n\r\n\t    this.setRanageControls(minControl, maxControl);\r\n\t},\r\n\r\n\tgetRenderProperties: function (typeRangeControl){\r\n\t\tvar self = this;\r\n\t\tvar form = self.getFormContainer();\r\n\t\tvar properties = self.properties;\r\n\r\n\t\tvar renderProperties = {\r\n\t\t\tdata: {\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\t\"id\": properties.id,\r\n\t\t\t\t\t\"xpath\": properties.xpath\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmode: \"execute\",\r\n\t\t\tparent: form,\r\n\t\t\trenderFactory: self.renderFactory,\r\n\t\t\tresources: bizagi.localization,\r\n\t\t\tdataService: self.dataService\r\n\t\t};\r\n\r\n\t\tif (typeRangeControl === \"min\"){\r\n\t\t\trenderProperties.data.properties.displayName = \"From\";\r\n\t\t}else{\r\n\t\t\trenderProperties.data.properties.displayName = \"To\";\r\n\t\t}\r\n\r\n\t\treturn renderProperties;\r\n\t},\r\n\r\n\t/**\r\n\t * Render actual value of control and set events\r\n\t * @param data\r\n\t */\r\n\tsetDisplayValue: function(data) {\r\n\t\tvar self = this;\r\n\t\tvar control = self.getControl();\r\n\t}\r\n});","/*  \r\n *   Name: Bizagi Tablet Range Date Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the range date render class to adjust to tablet devices\r\n */\r\n\r\n// Extends from range tablet base\r\nbizagi.rendering.tablet.range.extend(\"bizagi.rendering.tablet.rangeNumber\", bizagi.rendering.rangeNumber.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.rangeNumber.extend(\"bizagi.rendering.tablet.rangeNumber\", {}, {\r\n\r\n\t/**\r\n\t * Render a specific implementation for Desktop device\r\n\t */\r\n\tpostRender: function() {\r\n\t\tvar self = this;\r\n\r\n\t\tvar minControl = new bizagi.rendering.number(self.getRenderProperties(\"min\"));\r\n\t\tvar maxControl = new bizagi.rendering.number(self.getRenderProperties(\"max\"));\r\n\r\n\t\tself.setRanageControls(minControl, maxControl);\r\n\t},\r\n\r\n\tgetRenderProperties: function (typeRangeControl){\r\n\t\tvar self = this;\r\n\t\tvar form = self.getFormContainer();\r\n\t\tvar properties = self.properties;\r\n\r\n\t\tvar renderProperties = {\r\n\t\t\tdata: {\r\n\t\t\t\tproperties: {\r\n\t\t\t\t\t\"id\": properties.id,\r\n\t\t\t\t\t\"xpath\": properties.xpath\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmode: \"execute\",\r\n\t\t\tparent: form,\r\n\t\t\trenderFactory: self.renderFactory,\r\n\t\t\tresources: bizagi.localization,\r\n\t\t\tdataService: self.dataService\r\n\t\t};\r\n\r\n\t\tif (typeRangeControl === \"min\"){\r\n\t\t\trenderProperties.data.properties.displayName = \"From\";\r\n\t\t}else{\r\n\t\t\trenderProperties.data.properties.displayName = \"To\";\r\n\t\t}\r\n\r\n\t\treturn renderProperties;\r\n\t},\r\n\r\n\t/**\r\n\t * Render actual value of control and set events\r\n\t * @param data\r\n\t */\r\n\tsetDisplayValue: function(data) {\r\n\t\tvar self = this;\r\n\t\tvar control = self.getControl();\r\n\t}\r\n});","/*\r\n*   Name: BizAgi Tablet Column Decorator Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will redefine the column decorator class to adjust to tablet devices\r\n*/\r\n\r\n// Extends itself\r\nbizagi.rendering.columns.column.extend(\"bizagi.rendering.tablet.columns.column\", {}, {\r\n\r\n    /*\r\n    *   Apply custom overrides to each decorated instance\r\n    */\r\n    applyOverrides: function (decorated) {\r\n        // Hacks the getControl method in the decorated render to add features\r\n        if (decorated && decorated.getControl) {\r\n            this.originalGetControl = decorated.getControl;\r\n            decorated.getControl = this.getControl;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Template method to get the control element\r\n    *   This code runs under the decorated element context\r\n    */\r\n    getControl: function () {\r\n        var self = this;\r\n        var result = this._super();\r\n\r\n        if (!result || result.length == 0) {\r\n            result = $(self.element || self.observableElement);\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element \r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value, tableCell) {\r\n        var result = this._super(surrogateKey, value, tableCell);\r\n        var decorated = this.getDecorated(surrogateKey);\r\n        if (decorated.element) {\r\n            // Clean all display types\r\n            decorated.element.removeClass(\"ui-bizagi-render-display-normal ui-bizagi-render-display-vertical ui-bizagi-render-display-reversed\")\r\n                          .removeClass(\"ui-bizagi-render-display-vertical-reversed ui-bizagi-render-display-label ui-bizagi-render-display-value\");\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Returns the cell html to be inserted in the table\r\n    */\r\n   /* renderReadOnly: function (surrogateKey, value, tableCell) {\r\n        var self = this;\r\n        var decorated = this.getDecorated(surrogateKey);\r\n        var cell = this._super(surrogateKey, value, tableCell);\r\n\r\n        // Just draw render if the cell layout has been filled\r\n        if (cell && cell.length > 0) {\r\n\r\n            // Add display value\r\n            $(\".ui-bizagi-cell-readonly\", cell).html(decorated.getDisplayValue());\r\n\r\n            // Apply styles to cell\r\n            self.applyColumnStyles(cell);\r\n\r\n            // Return just content\r\n            return cell;\r\n        }\r\n\r\n        return \"\";\r\n    },*/\r\n\r\n    postRenderReadOnly: function (surrogateKey, cell) {\r\n\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var editable = self.properties.editable;\r\n        decorated.properties.editable = false;\r\n\r\n        if (decorated.grid == undefined) {\r\n            decorated.grid = self.grid;\r\n        }\r\n        if (self.properties.singleInstance) {\r\n            decorated.element = cell;\r\n        }\r\n        decorated.postRenderElement(cell);\r\n        decorated.properties.editable = editable;\r\n\r\n        /*var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Call base\r\n\r\n        // var decorated = this.getDecorated(surrogateKey);\r\n        this._super(key, cell);\r\n\r\n        // Just draw render if the cell layout has been filled\r\n        if (cell && cell.length > 0) {\r\n        var cellIcon = $(\".ui-bizagi-cell-icon\", cell);\r\n        if (!properties.editable) cellIcon.detach();\r\n\r\n        // Apply styles to cell\r\n        self.applyColumnStyles(cell);\r\n\r\n        if (properties.align == \"left\") {\r\n        cellIcon.addClass(\"ui-bizagi-cell-icon-right\");\r\n        }\r\n        }*/\r\n    },\r\n\r\n    /*\r\n    *   Apply column styles to a specified element\r\n    */\r\n    applyColumnStyles: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        element = $(element);\r\n        // Set cell alignment\r\n        element.css(\"-webkit-box-pack\", properties.align);\r\n\r\n        // Set cell back color\r\n        if (properties.textFormat.background) {\r\n            element.css(\"background-color\", properties.textFormat.background);\r\n            element.css(\"background-image\", \"none\");\r\n        }\r\n    }\r\n});","/*\r\n*   Name: BizAgi Tablet Column Decorator Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will redefine the column decorator class to adjust to tablet devices\r\n*/\r\n\r\n\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.combo\", {}, bizagi.rendering.columns.combo.prototype );\r\n// Extends itself\r\nbizagi.rendering.tablet.columns.combo.extend(\"bizagi.rendering.tablet.columns.combo\", {}, {\r\n    /*\r\n    *   Sets the internal value\r\n    */\r\n    setValue: function(surrogateKey, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        // Check is offline form\t    \r\n        var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\r\n\r\n        if (decorated === null) {\r\n            return;\r\n        }\r\n\r\n        // Perform default set value when rendering summary row\r\n        if (surrogateKey == \"summary\") return self._super(surrogateKey, value);\r\n\r\n        if(isOfflineForm && (typeof (value) == \"number\" || typeof (value) == \"string\")){\r\n            var newValue =  typeof (self.properties.data) == \"object\" ? self.properties.data.find(function(item){ return item.id == value }) : value;\r\n\r\n            self._super(surrogateKey, newValue);\r\n            decorated.selectedValue = value;\r\n        } else if (value && value.length > 0) {\r\n\r\n            // Create the value property\r\n            var newValue = {\r\n                id: value[0][0],\r\n                value: value[0].length > 2 ? $.grep(value[0], function (item, i) { return i != 0; }) : value[0][1]\r\n            };\r\n            // Call base\r\n            self._super(surrogateKey, newValue);\r\n            decorated.selectedValue = newValue.value;\r\n        } else if (value && value.id && value.value) {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value.value;\r\n        } else if (self.properties.type == \"columnRadio\") {\r\n            self._super(surrogateKey, null);\r\n            decorated.selectedValue = value;\r\n        } else if (value && typeof (value) == \"number\") {\r\n            self._super(surrogateKey, value);\r\n        } else if (isOfflineForm && (value !== null && typeof (value) === \"object\" && value.value)) {\r\n            self._super(surrogateKey, value.value);\r\n            decorated.selectedValue = value.value;\r\n        } else {\r\n            // Set null values when the entry array is null\r\n            self._super(surrogateKey, null);\r\n            decorated.selectedValue = \"\";\r\n        }\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Render Document Generator Extension\r\n *   Author: Bizagi UI Forms\r\n *   Comments:\r\n *   -   This script will redefine the document generator render class to adjust to tablet devices\r\n */\r\n\r\n// Extends itself\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.document\", {}, {\r\n\r\n    /**\r\n     * Apply custom overrides to each decorated instance\r\n     * @param decorated\r\n     */\r\n    applyOverrides: function (decorated) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        self._super(decorated);\r\n\r\n        if (mode !== \"design\") {\r\n            self.surrogateKey = decorated.surrogateKey;\r\n\r\n            decorated.getXpath = this.getXpath;\r\n            decorated.getDocumentXpath = this.getDocumentXpath;\r\n            decorated.getContextXpath = this.getContextXpath;\r\n            decorated.documentTemplateGenerate = this.documentTemplateGenerate;\r\n            decorated.preRenderControl = this.preRenderControl;\r\n            decorated.deleteDocumentTemplate = this.deleteDocumentTemplate;\r\n            decorated.properties.xpathContext = self.getContextXpath();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * This method tries to get the HTML template an render the current object inside\r\n     * @return {jQuery} $.Deferred()\r\n     */\r\n    renderControl: function () {\r\n        this.preRenderControl();\r\n\r\n        return this._super();\r\n    },\r\n\r\n    /**\r\n     * Creates the event of generation of templates.\r\n     */\r\n    documentTemplateGenerate: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        self.startLoading();\r\n\r\n        //Get the context xPath\r\n        properties.xpathcontext = self.getContextXpath();\r\n        properties.xpath = self.getDocumentXpath(properties.xpath);\r\n\r\n        var grid = self.parent;\r\n        var form = self.getFormContainer();\r\n\r\n        $.when(form.submitData()).done(function () {\r\n            $.when(self.dataService.generateDocumentTemplate(properties)).done(function (response) {\r\n                $.when(grid.refresh()).done(function () {\r\n                    self.autoOpenDocuments();\r\n                });\r\n\r\n                self.endLoading();\r\n            }).fail(function () {\r\n                self.showErrorMessage();\r\n                self.endLoading();\r\n            });\r\n        }).fail(function (message) {\r\n            // Add error messages\r\n            self.getFormContainer().addErrorMessage(message);\r\n            self.endLoading();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Apply custom overrides to each decorated instance\r\n     * @param xpath\r\n     * @returns {string}\r\n     */\r\n    getXpath: function (xpath) {\r\n        var xpathPath = xpath;\r\n        var index = xpathPath.indexOf(this.grid.properties.xpath);\r\n\r\n        if (index !== -1) {\r\n            xpathPath = xpathPath.substr(index + this.grid.properties.xpath.length + 1);\r\n        }\r\n\r\n        return this.grid.properties.xpath + \"[id=\" + this.surrogateKey + \"].\" + xpathPath;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @param xpath\r\n     * @returns {*|string}\r\n     */\r\n    getDocumentXpath: function (xpath) {\r\n        var xpathPath = xpath;\r\n        var index = xpathPath.indexOf(this.grid.properties.xpath);\r\n\r\n        if (index !== -1) {\r\n            xpathPath = xpathPath.substr(index + this.grid.properties.xpath.length + 1);\r\n        }\r\n\r\n        return xpathPath;\r\n    },\r\n\r\n    /**\r\n     * Post process the element after it has been rendered\r\n     * @param surrogateKey\r\n     * @param cell\r\n     * @param tableCell\r\n     */\r\n    postRenderReadOnly: function (surrogateKey, cell, tableCell) {\r\n        // Call base\r\n        this._super(surrogateKey, cell, tableCell);\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {string}\r\n     */\r\n    getContextXpath: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var xpathContext = (form.properties.xpathContext) ? form.properties.xpathContext + \".\" : \"\";\r\n        return xpathContext + this.grid.properties.xpath + \"[id=\" + this.surrogateKey + \"]\";\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    preRenderControl: function () {\r\n        if (this.value != undefined && this.properties.value != undefined) {\r\n            this.properties.value = this.value;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Creates the event of generation of templates.\r\n     * @param filename\r\n     */\r\n    deleteDocumentTemplate: function (filename) {\r\n        var self = this;\r\n        var grid = self.parent;\r\n        var params = {};\r\n\r\n        params.xpath = self.properties.xpath + \"[fileName='\" + filename + \"']\";\r\n        params.idRender = self.properties.id;\r\n        params.xpathContext = self.getContextXpath();\r\n        params.idPageCache = self.properties.idPageCache;\r\n\r\n        $.when(self.dataService.deleteUploadFile(params)).done(function () {\r\n            grid.refresh();\r\n        });\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Desktop Date Column Decorator Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will redefine the date column decorator class to adjust to desktop devices\r\n*/\r\n\r\n// Extends itself\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.date\", {}, {\r\n    /*\r\n    *   Apply custom overrides to each decorated instance\r\n    */\r\n    applyOverrides: function (decorated) {\r\n        this._super(decorated);\r\n    }   \r\n});","/*\r\n*   Name: BizAgi Tablet Text Column Decorator Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will redefine the text column decorator class to adjust to tablet devices\r\n*/\r\n\r\n// Extends from column\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.text\", {}, {});\r\n","/*\r\n*   Name: BizAgi Tablet Number Column Decorator Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will redefine the number column decorator class to adjust to tablet devices\r\n*/\r\n\r\n// Extends from column\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.number\", {}, {});\r\n","\r\n/*\r\n *   Name: Bizagi Column Rendering Tablet numberScientificNotation\r\n *   Author: Luis Cabarique - LuisCE\r\n *   Comments:\r\n *   -   This script will define a base class to define the Column Scientific number notation\r\n */\r\n\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.numberScientificNotation\", {}, {\r\n    /*\r\n     *   Post process the element after it has been rendered\r\n     */\r\n    postRender: function (surrogateKey, cell) {\r\n        // Call base\r\n        this._super(surrogateKey, cell);\r\n        // Apply styles to input\r\n        var input = $(\"input\", cell);\r\n        this.applyColumnStyles(input);\r\n    },\r\n\r\n    renderSummary: function (key, value) {\r\n        var self = this;\r\n        return self.renderReadOnly(key, value);\r\n    },\r\n\r\n    postRenderSummary: function (key, value) {\r\n        var self = this;\r\n        self.postRenderReadOnly(key, value);\r\n        return true;\r\n    }\r\n});","/**\r\n *   Name: Bizagi Tablet Column Decorator Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the column decorator class to adjust to tablet devices\r\n */\r\n\r\n// Extends itself\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.image\", {}, {\r\n\r\n    applyOverrides: function (decorated) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        this._super(decorated);\r\n\r\n        // decorated.getUploadXpath = this.getUploadXpath;\r\n        decorated.properties.xpathContext = properties.xpathContext.length > 0 ?\r\n                    properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + decorated.surrogateKey + \"]\" :\r\n                    self.grid.properties.xpath + \"[id=\" + decorated.surrogateKey + \"]\";\r\n    },\r\n\r\n    /*\r\n    *   Returns the xpath to be used  \r\n    */\r\n    /*getUploadXpath: function () {\r\n        return (this.grid.properties.xpath || this.properties.xpath ) + \"[id=\" + this.surrogateKey + \"].\" + this.properties.xpath;\r\n    }*/\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Tablet Text Column Decorator Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will redefine the text column decorator class to adjust to tablet devices\r\n*/\r\n\r\n// Extends from column\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.upload\", {}, {\r\n\r\n     applyOverrides: function (decorated) {\r\n        this._super(decorated);\r\n    \r\n        decorated.getUploadXpath = this.getUploadXpath;\r\n        // hack apply upload plugin method in order to execute it only when the control is inserted in the DOM\r\n         var originalMethod = decorated.applyUploadPlugin;\r\n\r\n            decorated.getXpathContext = function () {\r\n                var surrogateKey = this.surrogateKey || \"\";\r\n                var self = this;\r\n                var properties = self.properties;\r\n                return properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + self.surrogateKey + \"]\" : self.grid.properties.xpath + \"[id=\" + self.surrogateKey + \"]\";\r\n            };\r\n\r\n            decorated.buildItemUrl = function (file) {\r\n                var self = this;\r\n                var properties = self.properties;\r\n\r\n                var form = self.getFormContainer();\r\n                var xpathContext = self.getXpathContext();\r\n                var contextXpath = \"\";\r\n\r\n                return self.dataService.getUploadFileUrl({\r\n                    idRender: properties.id,\r\n                    xpath: properties.xpath,\r\n                    xpathContext: xpathContext,\r\n                    idPageCache: properties.idPageCache,\r\n                    fileId: file.id,\r\n                    sessionId: form.properties.sessionId,\r\n                    contexttype: properties.contexttype\r\n                });\r\n            };\r\n   },\r\n\r\n   getUploadXpath: function () {\r\n        return this.grid.properties.xpath + \"[id=\" + this.surrogateKey + \"].\" + this.properties.xpath;\r\n    }\r\n    \r\n});\r\n","/**\r\n *   Name: Bizagi Tablet Link Column Decorator Extension\r\n *   Author: Bizagi UI Forms\r\n *   Comments:\r\n *   -   This script will redefine the link column decorator class to adjust to tablet devices\r\n */\r\n\r\n// Extends from column\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.link\", {}, {\r\n\r\n    applyOverrides: function (decorated) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        self._super(decorated);\r\n\r\n        if (mode !== \"design\" && mode !== \"layout\") {\r\n            self.surrogateKey = decorated.surrogateKey;\r\n\r\n            decorated.getXpath = self.getXpath;\r\n            decorated.properties.xpathContext = self.grid.properties.xpath + \"[id=\" + self.surrogateKey + \"]\";\r\n\r\n            if (self.grid.properties.xpathContext && decorated.properties.xpathContext.indexOf(self.grid.properties.xpathContext) === -1)\r\n                decorated.properties.xpathContext = self.grid.properties.xpathContext + \".\" + decorated.properties.xpathContext;\r\n        }\r\n\r\n        if (decorated.properties.type === \"columnFormLink\") {\r\n            decorated.getFormLinkXpath = this.getFormLinkXpath;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Apply custom overrides to each decorated instance\r\n     * @param xpath\r\n     * @returns {string}\r\n     */\r\n    getXpath: function (xpath) {\r\n        var self = this;\r\n        var xpathPath = xpath;\r\n        var index = xpathPath.indexOf(self.grid.properties.xpath);\r\n\r\n        if (index !== -1) {\r\n            xpathPath = xpathPath.substr(index + self.grid.properties.xpath.length + 1);\r\n        }\r\n\r\n        return self.grid.properties.xpath + \"[id=\" + self.surrogateKey + \"].\" + xpathPath;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {string}\r\n     */\r\n    getContextXpath: function () {\r\n        return this.grid.properties.xpath + \"[id=\" + this.surrogateKey + \"]\";\r\n    },\r\n\r\n    /**\r\n     * Get Form Link xpath to use\r\n     * @returns {*}\r\n     */\r\n    getFormLinkXpath: function () {\r\n        // Calculate layout properties to maximized property\r\n        this.properties.maximized = bizagi.util.parseBoolean(this.properties.maximized) != null ? bizagi.util.parseBoolean(this.properties.maximized) : false;\r\n        this.calculateInitialLayoutProperties();\r\n\r\n        if (!this.properties.xpath) return;\r\n        return this.properties.xpath;\r\n    }\r\n});\r\n","/*\r\n*   Name: BizAgi Desktop Text Column Decorator Extension\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will redefine the text column decorator class to adjust to desktop devices\r\n*/\r\n\r\n// Extends from column\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.uploadecm\", {}, {\r\n    /*\r\n    *   Apply custom overrides to each decorated instance\r\n    */\r\n    applyOverrides: function(decorated) {\r\n        var self = this;\r\n        self._super(decorated);\r\n\r\n        if (decorated && decorated.getControl) {\r\n            self.originalGetControl = decorated.getControl;\r\n            decorated.getControl = self.getControl;\r\n        }\r\n\r\n        decorated.getUploadXpath = this.getUploadXpath;\r\n\r\n        decorated.buildItemUrl = function(file) {\r\n            var self = this;\r\n            var properties = self.properties;\r\n\r\n            var form = self.getFormContainer();\r\n\r\n            var columnXpath = self.getUploadXpath(self.surrogateKey);\r\n            columnXpath = columnXpath.split(\".\");\r\n            var nameFile = columnXpath[columnXpath.length - 1];\r\n            var xpathContext = self.getXpathContext(self.surrogateKey);\r\n\r\n            return self.dataService.getUploadFileUrl({\r\n                idRender: properties.id,\r\n                xpath: nameFile,\r\n                xpathContext: xpathContext,\r\n                idPageCache: properties.idPageCache,\r\n                fileId: file.idFileUpload,\r\n                sessionId: form.properties.sessionId,\r\n                contexttype: properties.contexttype\r\n            });\r\n        };\r\n\r\n        decorated.getXpathContext = function() {\r\n            var self = this;\r\n            var properties = self.properties;\r\n            return properties.xpathContext.length > 0\r\n                ? properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + self.surrogateKey + \"]\"\r\n                : self.grid.properties.xpath + \"[id=\" + self.surrogateKey + \"]\";\r\n        };\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element when the element is read-only\r\n    */\r\n    renderReadOnly: function(surrogateKey, value) {\r\n        var self = this;\r\n        var cell = \"<div></div>\";\r\n\r\n        var decorated = this.getDecorated(surrogateKey);\r\n        decorated.setValue(value);\r\n        self.setValue(surrogateKey, value);\r\n        self.setSurrogateKey(surrogateKey);\r\n\r\n        self.applyOverrides(decorated);\r\n        // Set grid and id references to the control in order to render the content\r\n        decorated.grid = this.grid;\r\n        decorated.column = this;\r\n        decorated.surrogateKey = surrogateKey;\r\n\r\n        // Set ready deferred\r\n        self.readyDeferred = new $.Deferred();\r\n\r\n        // We need to render the inner control as read-only\r\n        if (decorated.files.length > 0) {\r\n            // Changes editable to false to render read-only\r\n            var editable = this.properties.editable;\r\n            decorated.properties.editable = false;\r\n            cell = decorated.render(\"cell.upload\");\r\n        }\r\n        return cell;\r\n    },\r\n\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    getUploadXpath: function(surrogateKey) {\r\n        surrogateKey = this.surrogateKey || surrogateKey || \"\";\r\n        return this.grid.properties.xpath + \"[id=\" + surrogateKey + \"].\" + this.properties.xpath;\r\n    },\r\n\r\n    getControl: function() {\r\n        var self = this;\r\n        var result = self._super();\r\n        //TODO: Tablet validar si esto es realmente necesario asi como esta\r\n        if (!result || result.length == 0) {\r\n            return $(\".ui-bizagi-cell-readonly\", self.element || self.observableElement);\r\n        } else {\r\n            return $(\".ui-bizagi-render-control\", self.element || self.observableElement);\r\n        }\r\n    }\r\n\r\n});\r\n","/**\r\n* Grid control Column Button\r\n*\r\n* @author Ricardo Pérez\r\n*/\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.button\", {}, {\r\n\r\n});","/*\r\n*   Name: BizAgi Tablet Radio Column Decorator Extension\r\n*   Author: Richar Urbano\r\n*   Comments:\r\n*   -   This script will redefine the text column decorator class to adjust to tablet devices\r\n*/\r\n\r\n// Extends from column\r\nbizagi.rendering.tablet.columns.combo.extend(\"bizagi.rendering.tablet.columns.radio\", {}, {});\r\n","/**\r\n *   Name: Bizagi Tablet Column Decorator Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the column decorator class to adjust to tablet devices\r\n */\r\n\r\n// Extends itself\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.search\", {}, bizagi.rendering.columns.search.prototype );\r\n// Extends itself\r\nbizagi.rendering.tablet.columns.search.extend(\"bizagi.rendering.tablet.columns.search\", {}, {\r\n\r\n    renderReadOnly: function (surrogateKey, value) {\r\n\r\n        if (value && value.length > 0) {\r\n            value = [].concat(value[0]);\r\n            return this._super(surrogateKey, {\r\n                id: value[0],\r\n                label: value[1],\r\n                additionallabel: value[2] || undefined\r\n            });\r\n        } else {\r\n            return this._super(surrogateKey, value);\r\n        }\r\n\r\n    },\r\n\r\n   render: function (surrogateKey, value) {\r\n    var self = this;\r\n    if (value && value.length > 0) {\r\n        value = [].concat(value[0]);\r\n        return self._super(surrogateKey, {\r\n            id: value[0],\r\n            label: value[1],\r\n            additionallabel: value[2] || undefined\r\n        });\r\n    }\r\n    else {\r\n        return self._super(surrogateKey, value);\r\n    }\r\n}\r\n\r\n});","/*\r\n*   Name: BizAgi Tablet Column Decorator Extension\r\n*   Author: RicharU\r\n*   Comments:\r\n*   -   This script will redefine the column decorator class to adjust to tablet devices\r\n*/\r\n\r\n// Extends itself\r\nbizagi.rendering.tablet.columns.combo.extend(\"bizagi.rendering.tablet.columns.list\", {}, {});\r\n","/*\r\n*   Name: BizAgi tablet exclusiveCheck Column Decorator Extension\r\n*   Author: RicharU\r\n*   Comments:\r\n*   -   This script will redefine the check column to adjust to tablet devices\r\n*/\r\n\r\n// Extends from column\r\nbizagi.rendering.tablet.columns.column.extend(\"bizagi.rendering.tablet.columns.exclusiveCheck\", {}, {});","/**\r\n *   Name: Bizagi Tablet Render Factory\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a render factory to create tablet versions of each render type\r\n */\r\n\r\nbizagi.rendering.base.factory.extend(\"bizagi.rendering.tablet.factory\", {}, {\r\n\r\n    /**\r\n     * Load all the templates used for rendering     \r\n     */\r\n    loadTemplates: function () {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        $.when(\r\n\r\n            // Icons\r\n            self.loadTemplate(\"icons\", self.getFileTemplate(\"common.bizagi.rendering.icons\")),\r\n\r\n            // Common\r\n            self.loadTemplate(\"form-error\", self.getFileTemplate(\"bizagi.rendering.tablet.form-error\")),\r\n        \tself.loadTemplate(\"form-waiting\", self.getFileTemplate(\"bizagi.rendering.tablet.form-waiting\")),\r\n\r\n            // Containers\r\n            self.loadTemplate(\"form\", self.getFileTemplate(\"bizagi.rendering.tablet.form\") + \"#bz-form-container\"),\r\n            self.loadTemplate(\"complexgateway\", self.getFileTemplate(\"bizagi.rendering.tablet.form\") + \"#bz-form-complex-gateway\"),\r\n\r\n            self.loadTemplate(\"panel\", self.getFileTemplate(\"bizagi.rendering.tablet.panel\")),\r\n            self.loadTemplate(\"tab\", self.getFileTemplate(\"bizagi.rendering.tablet.tab\")),\r\n            self.loadTemplate(\"tabItem\", self.getFileTemplate(\"bizagi.rendering.tablet.tabItem\")),\r\n            self.loadTemplate(\"horizontal\", self.getFileTemplate(\"bizagi.rendering.tablet.horizontal\")),\r\n            self.loadTemplate(\"accordion\", self.getFileTemplate(\"bizagi.rendering.tablet.accordion\")),\r\n            self.loadTemplate(\"accordionItem\", self.getFileTemplate(\"bizagi.rendering.tablet.accordionItem\")),\r\n            self.loadTemplate(\"group\", self.getFileTemplate(\"bizagi.rendering.tablet.group\")),\r\n            self.loadTemplate(\"searchForm\", self.getFileTemplate(\"bizagi.rendering.tablet.searchForm\")),\r\n            self.loadTemplate(\"contentPanel\", self.getFileTemplate(\"bizagi.rendering.tablet.contentPanel\")),\r\n\r\n            // Renders\r\n            self.loadTemplate(\"render\", self.getFileTemplate(\"bizagi.rendering.tablet.render\")),\r\n            self.loadTemplate(\"readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.readonly\")),\r\n            self.loadTemplate(\"text\", self.getFileTemplate(\"bizagi.rendering.tablet.text\")+ \"#bz-render-text\"),\r\n            self.loadTemplate(\"text-readOnly\", self.getFileTemplate(\"bizagi.rendering.tablet.text\")+ \"#bz-render-text-readonly\"),\r\n            self.loadTemplate(\"extendedText\", self.getFileTemplate(\"bizagi.rendering.tablet.extendedText\") + \"#bz-render-extended-text\"),\r\n            self.loadTemplate(\"extendedText-readOnly\", self.getFileTemplate(\"bizagi.rendering.tablet.extendedText\") + \"#bz-render-extended-text-readonly\"),\r\n\r\n            self.loadTemplate(\"number\", self.getFileTemplate(\"bizagi.rendering.tablet.number\")),\r\n            self.loadTemplate(\"numberScientificNotation\", self.getFileTemplate(\"bizagi.rendering.tablet.numberScientificNotation\")),\r\n            self.loadTemplate(\"date\", self.getFileTemplate(\"bizagi.rendering.tablet.date\")),\r\n            self.loadTemplate(\"yesno\", self.getFileTemplate(\"bizagi.rendering.tablet.yesno\")),\r\n            self.loadTemplate(\"check\", self.getFileTemplate(\"bizagi.rendering.tablet.check\")),\r\n            self.loadTemplate(\"checkList\", self.getFileTemplate(\"bizagi.rendering.tablet.checkList\")),\r\n            \r\n            self.loadTemplate(\"combo\", self.getFileTemplate(\"bizagi.rendering.tablet.combo\") + \"#bz-combo-control\"),\r\n            self.loadTemplate(\"combo-readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.combo\") + \"#bz-combo-control-readonly\"),\r\n            self.loadTemplate(\"combo-list\", self.getFileTemplate(\"bizagi.rendering.tablet.combo\") + \"#bz-combo-control-list\"), \r\n\r\n            self.loadTemplate(\"modal-header-search\", self.getFileTemplate(\"bizagi.rendering.tablet.modal\") + \"#bz-modal-view-header-search\"), \r\n            self.loadTemplate(\"modal-footer-done\", self.getFileTemplate(\"bizagi.rendering.tablet.modal\") + \"#bz-modal-view-footer-done\"),             \r\n\r\n            self.loadTemplate(\"list\", self.getFileTemplate(\"bizagi.rendering.tablet.list\") + \"#bz-render-list\"),            \r\n            self.loadTemplate(\"list-items\", self.getFileTemplate(\"bizagi.rendering.tablet.list\") + \"#bz-render-list-items\"),\r\n\r\n            self.loadTemplate(\"radio\", self.getFileTemplate(\"bizagi.rendering.tablet.radio\")),            \r\n\r\n            self.loadTemplate(\"image\", self.getFileTemplate(\"bizagi.rendering.tablet.image\") + \"#bz-render-image\"),\r\n            self.loadTemplate(\"image-item\", self.getFileTemplate(\"bizagi.rendering.tablet.image\") + \"#bz-render-image-item\"),\r\n            self.loadTemplate(\"image-preview\", self.getFileTemplate(\"bizagi.rendering.tablet.image\") + \"#bz-render-image-preview\"),\r\n            self.loadTemplate(\"image-readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.image\") + \"#bz-render-image-readonly\"),\r\n            \r\n            self.loadTemplate(\"uploadSlide\", self.getFileTemplate(\"bizagi.rendering.tablet.slide.upload\")),\r\n\r\n            self.loadTemplate(\"upload\", self.getFileTemplate(\"bizagi.rendering.tablet.upload\") + \"#bz-render-upload\"),\r\n            self.loadTemplate(\"upload-item\", self.getFileTemplate(\"bizagi.rendering.tablet.upload\") + \"#bz-render-upload-item\"),\r\n            self.loadTemplate(\"upload-readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.upload\") + \"#bz-render-upload-readonly\"),\r\n\r\n            self.loadTemplate(\"grid\", self.getFileTemplate(\"bizagi.rendering.tablet.grid\")),\r\n            self.loadTemplate(\"cell\", self.getFileTemplate(\"bizagi.rendering.tablet.cell\")),\r\n        \tself.loadTemplate(\"cell.readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.cell.readonly\")),\r\n            self.loadTemplate(\"cell.upload\", self.getFileTemplate(\"bizagi.rendering.tablet.cell.upload\")),\r\n            \r\n            self.loadTemplate(\"search\", self.getFileTemplate(\"bizagi.rendering.tablet.search\") + \"#bz-render-search\"),\r\n            self.loadTemplate(\"search.item\", self.getFileTemplate(\"bizagi.rendering.tablet.search\") + \"#bz-render-search-item\"),\r\n            self.loadTemplate(\"search.items\", self.getFileTemplate(\"bizagi.rendering.tablet.search\") + \"#bz-render-search-items\"),      \r\n\r\n            self.loadTemplate(\"searchItem\", self.getFileTemplate(\"bizagi.rendering.tablet.searchItem\")),\r\n\r\n            self.loadTemplate('searchList', self.getFileTemplate('bizagi.rendering.tablet.searchList') + \"#bz-render-search-list\"),\r\n            self.loadTemplate(\"searchList.item\", self.getFileTemplate(\"bizagi.rendering.tablet.searchList\") + \"#bz-render-search-list-item\"),\r\n            self.loadTemplate(\"searchList.items\", self.getFileTemplate(\"bizagi.rendering.tablet.searchList\") + \"#bz-render-search-list-items\"),            \r\n            self.loadTemplate(\"searchList.actions\", self.getFileTemplate(\"bizagi.rendering.tablet.searchList\") + \"#bz-render-search-list-actions\"),\r\n            self.loadTemplate(\"searchList.tag\", self.getFileTemplate(\"bizagi.rendering.tablet.searchList\") + \"#bz-render-search-list-tag\"),\r\n            self.loadTemplate(\"searchList.readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.searchList\") + \"#bz-render-search-list-readonly\"),\r\n            self.loadTemplate(\"searchList-modal-header\", self.getFileTemplate(\"bizagi.rendering.tablet.searchList\") + \"#bz-render-search-list-modal-header\"),\r\n            \r\n            self.loadTemplate(\"letter\", self.getFileTemplate(\"bizagi.rendering.tablet.letter\")),\r\n            self.loadTemplate(\"letter.readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.letter.readonly\")),\r\n            self.loadTemplate(\"letter.dialog\", self.getFileTemplate(\"bizagi.rendering.tablet.dialog-letter\")),\r\n            self.loadTemplate(\"button\", self.getFileTemplate(\"bizagi.rendering.tablet.button\")),\r\n            self.loadTemplate(\"link\", self.getFileTemplate(\"bizagi.rendering.tablet.link\")),\r\n            self.loadTemplate(\"formLink\", self.getFileTemplate(\"bizagi.rendering.tablet.formLink\")),\r\n            self.loadTemplate(\"geolocation\", self.getFileTemplate(\"bizagi.rendering.tablet.geolocation\")),\r\n            self.loadTemplate('association', self.getFileTemplate('bizagi.rendering.tablet.association')),\r\n\r\n            self.loadTemplate(\"ecm\", self.getFileTemplate(\"bizagi.rendering.tablet.ecm\") + \"#bz-render-ecm\"),\r\n            self.loadTemplate(\"ecm-item\", self.getFileTemplate(\"bizagi.rendering.tablet.ecm\") + \"#bz-render-ecm-item\"),\r\n            self.loadTemplate(\"ecm-readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.ecm\") + \"#bz-render-ecm-readonly\"),\r\n\r\n            self.loadTemplate(\"list-multiselect\", self.getFileTemplate(\"bizagi.rendering.tablet.multiSelect\") + \"#bz-multiselect\"),\r\n            self.loadTemplate(\"multiselect-list\", self.getFileTemplate(\"bizagi.rendering.tablet.multiSelect\") + \"#bz-multiselect-list\"),\r\n\r\n            self.loadTemplate(\"document\", self.getFileTemplate(\"bizagi.rendering.tablet.document\") + \"#bz-document-generator\"),\r\n            self.loadTemplate(\"document-item\", self.getFileTemplate(\"bizagi.rendering.tablet.document\") + \"#bz-document-generator-item\"),\r\n            self.loadTemplate(\"document-readonly\", self.getFileTemplate(\"bizagi.rendering.tablet.document\") + \"#bz-document-generator-readonly\"),\r\n            self.loadTemplate(\"document-download\", self.getFileTemplate(\"bizagi.rendering.tablet.document\") + \"#bz-document-generator-download\"),\r\n\r\n            // Action launcher\r\n            self.loadTemplate(\"render-actionLauncher\", self.getFileTemplate(\"bizagi.rendering.tablet.actionLauncher\") + \"#bz-rendering-actionLauncher\"),\r\n            self.loadTemplate(\"render-actionLauncher-horizontal\", self.getFileTemplate(\"bizagi.rendering.tablet.actionLauncher\") + \"#bz-rendering-actionLauncher-horizontal\"),\r\n            self.loadTemplate(\"render-actionLauncher-vertical\", self.getFileTemplate(\"bizagi.rendering.tablet.actionLauncher\") + \"#bz-rendering-actionLauncher-vertical\"),\r\n            self.loadTemplate(\"render-actionLauncher-actions-to-execute\", self.getFileTemplate(\"bizagi.rendering.tablet.actionLauncher\") + \"#bz-rendering-actionLauncher-actions-to-execute\"),\r\n            self.loadTemplate(\"render-actionLauncher-design\", self.getFileTemplate(\"bizagi.rendering.tablet.actionLauncher\") + \"#bz-rendering-actionLauncher-design\"),\r\n\r\n            // Polymorphic launcher\r\n            self.loadTemplate(\"render-polymorphicLauncher\", self.getFileTemplate(\"bizagi.rendering.tablet.polymorphicLauncher\") + \"#bz-rendering-polymorphicLauncher\"),\r\n            self.loadTemplate(\"render-polymorphicLauncher-vertical-tree\", self.getFileTemplate(\"bizagi.rendering.tablet.polymorphicLauncher\") + \"#bz-rendering-polymorphicLauncher-vertical-tree\"),\r\n            self.loadTemplate(\"render-polymorphicLauncher-vertical-tree-item\", self.getFileTemplate(\"bizagi.rendering.tablet.polymorphicLauncher\") + \"#bz-rendering-polymorphicLauncher-vertical-tree-item\"),\r\n            self.loadTemplate(\"render-polymorphicLauncher-actions-to-execute\", self.getFileTemplate(\"bizagi.rendering.tablet.polymorphicLauncher\") + \"#bz-rendering-polymorphicLauncher-actions-to-execute\"),\r\n            self.loadTemplate(\"render-polymorphicLauncher-confirm\", self.getFileTemplate(\"bizagi.rendering.tablet.polymorphicLauncher\") + \"#bz-rendering-polymorphicLauncher-confirm\"),\r\n            self.loadTemplate(\"render-polymorphicLauncher-design\", self.getFileTemplate(\"bizagi.rendering.tablet.polymorphicLauncher\") + \"#bz-rendering-polymorphicLauncher-design\"),\r\n\r\n            //Renders Layouts\r\n            self.loadTemplate(\"render-layout\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.render\")),\r\n            self.loadTemplate(\"layout-image\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.image\") + \"#ui-bizagi-render-layout-image\"),\r\n            self.loadTemplate(\"layout-image64\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.image\") + \"#ui-bizagi-render-layout-image64\"),\r\n            self.loadTemplate(\"layout-label\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.label\")),\r\n            self.loadTemplate(\"layout-link\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.link\")),\r\n            self.loadTemplate(\"layout-text\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.text\")),\r\n            self.loadTemplate(\"layout-date-time\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.dateTime\")),\r\n            self.loadTemplate(\"layout-money\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.money\")),\r\n            self.loadTemplate(\"layout-number\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.number\")),\r\n            self.loadTemplate(\"layout-upload\", self.getFileTemplate(\"bizagi.rendering.tablet.layout.upload\")),\r\n             \r\n            // Grid plugin stuff\r\n            self.loadTemplate(\"bizagi.grid.grid\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid\"),\r\n            self.loadTemplate(\"bizagi.grid.waiting\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-waiting\"),\r\n            self.loadTemplate(\"bizagi.grid.table\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-table\"),\r\n            self.loadTemplate(\"bizagi.grid.table.empty\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-table-empty\"),\r\n            self.loadTemplate(\"bizagi.grid.column\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-column\"),\r\n            self.loadTemplate(\"bizagi.grid.column.special\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-column-special\"),\r\n            self.loadTemplate(\"bizagi.grid.row\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-row\"),\r\n            self.loadTemplate(\"bizagi.grid.row.buttons\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-row-buttons\"),\r\n            self.loadTemplate(\"bizagi.grid.cell\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-cell\"),\r\n            self.loadTemplate(\"bizagi.grid.cell.special\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-cell-special\"),\r\n            self.loadTemplate(\"bizagi.grid.pager\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-pager\"),\r\n            self.loadTemplate(\"bizagi.grid.buttons\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-buttons\"),\r\n            self.loadTemplate(\"bizagi.grid.dynamicpager\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-dynamic-pager\"),\r\n            self.loadTemplate(\"bizagi.grid.totalizer\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#ui-bizagi-grid-totalizer\"),\r\n\r\n            // Grid Offline\r\n            self.loadTemplate(\"bizagi.grid.offline.buttons\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#bz-grid-offline-buttons\"),\r\n            self.loadTemplate(\"bizagi.grid.offline.row.buttons\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#bz-grid-offline-row-buttons\"),\r\n            self.loadTemplate(\"bizagi.grid.offline.cell.special\", self.getFileTemplate(\"bizagi.rendering.tablet.grid.component\") + \"#bz-grid-offline-cell-special\")\r\n\r\n        ).done(function () {\r\n            var tmplIcons = $.fasttmpl(self.getTemplate(\"icons\"));\r\n            var svgStoreCounter = $(\"head\").find('#genome-forms-icons').length;\r\n\r\n            if (svgStoreCounter === 0)\r\n                $(\"head\").append(tmplIcons);\r\n\r\n            // Resolve when all templates are loaded\r\n            defer.resolve();\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    getFileTemplate: function(src, onDemand){\r\n        var device = bizagi.detectDevice();\r\n        return bizagi.getTemplate(src, onDemand, device == \"desktop\" ? \"tablet_ios\" : device);\r\n    },\r\n    /**\r\n     * Returns the appropiate container based on the container type    \r\n     */\r\n    getContainer: function (params) {\r\n        var self = this;\r\n        var type = params.type;        \r\n        var containerParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        type = type.replace(/tablet/, '');    \r\n\r\n        if (type == \"form\")\r\n            return new bizagi.rendering.tablet.form(containerParams);\r\n\r\n        if (type == \"template\")\r\n            return new bizagi.rendering.tablet.formTemplate(containerParams);\r\n\r\n        if (type == \"queryForm\")\r\n            return new bizagi.rendering.tablet.queryForm(containerParams);\r\n\r\n        if (type == \"layout\")\r\n            return new bizagi.rendering.tablet.layout(containerParams);\r\n\r\n        if (type == \"usersForm\")\r\n            return new bizagi.rendering.tablet.usersForm(containerParams);\r\n\r\n        if (type == \"panel\")\r\n            return new bizagi.rendering.tablet.panel(containerParams);\r\n\r\n        if (type == \"contentPanel\" || type == \"contentpanel\")\r\n            return new bizagi.rendering.tablet.contentPanel(containerParams);\r\n\r\n        if (type == \"nestedForm\")\r\n            return new bizagi.rendering.tablet.nestedForm(containerParams);\r\n\r\n        if (type == \"tab\")\r\n            return new bizagi.rendering.tablet.tab(containerParams);\r\n\r\n        if (type == \"tabItem\" || type == \"tabitem\")\r\n            return new bizagi.rendering.tablet.tabItem(containerParams);\r\n\r\n        if (type == \"horizontal\")\r\n            return new bizagi.rendering.tablet.horizontal(containerParams);\r\n\r\n        if (type == \"accordion\")\r\n            return new bizagi.rendering.tablet.accordion(containerParams);\r\n\r\n        if (type == \"accordionItem\")\r\n            return new bizagi.rendering.tablet.accordionItem(containerParams);\r\n\r\n        if (type == \"group\")\r\n            return new bizagi.rendering.tablet.group(containerParams);\r\n\r\n        if (type == \"searchForm\") {\r\n            containerParams.context = \"search\";\r\n            containerParams.contexttype = \"metadata\";\r\n            return new bizagi.rendering.tablet.searchForm(containerParams);\r\n        }\r\n\r\n        if (type == \"mobileform\")\r\n            return new bizagi.rendering.mobileform(containerParams);\r\n\r\n        if (type == \"mobilegroup\")\r\n            return new bizagi.rendering.mobilegroup(containerParams);       \r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", params.data, \"error\");\r\n\r\n        return null;\r\n    },   \r\n\r\n    /**\r\n     * Returns the appropiate column based on the render type     \r\n     */\r\n    getColumn: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var columnParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService,\r\n            singleInstance: bizagi.util.isEmpty(params.singleInstance) ? true : params.singleInstance\r\n        });\r\n\r\n        type = type.replace(/tablet/, '');    \r\n\r\n        if (type == \"columnText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                columnParams.decorated = bizagi.rendering.tablet.extendedText;\r\n            } else {\r\n                // Creates one normal text render\r\n                columnParams.decorated = bizagi.rendering.tablet.text;\r\n            }\r\n\r\n            return new bizagi.rendering.tablet.columns.text(columnParams);\r\n        }\r\n\r\n        if (type == \"columnSearchList\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.searchList;\r\n            return new bizagi.rendering.tablet.columns.searchList(columnParams);\r\n        }\r\n\r\n        if (type == \"columnNumber\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.number;\r\n            return new bizagi.rendering.tablet.columns.number(columnParams);\r\n        }\r\n\r\n        if (type == \"columnMoney\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.money;\r\n            return new bizagi.rendering.tablet.columns.number(columnParams);\r\n        }\r\n\r\n        if (type == \"columnDate\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.date;\r\n            return new bizagi.rendering.tablet.columns.date(columnParams);\r\n        }\r\n\r\n        if (type == \"columnBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                columnParams.decorated = bizagi.rendering.tablet.check;\r\n                if (params.data.properties.isExclusive) {\r\n                    return new bizagi.rendering.tablet.columns.exclusiveCheck(columnParams);\r\n                }\r\n            } else {\r\n                // Creates one yes-no render\r\n                columnParams.decorated = bizagi.rendering.tablet.yesno;\r\n            }\r\n            return new bizagi.rendering.tablet.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnCombo\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.combo;\r\n            return new bizagi.rendering.tablet.columns.combo(columnParams);\r\n        }\r\n\r\n        if (type == \"columnRadio\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.radio;\r\n            return new bizagi.rendering.tablet.columns.radio(columnParams);\r\n        }\r\n\r\n        if (type == \"columnList\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.list;\r\n            return new bizagi.rendering.tablet.columns.list(columnParams);\r\n        }\r\n\r\n        if (type == \"columnHidden\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.hidden;\r\n            return new bizagi.rendering.tablet.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUpload\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.upload;\r\n            return new bizagi.rendering.tablet.columns.upload(columnParams);\r\n        }\r\n\r\n        if (type == \"columnImage\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.image;\r\n            return new bizagi.rendering.tablet.columns.image(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUploadEcm\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.ecm;\r\n            return new bizagi.rendering.tablet.columns.uploadecm(columnParams);\r\n        }\r\n\r\n        if (type == \"columnLink\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.link;\r\n            return new bizagi.rendering.tablet.columns.link(columnParams);\r\n        }\r\n\r\n        if (type == \"columnFormLink\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.formLink;\r\n            return new bizagi.rendering.tablet.columns.link(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUserfield\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.userfieldWrapper;\r\n            return new bizagi.rendering.tablet.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnSearch\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.search;\r\n            return new bizagi.rendering.tablet.columns.search(columnParams);\r\n        }\r\n\r\n        if (type == \"columnLabel\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.label;\r\n            return new bizagi.rendering.tablet.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnReadonly\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.label;\r\n            return new bizagi.rendering.tablet.columns.readonly(columnParams);\r\n        }\r\n\r\n        if (type == \"columnDocument\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.document;\r\n            return new bizagi.rendering.tablet.columns.document(columnParams);\r\n        }\r\n\r\n        /*\r\n        Not supported\r\n         if (type == \"columnLetter\") {\r\n            columnParams.decorated = bizagi.rendering.letter;\r\n            return new bizagi.rendering.columns.letter(columnParams);\r\n        } */\r\n\r\n        if (type == \"columnButton\") {\r\n            columnParams.decorated = bizagi.rendering.tablet.button;\r\n            return new bizagi.rendering.tablet.columns.button(columnParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n\r\n    getRender: function (params) {\r\n        var self = this;\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var properties = data.properties;\r\n        var renderParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        // Check is offline form        \r\n        var isOfflineForm = bizagi.util.isOfflineForm({ container: params.parent });\r\n\r\n        if (!type)\r\n            type = \"label\";\r\n\r\n        type = type.replace(/tablet/, '');        \r\n\r\n        if (type == \"text\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            // Creates one extended render\r\n            if (isExtended) {\r\n                return new bizagi.rendering.tablet.extendedText(renderParams);\r\n            }\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.tablet.text(renderParams);\r\n        }\r\n\r\n        if (type == \"association\") {\r\n            return new bizagi.rendering.tablet.association(renderParams);\r\n        }\r\n\r\n        if (type == \"label\") {\r\n            return new bizagi.rendering.tablet.label(renderParams);\r\n        }\r\n\r\n        if (type == \"hidden\") {\r\n            return new bizagi.rendering.tablet.hidden(renderParams);\r\n        }\r\n\r\n        if (type == \"number\") {\r\n            // Number Scientific Notation\r\n            if (properties && properties.dataType === 29) {\r\n                return new bizagi.rendering.tablet.numberScientificNotation(renderParams);\r\n            }\r\n\r\n            return new bizagi.rendering.tablet.number(renderParams);\r\n        }\r\n\r\n        if (type == \"money\") {\r\n            return new bizagi.rendering.tablet.money(renderParams);\r\n        }\r\n\r\n        if (type == \"date\") {\r\n            return new bizagi.rendering.tablet.date(renderParams);\r\n        }\r\n\r\n        if (type == \"boolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            // Creates one check render\r\n            if (display == \"check\") {\r\n                return new bizagi.rendering.tablet.check(renderParams);\r\n            }\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.tablet.yesno(renderParams);\r\n        }\r\n\r\n        if (type == \"combo\") {\r\n            return new bizagi.rendering.tablet.combo(renderParams);\r\n        }\r\n\r\n        if (/^cascadingcombo$/i.test(type)) {\r\n            return new bizagi.rendering.tablet.cascadingCombo(renderParams);\r\n        }\r\n\r\n        if (type == \"list\") {\r\n            return new bizagi.rendering.tablet.list(renderParams);\r\n        }\r\n\r\n        if (type == \"radio\") {\r\n            return new bizagi.rendering.tablet.radio(renderParams);\r\n        }\r\n\r\n        if (type == \"image\") {\r\n            if( isOfflineForm && !bizagi.util.isOfflineFormsV2Supported()){\r\n                return new bizagi.rendering.tablet.image.old(renderParams);\r\n            } \r\n            else {\r\n                return new bizagi.rendering.tablet.image(renderParams);\r\n            }\r\n            \r\n        }\r\n\r\n        if (type == \"uploadecm\") {\r\n            return new bizagi.rendering.tablet.ecm(renderParams);\r\n        }\r\n\r\n        if (type == \"upload\") {\r\n            // Review the offline status or context              \r\n            if (isOfflineForm) {\r\n                if(!bizagi.util.isOfflineFormsV2Supported()){\r\n                    return new bizagi.rendering.tablet.upload.offline.old(renderParams);\r\n                }\r\n                else{\r\n                    return new bizagi.rendering.tablet.upload.offline(renderParams);\r\n                }\r\n            } else {\r\n                return new bizagi.rendering.tablet.upload(renderParams);\r\n            }\r\n        }\r\n\r\n        if (type == \"grid\") {\r\n            // Review the offline status or context             \r\n            if (isOfflineForm) {\r\n                if(!bizagi.util.isOfflineFormsV2Supported()){\r\n                    return new bizagi.rendering.tablet.grid.offline.old(renderParams);\r\n                }\r\n                else{\r\n                    return new bizagi.rendering.tablet.grid.offline(renderParams);\r\n                }\r\n            } else {\r\n                return new bizagi.rendering.tablet.grid(renderParams);\r\n            }\r\n        }\r\n\r\n        if (type == \"groupedgrid\") {\r\n            // return new bizagi.rendering.tablet.grid.grouped(renderParams);\r\n            return new bizagi.rendering.tablet.grid(renderParams); // Not supported. Nonetheless, all entries are shown.\r\n        }\r\n\r\n        if (type == \"search\") {\r\n            return new bizagi.rendering.tablet.search(renderParams);\r\n        }\r\n\r\n        if (type == \"suggest\") {\r\n            renderParams.data.properties.enableQuerySuggestBehavior = true;\r\n            return new bizagi.rendering.tablet.search(renderParams);\r\n        }\r\n\r\n        if (type == \"searchList\") {\r\n            return new bizagi.rendering.tablet.searchList(renderParams);\r\n        }\r\n\r\n        if (type == \"multiSelect\") {\r\n            return new bizagi.rendering.tablet.multiSelect(renderParams);\r\n        }\r\n\r\n        if (type == \"button\") {\r\n            return new bizagi.rendering.tablet.button(renderParams);\r\n        }\r\n\r\n        if (type == \"formLink\") {\r\n            return new bizagi.rendering.tablet.formLink(renderParams);\r\n        }\r\n\r\n        if (type == \"link\") {\r\n            return new bizagi.rendering.tablet.link(renderParams);\r\n        }\r\n\r\n        if (type == \"actionLauncher\") {\r\n           return new bizagi.rendering.tablet.actionLauncher(renderParams);\r\n        }\r\n\r\n        if (type == \"entityTemplate\") {\r\n           return new bizagi.rendering.tablet.entityTemplate(renderParams);\r\n        }\r\n\r\n        if (type == \"polymorphicLauncher\") {\r\n           return new bizagi.rendering.tablet.polymorphicLauncher(renderParams);\r\n        }\r\n\r\n        if (type == \"userfield\") {\r\n            return new bizagi.rendering.tablet.userfieldWrapper(renderParams);\r\n        }\r\n\r\n        // Check query renders (starts with \"query\")\r\n        //if (type.indexOf(\"query\") == 0) {\r\n        //    return this.getQueryRender(params);\r\n        //}\r\n\r\n        // Check search renders (starts with \"search\")\r\n        if (type.indexOf(\"search\") == 0) {\r\n            return this.getSearchRender(params);\r\n        }\r\n\r\n        if (type == \"document\") {\r\n            return new bizagi.rendering.tablet.document(renderParams);\r\n        }\r\n\r\n        if (type == \"image\") {\r\n            return new bizagi.rendering.tablet.image(renderParams);\r\n        }\r\n\r\n        if (type == \"fileprint\") {\r\n            return new bizagi.rendering.tablet.fileprint(renderParams);\r\n        }\r\n\r\n        if (type == \"geolocation\") {\r\n            return new bizagi.rendering.tablet.geolocation(renderParams);\r\n        }\r\n\r\n        if (type == \"collectionnavigator\") {\r\n            return new bizagi.rendering.tablet.collectionnavigator(renderParams);\r\n        }\r\n\r\n        // Check layout renders (starts with \"layout\")\r\n        if (type.indexOf(\"layout\") === 0) {\r\n            return self.getLayoutRender(params);\r\n        }\r\n\r\n        // Check range renders (starts with \"range\")\r\n        if (type.indexOf(\"range\") === 0) {\r\n            return self.getRangeRender(params);\r\n        }\r\n\r\n        //if (type == \"getUser\") {\r\n        //    return new bizagi.rendering.tablet.getUser(renderParams);\r\n        //}\r\n\r\n        if (type == \"activityCheckList\") {\r\n           return new bizagi.rendering.tablet.activityCheckList(renderParams);\r\n        }\r\n\r\n        if (type == \"mobiletext\")\r\n            return new bizagi.rendering.mobiletext(renderParams);\r\n\r\n        // Deprecated control\r\n        if (type == \"letter\")\r\n            return new bizagi.rendering.tablet.letter(renderParams);\r\n\r\n        // No type supported\r\n        //bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        //return null;\r\n        return this._super(params);\r\n    },\r\n\r\n    /**\r\n  * Returns the appropiatelayout render based on the type   \r\n  */\r\n    getLayoutRender: function (params) {\r\n        var type = params.type;        \r\n        var renderParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type == \"layoutImage\")\r\n            return new bizagi.rendering.tablet.layoutImage(renderParams);\r\n\r\n        if (type == \"layoutLink\")\r\n            return new bizagi.rendering.tablet.layoutLink(renderParams);\r\n\r\n        if (type == \"layoutLabel\")\r\n            return new bizagi.rendering.tablet.layoutLabel(renderParams);\r\n\r\n        if (type == \"layoutText\")\r\n            return new bizagi.rendering.tablet.layoutText(renderParams);\r\n\r\n        if (type == \"layoutDateTime\")\r\n            return new bizagi.rendering.tablet.layoutDateTime(renderParams);\r\n\r\n        if (type == \"layoutNumber\")\r\n            return new bizagi.rendering.tablet.layoutNumber(renderParams);\r\n\r\n        if (type == \"layoutMoney\")\r\n            return new bizagi.rendering.tablet.layoutMoney(renderParams);\r\n\r\n        if (type == \"layoutPlaceholder\")\r\n            return new bizagi.rendering.tablet.layoutPlaceholder(renderParams);\r\n\r\n        if (type == \"layoutBoolean\")\r\n            return new bizagi.rendering.tablet.layoutBoolean(renderParams);\r\n\r\n        if (type == \"layoutUpload\")\r\n            return new bizagi.rendering.tablet.layoutUpload(renderParams);\r\n\r\n        return this._super(params);\r\n    },\r\n\r\n    /**\r\n     * Returns the appropiate search render based on the type     \r\n     */\r\n    getRangeRender: function (params) {\r\n        var type = params.type;        \r\n        var renderParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type === \"rangeDate\")\r\n            return new bizagi.rendering.tablet.rangeDate(renderParams);\r\n\r\n        if (type === \"rangeMoney\")\r\n            return new bizagi.rendering.tablet.rangeMoney(renderParams);\r\n\r\n        if (type === \"rangeNumber\")\r\n            return new bizagi.rendering.tablet.rangeNumber(renderParams);\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", params.data, \"error\");\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * Returns the appropiate search render based on the type         \r\n     */\r\n    getSearchRender: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var searchParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        type = type.replace(/tablet/, '');    \r\n\r\n        if (type == \"searchText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            // Creates one extended render\r\n            if (isExtended)\r\n                return new bizagi.rendering.tablet.extendedText(searchParams);\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.tablet.text(searchParams);\r\n        }\r\n\r\n        if (type == \"searchBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            // Creates one check render\r\n            if (display == \"check\")\r\n                return new bizagi.rendering.tablet.check(searchParams);\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.tablet.yesno(searchParams);\r\n        }\r\n\r\n        if (type == \"searchNumber\") {\r\n            // Creates a Scientific Notation render\r\n            if (data.properties.dataType == 29)\r\n                return new bizagi.rendering.tablet.numberScientificNotation(searchParams);\r\n\r\n            return new bizagi.rendering.tablet.number(searchParams);\r\n        }\r\n\r\n        if (type == \"searchMoney\")\r\n            return new bizagi.rendering.tablet.money(searchParams);\r\n\r\n        if (type == \"searchDate\")\r\n            return new bizagi.rendering.tablet.date(searchParams);\r\n\r\n        if (type == \"searchCombo\")\r\n            return new bizagi.rendering.tablet.combo(searchParams);\r\n\r\n        if (type == \"searchSuggest\")\r\n            return new bizagi.rendering.tablet.search(searchParams);\r\n\r\n        if (type == \"searchLabel\")\r\n            return new bizagi.rendering.tablet.label(searchParams);\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi tablet queryForm Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the container class to adjust to tablet devices\r\n *   -   Will apply a desktop form template\r\n */\r\n\r\n// Extends from form tablet base\r\nbizagi.rendering.tablet.form.extend(\"bizagi.rendering.tablet.queryForm\", {}, {});","/**\r\n *   Name: Bizagi tablet FormTemplate Extension\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will redefine the form template class to adjust to tablet devices\r\n */\r\n\r\n// Extends from form tablet base\r\nbizagi.rendering.tablet.form.extend(\"bizagi.rendering.tablet.formTemplate\", bizagi.rendering.formTemplate.prototype);\r\n// Extends itself\r\nbizagi.rendering.tablet.formTemplate.extend(\"bizagi.rendering.tablet.formTemplate\", {}, {});\r\n","/**\r\n *   Name: Bizagi Rendering Users Form\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script override rendering.form to create and update users\r\n */\r\n\r\n// Extends from form tablet base\r\nbizagi.rendering.tablet.form.extend(\"bizagi.rendering.tablet.usersForm\", {}, {});"]}