{"version":3,"sources":["jquery/common/bizagi.tabs/js/jquery.material.tab.js","jquery/common/bizagi.mfb/js/bizagi.mfb.js","jquery/common/bizagi.ripple/js/jquery.ripple.js","jquery/common/bizagi.grid/js/smartphone/bizagi.grid.smartphone.js","jquery/common/base/js/lib/mobile/jquery.tabs.js","jquery/rendering/js/base/bizagi.rendering.element.js","jquery/rendering/js/base/container/bizagi.rendering.container.js","jquery/rendering/js/base/render/bizagi.rendering.render.js","jquery/rendering/js/base/render/bizagi.rendering.render.base.js","jquery/rendering/js/base/container/bizagi.rendering.form.js","jquery/rendering/js/base/container/bizagi.rendering.formTemplate.js","jquery/rendering/js/base/container/bizagi.rendering.layout.js","jquery/rendering/js/base/container/bizagi.rendering.accordion.js","jquery/rendering/js/base/container/bizagi.rendering.accordionItem.js","jquery/rendering/js/base/render/bizagi.rendering.collectionnavigator.js","jquery/rendering/js/base/container/bizagi.rendering.group.js","jquery/rendering/js/base/container/bizagi.rendering.horizontal.js","jquery/rendering/js/base/container/bizagi.rendering.panel.js","jquery/rendering/js/base/container/bizagi.rendering.contentPanel.js","jquery/rendering/js/base/container/bizagi.rendering.searchForm.js","jquery/rendering/js/base/container/bizagi.rendering.tab.js","jquery/rendering/js/base/container/bizagi.rendering.tabItem.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.render.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.image.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.link.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.label.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.text.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.upload.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.boolean.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.dateTime.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.number.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.money.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.placeholder.js","jquery/rendering/js/base/container/bizagi.rendering.nestedForm.js","jquery/rendering/js/base/render/bizagi.rendering.combo.js","jquery/rendering/js/base/render/bizagi.rendering.check.js","jquery/rendering/js/base/render/bizagi.rendering.number.js","jquery/rendering/js/base/render/bizagi.rendering.numberScientificNotation.js","jquery/rendering/js/base/render/bizagi.rendering.date.js","jquery/rendering/js/base/render/bizagi.rendering.extendedText.js","jquery/rendering/js/base/render/bizagi.rendering.grid.js","jquery/rendering/js/base/render/bizagi.rendering.hidden.js","jquery/rendering/js/base/render/bizagi.rendering.label.js","jquery/rendering/js/base/render/bizagi.rendering.search.js","jquery/rendering/js/base/render/bizagi.rendering.text.js","jquery/rendering/js/base/render/bizagi.rendering.checkList.js","jquery/rendering/js/base/render/bizagi.rendering.range.js","jquery/rendering/js/base/render/bizagi.rendering.rangeDate.js","jquery/rendering/js/base/render/bizagi.rendering.rangeMoney.js","jquery/rendering/js/base/render/bizagi.rendering.rangeNumber.js","jquery/rendering/js/base/render/bizagi.rendering.actionLauncher.js","jquery/rendering/js/base/render/bizagi.rendering.entityTemplate.js","jquery/rendering/js/base/render/bizagi.rendering.polymorphicLauncher.js","jquery/rendering/js/base/render/bizagi.rendering.button.js","jquery/rendering/js/base/render/bizagi.rendering.fileprint.js","jquery/rendering/js/base/render/bizagi.rendering.link.js","jquery/rendering/js/base/render/bizagi.rendering.geolocation.js","jquery/rendering/js/base/render/bizagi.rendering.association.js","jquery/rendering/js/base/render/bizagi.rendering.upload.js","jquery/rendering/js/base/render/bizagi.rendering.ecm.js","jquery/rendering/js/base/render/bizagi.rendering.yesno.js","jquery/rendering/js/base/render/bizagi.rendering.letter.js","jquery/rendering/js/base/render/bizagi.rendering.formLink.js","jquery/rendering/js/base/render/bizagi.rendering.cascadingCombo.js","jquery/rendering/js/base/render/bizagi.rendering.list.js","jquery/rendering/js/base/render/bizagi.rendering.multiSelect.js","jquery/rendering/js/base/render/bizagi.rendering.searchList.js","jquery/rendering/js/base/render/bizagi.rendering.money.js","jquery/rendering/js/base/render/bizagi.rendering.radio.js","jquery/rendering/js/base/render/bizagi.rendering.image.js","jquery/rendering/js/base/render/bizagi.rendering.userfield.js","jquery/rendering/js/base/render/bizagi.rendering.document.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.column.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.readonly.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.combo.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.date.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.search.js","jquery/rendering/js/base/bizagi.rendering.base.factory.js","jquery/rendering/js/bizagi.rendering.device.factory.js","jquery/rendering/js/bizagi.rendering.facade.js"],"names":["$","updateIndicatorState","tabs","active_tab","direction","tabs_meta","getTabsMetaInfo","tabs_info","tabsMetaInfo","tab_info","tabMetaInfo","left","tmp_left","scrollLeftNormalized","clientWidth","scrollWidth","scrollLeft","width","tabs_meta_info","r","getBoundingClientRect","a","n","window","document","body","e","createElement","appendChild","createTextNode","dir","style","fontSize","height","position","top","overflow","type","removeChild","getScrollType","Number","NaN","getNormalizedScrollLeft","right","tab_meta_info","fn","material_bizagi_tabs","options","params","opts","extend","defaults","base","index","$el","undefined","$active","$active_content","init","el","$ind","self","this","$tabs","$content_tabs","updatePositions","active","$indicator","info","get","css","scroll_info","scrollSelectedIntoView","trigger","active_index_tab","each","element","addClass","data","hide","push","on","stopPropagation","prepend","find","removeClass","reference","show","preventDefault","getActiveTab","tab","contantTab","moveToNextTab","length","click","refreshPositions","console","error","mfb","overlay","opened","buttons","activePrincipalButton","placement","indexOf","efect","clickHoverOpt","toggleMethod","menuState","menuStateValue","isOpen","isClosed","mainButtonClass","restingIcon","activeIcon","children","remove","target","currentState","attachEvt","elems","evt","handler","i","len","addEventListener","configureBlur","blur","siblings","closest","html","kendo","template","useWithBlock","append","toggle","getAttribute","parentNode","button","principal","appendTo","bind","setAttribute","jQuery","bz_navigation_buttons","isDesign","lastActionExecuted","allowAddButtons","$element","empty","$container","result","caption","properties","$elementButton","replace","targetElement","offset","offsetWidth","$addButton","htmlButtons","heightAddButton","heightWrapper","heightButtons","$rightNavigationButton","rightNavigationButtonIsLocated","insertAfter","leftNavigationButtonIsLocated","$leftNavigationButton","ev","maxScrollLeft","detach","prependTo","processButtons","transparent","$temp","rippleEffect","eventPageX","eventPageY","inkX","inkY","maxDiameter","rippleColor","$inkSpan","$inkparent","$thisElement","eventType","getRippleColorFromTraverse","inkColor","fallBackColor","backgroundOrInhreitedBackGround","hex","luma","returnLumintion","fallback","getBgColor","$elementToCheckForBg","is","parent","colorToHex","getLuminationValue","getColorLuminance","getInkColor","inkDefaultColor","appendInkTo","inkClass","inkContainerClass","Math","max","outerWidth","outerHeight","idToUse","background-color","pageX","pageY","touch","originalEvent","touches","changedTouches","setTimeout","hexcolor","substring","rgb","parseInt","lum","String","c","resultHex","substr","round","min","toString","color","match","slice","widget","ui","bizagi_grid","attachHandlers","pager","_getComponent","pageNumber","attr","isValid","changePage","page","value","_input","items","actions","add","name","bizagi","localization","getResource","processAction","unselectRow","hasTotalizer","totalizer","overflowMenu","_row_buttons","totalData","draw","_super","verifyTotalizer","rows","rowButtons","actualActionSheet","util","isObjectEmpty","destroy","kendoMobileActionSheet","smartphone","stopLoading","drawRow","rowData","isNewRow","selectedBusinessKey","columnKeyIndex","success_callback","fail_callback","currentPage","total","records","newPage","startLoading","onPageRequested","onRowSelected","prototype","apply","arguments","onRowUnselected","_canShowButtons","_canShowRowButtons","getNewRowKeys","map","row","_showRowButtons","_hideRowButtons","_replaceElement","RegExp","isNewRecord","businessKey","bztabs","activeTab","tabNumber","activate","popUp","beforeActivate","tabCountPopup","tabHeader","tabCountReal","widthRow","floor","item","textContent","tabCurrent","eq","widthTabSelected","updateTabSize","first","origin","changeTab","hasClass","dataRef","tempTabs","moveAtTheEnd","currentTarget","tabChildren","when","domIncluded","done","event","headerWidth","innerWidth","totalWidth","j","pop","last","Class","ELEMENT_TYPE_CONTAINER","ELEMENT_TYPE_RENDER","ELEMENT_TYPE_COLUMN","renderFactory","dataService","resources","observableElement","disposed","initializeData","subscribers","xpathContext","getXpathContext","idPageCache","getPageCache","getFormContainer","key","getElementType","resize","size","focus","required","layout","isScrolledIntoView","effect","triggerGlobalHandler","triggerHandler","unbind","one","getRenderedElement","getMode","getParams","getFormType","ready","isReadyToSave","getCustomHandlers","dispose","off","override","disposeTime","isDisposed","processFailMessage","message","form","isOfflineForm","context","errorType","validationController","clearValidationMessages","showErrorMessage","container","idCase","JSON","parse","code","responseText","showAlertMessage","endLoading","beforeToRefresh","afterToRefresh","rendering","TYPE_QUERY_FORM","uniqueId","ceil","random","editable","parseBoolean","visible","orientation","originalProperties","encode","childrenHash","elements","render","createRenderElement","createContainerElement","createFormElement","originalElement","inlineEdit","retype","clone","getRender","mode","processDuplicateRender","registerRender","getContainer","getElement","getElementsByType","child","clonedElement","displayName","xpath","isClone","cloneRender","internalRender","applyContainerDefaults","id","tag","requestedForm","renderContainerHtml","postRenderContainer","renderingDeferred","Deferred","renderContainer","isRendered","promise","isEmpty","alert","backgroundColor","changeBackgroundColor","changeVisibility","argument","changeEditability","replaceTag","replaceSelector","replaceChildrenTag","replaceChildrenHtml","resolve","executeChildrenPostRender","configureHandlers","applyPlaceHolderPolyfill","configureDesignView","configureLayoutView","config","placeHolderConfig","forceApply","Placeholders","enable","childrenElements","childElement","postRenderElement","renderChildrenHtml","temp","renderElement","collectRenderValues","renderValues","canBeSent","collectData","hasChanged","collectRenderValuesQueryForm","canBeSentQueryForm","collectDataQueryForm","firstChild","getRenders","renders","getRendersByXpath","o","invalidElements","hasValidGrids","childrenPromises","getFocus","getCustomHandler","customHandlers","refreshContainer","args","multiaction","refreshControl","idRender","contexttype","unregisterChildren","removeActions","currentContainer","replaceWith","refreshActions","triggerChildrenActions","fail","always","refreshDesignContainer","messageValidation","l","triggerRenderChange","changed","registerActions","actionController","buildActions","unregisterRender","replaceChild","splice","getChildById","postRenderTimeout","maxRendersPerScreen","rendersExecuted","renderOptimization","startOptimization","stopOptimization","included","includedInResult","renderType","normalizeType","test","submitOnChange","maxLength","helpText","trim","textFormat","valueFormat","isHidden","contextType","labelAlign","valueAlign","originalValue","previousValue","calculateInitialLayoutProperties","displayType","getDefaultLabelAlign","getDefaultValueAlign","getRTLAlign","renderWidth","calculateRenderWidth","labelWidth","valueWidth","label","control","layoutType","renderTemplateName","renderTemplate","getTemplate","replaceAll","isFullRender","detectDevice","isTabletDevice","parseFloat","fasttmpl","isExtendedText","isExtended","displayOptionClass","getDisplayOptionClass","labelAlignClass","getAlignClass","valueAlignClass","stringLabelWidth","stringValueWidth","printVersion","printversion","cssClass","cssclass","showFullRender","internalRenderControl","state","replaceControlHtml","resolveResult","asyncRenderDeferred","renderControl","renderReadOnly","configureSubmitOnChange","isLabelFormat","executePostRender","_element","internalPostRender","getControl","emptyControlByAsyncRenderDeferred","processLayout","postRenderPrintVersion","postRender","postRenderReadOnly","performExecutionModeMethods","performDesignModeMethods","configureHandlersQueryForm","configureHandlersReadOnly","internalSetInitialValue","log","internalSetInitialValueFlag","setDisplayValue","inlineAdd","grid","setValidationMessage","hasValue","isQueryForm","filter","forEach","messageData","isQuery","getValue","val","columnEditable","getColumn","isNumeric","controlValueIsChanged","format","changeColor","background","bold","changeFontBold","italic","changeFontItalic","underline","changeFontUnderline","strikethru","changeFontStrikethru","changeFontSize","changeRequired","setValue","triggerEvents","identicalObjects","checkRequired","changeRequiredLabel","triggerRenderValidate","validateInputRetype","display","enableCheck","displayValue","getDisplayValue","sanitizeHTML","getLabel","mustImplement","getControlFiller","validationMessage","readOnlyValue","isObject","isString","decodedDisplayValue","changeDisplayOption","changeLabelAlign","alignType","changeValueAlign","customizeRenderWidth","setProperty","getElementsToStylize","originalColor","currentStyle","getFormattingLabel","compareValue","baseValue","defaultValue","forceCollectData","includes","compareValueObj","_findAction","guid","targetObj","guidAction","objectValue","valuestrikethru","valueunderline","newFontSize","emptyControlByChangeEditability","changeEditabilityCellControl","renderColumn","decorated","getDecorated","readyDeferred","onCellChange","labelElement","controlElement","idForm","pipe","controlFiller","currentElement","refreshDesignControl","cleanData","clearDisplayValue","input","updateOriginalValue","change","queryValue","searchType","typeSearch","rangeQuery","toUpperCase","newParameter","orderType","displayXpath","force","displayOnly","time","defaultControl","innerControl","isIE","autoScrollBottom","align","dependencies","action","conditions","expressions","simple","submitOnChangexpathContext","operator","argumentType","commands","command","elseCommands","addSubmitAction","bRefreshForm","notCollect","defer","BA_CONTEXT_PARAMETER_PREFIX","internalSubmitOnChange","reject","getCacheIdCase","cache","idCaseObject","parameters","percent2Number","getIdCase","getIdWorkitem","idWorkitem","getidTask","idTask","getSessionId","sessionId","changeCellColor","changeCellBackgroundColor","backgroundImage","needBGPaint","background-image","changeCellVisibility","changeCellRequired","startActionExecution","actionExecutionDeferred","endActionExecution","readyActionExecution","isFromCreatedRow","columns","submitInvalidatePageCacheRequest","pageCacheToInvalidate","invalidatePageCache","isDesignMode","isExecutionMode","preventDefaultForAnchorTag","isSharepointContext","processLabelLayout","processControlLayout","warm","$label","changeFontColor","changeTextDecoration","$control","$elements","textDecoration","device","rendersById","rendersByXpath","rendersByType","pageCacheId","displayAsReadOnly","userConfirmationMessage","hasRule","paramsRender","processPath","breadCrumb","split","validations","allowValidateAndSaveAction","enableActionValidateAndSave","initializeButtons","transitions","originalProcessButton","processButton","isRoutingDisabled","applicationParent","isOfflineFormsV2Supported","isMobileDevice","ordinal","next","nextWithoutValidations","submitData","cancel","back","createnewcase","validate","save","routing","executeRule","refresh","buildButtonStyle","useCustomButtons","unshift","setParam","property","isArray","listRendesByType","getRenderByType","listRendesByTypeLength","renderKey","listRender","getRenderById","getGridByColumn","grids","columnsIds","helptext","queryForm","summaryForm","globalForm","complexGatewayContainer","activeTransitions","mainForm","controllers","validation","checkboxLabel","transitionId","strStyle","getContextType","getEndPointAction","formtype","getButtons","stopImmediatePropagation","buttonProperties","lastActionButton","routingDisabled","prop","hasOwnProperty","propagateExternalEvents","processDefer","contains","documentElement","preProcessButton","postProcessButton","responses","setLoaderDeferred","loaderDeferred","deleteLoaderDeferred","isLoaderDeferredSet","useOrSetLoaderDeferred","getLoaderPromise","appendWaitForLoader","create","then","chrono","initAndStart","getAllTabs","getAllTabsLength","innerTabsLoading","loadingDeferred","performValidations","needsUserConfirmation","showConfirmationBox","submitForm","expandNotificationBox","customHandler","validateForm","saveForm","collectRenderValuesForSubmit","deferredsToWait","deferreds","internalSubmitFormOffline","internalSubmitForm","checkWidgetsData","isComplexGatewayPainted","getLastActionButton","countProps","showMessageBox","prepare","offlineType","waitForOnlineResponse","online","tryPushResponsePromise","responsePromise","IdCase","caseNumber","CaseNumber","failHandler","offlineAction","isValidResource","showNotification","text","animate","scrollTop","submitDataAction","executeButtonAction","performAction","checkpointAction","commitAction","waitingDeferreds","prepareCheckpointAction","executeButton","prepareCommitAction","getButtonAction","forcePlanCompletion","surrogatekey","surrogateKey","flowControlDeferred","response","execute","bHasValidations","stop","alertMessage","propertiesToDisplayMessages","validationToDisplayMessages","messages","modalError","sendRollbackAction","refreshForm","jqxhrList","abortAll","_","messageType","addValidationMessage","icon","itemAdditionalClass","autofocus","showValidationMessage","addErrorMessage","errorMessage","deferred","selectedTabs","getSelectedTabs","isRefresh","idStartScope","tabContainers","tabContainer","selected","processInternalSubmitAction","waitingTemplate","waitingOverlay","waitingMessage","tmpl","isSharePoint","canvas","getSize","getOffset","min-height","min-width","getFocusedElement","setFocusedElement","errorJson","setSize","isEmptyObject","rule","clearOnlyServer","join","executeInterface","interface","executeSAPConnector","guidsap","executeConnector","guidConnector","unbindActions","cancelPreviousRequest","focusIdentifier","IdScope","objMessage","strMessage","multiactionConnection","connection","abort","showErrorAlertDialog","buttonId","sendCheckpoint","url","checkpointUrl","commitLinkForm","commitUrl","rollbackLinkForm","rollbackUrl","getButton","getFloatingButton","contextEvent","processTemplate","controls","processedTemplate","g1","g2","string","layoutCollection","getCss","layoutGuid","layoutguid","loadStyle","getContextEvent","stripslashes","desktop","allowAdd","withAddForm","allowEdit","withEditForm","allowDetail","allowDelete","keys","getKeys","pointer","totalRows","inlineAddRecords","showPreview","drawControls","drawActions","drawControl","drawForms","drawPreview","templateItem","hasData","getTotalRows","getRow","getNextRow","getPreviousRow","getFirstRow","getLastRow","getIndexes","setPointer","isTherePendingInlineRow","addKey","newId","removeKey","navigationform","getParameters","recordXpath","recordXPath","submitAddRequest","addGridRecord","addUrl","idEntity","submitEditRequest","editGridRecord","editUrl","submitDeleteRequest","deleteGridRecord","deleteUrl","submitSaveRequest","saveGridRecord","saveUrl","dataFail","submitRollbackRequest","rollbackGridAction","getRemoteData","dataUrl","getData","content","validateControls","collapse","expandedIcon","getExpandedIcon","collapsedIcon","getCollapsedIcon","expandedClassIcon","toogleContainer","bImmediate","loading","panel","renderResult","performSearch","searchParams","submitSearch","refreshResults","collectSearchValues","isMapEmpty","maxRecords","maxRows","idSearchForm","allowFullSearch","criteria","totalPages","deviceMaxRecordsExceeded","onSearchFinished","errorObject","submitArray","operation","getCriteriaOperation","criteriaData","dataType","parseAdditionalProperties","tabItems","counter","tooltip","tabOrientation","loadOnDemand","formParams","containsFocusedElement","setActiveTab","selectedTab","renderTabContent","templateUri","useDefaultImage","getImage64","entity","getEntityImage64","getImageUri","hash","serviceLocator","getUrl","replaceMultiple","BA_ACTION_PARAMETER_PREFIX","services","service","BA_PAGE_CACHE","allowSendInMail","getValueFilesByData","dataFiles","valueAuxFiles","isContextContainerWidgetRender","getDataFilesWithoutScope","valueResult","err","warn","formContainer","getFilesDataForLayoutUploadControl","files","getUploadXpath","toLowerCase","dateFormat","timeFormat","showTime","fullFormat","search","indexHour","date","dateFormatter","getDateFromInvariant","datePickerRegional","formatDate","dateObj","dateControl","getDateControl","INVARIANT_FORMAT","i18n","isNaN","Date","setHours","formattedDateTime","allowDecimals","getDefaultAllowDecimals","numDecimals","BIZAGI_DEFAULT_CURRENCY_INFO","decimalDigits","symbol","positiveFormat","negativeFormat","decimalSymbol","decimalSeparator","digitGroupSymbol","groupSeparator","groupDigits","getDefaultGroupDigits","colorize","colorizeOnNegative","formatCurrency","roundToDecimalPlace","showsymbol","currencySymbol","hasLocalData","enableTyping","complementData","isDependant","getParentCombo","valueControl","renderCombo","renderComboTemplate","dataPromise","getTemplateName","emptyValue","emptyLabelForCombo","getTemplateParams","unique","randomNumber","formatItem","showEmpty","showCurrentData","getDummyData","remoteDataLoaded","extra","recalculate","msgObj","auxMsg","parseJSON","resetData","combo","getSelectedValue","currentValue","parseAdditionalValues","newItem","hidden","bCurrentDataFound","emptyFound","dataValue","Object","column","comboData","isExtraItem","escapeValue","mapValue","fromAction","validateValue","translated","findDataValueById","showLetters","randomId","setGroupDigits","dataTypeMinValue","calculateMinValue","dataTypeMaxValue","calculateMaxValue","isMobile","isAndroidDevice","numericInput","numeric","attachRetypeDouble","attachFormatCurrency","removeValidations","isValidRender","regions","language","digitGroupSeparator","minValue","getMinValue","maxValue","getMaxValue","percentage","inputValue","inputLength","xPath","oldVal","isInvalidFormat","tempValue","asNumber","messageToShow","isValidRenderMessage","executeFormatCurrencyPlugin","tmpData","isIE11","clipboardData","totalVal","eval","keydown","keyUnicode","charCode","keyCode","formatTimeout","clearTimeout","floatPart","selectionStart","selectionEnd","currentPosition","keyup","keypress","character","fromCharCode","removeTrailingZeros","positive","regExp","re","bValid","validMessage","thousands","changeMinValue","newValue","changeMaxValue","createTooltip","currentTitle","toolTipZindex","getMaxZindex","zIndex","numericSN","indexDateTimeSeparation","lastIndexOf","uppercaseDatePlaceholder","rtl","intHandler","isNow","timeControl","getTimeControl","mask","onChangeHandler","updatingTime","formatInvariant","setSeconds","setMilliseconds","hasMaxLines","maxLines","regularExpressionExpression","regularExpressionMessage","regularExpression","expression","isEmptyField","textarea","validationMessages","regEx","decodedValue","decodeURI","valueToDisplay","originalData","areThereEditableColumns","areThereTotalizedColumns","initProperties","enabledChecks","exclusiveChanges","originalEnabledChecks","columnProperties","groupBy","allowGrouping","spliceRowData","isExclusive","columnRender","singleInstance","totalize","reverse","showSummary","rowsPerPage","keyColumn","skipInitialLoad","allowMore","allowFilter","groupSummary","groupText","groupCollapsed","groupOrder","formShowMode","floatingHeader","sortBy","sort","sortOrder","order","addLabel","editLabel","deleteLabel","exportOptionsLabel","detailLabel","tableCssClass","alreadySaved","overrideGetRemoteData","changes","cellOverrides","isRTL","changeOrderData","rowKey","reverseDataRows","shift","removeRemainingColumns","numColumns","remainingColumns","getColumnType","columnIndex","getGridTemplate","applyTemplate","columnInitializers","initialize","encodeXpath","sortType","searchFilter","getGridData","spliceIndex","spliceRowDataVisible","spliceRowDataEditable","rowTemplate","buildCellXpathFilter","disableServerGridValidations","dataResp","collectGridChange","isPressed","pressed","configureColumnSubmitOnChange","keysToDelete","columnXpath","canColumnBeSent","columnExclusiveChanges","columnEnabledChecks","lengthEnabledChecks","v","cellOverride","getCellOverride","getCellValue","getCellCurrentValue","getControlCell","setError","changeCellEditability","changeCellProperties","changeCellMaxValue","changeCellMinValue","cleanCellData","saveGrid","changeColumnsEditability","saveInlineAddedRows","refreshCell","cell","refreshGridCell","typeRender","getDepthData","isBoolean","updateAffectedCellManually","canBeExported","rowDeleted","hasErrors","newRows","getDataNewRows","merge","uniqueMessages","isValueValid","k","messagesLength","gridValidationMessage","setCellOverrides","len_v","newRecords","cellValue","getGridExportUrl","disposition","exportType","submitForGridChange","getEnabledChecks","xpathfilter","getGridDataExclusivesSelected","cleanNewRecords","hasColorHeader","headerFormat","allowDinamiclabel","bindingValue","configureHelpText","searchForms","advancedSearch","allowSuggest","allowTyping","allowClear","searchLength","enableLocalStorage","expireCache","submitVersion","h_contexttype","enableQuerySuggestBehavior","term","regexC","getSearchData","hideStatus","selectedValue","regex","showDesignValidations","isNull","horizontal","checkListGroup","vertical","setRanageControls","minControl","maxControl","$maxCanvas","$minCanvas","renderRangeControl","$canvas","defineRangeControl","dateMin","suscribe","observer","notify","dateMax","getRenderProperties","typeRangeControl","renderProperties","moneyMin","money","moneyMax","numberMin","number","numberMax","typeForm","deferredActions","engine","templateEngine","autoGenerateData","templateGuid","selecttemplate","processPropertyValueArgs","pcaseId","pguidEntity","guidEntity","psurrogatedKey","surrogatedKey","ptags","tagslist","pmaxitems","maxItems","pactionXpath","xpathActions","processPropertyValueDataTmplArgs","ptemplateGuid","defaultAllowActions","allowactions","isHorizontal","allowSearch","templatetype","executeActionImmediately","processPropertyValueExecuteAction","pguidAction","pparameters","executeActions","notifyExecution","actionName","readOnly","templateDefined","actionManager","guidProcess","def","actionType","guidWFClass","hasStartForm","processStartForm","guidprocess","title","processActionFormCollection","processActionForm","addActionToQueue","actionsList","additionalXpaths","additionalXpath","idParentWorkitem","idWorkItem","entityXpath","newValueActionsList","removeActionToQueue","controlValue","countSameActions","count","getPropertiesActionLaucher","actionsLaucher","getTagList","processPropertyValueExecuteConstructor","pguidConstructor","guidConstructor","guidObject","displayNamee","taglist","submitOnChangexpathContextRow","runButtonAction","b","$context","filesCount","getFilePrintUrl","geolocation","navigator","allowUpdate","getCurrentPosition","succes_callback","getErrorMessage","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","performPrecision","latitude","longitude","toPrecision","allowFlip","flipped","flipstate","leftData","rightData","processPropertyValue","getFlipAssociation","flip","makeJsonBase","getColumnData","getRightAssociation","formatJson","associationData","leftId","association","isChecked","idRight","checked","removeElement","rightId","removeValue","addElement","leftXpath","rightXpath","leftFactName","rightFactName","values","maxFileSizeOfProperty","maxSize","maxFileSizeOfUser","BIZAGI_SETTINGS","UploadMaxFileSize","maxfiles","validExtensions","singleExtensions","defExtensions","getUploadAddUrl","haveFiles","noFiles","file","fileName","renderUploadItem","replaceFilesHtml","itemTemplate","getTemplateItemName","buildItemUrl","filename","getUploadFileUrl","fileId","deleteUploadItem","deleteUploadFile","grep","fileItem","newRow","buildAddParams","prefix","BIZAGI_SESSION_NAME","parents","setRenderRequired","maxFiles","q_xpath","showMetadata","listControl","fileProperties","idFileUpload","getFileExtension","isImage","lengthValues","idAttrib","renderFileLayout","loader","productBuildToAbout","replaceItemHtml","metadataTemplate","getECMMetadata","getFileProperties","metaData","ecm_ecmStatus","ecmStatus","ecm_isVisible","isVisible","ecm_allowUpdateMetadata","allowUpdateMetadata","ecm_allowDelete","ecm_allowUpdateContent","allowUpdateContent","ecm_allowView","allowView","ecm_allowCheckOut","allowCheckOut","ecm_allowCancelCheckOut","allowCancelCheckOut","ecm_allowEdit","idFileUploads","deviceType","extension","p_sessionId","cookie","getECMFileUrl","metaValues","deleteECMFile","lockUploadItem","checkOutFile","unlockUploadItem","cancelCheckOut","isEmptyValue","letterOpened","getLetterContent","getXpath","getContextXpath","saveLetterContent","getCanGenerateLetter","maximized","likeButton","editLinkForm","getFormLinkXpath","saveLinkForm","executeSubmitOnChange","submitCommitRequest","submitCheckpointRequest","submitDataRequest","dependants","parentCombo","initializingCascadingCombo","bindDependantCombo","configureReadOnlyHandlers","isInitialValue","deferredVisible","dependantCombo","onChangeFunction","refreshDependantCombo","focusDependant","cleanInput","isEventBinded","_data","unbindDependantCombo","dependant","parentValue","inputCombo","parentLength","parentArray","configured","itemSelected","listSize","getDataValue","idToRemove","markAsChecked","some","found","canAddMoreItems","$tagsContainer","toArray","reduce","acc","getElementWidth","MORE_OPTION_WIDTH","styles","getComputedStyle","filterList","query","stringContainer","stringToSearch","addSelectedElements","findItemById","hasSearchForm","list","removeLastElement","getListItems","getUploadAddFileUrl","isUserPreference","isAutoWidth","isAutoHeight","getTemplateItem","currentUser","idUser","getPropertyData","charAt","buildItemUrlOffline","getFormParams","getOfflineImage","imageValue","getDataUrl","saveImageOffline","path","blobPromise","isNative","media","getImagePath","normalizeIOSFilePath","errorHandler","resolveLocalFileSystemURL","fileEntry","reader","FileReader","onloadend","blob","Blob","readAsArrayBuffer","blobImage","operationType","saveOfflineImage","buildFullItemUrl","getFileDependencies","fileDependencies","loadFile","renderUserfieldControl","extendedData","ajax","userEditableControl","getEditableControl","renderComplex","loadUserfieldReadOnly","userReadOnlyControl","getReadonlyControl","getReadonlyValue","setEditableValue","getEditableValue","getPropertyValue","propertyName","jqXHR","textStatus","errorThrown","getRenderElements","getServerResourceURL","resource","userfieldGuid","getRenderValue","showDialog","showPopup","initialParams","userfieldName","getUserfieldControl","isColumn","getControlXpathContext","getUserFieldInstance","replicateUserfieldMethods","userfieldInstance","downloadalldocuments","allowGenerate","preRenderControl","downloadAllDocuments","documents","getControlHtml","renderDocumentsHtml","renderActionsHtml","noActivateButton","allowgenerate","activateButton","getDocumentXpath","renderDocumentItem","joined","buildAllDocumentsUrl","getAllDocumentsDownloadUrl","caseId","workitemId","htmlControl","updateControlForPrintMode","validateContainer","replaceActionsHtml","buttonExecuted","generateLink","isPropagationStopped","documentTemplateGenerate","showDocumentPreview","deleteDocumentTemplate","resolveDeleteDocumentTemplate","xpathcontext","generateDocumentTemplate","resolveDocumentTemplateGenerate","messageText","autoOpenDocuments","returnCssTypeFile","lenght","redrawDocuments","documentContainer","renderAllDocumentDownload","removeDeleteButton","startIndex","restOfWord","finishIndex","downloadAllDocumentsLink","getErrorTemplate","getTemplateDownload","getTemplateReadonly","decoratedClass","decorateRenders","columnVisible","showColumn","readonly","isReadonly","instanceDecoratedClass","applyOverrides","propertyOverrides","invalidElement","overrideDecoratedRenderProperties","renderSummary","postRenderSummary","getCell","setSurrogateKey","defaultvalue","setDefaultValue","getCompositeValue","overrideProperties","getSortName","getAnyDecoratedInstance","getSortColumn","arrayEach","originalGetData","getDataForAllCells","findDataById","fetchingData","valueForGrid","tableCell","formattedDate","templates","loadOverrides","initAsyncStuff","loadTemplates","loadTemplate","templateDestination","templateService","resolvedTemplate","getCommonTemplate","containerParams","mobileform","formTemplate","usersForm","contentPanel","nestedForm","tabItem","accordion","accordionItem","group","mobilegroup","searchForm","renderParams","extendedText","mobiletext","check","yesno","cascadingCombo","multiSelect","radio","image","ecm","upload","searchList","letter","formLink","link","layoutImage","layoutLink","layoutLabel","layoutText","layoutDateTime","layoutNumber","layoutMoney","layoutPlaceholder","actionLauncher","layoutBoolean","layoutUpload","entityTemplate","polymorphicLauncher","userfieldWrapper","getSearchRender","getQueryRender","fileprint","collectionnavigator","getUser","rangeDate","rangeMoney","rangeNumber","activityCheckList","columnParams","exclusiveCheck","uploadecm","numberScientificNotation","queryExtendedText","queryText","queryCheck","queryYesNo","queryNumber","queryMoney","queryDate","queryCombo","queryCascadingCombo","querySuggest","queryLabel","queryList","queryMultiSelect","querySearch","queryRadio","queryState","queryCaseState","queryProcess","querySearchUser","execution_device","cachedFactory","getRenderFactory","print","factory","tablet","isSmartphoneDevice","getDataService","executionDeferred","deviceFactory","getFactory","subscribe","unsubscribe","publish","update","doc","ownerDocument","location","queryString","getQueryString","process","refreshing","pathProcess","insertBefore","lastWidth","lastHeight","resizeInPopUpHTML","configureRefresh","configureRouting","configureRenderError","configureResize","configureGlobalHandlers","stopAndLog","enableE2EInterface","errorTemplate","getFormData","transformGridControl","processForm","getFailDeferred","jsonErrorMessage","BIZAGI_ORIENTATION","buttonsForm","refreshParams","fastEmpty","canvasParent","resizeTimeout","forceResize","triggerParams","heightActivitiFormContainer","renderForm","buttonContainer","heightButtonContainer","renderBehavior","heightCanvas","innerHeight"],"mappings":"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","sourcesContent":["/**\r\n * Autor: Ricardo Pérez\r\n */\r\n\r\n(function ($) {\r\n\r\n    $.fn.material_bizagi_tabs = function (options, params) {\r\n\r\n        var opts = $.extend({}, $.fn.material_bizagi_tabs.defaults, options);\r\n\r\n        var base = {\r\n            index: 0,\r\n            tabs: [],\r\n            $el: undefined,\r\n            $active: undefined,\r\n            $active_content: undefined, \r\n            init: function(el, params){\r\n                var self = this;\r\n                var $tabs = $(\">ul.bz-tabs\", el);\r\n                var $content_tabs = self.$el = $(el);\r\n                var $ind;\r\n                self.index = opts.active_index_tab;\r\n\r\n                function updatePositions(active, $indicator){\r\n                    if (typeof $indicator !== \"undefined\"){\r\n                        var info = updateIndicatorState($tabs.get(0), active.get(0), opts.direction);\r\n                        $indicator.css(\"left\", info.left).css(\"width\", info.width);\r\n                    }\r\n        \r\n                    var scroll_info = scrollSelectedIntoView($tabs.get(0), active.get(0), opts.direction);                        \r\n                    $tabs.scrollLeft(scroll_info);\r\n                    $tabs.trigger(\"updatePositions\", getTabsMetaInfo($tabs.get(0), active.get(0), opts.direction));\r\n                }\r\n\r\n                $(\">li.bz-tab\", $tabs).each(function(index, element) {\r\n                    if (index === opts.active_index_tab){\r\n                        self.$active = $(this);\r\n                        self.$active.addClass(\"active\");\r\n                    }\r\n                    else {\r\n                        $($(element).data(\"reference\"), $content_tabs).hide();\r\n                    }\r\n                    self.tabs.push({index: index, element: element});\r\n                });\r\n                \r\n                self.$active_content = $(self.$active.data(\"reference\"), $content_tabs);\r\n                \r\n                //Updates the initial position\r\n                updatePositions(self.$active);\r\n                \r\n                $tabs.on('click', '> li.bz-tab', function (e) {\r\n                    e.stopPropagation();\r\n        \r\n                    if (typeof $ind === \"undefined\"){\r\n                        $ind = $(\"<li class='bz-indicator-bar'></li>\");\r\n                        var info = updateIndicatorState($tabs.get(0), self.$active.get(0), opts.direction);\r\n                        $ind.css(\"left\", info.left).css(\"width\", info.width);\r\n                        $ind = $tabs.prepend($ind).find(\".bz-indicator-bar\");\r\n                    }\r\n        \r\n                    self.$active.removeClass('active');            \r\n                    self.$active_content.hide();\r\n        \r\n                    self.$active = $(this);\r\n        \r\n                    var reference = self.$active.data(\"reference\");\r\n                    self.index = self.$active.data(\"index\");\r\n\r\n                    self.$active_content = $(reference, $content_tabs);\r\n        \r\n                    self.$active.addClass('active');\r\n\r\n                    //Updates to the current position\r\n                    updatePositions(self.$active, $ind);\r\n                    $tabs.trigger(\"updateActive\", {index: self.index});\r\n\r\n                    self.$active_content.show();\r\n                    e.preventDefault();\r\n                });\r\n\r\n            },\r\n            getActiveTab: function(){\r\n                return {\r\n                    index: this.index,\r\n                    tab: this.$active,\r\n                    contantTab : this.$active_content\r\n                };\r\n            },\r\n            moveToNextTab: function(){\r\n                var index = ((this.index + 1) < this.tabs.length) ? this.index + 1 : 0;\r\n                this.tabs[index].element.click();\r\n            },\r\n            refreshPositions: function(){\r\n                this.tabs[this.index].element.click();\r\n            }\r\n        };\r\n\r\n        \r\n        if (typeof options == \"string\" && options) {\r\n            base = $(this).data(\"base\");\r\n            if (typeof base == \"undefined\"){\r\n                console.error(\"this plugin is has not been initialized!!\");\r\n            }\r\n            return base[options](params);\r\n        }\r\n        else {\r\n            return this.each(function () {\r\n                base.init(this, params);\r\n                $(this).data(\"base\", base);\r\n            });\r\n        }\r\n    };\r\n\r\n    $.fn.material_bizagi_tabs.defaults = {\r\n        direction: 'ltr',\r\n        active_index_tab: 0\r\n    }\r\n\r\n    function updateIndicatorState(tabs, active_tab, direction) {\r\n        var tabs_meta = getTabsMetaInfo(tabs, active_tab, direction);\r\n        var tabs_info = tabs_meta.tabsMetaInfo;\r\n        var tab_info = tabs_meta.tabMetaInfo;\r\n\r\n        var left = 0;\r\n        if (tabs_info && tab_info) {\r\n            var tmp_left = \"rtl\" === direction ? tabs_info.scrollLeftNormalized + tabs_info.clientWidth - tabs_info.scrollWidth : tabs_info.scrollLeft;\r\n            left = tab_info.left - tabs_info.left + tmp_left;\r\n        }\r\n        return {\r\n            left: left,\r\n            width: tab_info ? tab_info.width : 0\r\n        }\r\n    }\r\n\r\n    function getTabsMetaInfo(tabs, active_tab, direction) {\r\n        var tabs_meta_info = void 0;\r\n        if (tabs) {\r\n            var r = tabs.getBoundingClientRect();\r\n            tabs_meta_info = {\r\n                clientWidth: tabs ? tabs.clientWidth : 0,\r\n                scrollLeft: tabs ? tabs.scrollLeft : 0,\r\n                scrollLeftNormalized: tabs ? getNormalizedScrollLeft(tabs, direction) : 0,\r\n                scrollWidth: tabs ? tabs.scrollWidth : 0,\r\n                left: r.left,\r\n                right: r.right\r\n            }\r\n        }\r\n        var tab_meta_info = void 0;\r\n        if (tabs && false !== active_tab) {\r\n            tab_meta_info = active_tab.getBoundingClientRect();\r\n        }\r\n\r\n        return {\r\n            tabsMetaInfo: tabs_meta_info,\r\n            tabMetaInfo: tab_meta_info\r\n        }\r\n    }\r\n\r\n    function getNormalizedScrollLeft(tabs, direction) {\r\n        var a = tabs.scrollLeft;\r\n        if (\"rtl\" !== direction)\r\n            return a;\r\n        var n = getScrollType(tabs);\r\n        if (\"indeterminate\" === n)\r\n            return Number.NaN;\r\n        switch (n) {\r\n            case \"negative\":\r\n                return e.scrollWidth - e.clientWidth + a;\r\n            case \"reverse\":\r\n                return e.scrollWidth - e.clientWidth - a\r\n        }\r\n        return a\r\n    }\r\n\r\n    function getScrollType(tabs) {\r\n        if (!tabs || !window.document.body)\r\n            return \"indeterminate\";\r\n\r\n        var e = window.document.createElement(\"div\");\r\n        e.appendChild(document.createTextNode(\"ABCD\"));\r\n        e.dir = \"rtl\";\r\n        e.style.fontSize = \"14px\";\r\n        e.style.width = \"4px\";\r\n        e.style.height = \"1px\";\r\n        e.style.position = \"absolute\";\r\n        e.style.top = \"-1000px\";\r\n        e.style.overflow = \"scroll\";\r\n        document.body.appendChild(e);\r\n        type = \"reverse\";\r\n        if (e.scrollLeft > 0)\r\n            type = \"default\";\r\n        else {\r\n            e.scrollLeft = 1;\r\n            0 === e.scrollLeft && (type = \"negative\")\r\n        }\r\n        document.body.removeChild(e);\r\n        return type;\r\n    }\r\n\r\n    scrollSelectedIntoView = function (tabs, active_tab, direction) {\r\n        var tabs_meta = getTabsMetaInfo(tabs, active_tab, direction)\r\n        var tabs_info = tabs_meta.tabsMetaInfo;\r\n        var tab_info = tabs_meta.tabMetaInfo;\r\n\r\n        if (!tab_info || !tabs_info)\r\n            return;\r\n        \r\n        var scroll_info = void 0;\r\n        if (tab_info.left < tabs_info.left) {\r\n            scroll_info = tabs_info.scrollLeft + (tab_info.left - tabs_info.left);\r\n        } else if (tab_info.right > tabs_info.right) {\r\n            scroll_info = tabs_info.scrollLeft + (tab_info.right - tabs_info.right);\r\n        }             \r\n        return scroll_info;\r\n    }\r\n    \r\n})($);","/**\r\n * Material floating button\r\n * By: Nobita\r\n * Repo and docs: https://github.com/nobitagit/material-floating-button\r\n *\r\n * License: MIT\r\n */\r\n\r\n// build script hook - don't remove\r\n(function ($) {\r\n    $.fn.mfb = function (options) {\r\n        \"use strict\";\r\n\r\n        var animations = [\"mfb-zoomin\", \"mfb-slidein\", \"mfb-slidein-spring\", \"mfb-fountain\"];\r\n        var placements = [\"mfb-component--tl\", \"mfb-component--tr\", \"mfb-component--bl\", \"mfb-component--br\"];\r\n\r\n        /**\r\n         * Some defaults\r\n         */\r\n        var self = this;\r\n        var overlay = {\r\n            element: $(\"<div class='mfb-component__overlay'></div>\"),\r\n            opened: false\r\n        };\r\n\r\n        options = options || {};\r\n        options.buttons = options.buttons || [];\r\n        options.activePrincipalButton = options.activePrincipalButton || false;\r\n        options.placement = typeof options.placement !== \"undefined\" ? (placements.indexOf(options.placement) !== -1 ? options.placement : \"mfb-component--br\") : \"mfb-component--br\";\r\n        options.efect = typeof options.efect !== \"undefined\" ? (animations.indexOf(options.efect) !== -1 ? options.efect : \"mfb-slidein\") : \"mfb-slidein\";\r\n        options.clickHoverOpt = options.clickHoverOpt ||\"click\";\r\n        options.toggleMethod = options.toggleMethod || \"data-mfb-toggle\";\r\n        options.menuState = options.menuState || \"data-mfb-state\";\r\n        options.menuStateValue =  options.menuStateValue || \"closed\";\r\n        options.isOpen = options.isOpen||  \"open\";\r\n        options.isClosed = options.isClosed || \"closed\";\r\n        options.mainButtonClass = options.mainButtonClass || \"mfb-component__button--main\";\r\n        options.restingIcon = options.restingIcon || \"mo-icon bz-plus\";\r\n        options.activeIcon = options.activeIcon || \"mo-icon bz-cross\";\r\n\r\n        /**\r\n         * @todo ask: I think this is useless cause we don't need to remove the main button, remove the complete component will be cleaner\r\n         */\r\n        // $(\"[\" + options.toggleMethod + \"='\" + options.clickHoverOpt + \"'] .\" + options.mainButtonClass, this).remove();\r\n        $(this).children(\".mfb-component-holder\").remove();\r\n        /**\r\n         * @fix How about the events that was bind before?\r\n         */\r\n\r\n        var tmpl =\r\n            \"<ul class=\\\"mfb-component-holder #: data.placement # #: data.efect #\\\" #: data.toggleMethod #=\\\"#: data.clickHoverOpt #\\\" #: data.menuState#=\\\"#: data.menuStateValue #\\\">\" +\r\n            \"   <li class=\\\"mfb-component__wrap\\\">\" +\r\n            \"      #if (data.activePrincipalButton && data.buttons.length >= 1){#\" +\r\n            \"       <a #if(typeof data.buttons[0].label !== \\\"undefined\\\"){# data-mfb-label=\\\"#: data.buttons[0].label #\\\"#}# class=\\\"mfb-component__button--main\\\">\" +\r\n            \"           <i class=\\\"mfb-component__main-icon--resting mfb-icon-font bz-#:data.restingIcon#\\\"></i><i class=\\\"mfb-component__main-icon--active mfb-icon-font bz-#:data.buttons[0].icon#\\\"></i>\" +\r\n            \"       </a>\" +\r\n            \"       #}else{#\" +\r\n            \"       <a #if(typeof data.label !== \\\"undefined\\\"){# data-mfb-label=\\\"#: data.label #\\\"#}# class=\\\"mfb-component__button--main\\\">\" +\r\n            \"           <i class=\\\"mfb-component__main-icon--resting mfb-icon-font bz-#:data.restingIcon#\\\"></i><i class=\\\"mfb-component__main-icon--active mfb-icon-font bz-#:data.activeIcon#\\\"></i>\" +\r\n            \"       </a>\" +\r\n            \"       #}#\" +\r\n            \"       # if(data.buttons.length > 0){#\" +\r\n            \"       <ul class=\\\"mfb-component__list\\\">\" +\r\n            \"           #for(var i = (data.activePrincipalButton ? 1 : 0), len = data.buttons.length; i< len; i++){#\" +\r\n            \"           <li data-id=\\\"#: data.buttons[i].id #\\\">\" +\r\n            \"               <a href=\\\"#: data.buttons[i].link #\\\" data-index=\\\"#: i#\\\" #if(typeof data.buttons[i].label !== \\\"undefined\\\"){# data-mfb-label=\\\"#: data.buttons[i].label #\\\"#}# class=\\\"mfb-component__button--child\\\">\" +\r\n            \"                  <i class=\\\"mfb-component__child-icon mfb-icon-font bz-#: data.buttons[i].icon #\\\"></i>\" +\r\n            \"               </a>\" +\r\n            \"           </li>\" +\r\n            \"           #}#\" +\r\n            \"       </ul>\" +\r\n            \"       #}#\" +\r\n            \"   </li>\" +\r\n            \"</ul>\";\r\n\r\n        /**\r\n         * Internal references\r\n         */\r\n        var target,\r\n            currentState;\r\n\r\n        /**\r\n         * For every menu we need to get the main button and attach the appropriate evt.\r\n         */\r\n        function attachEvt(elems, evt, handler) {\r\n            for (var i = 0, len = elems.length; i < len; i++) {\r\n                elems[i].addEventListener(evt, handler, false);\r\n            }\r\n        }\r\n\r\n        function configureBlur(element, blur){\r\n            if(blur){\r\n                element.siblings().addClass(\"mfb-component__overlay--blur\");\r\n                element.closest(\"[data-role]\").siblings().addClass(\"mfb-component__overlay--blur\");\r\n            }else{\r\n                element.siblings().removeClass(\"mfb-component__overlay--blur\");\r\n                element.closest(\"[data-role]\").siblings().removeClass(\"mfb-component__overlay--blur\");\r\n            }\r\n        }\r\n\r\n        /**\r\n         * The open/close action is performed by toggling an attribute\r\n         * on the menu main element.\r\n         *\r\n         * First, check if the target is the menu itself. If it's a child\r\n         * keep walking up the tree until we found the main element\r\n         * where we can toggle the state.\r\n         */\r\n        function toggleButton(evt) {\r\n            target = evt.target;\r\n            while (target && !target.getAttribute(options.toggleMethod)) {\r\n                target = target.parentNode;\r\n                if (!target) {\r\n                    return;\r\n                }\r\n            }\r\n            currentState = target.getAttribute(options.menuState) === options.isOpen ? options.isClosed : options.isOpen;\r\n\r\n            if (options.activePrincipalButton && currentState !== \"open\") {\r\n                var button = options.buttons[0];\r\n                if (options.click) {\r\n                    options.click(evt, $.extend(button, {principal: true}), this);\r\n                }\r\n                configureBlur($(target), true);\r\n            }\r\n\r\n            if (currentState === \"open\" && !overlay.opened) {\r\n                overlay.element.appendTo(target).bind(\"click\", function() {\r\n                    this.remove();\r\n                    overlay.opened = false;\r\n                    target.setAttribute(options.menuState, \"close\");\r\n                    configureBlur($(target), false);\r\n                });\r\n                configureBlur($(target), true);\r\n            } else {\r\n                overlay.element.remove();\r\n                configureBlur($(target), false);\r\n            }\r\n\r\n            overlay.opened = !overlay.opened;\r\n\r\n            target.setAttribute(options.menuState, currentState);\r\n        }\r\n\r\n        function clickChildButton(evt) {\r\n            var index = $(this).data(\"index\");\r\n            var button = options.buttons[index];\r\n\r\n            $(\".mfb-component__overlay\", self).click();\r\n\r\n            if (options.click){\r\n                evt.preventDefault();\r\n                options.click(evt, $.extend(button, {principal: false}), this);\r\n            }\r\n        }\r\n\r\n        function clickPrincipalButton(evt) {\r\n            if (options.click) {\r\n                evt.preventDefault();\r\n                options.click(evt, { principal: true }, this);\r\n            }\r\n        }\r\n\r\n        var template = kendo.template(tmpl, { useWithBlock: false });\r\n        var html = template(options);\r\n\r\n        if (options.position === \"prepend\") {\r\n            this.prepend(html);\r\n        } else {\r\n            this.append(html);\r\n        }\r\n\r\n        // Principal button to toggle\r\n        var toggle = options.buttons.length > 0 ? toggleButton : clickPrincipalButton;        \r\n        attachEvt($(\"[\" + options.toggleMethod + \"='\" + options.clickHoverOpt + \"'] .\" + options.mainButtonClass, this), \"click\", toggle);        \r\n\r\n        // Secondary buttons to click\r\n        attachEvt($(\".mfb-component__button--child\", this), \"click\", clickChildButton);\r\n    };\r\n\r\n// build script hook - don't remove\r\n})(jQuery);\r\n\r\n\r\n(function ($) {\r\n    $.fn.bz_navigation_buttons = function (options) {        \r\n        options = options || {};\r\n        var MARGIN = 2;\r\n        var buttons = options.buttons || [];\r\n        var isDesign = options.isDesign || false;\r\n        var lastActionExecuted = options.lastActionExecuted || false;\r\n        var allowAddButtons = options.allowAddButtons || false;\r\n        var $element = this;\r\n        \r\n\r\n        var addButtonTemplate = '<div class=\"bz-button--add\"><svg class=\"ico_16x16\" ><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-plus\"></use></svg></div>';        \r\n        var containerTemplate = '<ul class=\"bz-buttons--container\"></ul>';\r\n        var buttonTemplate ='<li class=\"bz-button--container\"><button class=\"bz-btn\">{0}</button></li>';        \r\n        var rightNavigationButton = '<div class=\"bz-button--rigth\"><svg class=\"ico_16x16\" ><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-arrow-rigth\"></use></svg></div>';\r\n        var leftNavigationButton = '<div class=\"bz-button--left\"><svg class=\"ico_16x16\" ><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#icon-arrow-left\"></use></svg></div>';       \r\n        \r\n        $element.empty();\r\n        $element.addClass('bz-buttons--navigation');\r\n\r\n        var $container = $(containerTemplate);\r\n        $container.appendTo($element);    \r\n                   \r\n        \r\n        var processButtons = function(){                      \r\n            var result = MARGIN;\r\n            for (var index = 0; index < buttons.length; index++) {\r\n                (function(button){\r\n                    var caption = button.properties.caption;                            \r\n                    var $elementButton =  $(buttonTemplate.replace(\"{0}\", caption));\r\n                    var height = 0;    \r\n\r\n                    var handlerOnClickButton = function(){                                                \r\n                        $container.trigger('onSelectButton', {\r\n                            $element: $elementButton,\r\n                            button: button\r\n                        });\r\n                        \r\n                        var targetElement = $container.get(0);\r\n                        var clientWidth = targetElement.clientWidth; \r\n                        var offset = isDesign ? 35 : 0;\r\n\r\n                        if (targetElement.scrollWidth > clientWidth){\r\n                            if (height > clientWidth) { targetElement.scrollLeft = (height - clientWidth) + offset }\r\n                            else {\r\n                                if ((height - targetElement.scrollLeft) < targetElement.scrollLeft) { targetElement.scrollLeft = (height - (targetElement.scrollLeft + offset)); }\r\n                            }                            \r\n                        }\r\n                    };\r\n                    \r\n                    $elementButton    \r\n                        .on('click', handlerOnClickButton)\r\n                        .appendTo($container);\r\n                    \r\n                    height = result = result + $elementButton.get(0).offsetWidth + MARGIN;    \r\n\r\n                }(buttons[index].button), result)                                                                                                                                                      \r\n            };\r\n                             \r\n            \r\n            if (isDesign) {\r\n                var $addButton = $(addButtonTemplate);\r\n                \r\n                if (allowAddButtons){\r\n                    $addButton.click(function(){                   \r\n                        $container.trigger('onAddButton');                                                            \r\n                    });\r\n        \r\n                    $addButton.appendTo($element);\r\n                }\r\n                \r\n                var htmlButtons = $container.get(0);\r\n\r\n                var heightAddButton = $addButton.get(0).scrollWidth;\r\n                var heightWrapper = $element.get(0).scrollWidth;\r\n                var heightButtons =  htmlButtons.scrollWidth;          \r\n                \r\n                \r\n                var $rightNavigationButton = $(rightNavigationButton);\r\n                var rightNavigationButtonIsLocated = heightButtons > (heightWrapper - heightAddButton);\r\n\r\n                if (rightNavigationButtonIsLocated) { $rightNavigationButton.insertAfter($container); }\r\n\r\n                $rightNavigationButton.on(\"click\", function(){\r\n                    htmlButtons.scrollLeft += 40;\r\n                });\r\n                \r\n                var leftNavigationButtonIsLocated = false;\r\n                var $leftNavigationButton = $(leftNavigationButton);\r\n                                \r\n\r\n                $leftNavigationButton.on(\"click\", function(){                    \r\n                    htmlButtons.scrollLeft -= 40;                    \r\n                });\r\n\r\n                $container.on(\"scroll\", function(ev){\r\n                    var targetElement = ev.target;                     \r\n                    var maxScrollLeft = targetElement.scrollWidth - targetElement.clientWidth;\r\n                    var scrollLeft = targetElement.scrollLeft;\r\n\r\n                    if ( scrollLeft === 0 && leftNavigationButtonIsLocated) {\r\n                        leftNavigationButtonIsLocated = false;\r\n                        $leftNavigationButton.detach();\r\n                    }\r\n\r\n                    if (rightNavigationButtonIsLocated && scrollLeft === maxScrollLeft) {\r\n                        rightNavigationButtonIsLocated = false;\r\n                        $rightNavigationButton.detach();\r\n                    }\r\n                                        \r\n                    if (!leftNavigationButtonIsLocated && scrollLeft > 0){\r\n                       \r\n                        $leftNavigationButton.prependTo($element);     \r\n                        leftNavigationButtonIsLocated = true;\r\n                    }\r\n                    \r\n                    if (!rightNavigationButtonIsLocated && scrollLeft < maxScrollLeft){\r\n                        rightNavigationButtonIsLocated = true;\r\n                        $rightNavigationButton.insertAfter($container);       \r\n                    }                    \r\n                });\r\n                \r\n                if (lastActionExecuted === \"addButton\") {\r\n                    if (rightNavigationButtonIsLocated){\r\n                        htmlButtons.scrollLeft = (htmlButtons.scrollWidth - htmlButtons.clientWidth);  \r\n                    }                    \r\n                }\r\n            }\r\n        }              \r\n\r\n        processButtons();\r\n        \r\n        return  $container; \r\n    }\r\n\r\n})(jQuery);    ","/*\r\nAdd the Material Design Style Ripple Effect on Click / Touch.\r\n*/\r\n(function ($) { \r\n    var transparent;\r\n    //only run this once. this addes an empty elment in boody root and gets the defintion of the browsers transparent color scheme.\r\n    if (typeof (transparent) == \"undefined\") {\r\n        // Get this browser's definition of no back ground / transprent, rgba(0,0,0,0) etc..\r\n        // Must be appended else Chrome etc return 'initial'\r\n        var $temp = $('<div style=\"background:none;display:none;\"/>').appendTo('body');\r\n        //now we just get the value given back to use by the browser for its spcific transparent color scheme.\r\n        transparent = $temp.css('backgroundColor');\r\n        //remove the temp object since were done with it.\r\n        $temp.remove();\r\n    }\r\n\r\n\r\n    //add Material desing style rippple effect to a given element that animates on click / touch.\r\n    $.fn.rippleEffect = function (options) {\r\n        // Extend our default options with those provided.\r\n        var opts = $.extend({}, $.fn.rippleEffect.defaults, options);\r\n\r\n\r\n        return this.each(function () {\r\n            $(this).on(\"click\", function (e) {\r\n                var $thisElement = $(this),\r\n                eventPageX,\r\n                eventPageY,\r\n                inkX,\r\n                inkY,\r\n                maxDiameter,\r\n                eventType = e.type,\r\n                rippleColor,\r\n                $inkSpan,\r\n                $inkparent;\r\n\r\n                //default append\r\n                $inkparent = $thisElement;\r\n\r\n                function getRippleColorFromTraverse() {\r\n                    if (opts.inkColor != \"\") {\r\n                        return opts.inkColor;\r\n                    } else {\r\n                        //try and get from elemnt or parent what ever has a bg color and it will lighten or dark based on color.\r\n                        return getInkColor($inkparent, opts.inkDefaultColor);\r\n                    }\r\n                }\r\n                //check to see if were appending ink to a parent element other than the trigger\r\n                //if you append to a parent item that item will have the ripple span and it may block access to links\r\n                //all i had to do was give any of the siblings of the ripple a z-index of 1, some i had to set position to relative.\r\n                if (opts.appendInkTo != \"\") {\r\n                    $inkparent = $thisElement.closest(opts.appendInkTo);\r\n                }\r\n                // check to se if we have an ink, if not we need to add it in, we only need to do this once.\r\n                if ($inkparent.find(\".\" + opts.inkClass).length == 0) {\r\n                    //add ink \r\n                    $inkparent.append('<span class=\"' + opts.inkContainerClass + '\"><span class=\"' + opts.inkClass + '\"></span></span>');\r\n                }\r\n                //set the ink var targeting the ink within the element to prevent dup ink animates.\r\n                $inkSpan = $inkparent.find(\".\" + opts.inkContainerClass + \" > \" + \" .\" + opts.inkClass);\r\n                //incase of quick double click or animate is present. remove the animation\r\n                $inkSpan.removeClass(\"animate\");\r\n\r\n                //now if the ink has no height set we need to add it in.\r\n                if (!$inkSpan.height() && !$inkSpan.width()) {\r\n                    //use $thisElement width or height whichever is larger for the diameter to make a circle which can cover the entire element.\r\n                    maxDiameter = Math.max($inkparent.outerWidth(), $inkparent.outerHeight());\r\n                    //set width and height and get bg color for the\r\n                    //see if ripple color was provided via data attr.\r\n                    if (typeof ($thisElement.data(\"ripple\")) != \"undefined\" && $thisElement.data(\"ripple\") != \"\") {\r\n                        rippleColor = $thisElement.data(\"ripple\");\r\n                    } else {\r\n                        //check if a target element id to get a ripple color from is provided\r\n                        if (typeof ($thisElement.data(\"ripple-getcolorfromid\")) != \"undefined\" && $thisElement.data(\"ripple-getcolorfromid\") != \"\") {\r\n                            var idToUse = $thisElement.data(\"ripple-getcolorfromid\");\r\n                            //make sure element is on page.\r\n                            if ($(idToUse).length > 0) {\r\n                                //set from given elmements bgcolor.\r\n                                rippleColor = $(idToUse).css(\"background-color\");\r\n                            } else {\r\n                                //get from default ways\r\n                                rippleColor = getRippleColorFromTraverse();\r\n                            }\r\n                        } else {\r\n                            //get from default ways\r\n                            rippleColor = getRippleColorFromTraverse();\r\n                        }\r\n                    }\r\n                    //set h and w and ripple color.\r\n                    $inkSpan.css({ height: maxDiameter, width: maxDiameter, \"background-color\": rippleColor });\r\n                }\r\n                \r\n                //now that the ink is taken care of we need to set the position where it starts, which if from click.\r\n                //get event type.\r\n                if(eventType === \"click\"){\r\n                    eventPageX = e.pageX; \r\n                    eventPageY = e.pageY;\r\n                } else if(eventType === \"touchstart\") {\r\n                    var touch = (e.originalEvent.touches[0] || e.originalEvent.changedTouches[0]);\r\n                    eventPageX = touch.pageX;\r\n                    eventPageY = touch.pageY\r\n                }\r\n               \r\n                inkX = (eventPageX - $inkparent.offset().left - $inkSpan.width() / 2);\r\n                inkY = (eventPageY - $inkparent.offset().top - $inkSpan.height() / 2);\r\n                $inkSpan.css({ top: inkY + 'px', left: inkX + 'px' }).addClass(\"animate\");\r\n                //remove animation after a little bit.\r\n                setTimeout(function () {\r\n                    $inkSpan.removeClass(\"animate\")\r\n                }, 400);\r\n\r\n            });\r\n        });\r\n    };\r\n    // Plugin defaults – added as a property on our plugin function.\r\n    $.fn.rippleEffect.defaults = {\r\n        inkContainerClass: \"ripple\",\r\n        inkClass: \"ink\",\r\n        //to avoid a global default you can add data-ripple=\"#ff00ff\" to the element that will have the ripple and that color will be used.\r\n        //or to use a tagrget elements background color for the ripple you can set the data-ripple=\"\" and data-ripple-getcolorfromid=\"#elmentWIthBGColorToUSe\"\r\n        inkDefaultColor: \"#F0F0F0\", //falback color to use if using parent traversing to get a bg color.\r\n        inkColor: \"\", //the ink color you want the element to use, this will override any bg checks for element and parent traversing, but if the ement has data-ripple=\"#fff\" the #fff will be used above all else\r\n        //if you append to a parent item that item will have the ripple span and it may block access to links and child elements\r\n        //all i had to do was give any of the children of the appended element a z-index of 1, some i had to set position to relative.\r\n        appendInkTo: \"\" //append ink to a diffrent element. will find closest element matching.\r\n    };\r\n\r\n    //Now users can include a line like this in their scripts:\r\n    //$.fn.rippleEffect.defaults.inkDefaultColor = \"#0000FF\";\r\n\r\n    // Define our get background color function.\r\n    //this will try and get a background color for the ink color manipulation \r\n    //by starting with the element provided and going as far back to the body unless a value is found.\r\n    //providing a falback value will make sure that an actual color is returned\r\n    function getBackgroundColorForInk($element, fallback) {\r\n        function getBgColor($elementToCheckForBg) {\r\n            //here we check against the @transparent var that is set on load.\r\n            if ($elementToCheckForBg.css('backgroundColor') == transparent) {\r\n                //here we check if were not at body, if not, then run again on the elments parent, if were at body use fallback or the browers take on transparent.\r\n                return !$elementToCheckForBg.is('body') ? getBgColor($elementToCheckForBg.parent()) : fallback || transparent;\r\n            } else {\r\n                //it was not transparent return this color.\r\n                return $elementToCheckForBg.css('backgroundColor');\r\n            }\r\n        }\r\n        //run the function which will repeate as long as it needs until it hits body to find a color to use.\r\n        return getBgColor($element);\r\n    };\r\n\r\n    //create as a property so users can set make there own lum check.\r\n    //returns the direction lumination should go for ink contrast.\r\n    //get the lumination value for a given color.\r\n    $.fn.rippleEffect.getLuminationValue = function (hexcolor) {\r\n        var hexcolor = hexcolor.substring(1);      // strip #\r\n        var rgb = parseInt(hexcolor, 16);   // convert rrggbb to decimal\r\n        var r = (rgb >> 16) & 0xff;  // extract red\r\n        var g = (rgb >> 8) & 0xff;  // extract green\r\n        var b = (rgb >> 0) & 0xff;  // extract blue\r\n\r\n        var luma = 0.2126 * r + 0.7152 * g + 0.0722 * b; // per ITU-R BT.709\r\n        return luma;\r\n    }\r\n\r\n    //create as property, for user override. \r\n    //this was from a site point article.\r\n    //get a new color luminance -0.15 is darker by 15% and 0.20 is lighter by 20%\r\n    $.fn.rippleEffect.getColorLuminance = function (hexcolor, lum) {\r\n        // validate hex string\r\n        hexcolor = String(hexcolor).replace(/[^0-9a-f]/gi, '');\r\n        if (hexcolor.length < 6) {\r\n            hexcolor = hexcolor[0] + hexcolor[0] + hexcolor[1] + hexcolor[1] + hexcolor[2] + hexcolor[2];\r\n        }\r\n        //set a default lum value.\r\n        lum = lum || 0;\r\n\r\n        // convert to decimal and change luminosity\r\n        var resultHex = \"#\", c, i;\r\n        for (i = 0; i < 3; i++) {\r\n            c = parseInt(hexcolor.substr(i * 2, 2), 16);\r\n            c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\r\n            resultHex += (\"00\" + c).substr(c.length);\r\n        }\r\n\r\n        return resultHex;\r\n    }\r\n\r\n    //create property for overide if wanted, this converts an rgb value to hex.\r\n    //it does not work right with rgba though it just returns the bas rgb part so the trans is not claculated in.\r\n    $.fn.rippleEffect.colorToHex = function (rgb) {\r\n        //first echeck to see if we already have a hex color, if so just return.\r\n        if (rgb.substr(0, 1) === '#') {\r\n            return color;\r\n        }\r\n        rgb = rgb.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i);\r\n        return (rgb && rgb.length === 4) ? \"#\" +\r\n         (\"0\" + parseInt(rgb[1], 10).toString(16)).slice(-2) +\r\n         (\"0\" + parseInt(rgb[2], 10).toString(16)).slice(-2) +\r\n         (\"0\" + parseInt(rgb[3], 10).toString(16)).slice(-2) : '';\r\n    }\r\n\r\n    //this is the base function that does all of the magic, it gets a bkg color, \r\n    //then changes the colors lumanince so the ink is visiable when being animated.\r\n    function getInkColor($element, fallBackColor) {\r\n        var backgroundOrInhreitedBackGround,\r\n            hex,\r\n            luma,\r\n            returnLumintion;\r\n        //get back ground color of element / or parent with an actual color or use fallback of a lighter gray \r\n        // Call our getBackgroundColorForInk function.\r\n\r\n        backgroundOrInhreitedBackGround = getBackgroundColorForInk($element, fallBackColor);\r\n        //convert to hex, this returns hex if it is already hex.\r\n        //call our colorToHex function\r\n        hex = $.fn.rippleEffect.colorToHex(backgroundOrInhreitedBackGround);\r\n        //now get the lumination value of this bg.\r\n        //call our getLuminationValue function\r\n        luma = $.fn.rippleEffect.getLuminationValue(hex);\r\n\r\n        //239 for lighter lumination ok \r\n        if (luma <= 239) {\r\n            //go lighter alwasy prefered.\r\n            //we need to make sure we are light enough though\r\n            if (luma <= 70) {\r\n                returnLumintion = $.fn.rippleEffect.getColorLuminance(hex, 0.80);\r\n            } else {\r\n                returnLumintion = $.fn.rippleEffect.getColorLuminance(hex, 0.20);\r\n            }\r\n        } else {\r\n            //go darker\r\n            returnLumintion = $.fn.rippleEffect.getColorLuminance(hex, -0.15);\r\n        }\r\n        return returnLumintion;\r\n    };\r\n\r\n})(jQuery);","/*\r\n*   Name: Bizagi Grid for Smartphone\r\n*   Author: Bizagi UI Forms\r\n*   Comments:\r\n*   -   This widget will extend the bizagi grid widget to specialize into a smartPhone view\r\n*\r\n*   \r\n*\r\n*   Styles:\r\n*   - css/bizagi/smarpthone/controls/bizagi.grid.css\r\n*/\r\n\r\n(function ($) {\r\n    $.widget('ui.bizagi_grid_smartphone', $.ui.bizagi_grid, {\r\n\r\n        /*\r\n        *   Method to attach any handler to the grid\r\n        */\r\n        attachHandlers: function () {\r\n            var self = this;\r\n\r\n            // Add paging events\r\n            var pager = self._getComponent(\"pager\");\r\n            pager.on(\"click\", \"div.bz-btn-icn\", function () {\r\n                var pageNumber = $(this).attr(\"data-page-number\");\r\n                if (pageNumber && self.isValid()) {\r\n                    self.changePage(pageNumber);\r\n                }\r\n            });\r\n\r\n            pager.on(\"change\", \"input\", function () {\r\n                var page = this.value;\r\n                if (page && self.isValid()) {\r\n                    var _input = this;\r\n                    self.changePage(page, /*success*/function () { }, /*fail*/function () {\r\n                        _input.value = self.page;\r\n                    });\r\n                }\r\n            });\r\n\r\n            if (self._getComponent(\"buttons\") != undefined) {\r\n                var items = [];\r\n                if (self.options.actions.add) {\r\n                    items.push({\r\n                        name: bizagi.localization.getResource(\"render-grid-add-label\"),\r\n                        fn: function () {\r\n                            self.processAction(\"add\");\r\n                            self.unselectRow();\r\n                        }\r\n                    });\r\n                }\r\n\r\n                if (self.options.actions.hasTotalizer) {\r\n                    items.push({\r\n                        name: \"Totalizer\", // TODO: Add resource\r\n                        fn: function () {\r\n                            self.totalizer();\r\n                        }\r\n                    });\r\n                }\r\n\r\n                self._getComponent(\"buttons\").find(\".bz-btn-icn\").overflowMenu({ items: items });\r\n            }\r\n\r\n            // Bind special cell button action\r\n            var _row_buttons = self._getComponent(\"rowButtons\");\r\n            if (_row_buttons){\r\n                _row_buttons.on(\"click\", \"[data-action]\", function () {\r\n                    self.processAction($(this).attr(\"data-action\"), {});\r\n                });\r\n            } \r\n        },\r\n        /* popup Total\r\n         *\r\n         */\r\n        totalizer: function () {\r\n            var self = this;\r\n            self.options.totalData();\r\n        },\r\n\r\n        /*totalData\r\n         *   prepare totalizer\r\n        */\r\n        draw: function () {\r\n            var self = this;\r\n            self._super();\r\n            var verifyTotalizer = self.options.actions.totalizer;\r\n            if (self.data.rows.length == 0) {\r\n                var rowButtons =  self._getComponent(\"rowButtons\");\r\n                if (rowButtons){\r\n                    rowButtons.hide();\r\n                }\r\n                self.element.addClass(\"bz-mobile-grid--empty\");\r\n            }\r\n            //Verify totalizer to activate action sheet\r\n            if (verifyTotalizer) {\r\n                if (typeof self.actualActionSheet != \"undefined\" && !bizagi.util.isObjectEmpty(self.actualActionSheet)) {\r\n                    self.actualActionSheet.data(\"kendoMobileActionSheet\").destroy();\r\n                }\r\n\r\n                self.actualActionSheet = self.element.find(\"#ui-bizagi-menu-totalizer\").kendoMobileActionSheet();\r\n            }\r\n\r\n            //hide loader\r\n            bizagi.util.smartphone.stopLoading();\r\n        },\r\n\r\n        drawRow: function (rowData, isNewRow) {\r\n            this.selectedBusinessKey = rowData[this.columnKeyIndex];\r\n            return this._super(rowData, isNewRow);\r\n        },\r\n\r\n        changePage: function (page, success_callback, fail_callback) {\r\n            var self = this;\r\n            var currentPage = Number(self.data.page);\r\n            //in the smartphone the original  self.data.total is always 1  this change to self.data.records refers in this case a total pages\r\n            var total = self.data.records;\r\n            var newPage = page;\r\n\r\n            // Process previous page\r\n            if (page == \"previous\") {\r\n                if (currentPage > 1) newPage = currentPage - 1;\r\n                else {\r\n                    if (fail_callback) fail_callback();\r\n                    return;\r\n                }\r\n            }\r\n            // Process next page\r\n            if (page == \"next\") {\r\n                if (currentPage < total) newPage = currentPage + 1;\r\n                else {\r\n                    if (fail_callback) fail_callback();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (page !== \"next\" && page !== \"previous\" && typeof page === \"string\") {\r\n                try {\r\n                    newPage = Number(page);\r\n                }\r\n                catch (e) {\r\n                    if (fail_callback) fail_callback();\r\n                    return;\r\n                }\r\n                if (newPage == NaN || newPage > total || newPage < 0) {\r\n                    if (fail_callback) fail_callback();\r\n                    return;\r\n                };\r\n            }\r\n\r\n            //show loader\r\n            bizagi.util.smartphone.startLoading();\r\n            setTimeout(function () {\r\n                bizagi.util.smartphone.stopLoading();\r\n            }, 1000);\r\n\r\n            // Update internal options\r\n            self.page = Number(newPage);\r\n\r\n            // Execute handler\r\n            self.onPageRequested();\r\n            if (success_callback) {\r\n                success_callback();\r\n            }\r\n        },\r\n\r\n        /*\r\n        *   Executes the row selected handler\r\n        */\r\n        onRowSelected: function () {\r\n            var self = this;\r\n            // Call base\r\n            $.ui.bizagi_grid.prototype.onRowSelected.apply(self, arguments);\r\n        },\r\n\r\n        /*\r\n        *   Executes the row un-selected handler\r\n        */\r\n        onRowUnselected: function () {\r\n            var self = this;\r\n            // Call base\r\n            $.ui.bizagi_grid.prototype.onRowUnselected.apply(self, arguments);\r\n        },\r\n\r\n        /*\r\n        *  Template method to check if buttons component must be rendered\r\n        */\r\n        _canShowButtons: function () {\r\n            var self = this;\r\n            var actions = self.options.actions;\r\n            return actions[\"add\"] || actions[\"edit\"] || actions[\"remove\"]  || actions[\"details\"];\r\n        },\r\n\r\n        /*\r\n        *  Template method to check if row buttons must be displayed when the row is selected\r\n        */\r\n        _canShowRowButtons: function () {\r\n            var self = this;\r\n            var actions = self.options.actions;\r\n            return actions[\"edit\"] || actions[\"remove\"];\r\n        },\r\n\r\n        /*\r\n        *   Return the new created ids\r\n        */\r\n        getNewRowKeys: function () {\r\n            var self = this;\r\n            var rows = self._getComponent(\"rows\").find(\"[data-new-row]\");\r\n            return $.map(rows, function (row, i) {\r\n                return $(row).data(\"business-key\");\r\n            });\r\n        },\r\n\r\n\r\n        /*\r\n        *   Show the row buttons\r\n        */\r\n        _showRowButtons: function () {\r\n        },\r\n\r\n        /*\r\n        *   Hide the row buttons\r\n        */\r\n        _hideRowButtons: function () {\r\n        },\r\n\r\n        /**\r\n         * Replaces a matched element in the container for the specified \"replace\" element\r\n         * @param html\r\n         * @param element\r\n         * @param replace\r\n         * @returns {*}\r\n         * @private\r\n         */\r\n        _replaceElement: function (html, element, replace) {\r\n            return html.replace(new RegExp(\"{{element \" + element + \"}}\", 'g'), replace);\r\n        },\r\n        \r\n        /**\r\n         * Check if row its new\r\n         * @param {} businessKey\r\n         * @returns {}\r\n         */\r\n        isNewRecord: function (businessKey) {\r\n            var self = this;\r\n            var row = self._getComponent(\"rows\");\r\n\r\n            if (row) {\r\n                businessKey = row.find(\"[data-business-key='\" + businessKey + \"']\");\r\n                if ($(businessKey).data(\"new-row\")) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    });\r\n\r\n})(jQuery);\r\n","/**\r\n * Name:\r\n *   Author: Bizagi Mobile team\r\n *   Comments:\r\n * Structure to applicate plugin\r\n *  <div class=\"bz-bizagi-container-tap-popup\"> //container\r\n    <div class=\"cell bz-container-items-tabs\"> // represent item of tab\r\n    <span >${displayName}</span>// the first span always is the title                                    \r\n    <span> ........</span> // after the span can place the items you want\r\n    <div> .........</div> // etc\r\n    </div> <!-- end cell-->\r\n    </div><!-- end bz-bizagi-container-tap-popup-->\r\n**/\r\n(function ($) {\r\n    $.fn.bztabs = function (params) {\r\n\r\n        var self = $(this);\r\n\r\n        params = params || {};\r\n        params.activeTab = params.activeTab || 0;\r\n        params.tabNumber = params.tabNumber || 1;\r\n\r\n\r\n        var activate = (params.activate && typeof params.activate === \"function\") ? params.activate : function () { };\r\n        var beforeActivate = (params.beforeActivate && typeof params.beforeActivate === \"function\") ? params.beforeActivate : function () { };\r\n\r\n        // PopUp control\r\n        var popUp = self.find(\">div.bz-bizagi-container-tap-popup\").hide();\r\n        // Depending on tabNumber a percentage will be in the width of each tab\r\n        var tabCountPopup = popUp.children().length;\r\n        // Base to build the header of tabs\r\n        var tabHeader = $(\"<div class='bz-header_select'></div>\");\r\n\r\n        var tabCountReal = (params.tabNumber > tabCountPopup) ? tabCountPopup : params.tabNumber;\r\n\r\n        // round down\r\n        var widthRow = Math.floor(100 / Number(tabCountReal));\r\n\r\n        // Duplicate the tabs to create the header\r\n        popUp.children().each(function (i, item) {\r\n            tabHeader.append(\r\n                \"<div class='bz-wp-tabs-ui bz-wp-tabs-item' data-index='\" + i + \"' data-reference-tab='\" +\r\n                item.getAttribute(\"data-reference-tab\") + \"'><span>\" +\r\n                item.textContent + \"</span></div>\");\r\n        });\r\n\r\n        tabHeader.find(\"> .bz-wp-tabs-ui\").css(\"width\", widthRow + \"%\");        \r\n        tabHeader.append(\"<div class='bz-wp-tabs-arrow-container'><div class='bz-cm-icon bz-mo-icon bz-plus'></div></div>\");\r\n\r\n        self.prepend(tabHeader);\r\n\r\n        var tabCurrent = self.find(\"> .bz-bizagi-container-tap-popup > .bz-container-items-tabs\").eq(params.activeTab);\r\n        var itemCurrent = $($(tabCurrent).data(\"reference-tab\"), self);\r\n\r\n        itemCurrent.addClass(\"childrenActive\");\r\n        tabCurrent.addClass(\"tabSelected\");\r\n\r\n        // Mark the selected tab in the header\r\n        var activeTab = $(\".bz-wp-tabs-ui:nth-child(\" + (params.activeTab + 1) + \")\", tabHeader).addClass(\"tabSelected\");\r\n\r\n        // The new width will be added to the tabSelected in order to complete the 100% on tabs\r\n        var widthTabSelected = widthRow + (100 - (widthRow * tabCountReal));\r\n        activeTab.css(\"width\", widthTabSelected + \"%\");\r\n\r\n        function updateTabSize() {\r\n            if (params.tabNumber < tabCountPopup) {\r\n                // Select the current tab\r\n                $(\".bz-wp-tabs-arrow-container\", self).first().addClass(\"show-pluss\");\r\n                tabHeader.addClass(\"show-pluss\");\r\n                activeTab.trigger(\"click\", { origin: \"popUp\" });\r\n            } else {\r\n                $(\".bz-wp-tabs-arrow-container\", self).removeClass(\"show-pluss\");\r\n                tabHeader.removeClass(\"show-pluss\");\r\n                tabHeader.find(\"> .bz-wp-tabs-ui:last\").addClass(\"bz-wp-no-border\");\r\n            }\r\n        }\r\n\r\n        // Reorder tabs\r\n        function reorderTabs(dataRef) {\r\n\r\n            var tempTabs = tabHeader.find(\".bz-wp-tabs-ui\");\r\n            var moveAtTheEnd = true;\r\n\r\n            tempTabs.each(function (i, item) {\r\n                if (dataRef !== item.getAttribute(\"data-reference-tab\") && moveAtTheEnd) {\r\n                    tabHeader.remove(\"[data-reference-tab='\" + dataRef + \"']\");\r\n                    tabHeader.append(item);\r\n                } else {\r\n                    moveAtTheEnd = false;\r\n                }\r\n            });\r\n        }\r\n\r\n        // Change tabs\r\n        function changeTab(e, params) {\r\n\r\n            params = params || {};\r\n            params.origin = params.origin || \"header\";\r\n\r\n            e.stopPropagation();\r\n            e.preventDefault();\r\n\r\n            if ($(this).hasClass(\"tabSelected\") && params.origin !== \"popUp\") {\r\n                return;\r\n            }\r\n\r\n            var dataRef = e.currentTarget.getAttribute(\"data-reference-tab\");\r\n            var tabChildren = $(dataRef, self);\r\n\r\n            activeTab = $(e.currentTarget);\r\n            // Changes the visibility of the contents of the tabs\r\n            self.find(\">div.childrenActive\").removeClass(\"childrenActive\");\r\n            tabChildren.addClass(\"childrenActive\");\r\n\r\n            // Add the normal width\r\n            tabHeader.find(\">div.tabSelected\").removeClass(\"tabSelected\").css(\"width\", widthRow + \"%\");\r\n\r\n            if (popUp.css(\"display\") === \"block\") {\r\n                popUp.toggle();\r\n            }\r\n\r\n            if (params.origin && params.origin === \"popUp\") {\r\n                activeTab = $(\"[data-reference-tab='\" + dataRef + \"']\", tabHeader);\r\n                reorderTabs(dataRef);\r\n            }\r\n\r\n            // Add the new width for tabSelected to complete the 100%\r\n            activeTab.addClass(\"tabSelected\").css(\"width\", widthTabSelected + \"%\");\r\n            activate(e, params);\r\n        }\r\n\r\n        if (typeof (params.domIncluded) !== \"undefined\") {\r\n            // Until the control is added to the DOM can be known widths to add the icon popup         \r\n            $.when(params.domIncluded).done(function () {\r\n                updateTabSize();\r\n            });\r\n        } else {\r\n            updateTabSize();\r\n        }\r\n\r\n        // Attach events\r\n        self.find(\".bz-wp-tabs-arrow-container\").first().bind(\"click\", function (event) {\r\n\r\n            // Determine if an item is visible or not\r\n            var headerWidth = (tabHeader.innerWidth() - 29);\r\n            var totalWidth = 0;\r\n\r\n            // Remove the visible elements\r\n            $(\".bz-container-items-tabs\", popUp).removeClass(\"show\");\r\n\r\n            tabHeader.find(\".bz-wp-tabs-ui\").each(function (i, item) {\r\n\r\n                totalWidth += $(\":first-child\", item).outerWidth();\r\n\r\n                // If \"true\" then it is a tab to display the popup\r\n                if (totalWidth > headerWidth) {\r\n\r\n                    popUp.children().each(function (j, pop) {\r\n                        if (pop.textContent === item.textContent) {\r\n                            $(pop).addClass(\"show\");\r\n                            $(\".cell.bz-container-items-tabs\").css(\"border-bottom\", \"\");\r\n                            $(\".cell.bz-container-items-tabs.show\").last().css(\"border-bottom\", \"none\");\r\n\r\n                            return;\r\n                        }\r\n                    });\r\n                }\r\n            });\r\n\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n            popUp.toggle();\r\n        });\r\n\r\n        $(\">div.cell\", popUp).bind(\"click\", function (e) {\r\n            changeTab(e, { origin: \"popUp\" });\r\n        });\r\n\r\n        $(\".bz-wp-tabs-ui\", tabHeader).bind(\"click\", changeTab);\r\n\r\n        tabHeader.bind(\"resizeHeader\", function () {\r\n            updateTabSize();\r\n        });\r\n    };\r\n})(jQuery);","/*\r\n*   Name: BizAgi Element Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a base class with common stuff related to all renders and containers\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.element\", {\r\n    ELEMENT_TYPE_CONTAINER: 1,\r\n    ELEMENT_TYPE_RENDER: 2,\r\n    ELEMENT_TYPE_COLUMN: 3\r\n}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Set render factory\r\n        this.renderFactory = params.renderFactory;\r\n\r\n        // Set data service\r\n        this.dataService = params.dataService;\r\n\r\n        // Set reference to parent\r\n        this.parent = params.parent;\r\n\r\n        // Set l10n service\r\n        this.resources = bizagi.localization;\r\n\r\n        // Set the observable element\r\n        this.observableElement = $(\"<div />\");\r\n\r\n        // Set the dispose flag\r\n        this.disposed = false;\r\n\r\n        // Update data\r\n        this.initializeData(params.data);\r\n\r\n        // Define an object to hold the subscribe collection\r\n        this.subscribers = [];\r\n    },\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Set the internal data\r\n        this.properties = {};\r\n        if (data && data.properties) this.properties = data.properties;\r\n\r\n        // Set xpath context\r\n        this.properties.xpathContext = this.getXpathContext();\r\n\r\n        // Set page cache\r\n        this.properties.idPageCache = this.getPageCache();\r\n    },\r\n\r\n    /*\r\n    *   Returns the xpath context of the element\r\n    */\r\n    getXpathContext: function () {\r\n        // By default return parent's xpath context\r\n        // This method is overriden in form container which contains the real xpath context\r\n\r\n        return (this.parent != undefined && typeof this.parent.getXpathContext == \"function\") ? this.parent.getXpathContext() : \"\";\r\n    },\r\n\r\n    /*\r\n    *   Returns the page cache for the current element\r\n    */\r\n    getPageCache: function () {\r\n        // By default return parent's page cache\r\n        // This method is overriden in form container which contains the real page cache\r\n\r\n        return (this.parent != undefined && typeof this.parent.getPageCache == \"function\") ? this.parent.getPageCache() : \"\";\r\n    },\r\n\r\n    /*\r\n    *   Returns the form containing the element\r\n    */\r\n    getFormContainer: function () {\r\n        // By default return parent's form container\r\n        // This method is overriden in form container which returns itself\r\n        if (typeof (this.parent) != \"undefined\")\r\n        return this.parent.getFormContainer();\r\n    },\r\n\r\n\r\n    /*\r\n    *   Returns the mapped resource\r\n    */\r\n    getResource: function (key) {\r\n        return this.resources.getResource(key);\r\n    },\r\n\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () { },\r\n\r\n    /* \r\n    *   Resizes the element \r\n    */\r\n    resize: function (size) {\r\n\r\n    },\r\n\r\n    /*\r\n    *   Focus on the current element\r\n    */\r\n    focus: function () {\r\n\r\n        if (this.properties.required) {\r\n            var layout = $(\"#ui-bizagi-wp-app-render-form-content\");\r\n            // Check if element is visible into scroll\r\n            if (!bizagi.util.isScrolledIntoView(this.element, layout)) {\r\n                $(this.element).attr('tabindex', -1).focus();\r\n            }\r\n            if (this.element) {\r\n                this.element.effect('highlight', 2000);\r\n            }\r\n        }\r\n\r\n        //Check if the element has parent\r\n        if (this.parent && typeof this.parent.focus == 'function') {\r\n            this.parent.focus();\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Publish a global event that the facade will replicate\r\n    */\r\n    triggerGlobalHandler: function (eventType, data) {\r\n        if (this.disposed) return null;\r\n        if (this.parent) return this.parent.triggerGlobalHandler(eventType, data);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Triggers an event inside the control\r\n    */\r\n    trigger: function (eventType, data) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.trigger(eventType, data);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Triggers an event handler inside the control\r\n    */\r\n    triggerHandler: function (eventType, data) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.triggerHandler(eventType, data);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Binds to an event\r\n    */\r\n    bind: function (eventType, fn) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.bind(eventType, fn);\r\n        this.subscribers.push({ event: eventType });\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Un-binds to an event\r\n    */\r\n    unbind: function (eventType, fn) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.unbind(eventType, fn);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Binds a one time event\r\n    */\r\n    one: function (eventType, fn) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.one(eventType, fn);\r\n        this.subscribers.push({ event: eventType });\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Return the rendered element\r\n    */\r\n    getRenderedElement: function () { },\r\n\r\n    /*\r\n    *   Get current rendering mode\r\n    */\r\n    getMode: function () {\r\n        if (this.parent) return this.parent.getMode();\r\n    },\r\n\r\n    /*\r\n    *   Get current rendering params\r\n    */\r\n    getParams: function () {\r\n        if (this.parent) return this.parent.getParams();\r\n    },\r\n\r\n    /*\r\n    * Get current form type (ex. queryform, form)\r\n    */\r\n    getFormType: function () {\r\n        var self = this;\r\n\r\n        var form = self.getFormContainer();\r\n        return form.properties.type || \"form\";\r\n    },\r\n\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () { },\r\n\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready to save\r\n    */\r\n    isReadyToSave: function () { },\r\n\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Dispose the class so we can detect when a class is invalid already\r\n    */\r\n    dispose: function () {\r\n        var self = this;\r\n        self.disposed = true;\r\n\r\n        setTimeout(function () {\r\n            if (self.subscribers != null) {\r\n                // Remove all subcriptions\r\n                $.each(self.subscribers, function (i, item) {\r\n                    self.unbind(item.event);\r\n                });\r\n            }\r\n            delete self.subscribers;\r\n\r\n            if (self.observableElement) self.observableElement.off();\r\n            bizagi.util.dispose(self);\r\n        }, bizagi.override.disposeTime || 50);\r\n    },\r\n\r\n    /*\r\n    *   Check if the current object is disposed\r\n    */\r\n    isDisposed: function () {\r\n        return this.disposed;\r\n    },\r\n\r\n    /*\r\n    *   This method process the error or alert messages coming from the server, and adds them to the validation controller\r\n    */\r\n    processFailMessage: function(message) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\r\n\r\n        if (message.errorType === \"CustomMessageException\") {\r\n            // Clear previous validations\r\n            form.validationController.clearValidationMessages();\r\n            var error = bizagi.localization.getResource(message.message);\r\n            form.validationController.showErrorMessage(error);\r\n        } else if (message.errorType === \"InvalidCaseStateException\") {\r\n            var params = form.getParams()\r\n\r\n            form.validationController.clearValidationMessages();\r\n           \r\n            // Redirection Here\r\n            form.container.trigger(\"routing\", { idCase: params.idCase || bizagi.context.idCase });\r\n        } else {\r\n            var message = message || {};\r\n            message = typeof (message) == \"string\" ? JSON.parse(message) : message;\r\n            var type = message.type || \"error\";\r\n            var code = message.code || \"code\";\r\n            message = message.responseText || (message.message || message);\r\n\r\n            // Omit processing when the ajax didn't process\r\n            if (type === \"not-processed\") return;\r\n            if (type === \"not-shown\") return;\r\n            if (isOfflineForm && code === \"AUTH_ERROR\") return;\r\n\r\n            // Clear previous validations\r\n            form.validationController.clearValidationMessages();\r\n            if (type == \"alert\") {\r\n                form.validationController.showAlertMessage(message);\r\n            } else {\r\n                form.validationController.showErrorMessage(message);\r\n            }\r\n        }\r\n\r\n        return message;\r\n    },\r\n\r\n    /*\r\n    *   Sets a waiting overlay above the current element\r\n    */\r\n    startLoading: function () {  /* Override in implementations */ },\r\n\r\n    /*\r\n    *   Removes the waiting overlay\r\n    */\r\n    endLoading: function () { /* Override in implementations */ },\r\n\r\n    /**\r\n    *   Prepare control to remove it from the render, that allows to\r\n    *   clean all elements of the control or to do any stuff before to remove\r\n    */\r\n    beforeToRefresh: function () { /* Implement in each render and container if you need */ },\r\n\r\n    /**\r\n    *   Run before that the control has been refreshed\r\n    */\r\n    afterToRefresh: function () { /* Implement in each render and container if you need */ }\r\n});\r\n\r\n","/*\r\n *   Name: BizAgi Container Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define a base container class with common stuff related to all containers\r\n */\r\n\r\nbizagi.rendering.element.extend(\"bizagi.rendering.container\", {\r\n    TYPE_QUERY_FORM: \"queryForm\"\r\n}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Set defaults\r\n        var properties = self.properties;\r\n        properties.uniqueId = Math.ceil(Math.random() * 1000000);\r\n        properties.editable = (typeof properties.editable != \"undefined\") ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.visible = (typeof properties.visible != \"undefined\") ? bizagi.util.parseBoolean(properties.visible) : true;\r\n\r\n        // Override orientation from parent if not set\r\n        properties.orientation = properties.orientation || \"auto\";\r\n\r\n        // Save original properties\r\n        this.originalProperties = JSON.parse(JSON.encode(properties));\r\n\r\n        // Create children\r\n        this.children = [];\r\n        this.childrenHash = {};\r\n\r\n        if (data.elements) {\r\n            $.each(data.elements, function(i, element) {\r\n                if (element.render) {\r\n                    self.createRenderElement(element);\r\n                } else if (element.container) {\r\n                    self.createContainerElement(element);\r\n                } else if (element.form) {\r\n                    self.createFormElement(element);\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Creates a render element\r\n    */\r\n    createRenderElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var originalElement;\r\n\r\n        // Replicate editable property when container is not editable\r\n        if (properties.editable == false) {\r\n            element.render.properties.editable = properties.editable;\r\n            if (element.render.properties.type == \"grid\")\r\n                element.render.properties.inlineEdit = false;\r\n        }\r\n\r\n        // Replicate required property when container is not required\r\n        if (properties.required === false) {\r\n            element.render.properties.required = properties.required;\r\n        }\r\n\r\n        //clone originalElement to apply duplicate render properties correctly\r\n        if (element.render.properties.retype == \"duplicate\") {\r\n            originalElement = bizagi.clone(element);\r\n        }\r\n\r\n        var render = self.renderFactory.getRender({\r\n            type: element.render.properties.type,\r\n            data: element.render,\r\n            dataService: self.dataService,\r\n            parent: self,\r\n            mode: self.getMode()\r\n        });\r\n\r\n        // Add to children\r\n        self.children.push(render);\r\n\r\n        // Check for duplicate\r\n        if (element.render.properties.retype == \"duplicate\") {\r\n            self.processDuplicateRender(render, originalElement);\r\n        }\r\n\r\n        //TODO: at this point not posible add the retype double at this point not exist input\r\n\r\n        // Register in form container\r\n        self.getFormContainer().registerRender(render);\r\n    },\r\n    /*\r\n    *   Creates a container element\r\n    */\r\n    createContainerElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Replicate editable property when container is not editable\r\n        if (properties.editable == false) {\r\n            element.container.properties.editable = properties.editable;\r\n        }\r\n\r\n        // Replicate required property when container is not required\r\n        if (properties.required === false) {\r\n            element.container.properties.required = properties.required;\r\n        }\r\n\r\n        var container = self.renderFactory.getContainer({\r\n            type: element.container.properties.type,\r\n            data: element.container,\r\n            parent: self,\r\n            dataService: self.dataService,\r\n            mode: self.getMode(),\r\n            isDesign: self.getMode() === \"design\"\r\n        });\r\n\r\n        self.children.push(container);\r\n\r\n        // Register in form container\r\n        self.getFormContainer().registerRender(container);\r\n    },\r\n    /*\r\n    *   Creates a form element\r\n    */\r\n    createFormElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Replicate editable property when container is not editable\r\n        if (properties.editable == false) {\r\n            element.container.properties.editable = properties.editable;\r\n        }\r\n\r\n        var form = self.renderFactory.getContainer({\r\n            type: (element.form.properties.type || \"form\"),\r\n            data: element.form,\r\n            parent: self,\r\n            dataService: self.dataService,\r\n            mode: self.getMode()\r\n        });\r\n        self.children.push(form);\r\n    },\r\n    /* \r\n    *   Gets the current container \r\n    */\r\n    getElement: function () {\r\n        var self = this;\r\n        return self.container;\r\n    },\r\n    /* \r\n    *   Gets a collection for all elements matching a type \r\n    */\r\n    getElementsByType: function (type, elements) {\r\n        elements = elements || [];\r\n        var self = this;\r\n\r\n        // Iterate through elements\r\n        $.each(self.children, function (i, child) {\r\n            if (child.properties.type == type) {\r\n                elements.push(child);\r\n            }\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.getElementsByType(type, elements);\r\n            }\r\n        });\r\n\r\n        return elements;\r\n    },\r\n    /*\r\n    *   Process renders with duplicate property\r\n    */\r\n    processDuplicateRender: function (render, element) {\r\n        var self = this;\r\n        var clonedElement = JSON.parse(JSON.encode(element.render));\r\n\r\n        // Changes properties\r\n        clonedElement.properties.displayName = clonedElement.properties.displayName + \" \" + self.getResource(\"render-text-duplicate-label-sufix\");\r\n        clonedElement.properties.xpath = clonedElement.properties.xpath + \".clone\";\r\n        clonedElement.properties.isClone = true;\r\n\r\n        // Creates clone\r\n        var clone = self.renderFactory.getRender({\r\n            type: clonedElement.properties.type,\r\n            data: clonedElement,\r\n            parent: self,\r\n            mode: self.getMode()\r\n        });\r\n\r\n        // Associates with main render\r\n        render.cloneRender = clone;\r\n\r\n        // Add to collection\r\n        self.children.push(clone);\r\n    },\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () {\r\n        return bizagi.rendering.element.ELEMENT_TYPE_CONTAINER;\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    */\r\n    render: function () {\r\n        var self = this,\r\n            mode = self.getMode(),\r\n            result;\r\n\r\n        // Render container\r\n        result = self.internalRender();\r\n\r\n        // Apply container defaults\r\n        self.applyContainerDefaults();\r\n\r\n        // Add container id\r\n        result.attr(\"data-container-id\", self.properties.id);\r\n\r\n        //Add container tag property\r\n        if (self.properties.tag) {\r\n            result.attr(\"data-tag\", self.properties.tag);\r\n        }\r\n\r\n        //Add class to the requested form, to specify if is add form, edit form, or detail form\r\n        if (self.params)\r\n            if (self.params.requestedForm)\r\n                result.addClass(self.params.requestedForm);\r\n\r\n        return result;\r\n    },\r\n    /*\r\n    *   Internal  rendering\r\n    */\r\n    internalRender: function () {\r\n        var self = this;\r\n\r\n        // Render the container\r\n        var html = self.renderContainerHtml();\r\n\r\n        // Convert html string to jquery object\r\n        var container = self.container = $(html);\r\n\r\n        // Post-render\r\n        self.postRenderContainer(container);\r\n\r\n        return self.container;\r\n    },\r\n    /*\r\n    *   Renders container html\r\n    */\r\n    renderContainerHtml: function () {\r\n        var self = this;\r\n        // Start rendering deferred\r\n        self.renderingDeferred = self.renderingDeferred || new $.Deferred();\r\n\r\n        return this.renderContainer();\r\n    },\r\n    /*\r\n    *   Check if the jquery element is ready or not\r\n    */\r\n    isRendered: function () {\r\n        var self = this;\r\n        if (!self.renderingDeferred)\r\n            return false;\r\n        return self.renderingDeferred.promise();\r\n    },\r\n    /*\r\n    *   Return the rendered element\r\n    */\r\n    getRenderedElement: function () {\r\n        if (bizagi.util.isEmpty(this.container))\r\n            alert(\"container hasn't been rendered!\");\r\n\r\n        return this.container;\r\n    },\r\n    /* \r\n    *   Set container defaults\r\n    */\r\n    applyContainerDefaults: function () {\r\n        var self = this,\r\n                properties = self.properties;\r\n\r\n        // Set customizations\r\n        if (properties.backgroundColor)\r\n            self.changeBackgroundColor(properties.backgroundColor);\r\n\r\n        // Set editability and visiblity\r\n        if (!properties.visible)\r\n            self.changeVisibility(properties.visible);\r\n    },\r\n    /* \r\n    *  Changes background color \r\n    */\r\n    changeBackgroundColor: function (color) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        properties.backgroundColor = color;\r\n\r\n        // Iterate through elements\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.changeBackgroundColor(color);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                child.changeBackgroundColor(color);\r\n            }\r\n        });\r\n    },\r\n    /* \r\n    *   Hides / Show container \r\n    */\r\n    changeVisibility: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Store in properties\r\n        properties.visible = bizagi.util.parseBoolean(argument);\r\n\r\n        // Hide - show the render\r\n        if (properties.visible) {\r\n            self.container.show();\r\n\r\n        } else {\r\n            self.container.hide();\r\n        }\r\n    },\r\n    /* Changes editability */\r\n    changeEditability: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Store in properties\r\n        properties.editable = bizagi.util.parseBoolean(argument);\r\n\r\n        // Iterate through elements\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.changeEditability(argument);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                child.changeEditability(argument);\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Replaces a <x/> tag in the container for the specified \"replace\" element\r\n    */\r\n    replaceTag: function (container, tag, replace) {\r\n        bizagi.util.replaceSelector(container, tag, replace);\r\n    },\r\n    /*\r\n    *   Replaces a <children/> tag in the container for the specified \"replace\" element\r\n    */\r\n    replaceChildrenTag: function (container, replace) {\r\n        this.replaceTag(container, \".children\", replace);\r\n    },\r\n    /*\r\n    *   Replaces a {{children}} string in the specified element\r\n    */\r\n    replaceChildrenHtml: function (html, replace) {\r\n        return html.replace(\"{{children}}\", replace);\r\n    },\r\n    /*\r\n    *   Template method to render the container layout, returns a string with all the builded html,\r\n    *   must be overriden in all children\r\n    */\r\n    renderContainer: function () {\r\n    },\r\n    /*\r\n    *   Template method to process each jquery object\r\n    *   must be overriden in each container\r\n    */\r\n    postRenderContainer: function (container) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n\r\n        // Resolve rendering deferred\r\n        if (self.renderingDeferred)\r\n            self.renderingDeferred.resolve();\r\n\r\n        // Process children elements\r\n        self.container = container;\r\n        self.executeChildrenPostRender(container);\r\n\r\n        if (mode == \"execution\") {\r\n            // Apply handlers\r\n            self.configureHandlers();\r\n            self.applyPlaceHolderPolyfill();\r\n\r\n        }\r\n        if (mode == \"design\") {\r\n            // Configure view\r\n            self.configureDesignView();\r\n        }\r\n        if (mode == \"layout\") {\r\n            // Configure view\r\n            self.configureDesignView();\r\n            self.configureLayoutView();\r\n        }\r\n    },\r\n\r\n    applyPlaceHolderPolyfill: function () {\r\n        var self = this;\r\n        var config = window.placeHolderConfig || {};\r\n        if (('placeholder' in $('<input>')[0] || 'placeHolder' in $('<input>')[0]) && !config.forceApply) {\r\n            // don't run the polyfill when the browser has native support\r\n            return;\r\n        }\r\n        Placeholders.enable();\r\n    },\r\n    /*\r\n    *   Process container children\r\n    */\r\n    executeChildrenPostRender: function (container) {\r\n        var self = this;\r\n        var childrenElements = container.children();\r\n\r\n        $.each(childrenElements, function (i, childElement) {\r\n            childElement = $(childElement);\r\n            var id = Number(childElement.data(\"unique-id\"));\r\n            if (id) {\r\n                var child = self.childrenHash[id];\r\n                if (child) {\r\n                    var type = child.getElementType();\r\n                    if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER)\r\n                        child.postRenderElement(childElement);\r\n                    if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER)\r\n                        child.postRenderContainer(childElement);\r\n                }\r\n            } else {\r\n                self.executeChildrenPostRender(childElement);\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the container's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour when rendering in design mode\r\n    */\r\n    configureDesignView: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the container's behaviour to show layout\r\n    */\r\n    configureLayoutView: function () {\r\n\r\n    },\r\n    /**\r\n    *   Renders all children html\r\n    */\r\n    renderChildrenHtml: function () {\r\n        var self = this;\r\n        var temp = \"\";\r\n\r\n        $.each(self.children, function (i, child) {\r\n            var type = child.getElementType();\r\n            if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER)\r\n                temp += child.renderElement();\r\n            if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER)\r\n                temp += child.renderContainerHtml();\r\n            self.childrenHash[child.properties.uniqueId] = child;\r\n        });\r\n\r\n        return temp;\r\n    },\r\n    /*\r\n    *   Iterate through all the renders in the container and fills the hashtable\r\n    */\r\n    collectRenderValues: function (renderValues) {\r\n        var self = this;\r\n        if (self.children) {\r\n            $.each(self.children, function (i, child) {\r\n                if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                    // Go though container\r\n                    child.collectRenderValues(renderValues);\r\n\r\n                } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                    // Check if the render can be sent to the server\r\n                    if (child.canBeSent()) {\r\n                        child.collectData(renderValues);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Iterate through all the renders and check if has changed\r\n    */\r\n    hasChanged: function (result) {\r\n        var self = this;\r\n        result = result || [];\r\n\r\n        if (!result.length) {\r\n            if(self.children){\r\n                $.each(self.children, function (i, child) {\r\n                    if (result.length || child.hasChanged(result)) {\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            return result;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *    Creates a json array parameters to search result\r\n    */\r\n    collectRenderValuesQueryForm: function (renderValues) {\r\n        var self = this;\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                // Go though container\r\n                child.collectRenderValuesQueryForm(renderValues);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                // Check if the render can be sent to the server\r\n                if (child.canBeSentQueryForm()) {\r\n                    child.collectDataQueryForm(renderValues);\r\n                }\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Gets the first child\r\n    */\r\n    firstChild: function () {\r\n        return this.children[0];\r\n    },\r\n    /*\r\n    *   Method to find all the renders matching an xpath inside the container\r\n    */\r\n    getRenders: function (xpath, renders) {\r\n        var self = this;\r\n\r\n        renders = renders || [];\r\n\r\n        // Remove [] filters for grid columns xpaths to fully identify the grid as the xpath target\r\n        if (xpath.indexOf(\"[\") > 0) {\r\n            xpath = xpath.substring(0, xpath.indexOf(\"[\"));\r\n        }\r\n\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                // Go though container\r\n                child.getRenders(xpath, renders);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                if (xpath == child.properties.xpath) {\r\n                    renders.push(child);\r\n                }\r\n            }\r\n        });\r\n\r\n        return renders;\r\n    },\r\n    /* \r\n    *   Gets the first editable render \r\n    */\r\n    getRender: function (xpath) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        var result = null;\r\n        $.each(renders, function (i, render) {\r\n            if (render.properties.editable) {\r\n                if (result == null)\r\n                    result = render;\r\n            }\r\n        });\r\n\r\n        // if no render has been found, skip editable condition\r\n        if (result == null) {\r\n            $.each(renders, function (i, render) {\r\n                result = render;\r\n            });\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n     *   Gets all renders by xpath\r\n     */\r\n    getRendersByXpath: function (xpath) {\r\n        var self = this;\r\n        return self.getRenders(xpath);\r\n    },\r\n\r\n    /* \r\n    *   Gets a container by the id\r\n    */\r\n    getContainer: function (id) {\r\n        var self = this;\r\n\r\n        if (self.properties.id == id)\r\n            return this;\r\n\r\n        var result;\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                // Go though container\r\n                var o = child.getContainer(id);\r\n                if (o != null) {\r\n                    result = o;\r\n                    return false;\r\n                }\r\n            }\r\n        });\r\n\r\n        return result;\r\n    },\r\n    /* \r\n    *   Validate all renders in the container \r\n    */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n\r\n        $.each(self.children, function (i, child) {\r\n            if (child.properties.visible) {\r\n                if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                    // Go though container\r\n                    child.isValid(invalidElements);\r\n\r\n                } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                    // Go to the render\r\n                    child.isValid(invalidElements);\r\n                }\r\n            }\r\n        });\r\n\r\n        return invalidElements.length == 0;\r\n    },\r\n\r\n        /*\r\n       *   Validate all grids in the container\r\n       */\r\n    hasValidGrids: function (invalidElements) {\r\n        var self = this;\r\n\r\n        $.each(self.children, function (i, child) {\r\n            if (child.properties.visible) {\r\n                if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                    // Go though container\r\n                    child.hasValidGrids(invalidElements);\r\n\r\n                } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER && typeof (child.grid) != \"undefined\") {\r\n                    // Go to the render\r\n                    child.isValid(invalidElements);\r\n                }\r\n            }\r\n        });\r\n\r\n        return invalidElements.length == 0;\r\n    },\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n        return $.when(self.parent.ready(), self.isRendered());\r\n    },\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready to save\r\n    */\r\n    isReadyToSave: function () {\r\n        var self = this;\r\n        var childrenPromises = $.map(self.children, function (child) {\r\n            return child.isReadyToSave();\r\n        });\r\n        return $.when.apply($, childrenPromises);\r\n    },\r\n    /*  \r\n    *   Return the current focuses container\r\n    */\r\n    getFocus: function () {\r\n        var self = this;\r\n        var focus;\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                var result = child.getFocus();\r\n                if (!bizagi.util.isEmpty(result)) {\r\n                    focus = result;\r\n                }\r\n            }\r\n        });\r\n\r\n        return focus;\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n\r\n        if (form) {\r\n            return form.getCustomHandlers();\r\n        }\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandler: function (key) {\r\n        var self = this;\r\n        var customHandlers = self.getCustomHandlers();\r\n\r\n        if (customHandlers) {\r\n            return customHandlers[key];\r\n        }\r\n    },\r\n    /*\r\n    *   Dispose the class so we can detect when a class is invalid already\r\n    */\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        // Iterate through elements\r\n        setTimeout(function () {\r\n            if (self.children) {\r\n                $.each(self.children, function (i, child) {\r\n                    child.dispose();\r\n                });\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    },\r\n\r\n    /*\r\n    *   Refresh the current container\r\n    */\r\n    refreshContainer: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Start waiting\r\n        self.startLoading();\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh();\r\n\r\n        // Call the service\r\n        return $.when(self.dataService.multiaction().refreshControl({\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: (properties.xpathContext || args.xpathContext),\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (data) {\r\n\r\n            if (!self.isDisposed()) {\r\n\r\n                // Unregister children of container to replace in hash self.rendersById and self.rendersByXpath\r\n                self.unregisterChildren();\r\n                delete self.children;\r\n                delete self.childrenHash;\r\n\r\n                self.getFormContainer().removeActions();\r\n\r\n                // update editable\r\n                if (self.properties.editable === false) {\r\n                    data.container && data.container.properties ? (data.container.properties.editable = false) : \"\";\r\n                }\r\n\r\n                // Update the data\r\n                self.initializeData(data.container);\r\n\r\n                // Render the container again\r\n                var currentContainer = self.container;\r\n                var result = self.render();\r\n\r\n                if (self.properties.type == \"tabItem\") {\r\n                    $(result).addClass(\"childrenActive\");\r\n                }\r\n\r\n                currentContainer.replaceWith(result);\r\n\r\n                // Rebind the actions\r\n                var actions = data.container && data.container.actions ? data.container.actions : [];\r\n                self.getFormContainer().refreshActions(actions);\r\n\r\n                self.triggerChildrenActions();\r\n\r\n                // Execute personalized stuff after to refresh it\r\n                self.afterToRefresh();\r\n\r\n            }\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n\r\n        }).always(function () {\r\n            self.endLoading();\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Refresh the current container\r\n     */\r\n    refreshDesignContainer: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh(data);\r\n        //self.setActiveTab(data.elements);\r\n\r\n        $.extend(data.properties, {\r\n            editable: properties.editable,\r\n            contexttype: (properties.contexttype || \"\"),\r\n            idPageCache: properties.idPageCache,\r\n            idRender: properties.id,\r\n            messageValidation: properties.messageValidation,\r\n            uniqueId: properties.uniqueId,\r\n            visible:properties.visible,\r\n            xpath: properties.xpath,\r\n            mode: \"design\",\r\n            xpathContext: properties.xpathContext || \"\"\r\n        });\r\n\r\n\r\n        if (!self.isDisposed()) {\r\n            // Unregister children of container to replace in hash self.rendersById and self.rendersByXpath\r\n            self.unregisterChildren();\r\n            delete self.children;\r\n            delete self.childrenHash;\r\n\r\n            // update editable\r\n            if (self.properties.editable === false) {\r\n                data.container && data.container.properties ? (data.container.properties.editable = false) : \"\";\r\n            }\r\n\r\n            // Update the data\r\n            self.initializeData(data.container);\r\n\r\n            // Render the container again\r\n            var currentContainer = self.container;\r\n            var result = self.render();\r\n\r\n            if (self.properties.type == \"tabItem\") {\r\n                $(result).addClass(\"childrenActive\");\r\n            }\r\n\r\n            currentContainer && currentContainer.replaceWith(result);\r\n\r\n            // Execute personalized stuff after to refresh it\r\n            self.afterToRefresh();\r\n        }\r\n    },\r\n\r\n    beforeToRefresh: function () {\r\n        var self = this;\r\n\r\n        // Call beforeToRefresh of each children\r\n        for (var i = 0; i < self.children.length; i++) {\r\n            self.children[i].beforeToRefresh();\r\n        }\r\n    },\r\n\r\n    afterToRefresh: function () {\r\n        var self = this;\r\n\r\n        // Call beforeToRefresh of each children\r\n        for (var i = 0; i < self.children.length; i++) {\r\n            self.children[i].afterToRefresh();\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Re-execute children actions\r\n    */\r\n    triggerChildrenActions: function () {\r\n        var self = this;\r\n\r\n        var form = self.getFormContainer();\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n            var type = child.getElementType();\r\n\r\n            if (type === bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.triggerChildrenActions();\r\n            }\r\n            else if (type === bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                child.triggerRenderChange({ changed: false });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /*\r\n    * register actions container\r\n    */\r\n    registerActions: function (actions) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n\r\n        if (actions) {\r\n            form.actionController.buildActions(actions);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * unregister children container\r\n    */\r\n    unregisterChildren: function () {\r\n        var self = this;\r\n\r\n        var form = self.getFormContainer();\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n            var type = child.getElementType();\r\n\r\n            if (type === bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.unregisterChildren();\r\n            }\r\n            else if (type === bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                form.unregisterRender(child);\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    * Replace child\r\n    */\r\n    replaceChild: function (element) {\r\n        var self = this;\r\n\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n\r\n            if (child.properties.uniqueId == element.properties.uniqueId) {\r\n                children.splice(i, 1);\r\n                children.splice(i, 0, element);\r\n                break;\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    * Gets child\r\n    */\r\n    getChildById: function (id) {\r\n\r\n        var self = this;\r\n\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n\r\n            if (child.properties.id == id) {\r\n                return child;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: Bizagi Render Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a base render class with common stuff related to all renders\r\n */\r\n\r\nbizagi.rendering.element.extend(\"bizagi.rendering.render\", {\r\n    postRenderTimeout: 0,\r\n    maxRendersPerScreen: 50,\r\n    rendersExecuted: 0,\r\n    renderOptimization: false,\r\n    TYPE_QUERY_FORM: \"queryForm\",\r\n    startOptimization: function () {\r\n        bizagi.rendering.render.postRenderTimeout = 500;\r\n        bizagi.rendering.render.rendersExecuted = 0;\r\n        // Cancelled optimization temporally, because its on experimental stage\r\n        bizagi.rendering.render.renderOptimization = false;\r\n    },\r\n    stopOptimization: function () {\r\n        bizagi.rendering.render.postRenderTimeout = 0;\r\n        bizagi.rendering.render.rendersExecuted = 0;\r\n        bizagi.rendering.render.renderOptimization = false;\r\n    }\r\n}, {\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        var form = self.getFormContainer();\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n\r\n        properties.included = (typeof properties.included != \"undefined\") ? bizagi.util.parseBoolean(properties.included) : false;\r\n        properties.uniqueId = Math.ceil(Math.random() * 1000000);\r\n        properties.displayName = properties.displayName || \"\";\r\n        properties.editable = (typeof properties.editable != \"undefined\") ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.visible = (typeof properties.visible != \"undefined\") ? bizagi.util.parseBoolean(properties.visible) : true;\r\n        properties.includedInResult = (typeof properties.includedInResult != \"undefined\") ? bizagi.util.parseBoolean(properties.includedInResult) : false;\r\n\r\n        var renderType = bizagi.util.normalizeType(properties.type);\r\n        if (/^hidden$/i.test(renderType)) {\r\n            properties.visible = false;\r\n        }\r\n\r\n        properties.required = (typeof properties.required != \"undefined\") ? bizagi.util.parseBoolean(properties.required) : false;\r\n        properties.submitOnChange = (typeof properties.submitOnChange != \"undefined\") ? bizagi.util.parseBoolean(properties.submitOnChange) : false;\r\n        properties.maxLength = properties.maxLength || 0;\r\n        properties.helpText = bizagi.util.trim(properties.helpText) || \"\";\r\n        properties.textFormat = properties.textFormat || {};\r\n        properties.valueFormat = properties.valueFormat || {};\r\n        properties.isHidden = (typeof properties.isHidden != \"undefined\") ? bizagi.util.parseBoolean(properties.isHidden) : false;\r\n        properties.visible = (properties.isHidden) ? false : properties.visible;\r\n\r\n        // Old color and background color\r\n        if (properties.color) {\r\n            properties.textFormat.color = properties.color;\r\n        }\r\n\r\n        if (properties.backgroundColor) {\r\n            properties.textFormat.backgroundColor = properties.backgroundColor;\r\n        }\r\n\r\n        // Non-editable fields cannot be required\r\n        properties.required = properties.editable ? properties.required : false;\r\n\r\n        // Override orientation from parent if not set\r\n        properties.orientation = properties.orientation || \"auto\";\r\n\r\n        // Check contexttype\r\n        properties.contexttype = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : \"\";\r\n\r\n        // Save original properties\r\n        self.originalProperties = {\r\n            textFormat: {\r\n                color: properties.textFormat.color,\r\n                backgroundColor: properties.textFormat.backgroundColor\r\n            },\r\n            valueFormat: {\r\n                color: properties.textFormat.color,\r\n                backgroundColor: properties.textFormat.backgroundColor\r\n            },\r\n            visible: properties.visible,\r\n            editable: properties.editable,\r\n            required: properties.required,\r\n            labelAlign: properties.labelAlign,\r\n            valueAlign: properties.valueAlign\r\n        };\r\n\r\n        // Create value property\r\n        self.value = typeof (properties.value) !== \"undefined\" ? properties.value : null;\r\n\r\n        // Register original value property\r\n        self.properties.originalValue = self.value;\r\n        self.properties.previousValue = self.value;\r\n\r\n        // Calculate layout properties\r\n        self.calculateInitialLayoutProperties();\r\n    },\r\n    /*\r\n    *   Calculate aligns, display types, rtl and widths\r\n    */\r\n    calculateInitialLayoutProperties: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set visual defaults\r\n        properties.displayType = properties.displayType || \"normal\";\r\n        properties.labelAlign = properties.labelAlign || self.getDefaultLabelAlign(properties.displayType);\r\n        properties.valueAlign = properties.valueAlign || self.getDefaultValueAlign(properties.displayType);\r\n\r\n        // Check rtl orientation\r\n        if (properties.orientation === \"rtl\") {\r\n            properties.labelAlign = self.getRTLAlign(properties.labelAlign);\r\n            properties.valueAlign = self.getRTLAlign(properties.valueAlign);\r\n        }\r\n\r\n        // Calculate render with\r\n        var renderWidth = self.calculateRenderWidth(properties.labelWidth, properties.valueWidth, properties.displayType);\r\n        properties.labelWidth = renderWidth.label;\r\n        properties.valueWidth = renderWidth.control;\r\n\r\n        if (properties.layoutType === \"percentage\") {\r\n            properties.valueWidth = renderWidth.control;\r\n        }\r\n\r\n        if (properties.labelWidth == 0) {\r\n            properties.displayType = \"value\";\r\n            properties.valueWidth = renderWidth.control;\r\n        }\r\n\r\n        if (properties.valueWidth == 0) {\r\n            properties.displayType = \"label\";\r\n        }\r\n\r\n        if (properties.type === \"userfield\") {\r\n            if (properties.displayType === \"both\") {\r\n                properties.valueWidth = properties.valueWidth || 50;\r\n                properties.labelWidth = properties.labelWidth || 50;\r\n            } else if (properties.displayType === \"vertical\") {\r\n                properties.valueWidth = 100;\r\n                properties.labelWidth = 100;\r\n            } else {\r\n                properties.valueWidth = 100;\r\n                properties.labelWidth = 0;\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () {\r\n        return bizagi.rendering.element.ELEMENT_TYPE_RENDER;\r\n    },\r\n    /*\r\n    *   Returns the html templated element\r\n    */\r\n    render: function (renderTemplateName) {\r\n        return this.renderElement(renderTemplateName);\r\n    },\r\n    /*\r\n    *   Returns the html templated element\r\n    */\r\n    renderElement: function (renderTemplateName) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        // Start rendering deferred\r\n        self.renderingDeferred = new $.Deferred();\r\n\r\n        // Set render template\r\n        renderTemplateName = renderTemplateName || \"render\";\r\n        var renderTemplate = self.renderFactory.getTemplate(renderTemplateName);\r\n\r\n        // Resolve render label\r\n        var label = properties.displayName;\r\n        if (typeof label == \"string\") {\r\n            label = label.replaceAll(\"&\", \"&amp;\");\r\n            label = label.replaceAll(\"$\", \"&#36;\");\r\n            label = label.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\r\n            label = label.replaceAll(\"\\\"\", \"&#34;\").replaceAll(\"'\", \"&#39;\").replaceAll(\"/\", \"&#47;\");\r\n            label = label.replaceAll(\"\\\\n\", \"<br/>\");\r\n            label = label.replaceAll(\"\\n\", \"<br/>\");\r\n        }\r\n\r\n        var isFullRender = bizagi.util.detectDevice() !== \"desktop\" && (properties.type === \"association\" || properties.type === \"uploadecm\" || ((properties.type === \"actionLauncher\" || properties.type === \"polymorphicLauncher\") && bizagi.util.isTabletDevice()) || (properties.type === \"grid\" && !bizagi.util.isTabletDevice()));\r\n        var labelWidth = parseFloat(properties.labelWidth);\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(renderTemplate, {\r\n            label: label, helpText: properties.helpText,\r\n            editable: properties.editable,\r\n            isExtendedText: (properties.type == \"text\" && properties.isExtended),\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            tag: properties.tag,\r\n            displayType: properties.displayType,\r\n            displayOptionClass: self.getDisplayOptionClass(properties.displayType),\r\n            labelAlignClass: self.getAlignClass(properties.labelAlign),\r\n            valueAlignClass: self.getAlignClass(properties.valueAlign),\r\n            labelWidth: labelWidth,\r\n            stringLabelWidth: labelWidth + (properties.layoutType == 'pixels' ? 'px' : '%'),\r\n            valueWidth: parseFloat(properties.valueWidth),\r\n            stringValueWidth: parseFloat(properties.valueWidth) + (properties.layoutType == 'pixels' ? 'px' : '%'),\r\n            layoutType: properties.layoutType,\r\n            isDesign: self.getMode() === \"design\",\r\n            messageValidation: properties.messageValidation,\r\n            printVersion: form.params.printversion,\r\n            cssClass: properties.cssclass || \"\",\r\n            includedInResult: properties.includedInResult,\r\n            included: properties.included,\r\n            type: properties.type,\r\n            showFullRender: isFullRender,\r\n            required: properties.required,\r\n            helpText: properties.helpText\r\n        });\r\n\r\n        // Render internal control html\r\n        var result = self.internalRenderControl();\r\n        if (!result) {\r\n            result = \"\";\r\n        }\r\n\r\n        // Check if this is an async element or not\r\n        var async = typeof (result) === \"object\" && result.done;\r\n        if (!async) {\r\n            html = self.replaceControlHtml(html, result);\r\n\r\n        } else {\r\n            if (result.state() === \"resolved\") {\r\n                // Fetch resolved result\r\n                html = self.replaceControlHtml(html, self.resolveResult(result));\r\n                self.asyncRenderDeferred = null;\r\n            } else {\r\n                // Wait for result\r\n                self.asyncRenderDeferred = result;\r\n                html = self.replaceControlHtml(html, \"\");\r\n            }\r\n        }\r\n\r\n        return html;\r\n    },\r\n    /*\r\n    *   Returns the resolved result from a promise when the promise has been executed already\r\n    */\r\n    resolveResult: function (promise) {\r\n        return bizagi.resolveResult(promise);\r\n    },\r\n    /*\r\n    *   Check if the jquery element is ready or not\r\n    */\r\n    isRendered: function () {\r\n        var self = this;\r\n        if (!self.renderingDeferred) {\r\n            return false;\r\n        }\r\n        return self.renderingDeferred.promise();\r\n    },\r\n    /*\r\n    *   Renders the control html\r\n    */\r\n    internalRenderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        self.control = null;\r\n\r\n        if (self.renderFactory.printVersion) {\r\n            properties.editable = false;\r\n            return self.renderControl();\r\n        } else if (properties.editable) {\r\n            return self.renderControl();\r\n        }\r\n\r\n        return self.renderReadOnly();\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    postRenderElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set element variable\r\n        self.element = element;\r\n\r\n        if (properties.submitOnChange)\r\n            self.configureSubmitOnChange();\r\n\r\n        // Process internal layout\r\n        isLabelFormat = true;\r\n\r\n        var executePostRender = function (_element) {\r\n            if (bizagi.rendering.render.renderOptimization &&\r\n                bizagi.rendering.render.rendersExecuted > bizagi.rendering.render.maxRendersPerScreen) {\r\n\r\n                // Execute post-render control\r\n                setTimeout(function () {\r\n                    self.internalPostRender(_element);\r\n                    bizagi.rendering.render.postRenderTimeout += 50;\r\n                }, bizagi.rendering.render.postRenderTimeout);\r\n\r\n            } else {\r\n                self.internalPostRender(_element);\r\n            }\r\n            bizagi.rendering.render.rendersExecuted++;\r\n        };\r\n\r\n        if (self.asyncRenderDeferred) {\r\n            // Wait for async result\r\n            $.when(self.asyncRenderDeferred)\r\n                .done(function (html) {\r\n                    var control = self.getControl();\r\n                    if (typeof self.emptyControlByAsyncRenderDeferred == \"function\") {\r\n                        self.emptyControlByAsyncRenderDeferred();\r\n                    }\r\n                    control.append(html);\r\n\r\n                    // Execute post-render control\r\n                    executePostRender(element);\r\n                    self.processLayout(!isLabelFormat, self.properties.valueFormat || {});\r\n                });\r\n        } else {\r\n            // Execute post-render control\r\n            executePostRender(element);\r\n        }\r\n    },\r\n    /*\r\n    *   Executes the post render handlers\r\n    */\r\n    internalPostRender: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n\r\n        self.control = self.getControl();\r\n\r\n        // Resolve rendering deferred\r\n        if (self.renderingDeferred) {\r\n            self.renderingDeferred.resolve();\r\n        }\r\n\r\n        // Execute post-renders\r\n        if (properties.editable) {\r\n            // Post-render editable version\r\n            if (self.renderFactory.printVersion && self.postRenderPrintVersion) {\r\n                self.postRenderPrintVersion();\r\n            } else {\r\n                self.postRender();\r\n            }\r\n\r\n        } else {\r\n            // Post-render readonly version\r\n            self.postRenderReadOnly(element);\r\n        }\r\n\r\n        // Perform execution mode methods\r\n        if (mode == \"execution\") {\r\n            self.performExecutionModeMethods();\r\n        } else {\r\n            self.performDesignModeMethods();\r\n        }\r\n\r\n        self.processLayout(isLabelFormat, self.properties.textFormat || {});\r\n        self.processLayout(!isLabelFormat, self.properties.valueFormat || {});\r\n    },\r\n    /*\r\n    *   Execute runtime only methods\r\n    */\r\n    performExecutionModeMethods: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (self.getFormType() == self.Class.TYPE_QUERY_FORM) {\r\n            self.configureHandlersQueryForm();\r\n        }\r\n\r\n        // Apply handlers\r\n        if (properties.editable) {\r\n            self.configureHandlers();\r\n        } else {\r\n            self.configureHandlersReadOnly();\r\n        }\r\n\r\n        // Set initial value\r\n        self.internalSetInitialValue();\r\n    },\r\n    /**\r\n     * Execute design only methods\r\n     */\r\n    performDesignModeMethods: function () {\r\n        var self = this;\r\n\r\n        // Execute custom code for each render\r\n        self.configureDesignView();\r\n\r\n        // Set initial value\r\n        self.internalSetInitialValue();\r\n    },\r\n    /*\r\n    *   Replaces a {{control}} string in the specified element\r\n    */\r\n    replaceControlHtml: function (html, replace) {\r\n        html = html || \"\";\r\n        replace = replace || \"\";\r\n        return html.replace(\"{{control}}\", replace);\r\n    },\r\n    /*\r\n    *   Return the rendered element\r\n    */\r\n    getRenderedElement: function () {\r\n        if (bizagi.util.isEmpty(this.element)) {\r\n            bizagi.log(\" render hasn't been rendered!\", this, \"error\");\r\n        }\r\n\r\n        return this.element;\r\n    },\r\n    /*\r\n    *   Sets the initial value for the renders\r\n    */\r\n    internalSetInitialValue: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        self.internalSetInitialValueFlag = true;\r\n\r\n        // Set the initial value\r\n        if (properties.editable) {\r\n            if (!bizagi.util.isEmpty(self.value)) {\r\n                self.setDisplayValue(self.value);\r\n            }\r\n        } else {\r\n            if (!bizagi.util.isEmpty(self.value)) {\r\n                self.setDisplayValue(self.value);\r\n            }\r\n        }\r\n        self.internalSetInitialValueFlag = false;\r\n    },\r\n    /*\r\n    * Public method to determine if a value is valid or not\r\n    */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n        var inlineAdd = self.grid && self.grid.properties && self.grid.properties.inlineAdd;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) === false) {\r\n            return true;\r\n        }\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) === false && !inlineAdd) {\r\n            return true;\r\n        }\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (bizagi.util.parseBoolean(properties.required)) {\r\n            var form = self.getFormContainer();\r\n            var hasValue = false;\r\n            var renders = self.grid ? [self] : form.getRenders(properties.xpath);\r\n            var isQueryForm = /^query/i.test(properties.type);\r\n\t               \r\n            renders.filter(function (render) {\r\n                return render.properties.id == properties.id;\r\n            }).forEach(function (render) {\r\n                if (render.hasValue() && (render.properties.editable || inlineAdd)) {\r\n                    hasValue = true;\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            if (!hasValue && !self.properties.isClone) {\r\n                message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                var messageData = {xpath: properties.xpath, message: message};\r\n\r\n                if (isQueryForm) {\r\n                    messageData = $.extend({}, messageData, {\r\n                        id: properties.id,\r\n                        isQuery: isQueryForm\r\n                    });\r\n                }\r\n\r\n                invalidElements.push(messageData);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // Check retypes\r\n        if (properties.retype == \"duplicate\") {\r\n            // Don't process cloned renders, just originals\r\n            if (self.cloneRender) {\r\n                if (self.cloneRender.getValue() != self.getValue()) {\r\n                    message = self.getResource(\"render-text-retype-error\");\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    return false;\r\n                }\r\n            }\r\n        } else if (properties.retype == \"double\") {\r\n            var control = $(\"input\", self.element);\r\n\r\n            //Waits until the control has the second value written\r\n            if (control && control.data(\"oldValue\")) {\r\n                if (control.val() === \"\") {\r\n\r\n                    message = self.getResource(\"render-text-retype-error\");\r\n                    invalidElements.push({\r\n                        xpath: properties.xpath,\r\n                        message: message\r\n                    });\r\n\r\n                    return false;\r\n                } else if (control.val() != control.data(\"oldValue\")) {\r\n                    message = self.getResource(\"render-text-retype-error\");\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Check maxlength\r\n        var columnEditable = self.grid && self.grid.getColumn ? self.grid.getColumn(self.properties.xpath).properties.editable : true;\r\n        if (properties.type !== \"userPassword\" && properties.maxLength !== undefined && properties.maxLength > 0 && bizagi.util.isNumeric(properties.maxLength)) {\r\n            if (columnEditable || (!columnEditable && self.controlValueIsChanged())) {\r\n                var maxLength = new Number(properties.maxLength);\r\n                var value = self.getValue();\r\n\r\n                if (value && value.toString().length > maxLength) {\r\n                    message = self.getResource(\"render-text-maxLength-error\").replaceAll(\"#maxLength#\", maxLength);\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Check if a render has no value for required validation\r\n    */\r\n    hasValue: function () {\r\n        var self = this;\r\n        // Next line decides if only spaces are accepted as valid texts or not. Anyway the spaces are still saved as self.value has not changed\r\n        var value = self.getValue();\r\n        value = (value && self.properties.type === \"text\") ? value.trim() : value;\r\n        return !bizagi.util.isEmpty(value);\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    postRender: function () {       \r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed in read-only mode\r\n    */\r\n    postRenderReadOnly: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers when the control is readonly\r\n    */\r\n    configureHandlersReadOnly: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour when rendering in design mode\r\n    */\r\n    configureDesignView: function () {\r\n    },\r\n    /*\r\n    *   Method to process the render the layout\r\n    */\r\n    processLayout: function (isLabelFormat, format) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (self.getControl() == null) return;\r\n\r\n        // Set customizations\r\n        format = format || {};\r\n\r\n        if (format.color) {\r\n            self.changeColor(format.color, isLabelFormat);\r\n        }\r\n        if (format.background) {\r\n            self.changeBackgroundColor(format.background);\r\n        }\r\n        //if bold is true in modeler, we receive nothing in execution (!formal.bold)\r\n        if (format.bold || !format.bold || !isLabelFormat) {\r\n            self.changeFontBold(format.bold, isLabelFormat);\r\n        }\r\n        if (format.italic) {\r\n            self.changeFontItalic(format.italic, isLabelFormat);\r\n        }\r\n        if (format.underline) {\r\n            self.changeFontUnderline(format.underline, isLabelFormat);\r\n        }\r\n        if (format.strikethru) {\r\n            self.changeFontStrikethru(format.strikethru, isLabelFormat);\r\n        }\r\n        if (format.size) {\r\n            self.changeFontSize(format.size, isLabelFormat);\r\n        }\r\n\r\n        // Set required and visiblity\r\n        properties.required = properties.required != undefined ? bizagi.util.parseBoolean(properties.required) : false;\r\n        var visible = properties.visible != undefined ? bizagi.util.parseBoolean(properties.visible) : true;\r\n        if (properties.required) {\r\n            self.changeRequired(properties.required);\r\n        }\r\n        if (!visible) {\r\n            self.changeVisibility(visible);\r\n        }\r\n    },\r\n    /*\r\n    *   Sets the internal value\r\n    */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n        triggerEvents = triggerEvents !== undefined ? triggerEvents : true;\r\n\r\n        if (!(bizagi.util.identicalObjects(value, self.value))) {\r\n            // set previous value\r\n            self.properties.previousValue = self.properties.originalValue = self.value;\r\n\r\n            // Change internal value\r\n            self.value = self.properties.value = value;\r\n            if (self.properties.required && self.getMode() == \"execution\") {\r\n\r\n                if (self.checkRequired([])) {\r\n                    self.changeRequiredLabel(false);\r\n                } else {\r\n                    self.changeRequiredLabel(true);\r\n                }\r\n            }\r\n\r\n            // Trigger events\r\n            if (triggerEvents && !self.internalSetInitialValueFlag) {\r\n                self.triggerRenderChange();\r\n                self.triggerRenderValidate();\r\n            }\r\n        }\r\n    },\r\n\r\n    checkRequired: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (bizagi.util.parseBoolean(properties.required)) {\r\n            if (!self.hasValue()) {\r\n                message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                invalidElements.push({\r\n                    xpath: properties.xpath,\r\n                    message: message\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n\r\n    validateInputRetype: function () {\r\n        var self = this;\r\n        if (self.properties.retype && self.cloneRender) {\r\n            return self.getValue() == self.cloneRender.getValue();\r\n        }\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Triggers the render change event\r\n    */\r\n    triggerRenderChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        params.changed = params.changed !== undefined ? params.changed : true;\r\n        self.triggerHandler(\"renderchange\", {render: self, changed: params.changed});\r\n    },\r\n    /*\r\n    *   Triggers the render validate event\r\n    */\r\n    triggerRenderValidate: function () {\r\n        var self = this;\r\n        self.triggerHandler(\"rendervalidate\", {render: self});\r\n    },\r\n    /*\r\n    *   Sets the value in the rendered control\r\n    */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n\r\n        if (!self.properties.editable && (self.properties.display !== \"check\" || (self.properties.display === \"check\" && bizagi.override.enableCheck === true))) {\r\n            // Render as simple value\r\n            var displayValue = self.getDisplayValue(value);\r\n            if (typeof (displayValue) == \"string\" || typeof (displayValue) == \"number\") {\r\n                displayValue = bizagi.util.sanitizeHTML(displayValue);\r\n                $(control).html(\"<label class='readonly-control'>\" + displayValue + \"</label>\");\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *   Returns the internal value\r\n    */\r\n    getValue: function () {\r\n        return this.value;\r\n    },\r\n    /*\r\n    *   Returns the value to display, ex. non-editable renders\r\n    */\r\n    getDisplayValue: function () {\r\n        return this.getValue();\r\n    },\r\n    /*\r\n    *   Template method to get the label element\r\n    */\r\n    getLabel: function () {\r\n        bizagi.util.mustImplement(\"getLabel\");\r\n    },\r\n    /*\r\n    *   Template method to get the control element\r\n    */\r\n    getControl: function () {\r\n        bizagi.util.mustImplement(\"getControl\");\r\n    },\r\n    /*\r\n    *   Template method to get the control filler element\r\n    */\r\n    getControlFiller: function () {\r\n        bizagi.util.mustImplement(\"getControlFiller\");\r\n    },\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n    },\r\n    /*\r\n    *   Adds a validation message to the render\r\n    */\r\n    setValidationMessage: function (message) {\r\n        this.validationMessage = message;\r\n    },\r\n    /*\r\n    *   Method to render non editable values\r\n    */\r\n    renderReadOnly: function () {\r\n        var result = this.getValue();\r\n        var readOnlyValue = \"\";\r\n\r\n        if (bizagi.util.isObject(result) && typeof (result.value) !== \"undefined\") {\r\n            readOnlyValue = bizagi.util.sanitizeHTML(result.value);\r\n        } else if (!bizagi.util.isEmpty(result)) {\r\n            if (bizagi.util.isString(result)) {\r\n                readOnlyValue = bizagi.util.decodedDisplayValue(result);\r\n            } else {\r\n                readOnlyValue = result;\r\n            }\r\n        }\r\n\r\n        return readOnlyValue;\r\n    },\r\n\r\n    /*\r\n    *  Method to render print version\r\n    */\r\n    postRenderPrintVersion: function () {\r\n    },\r\n\r\n    /*\r\n    *   Customizes render display type with custom css classes\r\n    */\r\n    changeDisplayOption: function (displayType) {\r\n        this.properties.displayType = displayType;\r\n    },\r\n\r\n    /*\r\n    *   Return the right display option class\r\n    */\r\n    getDisplayOptionClass: function (displayType) {\r\n        return \"\";\r\n    },\r\n\r\n    /*\r\n    *   Customizes render label align\r\n    */\r\n    changeLabelAlign: function (alignType) {\r\n        this.properties.labelAlign = alignType;\r\n    },\r\n\r\n    /*\r\n    *   Customizes render value align\r\n    */\r\n    changeValueAlign: function (alignType) {\r\n        this.properties.valueAlign = alignType;\r\n    },\r\n\r\n    /*\r\n    *   Return the right align class\r\n    */\r\n    getAlignClass: function (alignType) {\r\n        return \"\";\r\n    },\r\n\r\n    /*\r\n    *   Customizes render label and value width\r\n    */\r\n    customizeRenderWidth: function () {\r\n    },\r\n\r\n    /* Customizes render color*/\r\n    changeColor: function (color, isLabelFormat) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var label = self.getLabel();\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        if (control && label) {\r\n            if (color != 'none') {\r\n                // Hide - show the render\r\n                if (self.properties.displayType === \"value\" || !isLabelFormat) {\r\n                    self.getElementsToStylize(self.getControl()).css(\"color\", color, \"!important\");\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"color\", color, \"!important\");\r\n                    });\r\n                } else {\r\n                    self.element.each(function () {\r\n                        this.style.setProperty('color', color, 'important');\r\n                    });\r\n\r\n                    if (self.properties.type == \"grid\") {\r\n                        self.getControl().find(\".bz-mobile-grid__header-title\").each(function () {\r\n                            this.style.setProperty('color', color, 'important');\r\n                        });\r\n                    }\r\n\r\n                    self.getLabel().find(\"label\").css(\"color\", color, \"!important\");\r\n                    if (self.properties.editable === false) {\r\n                        self.getElementsToStylize(self.getControl()).css(\"color\", color, \"!important\");\r\n                        self.getElementsToStylize($(\"label\", self.getControl()).css(\"color\", color, \"!important\"));\r\n                    }\r\n                }\r\n            } else {\r\n                self.element.css(\"color\", \"\");\r\n                self.getLabel().find(\"label\").css(\"color\", \"\");\r\n                self.getControl().css(\"color\", \"\");\r\n\r\n                self.getControl().find(\"input, textarea\").each(function (i, element) {\r\n                    var originalColor = $(element).data(\"originalColor\") || \"\";\r\n                    self.getElementsToStylize(element).css(\"color\", originalColor);\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes render background color*/\r\n    changeBackgroundColor: function (color) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var label = self.getLabel();\r\n\r\n        if (control && label) {\r\n            if (color != 'none') {\r\n                self.element.each(function () {\r\n                    this.style.setProperty('background-color', color, 'important');\r\n                });\r\n\r\n                if (typeof (label.find('label').style) !== \"undefined\") {\r\n                    self.getLabel().find(\"label\").style(\"background-color\", color, \"important\");\r\n                } else {\r\n                    self.getLabel().find(\"label\").css(\"background-color\", color, \"!important\");\r\n                }\r\n\r\n                var currentStyle = self.getLabel().attr(\"style\");\r\n                currentStyle += \"; background-color:\" + color + \"!important\";\r\n                self.getLabel().attr(\"style\", currentStyle);\r\n            } else {\r\n                self.element.css(\"background-color\", \"\");\r\n                self.getLabel().find(\"label\").css(\"background-color\", \"\");\r\n                self.getControl().css(\"background-color\", \"\");\r\n                self.getControl().find(\"input, textarea\").each(function (i, element) {\r\n                    var originalColor = $(element).data(\"originalColor\") || \"\";\r\n                    $(element).css(\"background-color\", originalColor);\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Returns the formatting label to be used for bold, italic, underline, strikethrough and size*/\r\n    getFormattingLabel: function () {\r\n        var self = this;\r\n        return self.getLabel().find(\"label\");\r\n    },\r\n\r\n    /* Customizes the font weight */\r\n    changeFontBold: function (bold, isLabelFormat) {\r\n        var self = this;\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(bold) != false && isLabelFormat) {\r\n            self.getFormattingLabel().css(\"font-weight\", \"bold\", \"!important\");\r\n            self.getControl().each(function (i, element) {\r\n                $(element).css(\"font-weight\", \"bold\", \"!important\");\r\n            });\r\n\r\n        } else {\r\n            if (isLabelFormat)\r\n                self.getFormattingLabel().css(\"font-weight\", \"normal\", \"!important\");\r\n        }\r\n        if (!isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(bold) == true) {\r\n                self.getControl().find(\"*\").each(function (i, element) {\r\n                    $(element).css(\"font-weight\", \"bold\", \"!important\");\r\n                });\r\n            } else {\r\n                self.getControl().find(\"*\").each(function (i, element) {\r\n                    $(element).css(\"font-weight\", \"normal\", \"!important\");\r\n                });\r\n                self.getControl().css(\"font-weight\", \"normal\", \"!important\");\r\n            }\r\n        }\r\n    },\r\n\r\n    controlValueIsChanged: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var value = self.getValue();\r\n        var compareValue = properties.originalValue;\r\n        var baseValue = properties.defaultValue;\r\n        var result = true;\r\n        var renderType = bizagi.util.normalizeType(properties.type);\r\n\r\n        // Flag to force to collect data\r\n        if ($.forceCollectData) {\r\n            return true;\r\n        }\r\n\r\n        // Verify if control has been ready\r\n        if (renderType === \"grid\" && self.ready().state() === \"pending\") {\r\n            return false;\r\n        }\r\n\r\n        if ([\"combo\", \"queryCombo\", \"list\", \"queryList\",\"radio\", \"queryRadio\"].includes(renderType) || /^cascadingcombo$/i.test(renderType)) {\r\n            if (value && value.length !== undefined) {\r\n                value = value[0];\r\n            }\r\n            if (compareValue && compareValue.length !== undefined) {\r\n                compareValue = compareValue[0];\r\n            }\r\n            if (baseValue && baseValue.length !== undefined) {\r\n                baseValue = baseValue[0];\r\n            }\r\n            value = value && value.id ? value.id : value;\r\n            compareValue = compareValue && compareValue.id ? compareValue.id : compareValue;\r\n            baseValue = baseValue && baseValue.id ? baseValue.id : baseValue;\r\n            if (typeof baseValue != \"undefined\" && baseValue != null) {\r\n                result = (compareValue == value) && (compareValue != baseValue) ? false : true;\r\n            } else {\r\n                result = (compareValue == value) ? false : true;\r\n            }\r\n        } else if (renderType === \"boolean\" || renderType === \"queryBoolean\" || renderType === \"queryCheck\") {\r\n            result = (bizagi.util.parseBoolean(compareValue) == bizagi.util.parseBoolean(value)) ? false : true;\r\n        } else if (renderType === \"searchNumber\") {\r\n            result = !!(value);\r\n        } else if (renderType === \"number\") {\r\n            if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue === value) ? false : true;\r\n            }\r\n        } else if (renderType === \"text\") {\r\n            if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue === value) ? false : true;\r\n            }\r\n        } else if (renderType === \"date\") {\r\n            if (!compareValue && !value) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue == value) ? false : true;\r\n            }\r\n        } else if (renderType === \"actionLauncher\") {\r\n            //Object must be an array\r\n            result = false;\r\n            var compareValueObj = [];\r\n            try {\r\n                if (typeof compareValue === \"string\") {\r\n                    compareValueObj = JSON.parse(compareValue);\r\n                } else {\r\n                    compareValueObj = compareValue;\r\n                }\r\n            } catch (e) {\r\n            }\r\n\r\n            var _findAction = function (guid, targetObj) {\r\n                guid = guid || \"\";\r\n                targetObj = targetObj || [];\r\n                var result = false;\r\n                for (var i = 0, l = targetObj.length; i < l; i++) {\r\n                    if (targetObj[i].guidAction == guid) {\r\n                        result = true;\r\n                        break;\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n\r\n            if (compareValueObj.length == value.length) {\r\n                for (var i = 0, l = compareValueObj.length; i < l; i++) {\r\n                    if (!_findAction(compareValueObj[i].guidAction, value)) {\r\n                        result = true;\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                result = true;\r\n            }\r\n        } else if (renderType === \"polymorphicLauncher\" || renderType === \"entityTemplate\") {\r\n            //Object must be an array\r\n            if (compareValue.length != value.length) {\r\n                result = true;\r\n            } else {\r\n                result = (JSON.encode(value) == JSON.encode(compareValue)) ? false : true;\r\n            }\r\n        } else if (renderType === \"image\") {\r\n            if (compareValue == null && value.indexOf(true) < 0) {\r\n                result = false;\r\n            } else {\r\n                result = true;\r\n            }\r\n        } else if (renderType === \"searchList\") {\r\n            var objectValue = {};\r\n            try {\r\n                objectValue = JSON.parse(value);\r\n            } catch (e) {\r\n                console.log(\"Error when detect change value on searchList control\")\r\n            }\r\n            result = (JSON.encode(compareValue) == JSON.encode(objectValue.value)) ? false : true;\r\n        } else {\r\n            result = (compareValue === value) ? false : true;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /* Customizes the font italic style */\r\n    changeFontItalic: function (italic, isLabelFormat) {\r\n        var self = this;\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(italic) == true) {\r\n                if (isLabelFormat)\r\n                    self.getFormattingLabel().css(\"font-style\", \"italic\", \"!important\");\r\n\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"font-style\", \"italic\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"font-style\", \"italic\", \"!important\");\r\n                }\r\n            } else {\r\n                if (isLabelFormat)\r\n                    self.getFormattingLabel().css(\"font-style\", \"normal\", \"!important\");\r\n\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"font-style\", \"normal\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"font-style\", \"normal\", \"!important\");\r\n                }\r\n            }\r\n        } else {\r\n            if (bizagi.util.parseBoolean(italic) == true) {\r\n                self.getFormattingLabel().css(\"font-style\", \"italic\", \"!important\");\r\n            } else {\r\n                self.getFormattingLabel().css(\"font-style\", \"normal\", \"!important\");\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes the font underline */\r\n    changeFontUnderline: function (underline, isLabelFormat) {\r\n        var self = this;\r\n        var textFormat = self.properties.textFormat || {};\r\n        var valueFormat = self.properties.valueFormat || {};\r\n        var strikethru = bizagi.util.parseBoolean(textFormat.strikethru) ? \"line-through \" : \"\";\r\n        var valuestrikethru = bizagi.util.parseBoolean(valueFormat.strikethru) ? \"line-through \" : \"\";\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(underline) == true && isLabelFormat) {\r\n            self.getFormattingLabel().css(\"text-decoration\", strikethru + \"underline\", \"!important\");\r\n            self.getControl().each(function (i, element) {\r\n                self.getElementsToStylize(element).css(\"text-decoration\", strikethru + \"underline\");\r\n            });\r\n        } else {\r\n            if (isLabelFormat)\r\n                self.getFormattingLabel().css(\"text-decoration\", strikethru, \"!important\");\r\n        }\r\n        if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(underline) == true) {\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"text-decoration\", valuestrikethru + \"underline\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"text-decoration\", valuestrikethru + \"underline\", \"!important\");\r\n                }\r\n            } else {\r\n                self.getControl().find(\"*\").each(function (i, element) {\r\n                    self.getElementsToStylize(element).css(\"text-decoration\", valuestrikethru, \"!important\");\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes the font Strikethrough property */\r\n    changeFontStrikethru: function (strikethru, isLabelFormat) {\r\n        var self = this;\r\n        var textFormat = self.properties.textFormat || {};\r\n        var valueFormat = self.properties.valueFormat || {};\r\n        var underline = bizagi.util.parseBoolean(textFormat.underline) ? \"underline \" : \"\";\r\n        var valueunderline = bizagi.util.parseBoolean(valueFormat.underline) ? \"underline \" : \"\";\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(strikethru) == true && isLabelFormat) {\r\n            self.getFormattingLabel().css(\"text-decoration\", underline + \"line-through\", \"!important\");\r\n        } else {\r\n            if (isLabelFormat)\r\n                self.getFormattingLabel().css(\"text-decoration\", underline, \"!important\");\r\n        }\r\n\r\n        if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(strikethru) == true) {\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"text-decoration\", valueunderline + \"line-through\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"text-decoration\", valueunderline + \"line-through\", \"!important\");\r\n                }\r\n            } else {\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"text-decoration\", valueunderline, \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"text-decoration\", valueunderline, \"!important\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes the font size property */\r\n    changeFontSize: function (size, isLabelFormat) {\r\n        var self = this;\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (size != \"0\") {\r\n            var label = self.getFormattingLabel();\r\n            var newFontSize = (100 + Number(size) * 10) + \"%\";\r\n            if (isLabelFormat) {\r\n                label.css(\"font-size\", newFontSize, \"!important\");\r\n            }\r\n            if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n                var control = self.getControl();\r\n                if (typeof control.children() == \"object\" && control.children().length > 0) {\r\n                    self.getElementsToStylize(control.children()).css(\"font-size\", newFontSize, \"!important\");\r\n                } else {\r\n                    self.getElementsToStylize(control).css(\"font-size\", newFontSize, \"!important\");\r\n                    // Next line applies to Cascading combo and combo in order to increase the control space with large value fonts\r\n                    if (self.properties.type.indexOf(\"ombo\") != -1 && size > 4) (\".ui-selectmenu\", control).children(0).height(2 * size + 20);\r\n                }\r\n\r\n                self.getElementsToStylize(control.find(\".ui-bizagi-render-date\")).css(\"line-height\", \"normal\");\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * in mobiles, don't apply styles to icon's elements\r\n     */\r\n    getElementsToStylize: function (context) {\r\n        return $(context);\r\n    },\r\n\r\n    /* Changes the render visibility*/\r\n    changeVisibility: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(argument) == true) {\r\n            if (properties.type !== \"hidden\") {\r\n                self.element.show();\r\n                self.element.css(\"display\", \"\");\r\n\r\n                if (properties.required) {\r\n                    if (!self.hasValue()) {\r\n                        self.changeRequiredLabel(true);\r\n                    }\r\n                }\r\n            }\r\n        } else if (self.element) {\r\n            self.element.hide();\r\n        }\r\n\r\n        // Update properties\r\n        properties.visible = argument;\r\n    },\r\n    /* Changes the render editability*/\r\n    changeEditability: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        // Renders again\r\n        properties.editable = bizagi.util.parseBoolean(argument);\r\n\r\n        // Clears control\r\n        control.empty();\r\n\r\n        if (typeof self.internalRenderControl == \"function\") {\r\n            $.when(self.internalRenderControl()).done(function (html) {\r\n                if (typeof self.emptyControlByChangeEditability == \"function\")\r\n                    self.emptyControlByChangeEditability();\r\n                if (!self.asyncRenderDeferred)\r\n                    control.append(html);\r\n                self.postRenderElement(self.element);\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    * change cell editability and attach bindings\r\n    */\r\n    changeEditabilityCellControl: function (argument, key, xpath) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        var renderColumn = self.grid.getColumn(xpath);\r\n        var decorated = renderColumn.getDecorated(key);\r\n\r\n        // Renders again\r\n        properties.editable = bizagi.util.parseBoolean(argument);\r\n\r\n        // Clears control\r\n        control.empty();\r\n        if (typeof self.internalRenderControl == \"function\") {\r\n            $.when(self.internalRenderControl()).done(function (html) {\r\n                if (!self.asyncRenderDeferred) {\r\n                    control.append(html);\r\n                }\r\n\r\n                self.postRenderElement(self.element);\r\n\r\n                if (properties.editable) {\r\n\r\n                    renderColumn.bind(\"rendered\", function () {\r\n                        renderColumn.readyDeferred.resolve();\r\n                    });\r\n\r\n                    decorated.unbind(\"renderchange\");\r\n\r\n                    // If the render changes set the flag on\r\n                    decorated.bind(\"renderchange\", function (render, args) {\r\n                        renderColumn.changed = true;\r\n                        self.grid.onCellChange(renderColumn, null, key, args);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    changeRequired: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var label = properties.displayName || \"\";\r\n        var labelElement = $(\"label\", self.getLabel());\r\n        var controlElement = self.getControl();\r\n\r\n        // Update properties\r\n        properties.required = argument;\r\n\r\n        // Changes label\r\n        if (self.getMode() == \"execution\" && self.checkRequired([])) {\r\n            self.changeRequiredLabel(false);\r\n        } else if (bizagi.util.parseBoolean(argument) == true && properties.editable) {\r\n            if (self.properties.orientation == \"rtl\") {\r\n                controlElement.prepend('<div class=\"ui-bizagi-render-control-required-rtl\"></div>');\r\n            } else {\r\n                controlElement.addClass('control-required');\r\n                controlElement.prepend('<div class=\"ui-bizagi-render-control-required\"></div>');\r\n            }\r\n        } else {\r\n            // if element has required label and through action change it, remove element.\r\n            if (self.properties.orientation == \"rtl\") {\r\n                $(\".ui-bizagi-render-control-required-rtl\", controlElement).remove();\r\n            } else {\r\n                controlElement.removeClass('control-required');\r\n                $(\".ui-bizagi-render-control-required\", controlElement).remove();\r\n            }\r\n        }\r\n\r\n        // Set text, HTML is more suitable for the content\r\n        labelElement.html(label);\r\n\r\n        // Perform validations again to check if the form is valid after this change\r\n        self.triggerRenderValidate();\r\n    },\r\n    /**\r\n     * This method just make a toggle of red label indicator\r\n     * Does't change internal value of control, if you need it\r\n     * please use changeRequired method\r\n     *\r\n     * @argument {boolean} argument\r\n     */\r\n    changeRequiredLabel: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var label = properties.displayName || \"\";\r\n        var labelElement = $(\"label\", self.getLabel());\r\n        var controlElement = self.getControl();\r\n\r\n        // Changes label\r\n        if (bizagi.util.parseBoolean(argument) == true && properties.editable) {\r\n            if (self.properties.orientation == \"rtl\") {\r\n                controlElement.prepend('<div class=\"ui-bizagi-render-control-required-rtl\"></div>');\r\n            } else {\r\n                controlElement.addClass('control-required');\r\n                controlElement.append('<div class=\"ui-bizagi-render-control-required\"></div>');\r\n            }\r\n        } else {\r\n            // if element has required label and through action change it, remove element.\r\n            if (self.properties.orientation == \"rtl\") {\r\n                $(\".ui-bizagi-render-control-required-rtl\", controlElement).remove();\r\n            } else {\r\n                controlElement.removeClass('control-required');\r\n                $(\".ui-bizagi-render-control-required\", controlElement).remove();\r\n            }\r\n        }\r\n\r\n        // Set text, HTML is more suitable for the content\r\n        labelElement.html(label);\r\n\r\n        // Perform validations again to check if the form is valid after this change\r\n        self.triggerRenderValidate();\r\n    },\r\n    /*\r\n    *   Refresh the control with a new data\r\n    */\r\n    refreshControl: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var originalValue = self.value;\r\n        var form = self.getFormContainer();\r\n        var idForm = form.properties.id || \"\";\r\n\r\n        args = args || {};\r\n\r\n        // Start waiting\r\n        self.startLoading();\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh();\r\n\r\n        // Call the ajax service\r\n        return $.when(self.dataService.multiaction().refreshControl({\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: (properties.xpathContext || args.xpathContext),\r\n            idForm: idForm\r\n        })).pipe(function (data) {\r\n            // Clear variables\r\n            self.control = self.controlFiller = self.label = null;\r\n\r\n            // Update properties data\r\n            var currentElement = self.element;\r\n            self.initializeData(data.render);\r\n\r\n            // Render the control again\r\n            return $.when(self.render()).pipe(function (html) {\r\n                var result = $(html);\r\n                //Dont remove unused rendered var\r\n                var rendered = self.postRenderElement(result);\r\n                self.properties.originalValue = self.value;\r\n                return result;\r\n            }).pipe(function (result) {\r\n                // When the content has been post-renderized, replace it\r\n                currentElement.replaceWith(result);\r\n\r\n                // Prevent multiple refresh on grid\r\n                if (!self.grid) {\r\n                    self.triggerRenderChange({changed: false});\r\n                }\r\n\r\n                // Execute personalized stuff before to refresh it\r\n                self.afterToRefresh();\r\n            });\r\n\r\n        }).fail(function (message) {\r\n            var message = self.processFailMessage(message);\r\n\r\n        }).always(function () {\r\n            self.endLoading();\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Refresh the control with a new data\r\n     */\r\n    refreshDesignControl: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh();\r\n\r\n        // Clear variables\r\n        self.control = self.controlFiller = self.label = null;\r\n\r\n        $.extend(data.render.properties, {\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: (properties.xpathContext || \"form\"),\r\n            idPageCache: properties.idPageCache\r\n        });\r\n\r\n        // Update properties data\r\n        var currentElement = self.element;\r\n        self.initializeData(data.render);\r\n\r\n        // Render the control again\r\n        return $.when(self.render()).pipe(function (html) {\r\n            var result = $(html);\r\n            //Dont remove unused rendered var\r\n            var rendered = self.postRenderElement(result);\r\n            self.properties.originalValue = self.value;\r\n            return result;\r\n        }).pipe(function (result) {\r\n            // When the content has been post-renderized, replace it\r\n            currentElement.replaceWith(result);\r\n            self.triggerRenderChange();\r\n\r\n            // Execute personalized stuff before to refresh it\r\n            self.beforeToRefresh();\r\n        });\r\n    },\r\n\r\n    /*\r\n    * Cleans current value\r\n    */\r\n    cleanData: function () {\r\n        var self = this;\r\n\r\n        self.setValue(\"\");\r\n        self.clearDisplayValue();\r\n    },\r\n\r\n    /*\r\n     *   Sets the value in the rendered control\r\n     */\r\n    clearDisplayValue: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var input = control.find(\"input\");\r\n\r\n        if (input.length > 0) {\r\n            input.val(self.getValue());\r\n        } else if (self.properties.editable === false) {\r\n            $(control).html(\"<label class='readonly-control'></label>\");\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Updates original value for some comparisons\r\n    */\r\n    updateOriginalValue: function () {\r\n        var self = this;\r\n        self.properties.originalValue = self.value;\r\n    },\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Add the render value\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            if (!bizagi.util.isEmpty(xpath)) {\r\n                if (!bizagi.util.isEmpty(value)) {\r\n                    renderValues[properties.xpath] = value;\r\n                } else if (value === \"\" || value === null) {\r\n                    renderValues[properties.xpath] = \"\";\r\n                }\r\n            }\r\n        }\r\n\r\n        //Validate if the input has a retype configured and check that both values matches, otherwise delete the original value\r\n        if (!self.validateInputRetype()) {\r\n            renderValues[properties.xpath] = \"\";\r\n        }\r\n    },\r\n\r\n    hasChanged: function (result) {\r\n        var self = this;\r\n        if (self.controlValueIsChanged()) {\r\n            result.push(true);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *  Configure aditional Handlers for queryForm type\r\n    */\r\n    configureHandlersQueryForm: function () {\r\n        var self = this;\r\n        var checkIncluded = self.element.find(\".ui-bizagi-render-control-included\");\r\n        checkIncluded.change(function () {\r\n            self.properties.included = $(this).is(\":checked\");\r\n        });\r\n    },\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectDataQueryForm: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n        var queryValue = null;\r\n        if (!bizagi.util.isEmpty(xpath)) {\r\n            if (value !== null && typeof (value) !== \"undefined\") {\r\n                var isObject = typeof (value.id) !== \"undefined\";\r\n                if (isObject) {\r\n                    queryValue = (!bizagi.util.isEmpty(value.id)) ? [value] : null;\r\n                } else {\r\n                    queryValue = (value !== \"\") ? value : null;\r\n                }\r\n            }\r\n            if (queryValue !== null || properties.included) {\r\n\r\n                if (!(properties.display == \"check\" && properties.value == false)) {\r\n\r\n                    var searchType = self.properties.typeSearch || self.properties.rangeQuery || \"NONE\";\r\n                    searchType = searchType.toUpperCase();\r\n                    var newParameter = {\r\n                        \"value\": queryValue,\r\n                        \"included\": self.properties.included,\r\n                        \"xpath\": properties.xpath,\r\n                        \"searchType\": searchType,\r\n                        \"orderType\": \"NONE\"\r\n                    };\r\n                    if (typeof properties.displayXpath !== \"undefined\" && properties.displayXpath !== \"\") {\r\n                        //newParameter.displayXpath= properties.xpath+\".\"+properties.displayXpath;\r\n                        newParameter.displayXpath = properties.displayXpath;\r\n                    }\r\n                    renderValues.push(newParameter);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *  Method to determine if the render value can be sent to the server or not\r\n    */\r\n    canBeSent: function () {\r\n        var self = this, force;\r\n        var properties = self.properties;\r\n        var displayOnly = bizagi.util.parseBoolean(properties.displayOnly) || false;\r\n        var editable = properties.editable;\r\n\r\n        // The render can be sent if it is editable and is not \"display only\"\r\n        if (!displayOnly && editable) {\r\n            return true;\r\n        }\r\n\r\n        // Don't send the clones\r\n        if (properties.isClone) {\r\n            return false;\r\n        }\r\n\r\n        if (properties.xpath) {\r\n            var form = self.getFormContainer();\r\n            if (form.getRenders(properties.xpath).length == 1) {\r\n                force = $.forceCollectData ? $.forceCollectData.toString() : false;\r\n                $.forceCollectData = force ? undefined : $.forceCollectData;\r\n                if (self.controlValueIsChanged()) {\r\n                    $.forceCollectData = force ? bizagi.util.parseBoolean(force) : $.forceCollectData;\r\n                    return true;\r\n                }\r\n                $.forceCollectData = force ? bizagi.util.parseBoolean(force) : $.forceCollectData;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n    /*\r\n    *  Method to determine if the render value can be sent to search\r\n    */\r\n    canBeSentQueryForm: function () {\r\n        var self = this, force;\r\n        var properties = self.properties;\r\n        // Don't send the clones\r\n        if (properties.isClone) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    /*\r\n    *   Focus on the current element\r\n    */\r\n    focus: function (time) {\r\n        var self = this;\r\n\r\n        // Focus is only allowed when the render is visible\r\n        if (!self.properties.visible) return;\r\n\r\n        // Call base\r\n        this._super();\r\n        var layout = $(\"#ui-bizagi-wp-app-render-form-content\");\r\n\r\n        // Configures effect\r\n        var effect = function () {\r\n            var control = self.getControl();\r\n            var defaultControl = (self.properties.type != \"grid\") ? $(\"input, select, option, textarea\", control) : $(\"input, select, option, textarea\", control).first();\r\n            if (defaultControl.length > 0) {\r\n\r\n                // Focus control\r\n                $.each(defaultControl, function (i) {\r\n                    var innerControl = defaultControl[i];\r\n                    if ($(innerControl).attr(\"type\") != \"hidden\" && $(innerControl).css(\"display\") != \"none\" && $(innerControl).css(\"visibility\") != \"hidden\") {\r\n\r\n                        try {\r\n                            if (!bizagi.util.isIE()) {\r\n                                bizagi.util.autoScrollBottom(layout);\r\n                            }\r\n                            innerControl.focus();\r\n                        } catch (e) {\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        // Wait until the render is ready to apply the focus effect\r\n        $.when(self.ready())\r\n            .done(function () {\r\n                // Run effect\r\n                if (time > 0) {\r\n                    setTimeout(effect, time);\r\n                } else {\r\n                    effect();\r\n                }\r\n            });\r\n    },\r\n\r\n    /*\r\n    *   Resolves default align for each display type\r\n    */\r\n    getDefaultLabelAlign: function (displayType) {\r\n        return \"default\";\r\n    },\r\n\r\n    /*\r\n    *   Resolves default value align for each display type\r\n    */\r\n    getDefaultValueAlign: function (displayType) {\r\n        return \"default\";\r\n    },\r\n    /*\r\n    *   Transform the align type when using RTL orientation\r\n    */\r\n    getRTLAlign: function (align) {\r\n        /* if (align === \"default\"){ \r\n            return \"right\";\r\n        } */\r\n        return align;\r\n    },\r\n\r\n    /*\r\n    *   Enables submit on change feature for the current render\r\n    */\r\n    configureSubmitOnChange: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = \"\";\r\n\r\n        if (!properties.editable) return;\r\n\r\n        // Build action\r\n        properties.dependencies = properties.dependencies || 'all';\r\n\r\n        if (properties.xpath) {\r\n            if (properties.submitOnChangexpathContext) {\r\n                xpath = properties.submitOnChangexpathContext + \".\" + properties.xpath;\r\n            } else {\r\n                xpath = properties.xpath;\r\n            }\r\n        } else {\r\n            if (properties.submitOnChangexpathContext) {\r\n                xpath = properties.submitOnChangexpathContext + \".\" + properties.id;\r\n            } else {\r\n                xpath = properties.id;\r\n            }\r\n        }\r\n\r\n        var action = {\r\n            \"conditions\": {\r\n                \"expressions\": [\r\n                    {\r\n                        \"simple\": {\r\n                            \"xpath\": xpath,\r\n                            \"operator\": \"changes\",\r\n                            \"argumentType\": \"const\"\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            \"commands\": [\r\n                {\r\n                    \"xpath\": xpath,\r\n                    \"command\": 'submit-value',\r\n                    \"argument\": properties.dependencies\r\n                }\r\n            ],\r\n            \"dependencies\": [xpath],\r\n            \"elseCommands\": []\r\n        };\r\n\r\n        // Add action when form ends its rendering\r\n        $.when(self.ready()).done(function () {\r\n            var form = self.getFormContainer();\r\n            form.addSubmitAction(xpath, action);\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Sends all the info to the server then refreshes the form\r\n    *   Returns a deferred\r\n    */\r\n    submitOnChange: function (data, bRefreshForm, notCollect) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n\r\n        // Add context parameter\r\n        if (self.properties.contexttype != \"\" && data) {\r\n            data[self.dataService.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = self.properties.contexttype;\r\n        }\r\n\r\n        $.when(self.isReadyToSave()).done(function () {\r\n            self.internalSubmitOnChange(data, bRefreshForm, notCollect).done(function () {\r\n                defer.resolve();\r\n            }).fail(function () {\r\n                defer.reject();\r\n            });\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    getCacheIdCase: function () {\r\n        var self = this;\r\n        var idCase = self.getParams().idCase;\r\n\r\n        if (bizagi.cache === undefined) {\r\n            bizagi.cache = {};\r\n            bizagi.cache.idCaseObject = {\r\n                idCase: idCase !== undefined ? idCase : (bizagi.cache.idCase !== undefined ? bizagi.cache.idCase : undefined)\r\n            };\r\n        } else {\r\n            if (idCase !== undefined && bizagi.cache.idCaseObject !== undefined) {\r\n                bizagi.cache.idCaseObject.idCase = idCase;\r\n            } else {\r\n                if (idCase !== undefined && bizagi.cache.idCaseObject === undefined) {\r\n                    bizagi.cache.idCaseObject = {};\r\n                    bizagi.cache.idCaseObject.idCase = idCase;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (idCase === undefined) {\r\n            if (bizagi.cache.idCaseObject === undefined) {\r\n                idCase = undefined;\r\n            } else {\r\n                idCase = bizagi.cache.idCaseObject.idCase;\r\n            }\r\n        } else {\r\n            idCase = idCase;\r\n        }\r\n\r\n        return idCase;\r\n    },\r\n    /*\r\n    *   Internal method\r\n    *   Sends all the info to the server then refreshes the form\r\n    *   Returns a deferred\r\n    */\r\n    internalSubmitOnChange: function (data, bRefreshForm, notCollect) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n        var parameters = {\r\n            data: data,\r\n            bRefreshForm: bRefreshForm,\r\n            notCollect: notCollect,\r\n            properties: {\r\n                idCase: self.getCacheIdCase(),\r\n                id: properties.id,\r\n                xpath: properties.xpath,\r\n                idPageCache: properties.idPageCache,\r\n                contexttype: properties.contexttype\r\n            }\r\n        }\r\n\r\n        return form.internalSubmitOnChange(parameters);\r\n    },\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n        return $.when(self.parent.ready(), self.isRendered());\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n\r\n        if (form) {\r\n            return form.getCustomHandlers();\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandler: function (key) {\r\n        var self = this;\r\n        var customHandlers = self.getCustomHandlers();\r\n\r\n        if (customHandlers) {\r\n            return customHandlers[key];\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n    *   Calculates render label and value width\r\n    */\r\n    calculateRenderWidth: function (labelWidth, valueWidth, displayType) {\r\n        var self = this;\r\n        // Read values\r\n        // If the label width or the value width are 0, the BAS means that no value is used, so we need to adjust them to 50%\r\n        if (valueWidth == \"100\" && typeof labelWidth === \"undefined\") {\r\n            labelWidth = \"0\";\r\n        } else {\r\n            labelWidth = labelWidth ? (labelWidth != \"0\" ? labelWidth : \"50\") : \"50%\";\r\n        }\r\n        valueWidth = valueWidth ? (valueWidth != \"0\" ? valueWidth : \"50\") : \"50%\";\r\n\r\n        if (displayType == \"normal\" || displayType == \"both\" || displayType == \"reversed\") {\r\n\r\n            // Special case with lower values, so they want both fields in \"auto\" width\r\n            if (labelWidth && bizagi.util.percent2Number(labelWidth) < 5 &&\r\n                valueWidth && bizagi.util.percent2Number(valueWidth) < 5) {\r\n                return {label: 0, control: 100};\r\n            }\r\n            // Normalize percentages\r\n            if (labelWidth && !valueWidth) {\r\n                labelWidth = bizagi.util.percent2Number(labelWidth);\r\n                valueWidth = 100 - labelWidth;\r\n\r\n            } else if (!labelWidth && valueWidth) {\r\n                valueWidth = bizagi.util.percent2Number(valueWidth);\r\n                labelWidth = 100 - valueWidth;\r\n            } else {\r\n                labelWidth = bizagi.util.percent2Number(labelWidth);\r\n                valueWidth = bizagi.util.percent2Number(valueWidth);\r\n\r\n                // Check 100% percentage\r\n                if ((labelWidth + valueWidth) != 100 && typeof (self.properties) != \"undefined\" && self.properties.layoutType != \"pixels\") {\r\n                    valueWidth = 100 - labelWidth;\r\n                }\r\n            }\r\n        } else {\r\n            labelWidth = 100;\r\n            valueWidth = 100;\r\n        }\r\n\r\n        return {label: labelWidth, control: valueWidth};\r\n    },\r\n    /*\r\n    *   Get param value idCase\r\n    */\r\n    getIdCase: function () {\r\n        var self = this;\r\n        return self.getFormContainer().params.idCase || bizagi.context.idCase;\r\n    },\r\n    /*\r\n    *   Get param value idWorkitem\r\n    */\r\n    getIdWorkitem: function () {\r\n        var self = this;\r\n        return self.getFormContainer().params.idWorkitem || bizagi.context.idWorkitem;\r\n    },\r\n    /*\r\n    *   Get param value idTask\r\n    */\r\n    getidTask: function () {\r\n        var self = this;\r\n        return self.getFormContainer().params.idTask || bizagi.context.idTask;\r\n    },\r\n    /*\r\n    *   Get param value sessionId\r\n    */\r\n    getSessionId: function () {\r\n        var self = this;\r\n        return self.getFormContainer().properties.sessionId;\r\n    },\r\n\r\n    /*\r\n    *   CELL STUFF\r\n    *   TODO: Move to other place\r\n    */\r\n\r\n    /* Customizes cell color*/\r\n    changeCellColor: function (color) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        if (control) {\r\n            if (color != 'none') {\r\n                control.css(\"color\", color);\r\n                control.find(\"input, textarea, label\").each(function (i, element) {\r\n                    $(element).css(\"color\", color);\r\n                });\r\n            } else {\r\n                control.css(\"color\", \"\");\r\n                control.find(\"input, textarea, label\").each(function (i, element) {\r\n                    $(element).css(\"color\", \"\");\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Customizes cell background color\r\n     * @param color\r\n     */\r\n    changeCellBackgroundColor: function (color) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var backgroundColor = \"\";\r\n        var backgroundImage = \"\";\r\n\r\n        if (control) {\r\n            if (color != 'none') {\r\n                backgroundColor = color;\r\n                backgroundImage = \"none\";\r\n            }\r\n\r\n            if (self.properties.editable) {\r\n                var needBGPaint = false;\r\n\r\n                control.find(\"input, textarea, .ui-selectmenu\").each(function (i, element) {\r\n\r\n                    if (((element.type == \"text\") || (element.type == \"textarea\")) && !($(element).hasClass('ui-select-data')))\r\n                        needBGPaint = true;\r\n\r\n                    $(element).css({\r\n                        \"background-color\": backgroundColor,\r\n                        \"background-image\": backgroundImage\r\n                    });\r\n                });\r\n\r\n                if (!needBGPaint) {\r\n                    control.closest(\"td\").each(function (i, element) {\r\n                        $(element).css({\r\n                            \"background-color\": backgroundColor,\r\n                            \"background-image\": backgroundImage\r\n                        });\r\n                    });\r\n                }\r\n\r\n            } else {\r\n                control.each(function (i, element) {\r\n                    //TODO: Validar si se aplican los estilos en tablet aun sin esta linea, cuidado con desktop\r\n                    var item = ($(element).hasClass(\"ui-bizagi-cell-readonly\")) ? control.closest(\"td\") : $(element);\r\n                    item.css({\r\n                        \"background-color\": backgroundColor,\r\n                        \"background-image\": backgroundImage\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n    },\r\n\r\n    /**\r\n     * Changes the cell visibility\r\n     * @param argument\r\n     */\r\n    changeCellVisibility: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        if (control) {\r\n            // Hide - show the render\r\n            if (bizagi.util.parseBoolean(argument) == true) {\r\n                //control.show();\r\n                control.css(\"visibility\", \"visible\");\r\n                control.css(\"display\", \"\");\r\n\r\n                self.element && self.element.show();\r\n            } else {\r\n                //control.hide();\r\n                control.css(\"visibility\", \"hidden\");\r\n            }\r\n        }\r\n\r\n        // Update properties\r\n        properties.visible = argument;\r\n    },\r\n\r\n    /**\r\n     * Changes the cell required\r\n     * @param argument\r\n     */\r\n    changeCellRequired: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        if (control) {\r\n            // Check if argument is true and control donot have any value\r\n            if (bizagi.util.parseBoolean(argument) == true && bizagi.util.isEmpty(self.value)) {\r\n                control.addClass('control-required');\r\n                control.append('<div class=\"ui-bizagi-render-control-required\"></div>');\r\n            } else {\r\n                control.removeClass('control-required');\r\n                $(\".ui-bizagi-render-control-required\", control).remove();\r\n            }\r\n            // Update properties\r\n            properties.required = argument;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to create deferred at the moment to start multiaction\r\n     */\r\n    startActionExecution: function () {\r\n        var self = this;\r\n        self.startLoading();\r\n        self.actionExecutionDeferred = new $.Deferred();\r\n    },\r\n\r\n    /**\r\n     * method to resolve the deferred when multiaction finish\r\n     */\r\n    endActionExecution: function () {\r\n        var self = this;\r\n        self.endLoading();\r\n        if (self.actionExecutionDeferred) self.actionExecutionDeferred.resolve();\r\n        delete self.actionExecutionDeferred;\r\n    },\r\n\r\n    /**\r\n     * Method to return the promise to anyone that needs to know if multiaction ended\r\n     * @returns {*}\r\n     */\r\n    readyActionExecution: function () {\r\n        var self = this;\r\n        if (!self.actionExecutionDeferred) return $.when(true);\r\n        return self.actionExecutionDeferred.promise();\r\n    },\r\n\r\n    /**\r\n     * Verifies is the elements was inside a new row in a grid\r\n     * @returns {boolean}\r\n     */\r\n    isFromCreatedRow: function () {\r\n        var self = this;\r\n\r\n        if (self.grid) {\r\n            var i = self.grid.columns.length;\r\n\r\n            while (i-- > 0) {\r\n                if (self.grid.columns[i].properties.xpath == self.properties.xpath) {\r\n                    if (self.grid.columns[i].isNewRow == true) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    /**\r\n     * Submits a invalidate page cache request\r\n     * @param params\r\n     */\r\n    submitInvalidatePageCacheRequest: function (params) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var pageCacheToInvalidate = params ? params.idPageCache : properties.idPageCache;\r\n\r\n\r\n        self.dataService.invalidatePageCache({idPageCache: pageCacheToInvalidate});\r\n    },\r\n\r\n    /**\r\n     * Check is design mode\r\n     */\r\n    isDesignMode: function () {\r\n        return this.getMode() === \"design\";\r\n    },\r\n\r\n    /**\r\n     * Check is design mode\r\n     */\r\n    isExecutionMode: function () {\r\n        return this.getMode() === \"execution\";\r\n    },\r\n\r\n    /***/\r\n    preventDefaultForAnchorTag: function(){        \r\n        if (bizagi.util.isSharepointContext()){\r\n            $(\"a\", this.getControl()).click(function(ev){\r\n                ev.preventDefault();          \r\n            });\r\n        }    \r\n    }\r\n});","/*\r\n *   Name: Bizagi Render Base Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a base render class with common stuff related to all renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.render.base\", {}, {\r\n\r\n    /**\r\n     * Method to process the render the layout\r\n     * @param {boolean} isLabelFormat\r\n     * @param {string} format\r\n     */\r\n    processLayout: function (isLabelFormat, format) {\r\n        var properties = this.properties;\r\n\r\n        if (typeof isLabelFormat !== \"boolean\") {\r\n            console.warm(\"error calling processLayout, 'isLabelFormat' is not boolean\");\r\n            return;\r\n        }\r\n\r\n        if (isLabelFormat) {\r\n            this.processLabelLayout(format);\r\n        } else {\r\n            this.processControlLayout(format);\r\n\r\n            // Set required and visiblity\r\n            properties.required = typeof (properties.required) !== \"undefined\" ? bizagi.util.parseBoolean(properties.required) : false;\r\n            var visible = typeof (properties.visible) !== \"undefined\" ? bizagi.util.parseBoolean(properties.visible) : true;\r\n\r\n            if (properties.required) {\r\n                this.changeRequired(properties.required);\r\n            }\r\n\r\n            if (!visible) {\r\n                this.changeVisibility(visible);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to process the label in the layout\r\n     * @param {} format\r\n     * @returns {}\r\n     */\r\n    processLabelLayout: function (format) {\r\n        var $label = this.getLabel();\r\n        if ($label == null) return;\r\n\r\n        // Set customizations\r\n        format = format || {};\r\n        if (typeof format.bold === \"undefined\") {\r\n            format.bold = true; // Default value\r\n        }\r\n\r\n        this.changeBackgroundColor(format.background)\r\n            .changeFontColor($label, format.color)\r\n            .changeFontBold($label, format.bold)\r\n            .changeFontSize($label, format.size)\r\n            .changeFontItalic($label, format.italic)\r\n            .changeTextDecoration($label, (format.underline ? \"underline\" : \"\") + (format.strikethru ? \" line-through\" : \"\"));\r\n    },\r\n\r\n    /**\r\n     * Method to process the control in the layout\r\n     * @param {} format\r\n     * @returns {}\r\n     */\r\n    processControlLayout: function (format) {\r\n        var $control = this.getControl();\r\n        var $elements = this.getElementsToStylize($control);\r\n\r\n        // Set customizations\r\n        format = format || {};\r\n\r\n        this.changeFontColor($elements, format.color)\r\n            .changeFontBold($elements, format.bold)\r\n            .changeFontItalic($elements, format.italic)\r\n            .changeFontSize($elements, format.size)\r\n            .changeTextDecoration($elements, (format.underline ? \"underline\" : \"\") + (format.strikethru ? \" line-through\" : \"\"));\r\n    },\r\n\r\n    /**\r\n     * Customizes render color\r\n     * @param {} color\r\n     * @returns {}\r\n     */\r\n    changeColor: function (color) {\r\n        var $label = this.getLabel();\r\n        var $control = this.getControl();\r\n        var $elements = this.getElementsToStylize($control);\r\n\r\n        return this\r\n            .changeFontColor($label, color)\r\n            .changeFontColor($elements, color);\r\n    },\r\n\r\n    /**\r\n     * Customizes render color\r\n     * @param {} $element\r\n     * @param {} color\r\n     * @returns {}\r\n     */\r\n    changeFontColor: function ($element, color) {\r\n        if ($element === undefined) return this;\r\n        if (color === undefined) return this;\r\n\r\n        var style = color !== \"none\" ? color : \"\";\r\n        $element.css(\"color\", style);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font size property\r\n     * @param {} $element\r\n     * @param {} size\r\n     * @returns {}\r\n     */\r\n    changeFontSize: function ($element, size) {\r\n        if (size === undefined) return this;\r\n        if ($element === undefined) return this;\r\n\r\n        if (size !== \"0\") {\r\n            var newFontSize = 100 + Number(size) * 10 + \"%\";\r\n            $element.css(\"font-size\", newFontSize);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font Strikethrough or underline property\r\n     * @param {} $element\r\n     * @param {} textDecoration\r\n     * @returns {}\r\n     */\r\n    changeTextDecoration: function ($element, textDecoration) {\r\n        if (textDecoration === undefined) return this;\r\n        if ($element === undefined) return this;\r\n\r\n        textDecoration && $element.css(\"text-decoration\", textDecoration);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font italic style\r\n     * @param {} $element\r\n     * @param {} italic\r\n     * @returns {}\r\n     */\r\n    changeFontItalic: function ($element, italic) {\r\n        var style = bizagi.util.parseBoolean(italic) ? \"italic\" : \"normal\";\r\n\r\n        $element.css(\"font-style\", style);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font weight\r\n     * @param {} $label\r\n     * @param {} bold\r\n     * @returns {}\r\n     */\r\n    changeFontBold: function ($label, bold) {\r\n        var style = bizagi.util.parseBoolean(bold) ? \"bold\" : \"normal\";\r\n\r\n        $label.css(\"font-weight\", style);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes render background color\r\n     * @param {} color\r\n     * @returns {}\r\n     */\r\n    changeBackgroundColor: function (color) {\r\n        if (typeof color === \"undefined\") return this;\r\n\r\n        if (color !== \"none\") {\r\n            this.element.css(\"background-color\", color);\r\n        } else {\r\n            this.element.css(\"background-color\", \"\");\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * This method just make a toggle of red label indicator\r\n     * @argument {boolean} argument\r\n     */\r\n    changeRequiredLabel: function () {\r\n    },\r\n\r\n    /**\r\n     * Change cell required and attach bindings\r\n     * @param argument\r\n     */\r\n    changeCellRequired: function (argument) {\r\n        this.changeRequired(argument);\r\n    },\r\n\r\n    /**\r\n     * \r\n     */\r\n    getRTLAlign: function (align) {\r\n        if (typeof align == \"undefined\" || align == \"\") {\r\n            return \"default\";\r\n        }\r\n        return align;\r\n    },\r\n\r\n    /**\r\n     * TODO: This override should be removed after genome, just because the align shoudnt be depend of the display type\r\n     */\r\n    getDefaultLabelAlign: function(){\r\n        return \"default\";\r\n    },\r\n\r\n    /**\r\n     * TODO: This override should be removed after genome, just because the align shoudnt be depend of the display type\r\n     */\r\n    getDefaultValueAlign: function(){\r\n        return \"default\";\r\n    }\r\n});","/**\r\n *   Name: Bizagi Form Container Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a form container class that defines basic stuff regarding the device\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.form\", {}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n        var data = params.data;\r\n        var device = bizagi.util.detectDevice();\r\n\r\n        // Creates a hashtable to maintain references by id\r\n        self.rendersById = {};\r\n        self.rendersByXpath = {};\r\n        self.rendersByType = {};\r\n\r\n        // Set page cache id\r\n        self.idPageCache = data.pageCacheId;\r\n\r\n        // Set default mode\r\n        self.mode = params.mode || \"execution\";\r\n        self.focus = params.focus;\r\n\r\n        // Set rendering params\r\n        self.params = params;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Define confirmation message \r\n        var message = \"\";\r\n\r\n        if (device !== \"desktop\") {\r\n            message = this.getResource(\"render-form-user-confirmation-message\").replace(/<br(\\/| \\/)>/g, \"\\n\");\r\n        } else {\r\n            message = this.getResource(\"render-form-user-confirmation-message\");\r\n        }\r\n\r\n        // Default properties\r\n        var properties = self.properties;\r\n        properties.sessionId = data.sessionId;\r\n        properties.displayAsReadOnly = bizagi.util.parseBoolean(data.displayAsReadOnly) || false;\r\n        properties.userConfirmationMessage = properties.userConfirmationMessage || message;\r\n        properties.orientation = properties.orientation || \"ltr\";\r\n        properties.hasRule = bizagi.util.parseBoolean(properties.hasRule) || false;\r\n        properties.contexttype = params.contexttype || \"\";\r\n        properties.paramsRender = params.paramsRender || {};\r\n        properties.processPath = params.data.processPath ? params.data.processPath.replaceAll(\"|/|\", \"  &rsaquo;  \") : \"\";\r\n        properties.breadCrumb = params.data.processPath ? params.data.processPath.split(\"|/|\") : [];\r\n\r\n        // Set validations & actions\r\n        this.validations = data.validations;\r\n        this.actions = data.actions;\r\n\r\n        // Enable the \"Validate and Save\" action for Form Buttons\r\n        self.allowValidateAndSaveAction = bizagi.override && bizagi.override.enableActionValidateAndSave === true;\r\n\r\n        // Initialize buttons\r\n        self.initializeButtons(data);\r\n\r\n        // Define transitions to Complex Gateway\r\n        if (data.transitions) {\r\n            self.transitions = data.transitions;\r\n        }\r\n\r\n        this.originalProcessButton = this.processButton;\r\n\r\n        //Custom behaviour for application parent activated.\r\n        self.isRoutingDisabled = false;\r\n        if (params.applicationParent) {\r\n            switch (params.applicationParent) {\r\n                case 'NEWWORKPORTAL':\r\n                    self.isRoutingDisabled = true;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        self.isOfflineFormsV2Supported =  bizagi.util.isMobileDevice() && bizagi.util.isOfflineFormsV2Supported();\r\n\r\n    },\r\n    /*\r\n    *   Initializes button metadata\r\n    */\r\n    initializeButtons: function (data) {\r\n        var self = this;\r\n\r\n        self.buttons = [];\r\n\r\n        // Process buttons\r\n        if (data.buttons) {\r\n            $.each(data.buttons, function (i, item) {\r\n                var button = item.button.properties;\r\n\r\n                // Process caption\r\n                button.caption = !bizagi.util.isEmpty(button.caption) && self.getResource(button.caption) != button.caption ? self.getResource(button.caption) : button.caption;\r\n\r\n                // Process actions\r\n                if (button.actions) {\r\n                    $.each(button.actions, function (i, action) {\r\n                        button[action] = true;\r\n                    });\r\n                }\r\n\r\n                // Add other properties\r\n                button.ordinal = i;\r\n                button.action = button.next ? \"next\" :\r\n                    button.nextWithoutValidations ? \"nextWithoutValidations\" :\r\n                        button.submitData ? \"save\" :\r\n                            button.cancel ? \"cancel\" :\r\n                                button.back ? \"back\" :\r\n                                    button.createnewcase ? \"createnewcase\" :\r\n                                        button.validate ? \"validate\" : \"\";\r\n\r\n                // Explicit add save operation\r\n                button.save = (button.action === \"save\");\r\n\r\n                // Add inherent behaviours\r\n                if (button.next || button.back || button.nextWithoutValidations) {\r\n                    button.routing = true;\r\n                }\r\n\r\n                if (button.hasRule) {\r\n                    button.executeRule = true;\r\n                }\r\n\r\n                if (self.allowValidateAndSaveAction && button.validate) {\r\n                    button.submitData = true;\r\n                    button.refresh = true;\r\n                    button.save = true;\r\n                    if (button.action === \"next\" || button.action === \"createnewcase\") {\r\n                        button.refresh = false;\r\n                    }\r\n                }\r\n\r\n                // Prepare button style\r\n                button.style = self.buildButtonStyle(button);\r\n\r\n                // Add to button array\r\n                if (self.properties.orientation === \"rtl\" && !self.properties.useCustomButtons) {\r\n                    self.buttons.unshift(button);\r\n                } else {\r\n                    self.buttons.push(button);\r\n                }\r\n\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Get the original params used to fetch the form\r\n    */\r\n    getParams: function () {\r\n        return this.params;\r\n    },\r\n\r\n    setParam: function (property, value) {\r\n        if (this.params) {\r\n            this.params[property] = value;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Get current rendering mode\r\n    */\r\n    getMode: function () {\r\n        return this.mode;\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        var self = this;\r\n        if (self.params) {\r\n            return self.params.customHandlers;\r\n        }\r\n    },\r\n    /*\r\n    * Method to index renders\r\n    */\r\n    registerRender: function (render) {\r\n        var self = this;\r\n\r\n        self.rendersById[render.properties.id] = render;\r\n        if (render.properties.xpath) {\r\n            if (!self.rendersByXpath[render.properties.xpath]) {\r\n                self.rendersByXpath[render.properties.xpath] = [];\r\n            }\r\n            self.rendersByXpath[render.properties.xpath].push(render);\r\n        }\r\n\r\n        if (!self.rendersByType[render.properties.type]) {\r\n            self.rendersByType[render.properties.type] = [];\r\n        }\r\n        self.rendersByType[render.properties.type].push(render);\r\n    },\r\n    /*\r\n    * Method to unregister render\r\n    */\r\n    unregisterRender: function (render) {\r\n        var self = this;\r\n\r\n        if (self.rendersById[render.properties.id]) {\r\n            delete self.rendersById[render.properties.id];\r\n        }\r\n\r\n        if (render.properties.xpath) {\r\n            if ($.isArray(self.rendersByXpath[render.properties.xpath])\r\n                && self.rendersByXpath[render.properties.xpath].length > 1) {\r\n                for (var i = 0, l = self.rendersByXpath[render.properties.xpath].length; i < l; i++) {\r\n                    var element = self.rendersByXpath[render.properties.xpath][i];\r\n                    if (element.properties.id === render.properties.id) {\r\n                        self.rendersByXpath[render.properties.xpath].splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                delete self.rendersByXpath[render.properties.xpath];\r\n            }\r\n        }\r\n\r\n        // Unregister from renders by type\r\n        if (render.properties.type) {\r\n            var listRendesByType = self.getRenderByType(render.properties.type);\r\n            var listRendesByTypeLength = listRendesByType.length;\r\n            var renderKey = render.properties.id || render.properties.xpath;\r\n\r\n            for (var i = 0; i < listRendesByTypeLength; i++) {\r\n                var listRender = listRendesByType[i];\r\n                if ((typeof listRender.properties.id != \"undefined\" && listRender.properties.id == renderKey) ||\r\n                    (typeof listRender.properties.xpath != \"undefined\" && listRender.properties.xpath == renderKey)) {\r\n                    // Unregister element\r\n                    self.rendersByType[render.properties.type].splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    * Method to access a render by id\r\n    */\r\n    getRenderById: function (id) {\r\n        var self = this;\r\n\r\n        return self.rendersById[id];\r\n    },\r\n\r\n    getGridByColumn: function (id) {\r\n        var self = this;\r\n        var grids = self.getRenderByType('grid');\r\n        var i = 0, columnIndex;\r\n\r\n        for (; i < grids.length; i++) {\r\n            columnIndex = grids[i].columnsIds.indexOf(id);\r\n            if (columnIndex != -1) {\r\n                return grids[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Method to find all the renders matching an xpath inside the container\r\n    */\r\n    getRenders: function (xpath) {\r\n        var self = this;\r\n\r\n        // Remove [] filters for grid columns xpaths to fully identify the grid as the xpath target\r\n        if (xpath && xpath.indexOf)\r\n            if (xpath.indexOf(\"[\") > 0) {\r\n                xpath = xpath.substring(0, xpath.indexOf(\"[\"));\r\n            }\r\n\r\n        return self.rendersByXpath[xpath] ? self.rendersByXpath[xpath] : [];\r\n    },\r\n    /**\r\n     * Get all render with the same type\r\n     */\r\n    getRenderByType: function (type) {\r\n        var self = this;\r\n\r\n        // Check that type is defined\r\n        if (typeof type == \"string\" && type.length > 0) {\r\n            // Search controls by type\r\n            return (self.rendersByType[type]) ? self.rendersByType[type] : [];\r\n        }\r\n        return [];\r\n    },\r\n\r\n    /*\r\n    *   Build the container html\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"form\");\r\n        var idCase = \"\";\r\n\r\n        // Render the form\r\n        var html = $.fasttmpl(template, {\r\n            buttons: self.buttons,\r\n            transitions: self.transitions,\r\n            uniqueId: properties.uniqueId,\r\n            helptext: properties.helpText,\r\n            mode: self.getMode(),\r\n            queryForm: self.getFormType() == \"queryForm\",\r\n            summaryForm: self.params.summaryForm || false,\r\n            globalForm: self.properties.displayAsReadOnly || false,\r\n            idCase: idCase,\r\n            displayName: self.params.displayName || idCase,\r\n            processPath: properties.processPath,\r\n            breadCrumb: properties.breadCrumb,\r\n            orientation: properties.orientation\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n    /*\r\n    *   Process the html rendering object\r\n    */\r\n    postRenderContainer: function (form) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        // Add a mode class\r\n        form.addClass(\"ui-bizagi-rendering-mode-\" + mode);\r\n\r\n        // Call base\r\n        this._super(form);\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the container's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var complexGatewayContainer;\r\n        var form = self.container;\r\n\r\n        if (form.length > 1) {\r\n            $(form).each(function () {\r\n                if ($(this).hasClass('ui-bizagi-container-complexgateway')) {\r\n                    complexGatewayContainer = this;\r\n                }\r\n            });\r\n        } else {\r\n            complexGatewayContainer = $(\".ui-bizagi-container-complexgateway\", form);\r\n        }\r\n\r\n        // activeTransitions is used to store ids of activities in Complex Gateway\r\n        self.activeTransitions = {};\r\n\r\n        // Process buttons\r\n        self.processButtons(form);\r\n\r\n        // Check for dom included event\r\n        self.bind(\"ondomincluded\", function (e, mainForm) {\r\n            // Creates validation controller after the form is ready\r\n            self.validationController = new bizagi.command.controllers.validation(self, self.validations, mainForm);\r\n            // Creates action controller after the form is ready\r\n            self.actionController = new bizagi.command.controllers.action(self, self.actions);\r\n\r\n            // Resolve this deferred to start executing DOM dependant plugins\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n        // Set events for complex gateway interface\r\n        $(complexGatewayContainer).find(\".ui-checkbox\").bind(\"click\", function () {\r\n            var checkboxLabel = $(\"label\", this);\r\n\r\n            var transitionId = checkboxLabel.data(\"value\") || \"\";\r\n            if (typeof self.activeTransitions[transitionId] == \"undefined\") {\r\n                self.activeTransitions[transitionId] = false;\r\n            }\r\n\r\n            if (bizagi.util.parseBoolean(checkboxLabel.data(\"checked\"))) {\r\n                // Uncheck element\r\n                checkboxLabel.removeClass(\"ui-checkbox-state-checked\");\r\n                checkboxLabel.removeClass(\"bz-check\").addClass(\"bz-full-ball\");\r\n                checkboxLabel.data(\"checked\", false);\r\n                self.activeTransitions[transitionId] = false;\r\n            } else {\r\n                // Check element\r\n                checkboxLabel.addClass(\"ui-checkbox-state-checked\");\r\n                checkboxLabel.addClass(\"bz-mo-icon\").addClass(\"bz-check\").removeClass(\"bz-full-ball\");\r\n                checkboxLabel.data(\"checked\", true);\r\n                self.activeTransitions[transitionId] = true;\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour when rendering in design mode\r\n    */\r\n    configureDesignView: function () {\r\n        var self = this;\r\n\r\n\r\n        // Check for dom included event\r\n        self.bind(\"ondomincluded\", function () {\r\n            // Resolve this deferred to start executing DOM dependant plugins\r\n            self.readyDeferred.resolve();\r\n        });\r\n    },\r\n    /*\r\n    *   Format form buttons to allow further customization\r\n    */\r\n    buildButtonStyle: function (button) {\r\n\r\n        var style = {};\r\n        if (button.format) {\r\n            if (button.format.size) {\r\n                if (button.format.size != \"0\") {\r\n                    var newFontSize = (100 + Number(button.format.size) * 10) + \"%\";\r\n                    style[\"font-size\"] = newFontSize + \" !important\";\r\n                }\r\n            }\r\n            if (button.format.bold) {\r\n                style[\"font-weight\"] = \"bold !important\";\r\n                if (bizagi.util.isIE()) {\r\n                    style[\"font-family\"] = \"'Open Sans', 'Helvetica Neue', Arial, Helvetica, sans-serif !important\";\r\n                }\r\n            }\r\n            if (button.format.italic) {\r\n                style[\"font-style\"] = \"italic !important\";\r\n            }\r\n            if (button.format.underline || button.format.strikethru) {\r\n                var strikethru = bizagi.util.parseBoolean(button.format.strikethru) ? \"line-through \" : \"\";\r\n                var underline = bizagi.util.parseBoolean(button.format.underline) ? \"underline \" : \"\";\r\n                style[\"text-decoration\"] = strikethru + underline + \" !important\";\r\n            }\r\n            if (button.format.background) {\r\n                style[\"background-color\"] = button.format.background + \" !important\";\r\n                style[\"background-image\"] = \"none !important\";\r\n            }\r\n            if (button.format.color) {\r\n                style[\"color\"] = button.format.color + \" !important\";\r\n            }\r\n        }\r\n\r\n        var strStyle = \"\";\r\n        for (key in style) {\r\n            strStyle += key + \":\" + style[key] + \";\";\r\n        }\r\n        return strStyle;\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    *   Returns a promise\r\n    */\r\n    render: function () {\r\n        var self = this;\r\n\r\n        // Creates a deferred, so we can check when form has been included in dom\r\n        if (!self.readyDeferred)\r\n            self.readyDeferred = new $.Deferred();\r\n\r\n        // Call base\r\n        var result = this._super();\r\n\r\n        return result;\r\n    },\r\n    /*\r\n    *   Sets a promise that the form will be included in the DOM\r\n    *   so we can apply some tedious plugins that require that\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n\r\n        return self.readyDeferred.promise();\r\n    },\r\n    /*\r\n    *   Returns the xpath context of the element\r\n    */\r\n    getXpathContext: function () {\r\n        return this.properties.xpathContext || \"\";\r\n    },\r\n    /*\r\n    *  Return context type, when the parent form is entity\r\n    */\r\n    getContextType: function () {\r\n        return this.properties.contexttype || \"\";\r\n    },\r\n\r\n    /*\r\n    * Return the endpoint action, when the form will be refresh\r\n    */\r\n    getEndPointAction: function () {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        if (properties.formtype == \"startform\")\r\n            return \"LOADSTARTFORM\";\r\n\r\n        return undefined;\r\n\r\n    },\r\n\r\n    /*\r\n    *   Returns the page cache id for the element\r\n    */\r\n    getPageCache: function () {\r\n        return this.idPageCache;\r\n    },\r\n    /*\r\n    *   Returns the form containing the element\r\n    */\r\n    getFormContainer: function () {\r\n        return this;\r\n    },\r\n    /*\r\n    *   Method to process button actions in the form\r\n    */\r\n    processButtons: function () {\r\n        var self = this;\r\n        var buttons = self.getButtons();\r\n\r\n        // Don't process buttons if they are undefined in the template\r\n        if (!buttons || buttons.length == 0) {\r\n            return;\r\n        }\r\n\r\n        // Attach a handler for each button\r\n        buttons.on(\"click\", function (e) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n\r\n            self.startLoading();\r\n\r\n            var button = $(this);\r\n            var ordinal = button.attr(\"ordinal\");\r\n            var buttonProperties = self.buttons[ordinal];\r\n\r\n            self.lastActionButton = buttonProperties;\r\n            if (buttonProperties.action === \"next\") {\r\n                buttonProperties.routingDisabled = self.isRoutingDisabled;\r\n            }\r\n\r\n            button.prop(\"disabled\", true); //disable button to prevent multiple click actions\r\n\r\n            if(button.hasOwnProperty('disabled')) {\r\n                button.button(\"disable\"); //Setting styles\r\n            }\r\n\r\n            // External Events\r\n            self.propagateExternalEvents(e);\r\n\r\n            // Execute button\r\n            //QAF-1418 - add setTimeout\r\n            setTimeout(function () {\r\n                $.when(self.processButton(buttonProperties)).always(function () {\r\n                    self.processDefer = undefined;\r\n                    self.endLoading();\r\n                    if ($.contains(document.documentElement, button.get(0))) { //check if button is still in DOM\r\n                        button.prop(\"disabled\", false);  //enable button\r\n\r\n                        if(button.hasOwnProperty('enable')) {\r\n                            button.button(\"enable\"); //Setting styles\r\n                        }\r\n                    }\r\n                });\r\n            }, 100);\r\n        });\r\n    },\r\n    /*\r\n    * Execute codes just before sending information to server\r\n    */\r\n    preProcessButton: function (buttonProperties) {\r\n        return true;\r\n    },\r\n    /*\r\n    * Execute codes just after sending information to server\r\n    */\r\n    postProcessButton: function (responses, buttonProperties) {\r\n        return true; // true means continue\r\n    },\r\n\r\n    setLoaderDeferred: function() {\r\n        var self = this;\r\n\r\n        self.loaderDeferred = $.Deferred().resolve();\r\n    },\r\n\r\n    deleteLoaderDeferred: function () {\r\n        var self = this;\r\n\r\n        if (self.isLoaderDeferredSet()) {\r\n            $.when(self.loaderDeferred.promise()).done(function() {\r\n                delete self.loaderDeferred;\r\n            });\r\n        }\r\n    },\r\n\r\n    useOrSetLoaderDeferred: function () {\r\n        var self = this;\r\n\r\n        if (!self.isLoaderDeferredSet()) {\r\n            self.setLoaderDeferred();\r\n        }\r\n    },\r\n\r\n    getLoaderPromise: function () {\r\n        var self = this;\r\n\r\n        if (self.isLoaderDeferredSet()) {\r\n            return self.loaderDeferred.promise();\r\n        } else {\r\n            return;\r\n        }\r\n    },\r\n\r\n    isLoaderDeferredSet: function () {\r\n        var self = this;\r\n\r\n        if (self.loaderDeferred) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    appendWaitForLoader: function (params) {\r\n        var self = this;\r\n        var promise = params.promise;\r\n        var create = params.create || false;\r\n\r\n        if (!self.isLoaderDeferredSet()) {\r\n            if (create) {\r\n                self.setLoaderDeferred();\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n\r\n        self.loaderDeferred = self.loaderDeferred.then(function () {\r\n            return (function () {\r\n                return promise;\r\n            })();\r\n        });\r\n    },\r\n\r\n\r\n    /*\r\n    *   Executes a single button action\r\n    */\r\n    processButton: function (buttonProperties) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n        var properties = self.properties;\r\n        if (!buttonProperties.routing) {\r\n            bizagi.chrono.initAndStart(\"submitForm\");\r\n        }\r\n        bizagi.chrono.init(\"waiting\");\r\n\r\n        // First hide and clear validation box\r\n        self.validationController.clearValidationMessages();\r\n\r\n        // Resolve asynchronous tabItems\r\n        var form = self.getFormContainer();\r\n        var getAllTabs = form.getRenderByType(\"tabItem\");\r\n        var getAllTabsLength = getAllTabs.length;\r\n\r\n        form.innerTabsLoading = true;\r\n\r\n\r\n        self.useOrSetLoaderDeferred();\r\n\r\n        // Check\r\n        for (var i = 0; i < getAllTabsLength; i++) {\r\n            var render = getAllTabs[i];\r\n            // Resolve internal deferred\r\n            if (render.loadingDeferred && render.parent.container) {\r\n                render.loadingDeferred.resolve();\r\n            }\r\n        }\r\n\r\n        delete form.innerTabsLoading;\r\n\r\n        $.when(self.ready(), self.getLoaderPromise()).done(function () {\r\n            self.deleteLoaderDeferred();\r\n            // Validate the form\r\n            var valid = bizagi.util.parseBoolean(buttonProperties.validate) ? self.validationController.performValidations() : true;\r\n            if (valid) {\r\n\r\n                if ([\"save\", \"next\", \"back\", \"createnewcase\", \"nextWithoutValidations\"].includes(buttonProperties.action)) {\r\n                    $(document).data('auto-save', '');\r\n                }\r\n\r\n                // Check for user confirmation if configured and the button is configured to enroute\r\n                if (bizagi.util.parseBoolean(self.properties.needsUserConfirmation) && bizagi.util.parseBoolean(buttonProperties.routing)) {\r\n                    self.endLoading();\r\n                    $.when(bizagi.showConfirmationBox(properties.userConfirmationMessage, null, false)).done(function () {\r\n                        // Submits the form\r\n                        if (self.preProcessButton(buttonProperties)) {\r\n                            //Trigger the event after ProcessButton\r\n                            self.triggerGlobalHandler(\"renderActionButton\", buttonProperties);\r\n                            $.when(self.submitForm(buttonProperties)).done(function () {\r\n                                defer.resolve();\r\n                            }).fail(function() {\r\n                                defer.reject(arguments);\r\n                            });\r\n                        }\r\n                    }).fail(function () {\r\n                        defer.reject();\r\n                    });\r\n\r\n                } else {\r\n                    if (self.preProcessButton(buttonProperties)) {\r\n                        //Trigger the event after ProcessButton\r\n                        self.triggerGlobalHandler(\"renderActionButton\", buttonProperties);\r\n                        $.when(self.submitForm(buttonProperties)).done(function () {\r\n                            $(document).trigger(\"FORMACTION\", buttonProperties);\r\n                            defer.resolve();\r\n                        }).fail(function () {\r\n                            defer.reject(arguments);\r\n                        });\r\n                    }\r\n                }\r\n\r\n            } else {\r\n\r\n                self.endLoading();\r\n                if (buttonProperties.submitData) {\r\n                    $.when(self.submitData()).done(function () {\r\n                        defer.reject();\r\n                    });\r\n                }\r\n                else {\r\n                    defer.reject();\r\n                }\r\n\r\n                self.validationController.expandNotificationBox();\r\n            }\r\n\r\n            var customHandler = self.getCustomHandler(\"afterFormButtonClick\");\r\n            if (customHandler) {\r\n                customHandler(buttonProperties);\r\n            }\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n    /*\r\n    *   Public method to perform validations externally\r\n    */\r\n    validateForm: function () {\r\n        var self = this;\r\n\r\n        // First hide and clear validation box\r\n        self.validationController.clearValidationMessages();\r\n\r\n        // Validate the form\r\n        return self.validationController.performValidations();\r\n    },\r\n    /*\r\n    *   Submits all the form to the server and returns a deferred to check when the process finishes\r\n    */\r\n    saveForm: function () {\r\n        var self = this;\r\n\r\n        // Check is offline form        \r\n        var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\r\n\r\n        // Collect data\r\n        var data = self.collectRenderValuesForSubmit();\r\n\r\n        // Check if there are deferreds to wait\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        // Wait for deferreds\r\n        return $.when(deferredsToWait).pipe(function () {\r\n            self.startLoading();\r\n\r\n            // Submit the form\r\n            return $.when(self.dataService.submitData({\r\n                action: \"SAVE\",\r\n                data: data,\r\n                idCase: self.params.idCase,\r\n                idWorkitem: self.params.idWorkitem,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                isOfflineForm: isOfflineForm || false\r\n            })).always(function () {\r\n                self.endLoading();\r\n            });\r\n        });\r\n    },\r\n    /*\r\n    *   Creates a json array with key values to send to the server\r\n    */\r\n    submitForm: function (buttonProperties) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n\r\n        // Check is offline form                \r\n        var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\r\n\r\n        $.when(self.isReadyToSave())\r\n            .done(function () {\r\n                if (isOfflineForm) {\r\n                    self.internalSubmitFormOffline(buttonProperties);\r\n                    return;\r\n                }\r\n                $.when(self.internalSubmitForm(buttonProperties)).done(function () {\r\n                    defer.resolve();\r\n                }).fail(function () {\r\n                    defer.reject(arguments);\r\n                });\r\n\r\n            }).fail(function () {\r\n            self.endLoading();\r\n            bizagi.log(\"The form is not saved, no changes were found\");\r\n            defer.reject();\r\n        });\r\n        return defer.promise();\r\n    },\r\n    checkWidgetsData: function () {\r\n        //\r\n    },\r\n    isComplexGatewayPainted: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Get last action button\r\n     * @returns {*}\r\n     */\r\n    getLastActionButton: function () {\r\n        var self = this;\r\n        return self.lastActionButton;\r\n    },\r\n\r\n    /**\r\n     * Internal - Creates a json array with key values to send to the database\r\n     * @param {} buttonProperties\r\n     * @returns {}\r\n     */\r\n    internalSubmitFormOffline: function (buttonProperties) {\r\n        var self = this;\r\n        var message = \"\";\r\n        var data;\r\n\r\n        // Check is offline form                \r\n        var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\r\n\r\n        if (isOfflineForm && (self.properties && !self.properties.idPageCache)) {\r\n            self.properties.idPageCache = \"\";\r\n        }\r\n\r\n        // Fill data hash\r\n        if (buttonProperties.submitData || buttonProperties.executeRule) {\r\n            // Collect data\r\n            data = self.collectRenderValuesForSubmit();\r\n        }\r\n\r\n        if (self.transitions) {\r\n            var transitions = [];\r\n            $.each(this.activeTransitions, function (key, value) {\r\n                (value) ? transitions.push(key) : \"\";\r\n            });\r\n\r\n            if (bizagi.util.countProps(transitions) == 0) {\r\n                bizagi.showMessageBox(\r\n                    bizagi.localization.getResource(\"render-widget-complexgateway-path\"),\r\n                    bizagi.localization.getResource(\"render-widget-complexgateway-error\"), \"info\", false\r\n                );\r\n                self.endLoading();\r\n                return \"\";\r\n            }\r\n        }\r\n\r\n        $.when(self.dataService.submitData({\r\n            action: buttonProperties.action,\r\n            data: data,\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache,\r\n            idForm: self.properties.id,\r\n            prepare: true,\r\n            transitions: transitions || \"\",\r\n            idCase: self.params.idCase,\r\n            idWorkitem: self.params.idWorkitem,\r\n            isOfflineForm: isOfflineForm || false,\r\n            offlineType: self.params.offlineType || \"\"\r\n        })).done(function (responses) {\r\n\r\n            if (!self.postProcessButton(responses, buttonProperties)) {\r\n                return;\r\n            }\r\n\r\n            if (buttonProperties.routing) {\r\n                var waitForOnlineResponse = false;\r\n                if(isOfflineForm && self.isOfflineFormsV2Supported && self.params.online) {\r\n                    waitForOnlineResponse = true;\r\n                    var tryPushResponsePromise = new $.Deferred();\r\n                    self.params.responsePromise = tryPushResponsePromise;\r\n                    $(document).trigger(\"tryPushCase.offline\", self.params);\r\n                }\r\n                else if( isOfflineForm && !self.isOfflineFormsV2Supported){\r\n                    $(document).trigger(\"tryPushData.offline\");\r\n                }\r\n\r\n                if(!waitForOnlineResponse){\r\n                    self.triggerHandler(\"routing\", {\r\n                        offlineAction: buttonProperties.action,\r\n                        idCase: self.params.idCase,\r\n                        idWorkitem: self.params.idWorkitem\r\n                    });\r\n                }\r\n                else {\r\n                    $.when(tryPushResponsePromise)\r\n                    .then( function(result){\r\n                        self.triggerHandler(\"routing\", {\r\n                            idCase: result.IdCase,\r\n                            caseNumber: result.CaseNumber\r\n                        });\r\n                    })\r\n                    .fail( function(error){\r\n                        self.failHandler(error);\r\n                    });\r\n                }\r\n\r\n            } else {\r\n                message = bizagi.util.isValidResource(\"workportal-mobile-offline-form-successful\")\r\n                    ? bizagi.localization.getResource(\"workportal-mobile-offline-form-successful\")\r\n                    : \"Saved\";\r\n\r\n                bizagi.util.showNotification({ text: message, type: \"success\" });\r\n            }\r\n\r\n        }).fail(function (error) {\r\n            message = bizagi.util.isValidResource(\"workportal-mobile-offline-successful-fail\")\r\n                ? bizagi.localization.getResource(\"workportal-mobile-offline-successful-fail\")\r\n                : \"Not saved\";\r\n\r\n            bizagi.util.showNotification({ text: message, type: \"error\" });\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Internal - Creates a json array with key values to send to the server\r\n    */\r\n    internalSubmitForm: function (buttonProperties) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n        var data;\r\n\r\n        // Fill data hash\r\n        if (buttonProperties.submitData || buttonProperties.executeRule || buttonProperties.createnewcase) {\r\n            // Collect data\r\n            data = self.collectRenderValuesForSubmit();\r\n        }\r\n\r\n        // Start asynchronous operation\r\n        $.when(self.startLoading()).done(function () {\r\n            $('html, body').animate({ scrollTop: $('.ui-bizagi-loading-icon') }, 'slow');\r\n        });\r\n\r\n        var submitDataAction = null;\r\n        var executeButtonAction = null;\r\n        var performAction = null;\r\n        var checkpointAction = null;\r\n        var commitAction = null;\r\n        var waitingDeferreds = [];\r\n        var deferredsToWait = null;\r\n\r\n        // Prepare actions\r\n        if (buttonProperties.executeRule) {  // When the button has to execute any rule (MUST SUBMIT DATA BEFORE ALWAYS)\r\n\r\n            if (data.deferreds) {\r\n                deferredsToWait = $.when.apply($, data.deferreds);\r\n                waitingDeferreds.push(deferredsToWait);\r\n                delete data.deferreds;\r\n            }\r\n\r\n            submitDataAction = self.dataService.submitData({\r\n                action: \"SUBMITDATA\",\r\n                data: data,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true\r\n            });\r\n            submitDataAction.tag = \"submitData\";\r\n\r\n            checkpointAction = self.prepareCheckpointAction(buttonProperties.id);\r\n\r\n            // Reset data because when an execute rule operation has been performed, it saved already all the data\r\n            data = {};\r\n            executeButtonAction = self.dataService.executeButton({\r\n                idRender: buttonProperties.id,\r\n                xpathContext: self.properties.xpathContext || \"\",\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true\r\n            });\r\n            executeButtonAction.tag = \"executeRule\";\r\n\r\n            commitAction = self.prepareCommitAction(buttonProperties.id);\r\n        }\r\n\r\n        if (buttonProperties.next || buttonProperties.back || buttonProperties.save || buttonProperties.createnewcase || buttonProperties.nextWithoutValidations) {\r\n            // Verify transitions\r\n            if (self.transitions) {\r\n                var transitions = [];\r\n                $.each(this.activeTransitions, function (key, value) {\r\n                    (value) ? transitions.push(key) : \"\";\r\n                });\r\n\r\n                if (bizagi.util.countProps(transitions) == 0) {\r\n                    bizagi.showMessageBox(bizagi.localization.getResource(\"render-widget-complexgateway-path\"), bizagi\r\n                        .localization.getResource(\"render-widget-complexgateway-error\"), \"info\", false);\r\n                    self.endLoading();\r\n                    defer.reject();\r\n                    return defer.promise();\r\n                }\r\n            }\r\n\r\n            if (data.deferreds) {\r\n                deferredsToWait = $.when.apply($, data.deferreds);\r\n                waitingDeferreds.push(deferredsToWait);\r\n                delete data.deferreds;\r\n            }\r\n\r\n\r\n            performAction = self.dataService.submitData({\r\n                action: self.getButtonAction(buttonProperties.action),\r\n                forcePlanCompletion: buttonProperties.forcePlanCompletion,\r\n                data: data,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true,\r\n                transitions: transitions || \"\",\r\n                contexttype: self.properties.contextType,\r\n                surrogatekey: self.properties.surrogateKey\r\n            });\r\n            performAction.tag = \"performAction\";\r\n        }\r\n\r\n        // Assemble the actions\r\n        var actions = [];\r\n\r\n        if (executeButtonAction) {\r\n            actions.push(submitDataAction);\r\n            actions.push(checkpointAction);\r\n            actions.push(executeButtonAction);\r\n            actions.push(commitAction);\r\n        }\r\n\r\n        if (performAction) {\r\n            actions.push(performAction);\r\n        }\r\n\r\n        // Execute the batch\r\n        bizagi.chrono.initAndStart(\"submitForm-ajax\");\r\n\r\n\r\n        //Evaluate if there are deferreds to evaluate, like inline add in grid, that must send a ADDRELATIONWITHDATA before to savedata\r\n        var flowControlDeferred = new $.Deferred();\r\n        if (data && data.deferreds) {\r\n            $.when.apply(this, data.deferreds)\r\n                .done(function (response) {\r\n                    flowControlDeferred.resolve(response);\r\n                })\r\n                .fail(function () {\r\n                    flowControlDeferred.reject();\r\n                    console.log(\"Error: It was not possible resolve async actions on form \")\r\n                })\r\n        } else {\r\n            flowControlDeferred.resolve();\r\n        }\r\n\r\n        waitingDeferreds.push(flowControlDeferred);\r\n\r\n        $.when.apply($, waitingDeferreds).done(function() {\r\n            $.when(self.dataService.multiaction().execute({ actions: actions })).done(function (responses) {\r\n                bizagi.chrono.stop(\"submitForm-ajax\");\r\n                // End asynchronous operation\r\n                self.endLoading();\r\n                // Find validations\r\n                var bHasValidations;\r\n                var alertMessage = \"\";\r\n                $.each(responses, function (i, response) {\r\n\r\n                    var propertiesToDisplayMessages = self.validationToDisplayMessages(bHasValidations, response.result.type, response.result.messages, alertMessage);\r\n                    bHasValidations = propertiesToDisplayMessages.bHasValidations;\r\n                    alertMessage = propertiesToDisplayMessages.alertMessage;\r\n\r\n                });\r\n\r\n                if (!bHasValidations) {\r\n                    // Everything went ok .. succesfully response from the server\r\n                    if (!self.postProcessButton(responses, buttonProperties)) {\r\n                        return;\r\n                    }\r\n\r\n                    // After successfully response refresh the form\r\n                    if (buttonProperties.refresh) {\r\n                        self.refreshForm();\r\n                    }\r\n\r\n                    // If needs routing publish an event\r\n                    if (buttonProperties.routing) {\r\n                        bizagi.jqxhrList.abortAll(\"rendering_\" + self.dataService.guid);\r\n                        self.triggerHandler(\"routing\", {\r\n                            idCase: self.params.idCase,\r\n                            routingDisabled: buttonProperties.routingDisabled\r\n                        });\r\n                    }\r\n\r\n                    // Create case\r\n                    if (buttonProperties.createnewcase) {\r\n                        if (responses.length > 0) {\r\n                            bizagi.jqxhrList.abortAll(\"rendering_\" + self.dataService.guid);\r\n                            self.triggerHandler(\"routing\", {\r\n                                idCase: responses[0].result.IdCase,\r\n                                caseNumber: responses[0].result.CaseNumber\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if(alertMessage !== \"\"){ /*If there is an alertMessage show in a modal error*/\r\n                        bizagi.modalError.show(alertMessage, 'workportal-general-word-information', false);\r\n                    }\r\n                    if (buttonProperties.executeRule) {\r\n                        self.sendRollbackAction(buttonProperties.id);\r\n                    }\r\n                }\r\n\r\n                defer.resolve();\r\n            }).fail(function (_, _, response) {\r\n                if (buttonProperties.executeRule) {\r\n                    self.sendRollbackAction(buttonProperties.id);\r\n                }\r\n\r\n                if (response && response.error && (response.error.errorType === \"WaitForCompletionPlanException\" ||\r\n                    response.error.errorType === \"InvalidPlanStateException\" || response.error.errorType === \"CustomMessageException\")) {\r\n                    self.endLoading();\r\n                    $.when(bizagi.showConfirmationBox(bizagi.localization.getResource(response.error.message), null, false)).then(function () {\r\n                        return $.when(self.internalSubmitForm($.extend({}, buttonProperties, { forcePlanCompletion: true })));\r\n                    }).done(function () {\r\n                        defer.resolve();\r\n                    }).fail(function () {\r\n                        defer.reject();\r\n                    });\r\n                } else {\r\n                    self.failHandler(response);\r\n                    defer.reject(response);\r\n                }\r\n            });\r\n        });\r\n        return defer.promise();\r\n    },\r\n    validationToDisplayMessages: function(bHasValidations, messageType, message, alertMessage){\r\n        var self = this;\r\n\r\n        if (messageType == \"validationMessages\") {\r\n            // Something went wrong, we gotta display messages in notifications grid\r\n            self.addValidationMessage(message);\r\n            bHasValidations = true;\r\n        }\r\n        if(bizagi.detectDevice() == \"desktop\" && messageType == \"alertMessages\"){\r\n            // Something went wrong, we gotta display alert message\r\n            if(alertMessage === \"\"){\r\n                alertMessage = message;\r\n            }else{\r\n                alertMessage = alertMessage + \"\\n\\n\" + message;\r\n            }\r\n\r\n            bHasValidations = true;\r\n        }\r\n\r\n        return {\"bHasValidations\": bHasValidations, \"alertMessage\": alertMessage};\r\n    },\r\n\r\n    /*\r\n    *   Add a validation message to the form\r\n    */\r\n    addValidationMessage: function (validationMessage, focus, icon, itemAdditionalClass, autofocus, type) {\r\n        var self = this;\r\n\r\n        if (!self.validationController) {\r\n            self.validationController = new bizagi.command.controllers.validation(self);\r\n        }\r\n\r\n        if (typeof (validationMessage) == \"string\") {\r\n            self.validationController.showValidationMessage(validationMessage, focus, icon, itemAdditionalClass, type);\r\n        } else {\r\n            $.each(validationMessage, function (i, message) {\r\n                self.validationController.showValidationMessage(message, focus, icon, itemAdditionalClass, type);\r\n            });\r\n        }\r\n        self.validationController.expandNotificationBox(autofocus);\r\n    },\r\n    /*\r\n    *   Public method to perform validations externally\r\n    */\r\n    clearValidationMessages: function (params) {\r\n        var self = this;\r\n\r\n        // First hide and clear validation box\r\n        if (self.validationController) {\r\n            self.validationController.clearValidationMessages(params);\r\n        }\r\n\r\n    },\r\n    /*\r\n    *   Add an error message to the form\r\n    */\r\n    addErrorMessage: function (errorMessage) {\r\n        var self = this;\r\n\r\n        self.validationController.showErrorMessage(errorMessage);\r\n        self.validationController.expandNotificationBox();\r\n    },\r\n    /*\r\n    *   Refresh the current form\r\n    */\r\n    refreshForm: function (focus) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var deferred = $.Deferred();\r\n\r\n        focus = focus || self.getFocus();\r\n\r\n        // Normalize new focus structure if not present\r\n        if (focus && !focus.id) {\r\n            focus = {\r\n                id: focus\r\n            };\r\n        }\r\n\r\n        var options = {\r\n            idCase: self.params.idCase || \"\",\r\n            idWorkitem: self.params.idWorkitem || \"\",\r\n            idTask: self.params.idTask || \"\",\r\n            focus: focus,\r\n            selectedTabs: self.getSelectedTabs(),\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            isRefresh: true,\r\n            contextType: self.getContextType() || \"\",\r\n            action: self.getEndPointAction(),\r\n            idStartScope: self.properties.idStartScope || \"\"\r\n        };\r\n\r\n        // Notify the refresh event so the consumer takes the decision about what to do\r\n        self.startLoading();\r\n        $.when(self.triggerHandler(\"refresh\", options)).done(function () {\r\n            self.endLoading();\r\n            deferred.resolve();\r\n        }).fail(function () {\r\n            self.endLoading();\r\n            deferred.reject();\r\n        });\r\n        return deferred.promise();\r\n    },\r\n    /*\r\n    *   Get opened tabs configuration\r\n    */\r\n    getSelectedTabs: function () {\r\n        var self = this;\r\n        var tabContainers = self.getElementsByType(\"tab\");\r\n        var tabs = $.map(tabContainers, function (tabContainer) {\r\n            return { tab: tabContainer.properties.id, selected: tabContainer.activeTab };\r\n        });\r\n        var selectedTabs = {};\r\n        for (var i = 0, length = tabs.length; i < length; i++) {\r\n            selectedTabs[tabs[i].tab] = tabs[i].selected;\r\n        }\r\n        return selectedTabs;\r\n    },\r\n    /*\r\n    *   Template method to get the buttons objects\r\n    */\r\n    getButtons: function () {\r\n    },\r\n    /*\r\n    *   Adds an action on the fly to process the submit on change\r\n    */\r\n    addSubmitAction: function (xpath, action) {\r\n        var self = this;\r\n        self.actionController.processInternalSubmitAction(xpath, action);\r\n    },\r\n    /**\r\n     *   Adds an overlay to the form, and sets a waiting message\r\n     *\r\n     *   @argument {bool} delay Apply delay\r\n     */\r\n    startLoading: function () {\r\n        var self = this;\r\n        var waitingTemplate = self.renderFactory.getTemplate(\"form-waiting\");\r\n\r\n        if (self.waitingOverlay && self.waitingMessage)\r\n            return;\r\n\r\n        // This hack is only for desktop\r\n        if (!bizagi.util.isTabletDevice()) {\r\n            // Detect canvas parent with scroll\r\n            var isSharePoint = self.params.context === \"sharepoint\";\r\n            var canvas = self.params.canvas;\r\n            if (isSharePoint) {\r\n                canvas = bizagi.util.scrollTop(canvas);\r\n\r\n                if (!!!canvas.context) {\r\n                    canvas = $(\"body\", $(document));\r\n                }\r\n            } else {\r\n                canvas = $(\"body\", $(document));\r\n            }\r\n\r\n            // Configures overlay\r\n            var size = this.getSize();\r\n            var position = this.getOffset();\r\n            if (size.height == $(window).height()) {\r\n                position.top = 0;\r\n            }\r\n            self.waitingOverlay = $('<div class=\"ui-widget-overlay\" />').appendTo(canvas);\r\n            self.waitingMessage = $.tmpl(waitingTemplate).appendTo(canvas);\r\n            self.waitingOverlay.css({\r\n                \"height\": \"100%\",\r\n                \"width\": \"100%\",\r\n                \"min-height\": size.height,\r\n                \"min-width\": size.width\r\n            });\r\n            self.waitingMessage.css({\r\n                \"top\": (position.top + Math.ceil((size.height - self.waitingMessage.outerHeight()) / 2)) + \"px\",\r\n                \"left\": (Math.ceil((size.width - self.waitingMessage.outerWidth()) / 2)) + \"px\"\r\n            });\r\n            canvas.css(\"position\", \"relative\");\r\n\r\n        } else {\r\n            // Configures overlay\r\n            self.waitingOverlay = $('<div class=\"ui-widget-overlay\" />').appendTo(\"body\", $(document));\r\n            self.waitingMessage = $.tmpl(waitingTemplate).appendTo(\"body\", $(document));\r\n        }\r\n    },\r\n    /*\r\n    *   Removes the overlay and restores the form edition\r\n    */\r\n    endLoading: function () {\r\n        var self = this;\r\n        if (self.waitingOverlay && self.waitingMessage) {\r\n            self.waitingOverlay.remove();\r\n            self.waitingMessage.remove();\r\n            self.waitingOverlay = null;\r\n            self.waitingMessage = null;\r\n\r\n            var canvas = self.params.canvas;\r\n\r\n            if (canvas != undefined)\r\n                canvas.css(\"position\", \"\");\r\n        }\r\n    },\r\n    /*\r\n    *   Get the focused render in the current request\r\n    */\r\n    getFocusedElement: function () {\r\n        var self = this;\r\n        return self.focus;\r\n    },\r\n    /*\r\n    *   Set the focused render in the current request\r\n    */\r\n    setFocusedElement: function (focus) {\r\n        var self = this;\r\n        self.focus = focus;\r\n    },\r\n    /*\r\n    *   Publish a global event that the facade will replicate\r\n    */\r\n    triggerGlobalHandler: function (eventType, data) {\r\n        return this.triggerHandler(\"globalHandler\", { eventType: eventType, data: data });\r\n    },\r\n    /*\r\n    *   Generic handler to attach fail workflow for some operations\r\n    */\r\n    failHandler: function (error) {\r\n        var self = this;\r\n\r\n        // Check if the error is in multiaction format\r\n        try {\r\n            error = JSON.parse(error);\r\n        } catch (e) {\r\n        }\r\n\r\n        //This double validation has the purpose to get the real error object from two different levels ( error.error or error.error.error )\r\n        if (error & error.length && error.length > 1) error = error[0];\r\n        if (error.error) error = error.error;\r\n        if (error.error) error = error.error;\r\n\r\n        // Handle normal messages\r\n        if (typeof error == \"object\" && error.message) {\r\n            if (error.errorType === \"WaitForCompletionPlanException\" || error.errorType === \"InvalidPlanStateException\" || error.errorType === \"CustomMessageException\") {\r\n                error = bizagi.localization.getResource(error.message);\r\n            }\r\n            else {\r\n                error = error.message;\r\n            }\r\n\r\n        } else if (typeof error == \"string\") {\r\n            // Parse to json\r\n            try {\r\n                var errorJson = JSON.parse(error);\r\n                if (errorJson.errorType === \"WaitForCompletionPlanException\" || errorJson.errorType === \"InvalidPlanStateException\" || error.errorType === \"CustomMessageException\") {\r\n                    errorJson.message = bizagi.localization.getResource(errorJson.message);\r\n                }\r\n                error = errorJson.message;\r\n            } catch (e) {\r\n            }\r\n        }\r\n\r\n        // Workflow engine error, we gotta show it with error\r\n        self.addErrorMessage(error);\r\n        self.endLoading();\r\n    },\r\n    /* \r\n    *   Resizes the element\r\n    */\r\n    resize: function (size) {\r\n        // Just save the size, for reference\r\n        this.setSize(size);\r\n    },\r\n    /*\r\n    *   Sets the internal size for the form\r\n    */\r\n    setSize: function (size) {\r\n        this.size = size;\r\n    },\r\n    /*\r\n    *   Gets the internal size for the form\r\n    */\r\n    getSize: function () {\r\n        if (this.size) {\r\n            return this.size;\r\n        }\r\n        var canvas = (this.params.canvas) ? this.params.canvas : this.getFormContainer().container;\r\n\r\n        var canvasWidth = canvas.width();\r\n        var canvasHeight = canvas.height();\r\n\r\n        return {\r\n            width: canvasWidth,\r\n            height: canvasHeight\r\n        };\r\n    },\r\n    getOffset: function () {\r\n        var canvas = this.getFormContainer().container;\r\n\r\n        return canvas.offset();\r\n    },\r\n    /**\r\n     * This function execute action to save all data of render, but\r\n     * the server service dont execute any rule on the server\r\n     */\r\n    submitData: function (args) {\r\n        var self = this;\r\n\r\n        // Collect data\r\n        var data = self.collectRenderValuesForSubmit();\r\n\r\n        // Check is offline form        \r\n        var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\r\n\r\n        if (isOfflineForm && (self.properties && !self.properties.idPageCache)) {\r\n            self.properties.idPageCache = \"\";\r\n        }\r\n\r\n        // Mark data collected as original values\r\n        $.each(data, function (key, value) {\r\n            var renders = self.getRenders(key);\r\n            $.each(renders, function (i, render) {\r\n                render.updateOriginalValue();\r\n            });\r\n        });\r\n\r\n        // Don't do anything if there is no data\r\n        if ($.isEmptyObject(data)) {\r\n            return;\r\n        }\r\n\r\n        // Call the service\r\n        return $.when(self.dataService.multiaction().submitData({\r\n            action: \"SUBMITDATA\",\r\n            data: data,\r\n            idPageCache: self.properties.idPageCache,\r\n            xpathContext: self.properties.xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n    },\r\n    /**\r\n     * This function send a request to the server to execute a rule\r\n     */\r\n    executeRule: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties.xpathContext;\r\n        }\r\n\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeRule({\r\n            idPageCache: properties.idPageCache,\r\n            rule: args.rule,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages({ clearOnlyServer: true });\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage.apply(self, [message.messages, undefined, undefined, undefined, false, \"serverMessage\"]);\r\n            }\r\n            if(bizagi.detectDevice() == \"desktop\" && message.type == \"alertMessages\"){\r\n                bizagi.modalError.show(message.messages.join(\"\\n\\n\"), 'workportal-general-word-information', false);\r\n            }\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n    },\r\n    /**\r\n     * This function send a request to the server to execute an interface\r\n     */\r\n    executeInterface: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties.xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeInterface({\r\n            idPageCache: properties.idPageCache,\r\n            interface: args.interface,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages();\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage(message.messages);\r\n            }\r\n\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n    },\r\n    executeSAPConnector: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties.xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeSAPConnector({\r\n            idPageCache: properties.idPageCache,\r\n            guidsap: args.guidsap,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages();\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage(message.messages);\r\n            }\r\n\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n\r\n    },\r\n\r\n    executeConnector: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties\r\n                .xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeConnector({\r\n            idPageCache: properties.idPageCache,\r\n            guidConnector: args.guidConnector,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages();\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage(message.messages);\r\n            }\r\n\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n\r\n    },\r\n\r\n    /*\r\n    *   Re-binds pending actions that could not be set because the renders did not exist when the form loaded\r\n    */\r\n    refreshActions: function (actions) {\r\n        var self = this;\r\n        self.actionController.refreshActions(actions);\r\n    },\r\n    /*\r\n    *   Re-binds pending actions that could not be set because the renders did not exist when the form loaded\r\n    */\r\n    removeActions: function () {\r\n        var self = this;\r\n        self.actionController.unbindActions();\r\n    },\r\n    /*\r\n    *   Iterate through all renders and collect the data to send, then update original values for each render\r\n    */\r\n    collectRenderValuesForSubmit: function (data) {\r\n        var self = this;\r\n        data = data || {};\r\n\r\n        // Collect data\r\n        self.collectRenderValues(data);\r\n\r\n        // Mark data collected as original values\r\n        $.each(data, function (key, value) {\r\n            var renders = self.getRenders(key);\r\n            $.each(renders, function (i, render) {\r\n                render.updateOriginalValue();\r\n            });\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param params {data, bRefreshForm,properties}\r\n     * @returns {*}\r\n     */\r\n    internalSubmitOnChange: function (params) {\r\n        params = params || {};\r\n        var self = this, idCase;\r\n        var properties = params.properties;\r\n        // var form = self.getFormContainer();\r\n        var defer = new $.Deferred();\r\n        var data = params.data || {};\r\n        var bRefreshForm = typeof (params.bRefreshForm) != \"undefined\" ? params.bRefreshForm : true;\r\n        var notCollect = params.notCollect ? params.notCollect : undefined;\r\n\r\n        // Collect data\r\n        if (!(notCollect && !$.isEmptyObject(data))) {\r\n            self.collectRenderValuesForSubmit(data);\r\n        }\r\n        self.startLoading();\r\n\r\n        //idCase = self.getCacheIdCase();\r\n\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        $.when(deferredsToWait).then(function () {\r\n            // Submit the form\r\n            self.dataService.submitData({\r\n                action: \"SUBMITONCHANGE\",\r\n                data: data,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: properties.idPageCache,\r\n                contexttype: properties.contexttype\r\n            }).done(function (response) {\r\n                // Cancel previous multiactions and process property value\r\n                self.cancelPreviousRequest();\r\n                // After successfully response refresh the form\r\n                self.endLoading();\r\n                // If response message has error in validation, do not refresh the form\r\n                // and show validation message\r\n                if (response && response.type == \"validationMessages\") {\r\n                    if (typeof self.clearValidationMessages == \"function\") {\r\n                        self.clearValidationMessages();\r\n                    }\r\n\r\n                    self.addValidationMessage(response.messages);\r\n                    defer.resolve();\r\n                } else if (bRefreshForm) {\r\n                    var focusIdentifier = {\r\n                        id: properties.id,\r\n                        xpath: properties.xpath\r\n                    };\r\n                    if (properties.idCase !== undefined) {\r\n                        $.extend(focusIdentifier, {\r\n                            idCaseObject: bizagi.cache.idCaseObject\r\n                        });\r\n                    }\r\n                    if (response.IdScope) {\r\n                        self.properties.idStartScope = response.IdScope;\r\n                    }\r\n                    $.when(self.refreshForm(focusIdentifier)).done(function () {\r\n                        defer.resolve();\r\n                    }).fail(function () {\r\n                        defer.resolve();\r\n                    });\r\n                } else {\r\n                    defer.resolve();\r\n                }\r\n            }).fail(function (message) {\r\n                self.endLoading();\r\n                var objMessage = JSON.parse((typeof message == 'object' && message.responseText) ? message.responseText : {}) || {};\r\n                var strMessage = objMessage.message || message;\r\n                // Clear previous validations\r\n                self.validationController.clearValidationMessages();\r\n                if (objMessage.type == \"alert\") {\r\n                    self.validationController.showAlertMessage(strMessage);\r\n                } else {\r\n                    self.validationController.showErrorMessage(strMessage);\r\n                }\r\n                defer.resolve();\r\n            });\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    cancelPreviousRequest: function () {\r\n        if (bizagi.multiactionConnection && bizagi.multiactionConnection.length) {\r\n            var length = bizagi.multiactionConnection.length;\r\n            var i = 0, connection;\r\n            for (; i < length; i++) {\r\n                connection = bizagi.multiactionConnection.pop();\r\n                if (connection && connection.abort) {\r\n                    bizagi.showErrorAlertDialog = false;\r\n                    connection.abort();\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    prepareCheckpointAction: function (buttonId) {\r\n        var self = this;\r\n\r\n        var checkpointAction = self.dataService.sendCheckpoint({\r\n            url: self.properties.checkpointUrl,\r\n            idRender: buttonId,\r\n            xpath: \"\",\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache,\r\n            prepare: true\r\n        });\r\n\r\n        checkpointAction.tag = \"checkpoint\";\r\n\r\n        return checkpointAction;\r\n    },\r\n\r\n    prepareCommitAction: function (buttonId) {\r\n        var self = this;\r\n\r\n        var commitAction = self.dataService.commitLinkForm({\r\n            url: self.properties.commitUrl,\r\n            idRender: buttonId,\r\n            xpath: \"\",\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache,\r\n            prepare: true\r\n        });\r\n\r\n        commitAction.tag = \"commit\";\r\n\r\n        return commitAction;\r\n    },\r\n\r\n    sendRollbackAction: function (buttonId) {\r\n        var self = this;\r\n\r\n        self.dataService.rollbackLinkForm({\r\n            url: self.properties.rollbackUrl,\r\n            idRender: buttonId,\r\n            xpath: \"\",\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache\r\n        });\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n        self.endLoading();\r\n\r\n        setTimeout(function () {\r\n            if (self.params) {\r\n                delete self.params.canvas;\r\n            }\r\n            delete self.params;\r\n            delete self.control;\r\n            if (self.validationController) {\r\n                self.unbind(\"rendervalidate\");\r\n                delete self.validationController;\r\n            }\r\n\r\n            if (self.actionController) {\r\n                self.actionController.unbindActions();\r\n                delete self.actionController;\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    },\r\n    getButton: function (guid) {\r\n        return $(\".ui-bizagi-button[data-id='\" + guid + \"']\", this.container);\r\n    },\r\n\r\n    getFloatingButton: function (guid) {\r\n        return $(\"li[data-id='\" + guid + \"']\", this.container);\r\n    },\r\n\r\n    propagateExternalEvents: function (evt) {\r\n        // Menu-Overflow\r\n        var $menuOverflow = $(\".bz-overflow-menu\");\r\n        if ($menuOverflow)\r\n            $(document).trigger('click.overflow');\r\n\r\n        // ECM with preview image\r\n        var zoomIsOpen = $(\".jquery-image-zoom\") && $(\".jquery-image-zoom\").css(\"display\") == \"block\";\r\n\r\n        if (zoomIsOpen)\r\n            $(\"div.jquery-image-zoom a\").click();\r\n    },\r\n\r\n    getButtonAction: function (action) {\r\n        return this.allowValidateAndSaveAction && action === \"validate\" ? \"save\" : action;\r\n    }\r\n\r\n});\r\n","/**\r\n * Render a new type of form called template\r\n *\r\n * @author Edward Morales\r\n */\r\n$.Class.extend(\"bizagi.rendering.formTemplate\", {\r\n\r\n    /**\r\n     *   Constructor\r\n     */\r\n    init: function (params) {\r\n        this._super(params);\r\n        if(params.paramsRender && params.paramsRender.contextEvent){\r\n            self.contextEvent = params.paramsRender.contextEvent;\r\n        }\r\n    },\r\n\r\n\t/**\r\n\t * Process controls on template\r\n\t * @param template\r\n\t * @param controls\r\n\t * @return {*}\r\n\t */\r\n\tprocessTemplate: function(template, controls) {\r\n\t    var regexControl = /\\{\\{([\\w:]*)\\s*(\\{[\"':,-\\[\\]\\w\\s]*\\})\\}\\}/g;\r\n\t\tvar regexRepeater = /\\{\\{(((repeater)\\s*(\\{[\"':,-\\[\\]\\w\\s]*\\}))|([\\/repeater]+:item)|(\\/repeater)|(repeater)|(separator))\\}\\}/g;\r\n\r\n\t\t// Remove all repeaters key words\r\n\t\tvar processedTemplate = template.replace(regexRepeater, \"\");\r\n\r\n\t\t// replace controls\r\n\t\tprocessedTemplate = processedTemplate.replace(regexControl, function(match, g1, g2, offset, string) {\r\n\t\t    var parameters = JSON.parse(g2);\r\n            \r\n\t\t\treturn controls[parameters.id] || '';\r\n\t\t});\r\n\r\n\t    processedTemplate = processedTemplate.replace(/{{([\\w:]*)\\s*}}/g, function() {\r\n\t        return '';\r\n\t    });\r\n\r\n\r\n\t\treturn processedTemplate;\r\n\t},\r\n\r\n\t/**\r\n\t * Render layout container\r\n\t * @return {*}\r\n\t */\r\n\trenderContainer: function() {\r\n\t\tvar self = this;\r\n\t\tvar layoutCollection = self.getRenderByType(\"layout\");\r\n\t\tvar layout = (layoutCollection.length > 0) ? layoutCollection[0] : {};\r\n\t\tvar template = (typeof layout.getTemplate == \"function\") ? layout.getTemplate() : \"\";\r\n\t\tvar css = (typeof layout.getCss == \"function\") ? layout.getCss() : \"\";\r\n\t\tvar mode = self.getMode();\r\n\t\tvar layoutGuid = self.properties.layoutguid || Math.guid();\r\n\r\n\t\tvar controls = {};\r\n\r\n\t\t/**\r\n\t\t * Render all elements within first layout container\r\n\t\t */\r\n\t\tif(layout.children) {\r\n\t\t\t$.each(layout.children, function(i, child) {\r\n\t\t\t    // ignore layoutPlaceholder control in execution\r\n\t\t\t    if (!(mode == 'execution' && child.properties.type == 'layoutPlaceholder')) {\r\n\r\n\t\t\t        var type = child.getElementType();\r\n\t\t\t        if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n\t\t\t            controls[child.properties.id] = child.renderElement();\r\n\t\t\t        }\r\n\t\t\t        if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n\t\t\t            controls[child.properties.id] = child.renderContainerHtml();\r\n\t\t\t        }\r\n\t\t\t        self.childrenHash[child.properties.uniqueId] = child;\r\n\t\t\t    }\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Load css\r\n\t\tbizagi.util.loadStyle(css, layoutGuid);\r\n\r\n\t\treturn self.processTemplate(template, controls);\r\n\t},\r\n\r\n    /**\r\n     * Get the context in which loads the formTemplate\r\n     *\r\n     */\r\n    getContextEvent: function(){\r\n        return self.contextEvent;\r\n    }\r\n});\r\n","$.Class.extend(\"bizagi.rendering.layout\", {}, {\r\n\r\n\t/**\r\n\t * Get html template\r\n\t * @return {*}\r\n\t */\r\n\tgetTemplate: function() {\r\n\t    var self = this;\r\n\t    var mode = self.getMode();\r\n\t    var html = self.properties.html || \"\";\r\n\r\n        // Add a container, this is important in design to calculate the scroll \r\n\t    if (mode == 'design' && html) {\r\n            html = \"<div class='bz-design-template'>\" + html + \"</div>\"\r\n\t    }\r\n\t\t\r\n\t\treturn bizagi.util.stripslashes(html);\r\n\t},\r\n\r\n\t/**\r\n\t * Get string css of layout container\r\n\t * @return {*}\r\n\t */\r\n\tgetCss: function() {\r\n\t    var self = this;\r\n\t\tvar css = self.properties.css || \"\";\r\n\r\n\t\tvar mode = self.getMode();\r\n\t\tif (mode == \"design\") {\r\n\t\t    css = css && css.desktop;\r\n\t\t}\r\n\r\n\t\treturn bizagi.util.stripslashes(css);\r\n\t},\r\n\r\n\r\n\t/*\r\n\t *   Template method to process each jquery object\r\n\t *   must be overriden in each container\r\n\t */\r\n\tpostRenderContainer: function(container) {\r\n\t\tvar self = this;\r\n\t\tvar mode = self.getMode();\r\n\r\n\t\t// Resolve rendering deferred\r\n\t\tif(self.renderingDeferred)\r\n\t\t\tself.renderingDeferred.resolve();\r\n\r\n\t\t// Process children elements\r\n\t\tself.container = container;\r\n\t\tself.executeChildrenPostRender(container);\r\n\r\n\t\tif(mode == \"execution\") {\r\n\t\t\t// Apply handlers\r\n\t\t\tself.configureHandlers();\r\n\t\t}\r\n\t\tif(mode == \"design\") {\r\n\t\t\t// Configure view\r\n\t\t\tself.configureDesignView();\r\n\t\t}\r\n\t\tif(mode == \"layout\") {\r\n\t\t\t// Configure view\r\n\t\t\tself.configureDesignView();\r\n\t\t\tself.configureLayoutView();\r\n\t\t}\r\n\t}\r\n});","/*\r\n*   Name: BizAgi Accordion Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a accordion container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.accordion\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Enumerate the children appending a property\r\n        $.each(self.children, function (i, child) {\r\n            child.properties.ordinal = i;\r\n        });\r\n    },\r\n\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"accordion\");\r\n\r\n        // Render the accordion\r\n        var html = $.fasttmpl(template, {\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Accordion Item Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a accordion item class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.accordionItem\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"accordionItem\");\r\n\r\n        // Render the accordionItem\r\n        var html = $.fasttmpl(template, {\r\n            id: properties.id,\r\n            ordinal: properties.ordinal,\r\n            displayName: properties.displayName,\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Fires when the accordionItem is selected \r\n    */\r\n    activate: function () {\r\n        var self = this;\r\n        self.active = true;\r\n    },\r\n\r\n    /*  \r\n    *   Return the current focuses container\r\n    */\r\n    getFocus: function () {\r\n        var self = this;\r\n        var focus = self._super();\r\n        if (bizagi.util.isEmpty(focus) && self.active) {\r\n            focus = self.properties.id;\r\n        }\r\n\r\n        return focus;\r\n    }\r\n\r\n\r\n});\r\n\r\n","/*\r\n*   Name: Bizagi Render CollectionNavigator\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define basic stuff for collection navigator renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.collectionnavigator\", {}, {\r\n\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        self._super(params);\r\n\r\n        var properties = self.properties;\r\n        properties.allowAdd = (typeof properties.allowAdd != \"undefined\") ? bizagi.util.parseBoolean(properties.allowAdd) : true;\r\n        properties.withAddForm = properties.withAddForm && properties.allowAdd;\r\n        properties.allowEdit = (typeof properties.allowEdit != \"undefined\") ? bizagi.util.parseBoolean(properties.allowEdit) : true;\r\n        properties.withEditForm = properties.withEditForm && properties.allowEdit;\r\n        properties.allowDetail = (typeof properties.allowDetail != \"undefined\") ? bizagi.util.parseBoolean(properties.allowDetail) : false;\r\n        properties.inlineAdd = (typeof properties.inlineAdd != \"undefined\") ? bizagi.util.parseBoolean(properties.inlineAdd) : true;\r\n        properties.inlineAdd = properties.inlineAdd && properties.allowAdd;\r\n        properties.inlineEdit = (typeof properties.inlineEdit != \"undefined\") ? bizagi.util.parseBoolean(properties.inlineEdit) : true;\r\n        properties.inlineEdit = properties.inlineEdit && properties.allowEdit;\r\n        properties.allowDelete = (typeof properties.allowDelete != \"undefined\") ? bizagi.util.parseBoolean(properties.allowDelete) : true;\r\n\r\n        self.orientation = self.properties.orientation || \"ltr\",\r\n        self.data = self.properties.data;\r\n        self.keys = self.data ? self.getKeys(self.data.rows) : [];\r\n        self.pointer = 0;\r\n        self.totalRows = 0;\r\n        self.inlineAddRecords = [];\r\n\r\n        if (self.data) {\r\n            self.totalRows = self.data.rows.length;\r\n        }\r\n    },\r\n    /*\r\n    * Normalize keys\r\n    */\r\n    getKeys: function (rows) {\r\n        rows = rows || [];\r\n        var keys = [];\r\n\r\n        for (var i = 0, l = rows.length; i < l; i++) {\r\n            var row = rows[i];\r\n            keys.push(row[0]);\r\n        }\r\n        return keys;\r\n    },\r\n\r\n    /*\r\n    *   Render the control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var templateItem = \"collectionnavigator\";\r\n        var template = self.renderFactory.getTemplate(templateItem);\r\n        var mode = self.getMode();\r\n\r\n        // Render the container\r\n        var html = $.fasttmpl(template, {\r\n            uniqueId: properties.uniqueId,\r\n            displayName: properties.displayName ? properties.displayName : \"\",\r\n            id: properties.id,\r\n            guid: properties.guid,\r\n            showPreview: self.showPreview(),\r\n            mode: mode,\r\n            orientation: self.getFormContainer().properties.orientation\r\n        });\r\n\r\n        html = self.drawControls(html);\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    * Render version readonly of control\r\n    */\r\n    renderReadOnly: function () {        \r\n        return this.renderControl();\r\n    },\r\n\r\n    /*\r\n    * Draw navigation controls\r\n    */\r\n    drawControls: function (html) {\r\n\r\n    },\r\n\r\n    /*\r\n    *  render several actions in the navigation palete\r\n    *  ex. save, cancel \r\n    */\r\n    drawActions: function (controls) {\r\n\r\n    },\r\n\r\n    /*\r\n    * Render navigation controls (next, previous, last, first. etc )\r\n    */\r\n    drawControl: function (controls) {\r\n\r\n    },\r\n\r\n    /*\r\n    * Draw forms options (add form, edit form, navigation form)\r\n    */\r\n    drawForms: function (controls) {\r\n\r\n    },\r\n\r\n    /*\r\n    * Draw a preview views, it will be show when the collection hasn't records\r\n    */\r\n    drawPreview: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var templateItem = (mode === \"execution\") ? \"collectionnavigator-execution\" : \"collectionnavigator-preview\";\r\n        var template = self.renderFactory.getTemplate(templateItem);\r\n        var html = $.tmpl(template);\r\n\r\n        self.canvas.append(html);\r\n\r\n    },\r\n\r\n    /*\r\n    * Returns true if the collection has data\r\n    */\r\n    hasData: function () {        \r\n        return this.getTotalRows() > 0;\r\n    },\r\n\r\n    /*\r\n    * Returns the key of current row\r\n    */\r\n    getRow: function () {        \r\n        return this.keys[this.pointer];\r\n    },\r\n\r\n    /*\r\n    * Returns the key of next row\r\n    */\r\n    getNextRow: function () {\r\n        var self = this;\r\n\r\n        if (self.getTotalRows() > (self.pointer + 1))\r\n            self.pointer += 1;\r\n\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the key of previous row\r\n    */\r\n    getPreviousRow: function() {\r\n        var self = this;\r\n\r\n        if (self.pointer > 0)\r\n            self.pointer -= 1;\r\n\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the key of first row\r\n    */\r\n    getFirstRow: function () {\r\n        var self = this;\r\n\r\n        self.pointer = 0;\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the key of last row\r\n    */\r\n    getLastRow: function () {\r\n        var self = this;\r\n\r\n        self.pointer = self.keys.length - 1;\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the total numbers of rows in collection\r\n    */\r\n    getTotalRows: function () {        \r\n        return this.keys.length;\r\n    },\r\n\r\n    getIndexes: function () {        \r\n        return this.properties.data.rows;\r\n    },\r\n\r\n    /*\r\n    * Sets the pointer to a specific position\r\n    */\r\n    setPointer: function (index) {        \r\n        this.pointer = index - 1;\r\n    },\r\n\r\n    /*\r\n    * Returns true is there is a inline row pending to save\r\n    */\r\n    isTherePendingInlineRow: function() {\r\n        return this.inlineAddRecords.length > 0;\r\n    },\r\n\r\n    /*\r\n    * Adds new row to collection\r\n    */\r\n    addKey: function (newId) {        \r\n        this.keys.push(newId);\r\n    },\r\n\r\n    /*\r\n    * Removes row in collection\r\n    */\r\n    removeKey: function () {\r\n        var self = this;\r\n        var index = self.pointer;\r\n\r\n        if (index >= 0) {\r\n            self.keys.splice(index, 1);\r\n\r\n            var totalRows = self.getTotalRows();\r\n            if (totalRows > 0 && index >= totalRows) {\r\n                self.setPointer(totalRows);\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Returns true if the control should show the preview view\r\n    * ex. if the collection is empty \r\n    */\r\n    showPreview: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var properties = self.properties;\r\n\r\n        if (mode == \"execution\") {\r\n            return !self.hasData();\r\n        } else {\r\n            return !bizagi.util.parseBoolean(properties.navigationform);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Returns the parameters needed for the request\r\n    */\r\n    getParameters: function (params) {\r\n        var self = this;\r\n\r\n        var parameters = {};\r\n        var properties = self.properties;\r\n        var recordXpath = properties.xpath + \"[id=\" + params.id + \"]\";\r\n\r\n        parameters.idRender = properties.id;\r\n        parameters.recordXPath = recordXpath;\r\n        parameters.xpathContext = properties.xpathContext;\r\n        parameters.idPageCache = properties.idPageCache;\r\n        parameters.requestedForm = params.requestedForm;\r\n        parameters.contextType = properties.contextType || properties.contexttype;\r\n        parameters.url = params.url;\r\n        parameters.editable = params.editable;\r\n        orientation: properties.orientation || \"ltr\";\r\n\r\n\r\n        return parameters;\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection navigator add record request\r\n    *   Returns a deferred when done, the server returns an id for the new record\r\n    */\r\n    submitAddRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var request = self.dataService.addGridRecord({\r\n            url: properties.addUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType || properties.contexttype,\r\n            idPageCache: properties.idPageCache,\r\n            orientation: properties.orientation || \"ltr\"\r\n        });\r\n\r\n        var filterResponse = request.pipe(function (data) {\r\n            // Parses response\r\n            return data.idEntity;\r\n        });\r\n\r\n        return filterResponse.promise();\r\n    },\r\n\r\n    /*\r\n    *   Submits a edit record request for the given id \r\n    *   Returns a deferred\r\n    */\r\n    submitEditRequest: function (id) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n        return self.dataService.editGridRecord({\r\n            url: properties.editUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType || properties.contexttype || '',\r\n            orientation: properties.orientation || \"ltr\"\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection delete record request for the given id \r\n    *   Returns a deferred\r\n    */\r\n    submitDeleteRequest: function (id) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n        return self.dataService.deleteGridRecord({\r\n            url: properties.deleteUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType || properties.contexttype\r\n        }).pipe(function (data) {\r\n            if (data.type == \"validationMessages\") {\r\n                var form = self.getFormContainer();\r\n                var message = data.messages.join(\" \");\r\n                form.failHandler({ message: message });\r\n            }\r\n\r\n            return data;\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection navigator edit record request for the given id \r\n    *   Returns a deferred\r\n    */\r\n    submitSaveRequest: function (id, data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = $.Deferred();\r\n\r\n        // Calculate xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + properties.xpath + \"[id=\" + id + \"]\" : properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        $.when(deferredsToWait).then(function() {\r\n\r\n            self.dataService.saveGridRecord({\r\n                url: properties.saveUrl,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: xpathContext,\r\n                contexttype: properties.contextType || properties.contexttype || \"\",\r\n                submitData: data\r\n            }).done(function(response) {\r\n                defer.resolve(response);\r\n            }).fail(function (dataFail) {\r\n                var form = self.getFormContainer();\r\n                var message = (dataFail.responseText) ? dataFail.responseText : ((typeof dataFail == \"string\") ? dataFail : dataFail.toString());\r\n                //Convert String to object\r\n                if (typeof message == \"string\") {\r\n                    try {\r\n                        message = JSON.parse(message).message;\r\n                    } catch (e) {\r\n                        message = message.match(/\"message\":(.*)\",/)[0];\r\n                        message = message.substr(11, message.length - 13);\r\n                    }\r\n    \r\n                } else if (!message.message) {\r\n                    message = dataFail;\r\n                }\r\n                form.validateForm();\r\n                form.clearValidationMessages();\r\n                form.addValidationMessage(message);\r\n            });\r\n\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection navigator rollback request\r\n    *   Returns a deferred when done\r\n    */\r\n    submitRollbackRequest: function (error) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.rollbackGridAction({\r\n            url: properties.rollbackUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: error.idPageCache,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        });\r\n    },\r\n    /*\r\n    *   Fetch the data into a deferred\r\n    */\r\n    getRemoteData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set params\r\n        params = params || {};\r\n        $.extend(params, {\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType || properties.contexttype,\r\n            idPageCache: properties.idPageCache\r\n\r\n        });\r\n\r\n        return self.dataService.getData(params);\r\n    },\r\n\r\n    isValid: function (invalidElements) {\r\n        var form = this.form;\r\n\r\n        if (typeof (form) !== \"undefined\") {\r\n            (form.children || []).forEach(function (child) {\r\n                if (child.properties.visible) {\r\n                    if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                        // Go though container\r\n                        child.isValid(invalidElements);\r\n\r\n                    } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                        // Go to the render\r\n                        if (!child.isValid(invalidElements)) {\r\n                            var content = invalidElements[invalidElements.length - 1];\r\n                            invalidElements[invalidElements.length - 1] = $.extend(content, {\r\n                                id: child.properties.id\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        return invalidElements.length === 0;\r\n    },\r\n\r\n    validateControls: function(invalidElements) {\r\n        if (!this.form) return false;\r\n        return this.form.validationController.performValidations(invalidElements);\r\n    }\r\n\r\n});","/*\r\n*   Name: Bizagi Group Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a group container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.group\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Default properties\r\n        var properties = self.properties;\r\n\r\n        properties.helpText = properties.helpText || properties.displayName;\r\n\r\n        // Extend css property \r\n        properties.cssclass = properties.cssclass || \"cssClassContainer\";\r\n\r\n        properties.collapse = (typeof properties.collapse != \"undefined\" && bizagi.util.parseBoolean(properties.collapse)) ? true : false;\r\n    },\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"group\");\r\n\r\n        // Define icons\r\n        self.expandedIcon = self.getExpandedIcon();\r\n        self.collapsedIcon = self.getCollapsedIcon();\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            expandedClassIcon: self.expandedIcon,\r\n            displayName: properties.displayName,\r\n            editable: properties.editable,\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            collapse: properties.collapse,\r\n            isDesign: (self.getMode() !== \"execution\"),            \r\n            messageValidation: properties.messageValidation,\r\n            cssclass: properties.cssclass,\r\n            guid: properties.guid\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Returns the expanded icon\r\n    */\r\n    getExpandedIcon: function () { },\r\n\r\n    /*\r\n    *   Returns the collapsed icon\r\n    */\r\n    getCollapsedIcon: function () { },\r\n\r\n    /* \r\n    *   Expands or collapse the container \r\n    */\r\n    toogleContainer: function (argument, bImmediate) { }\r\n\r\n});","/*\r\n*   Name: BizAgi Horizontal Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a tab item class for all devices\r\n*/\r\n\r\n\r\n$.Class.extend(\"bizagi.rendering.horizontal\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"horizontal\");\r\n\r\n        // Render the container\r\n        var html = $.fasttmpl(template, {\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi Panel Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a panel container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.panel\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function(params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Override properties\r\n        var properties = self.properties;\r\n        properties.displayName = properties.displayName || \"\";\r\n    },\r\n\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function() {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"panel\");\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            displayName: properties.displayName,\r\n            loading: properties.loading,\r\n            message: properties.message,\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            cssClass: properties.cssclass\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Process the html rendering object\r\n    */\r\n    postRenderContainer: function(panel) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set height\r\n        if (properties.height) {\r\n            panel.height(properties.height);\r\n        }\r\n\r\n        // Call base\r\n        self._super(panel);\r\n    }\r\n\r\n});","/*\r\n*   Name: Bizagi Panel Container Class\r\n*   Author: David Romero\r\n*   Comments:\r\n*   -   This script will define a panel container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.contentPanel\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Override properties\r\n        var properties = self.properties;\r\n        properties.displayName = properties.displayName || \"\";\r\n    },\r\n\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"contentPanel\");\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            displayName: properties.displayName,\r\n            mode: self.getMode(),\r\n            uniqueId: properties.uniqueId,\r\n            isDesign: self.getMode() === \"design\",\r\n            messageValidation: properties.messageValidation,\r\n            cssClass: properties.cssclass,\r\n            guid: properties.guid\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Process the html rendering object\r\n    */\r\n    postRenderContainer: function (panel) {\r\n        // Call base\r\n        this._super(panel);\r\n    }\r\n\r\n});","/*\r\n*   Name: BizAgi Panel Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a panel container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.searchForm\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"searchForm\");\r\n\r\n\r\n        if (properties.contexttype != \"entity\" && self.parent) {\r\n            properties.contexttype = (typeof self.parent.getContextType == 'function') ? self.parent.getContextType() : \"\";\r\n        } \r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            displayName: properties.displayName,\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n\r\n        // Render result\r\n        html = html.replace(\"{{result}}\", self.renderResult());\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Perform a search and render the results\r\n    */\r\n    performSearch: function (searchParams) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set parameter to search\r\n        properties.searchParams = searchParams;\r\n\r\n        // Submit the search to the server\r\n        self.submitSearch();\r\n    },\r\n\r\n    /*\r\n    *   Submits the query to the server\r\n    */\r\n    submitSearch: function () {\r\n        var self = this;\r\n\r\n        // Makes the results to update its contents\r\n        self.refreshResults();\r\n    },\r\n\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n        return self.parent.ready();\r\n    },\r\n\r\n    /*\r\n    *   Method to fill the result data\r\n    *   (THIS IS CALLED WITHIN GRID RENDER SCOPE)\r\n    */\r\n    getRemoteData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n\r\n        // Collect data\r\n        var data = self.collectSearchValues();\r\n\r\n        if (bizagi.util.isMapEmpty(data)) {\r\n            bizagi.showMessageBox(this.getResource(\"render-search-advanced-no-filters\"), this.getResource(\"render-form-dialog-box-search\"), \"error\");\r\n            return null;\r\n        }\r\n\r\n        params.rows = (properties.searchParams && properties.searchParams.maxRecords && properties.searchParams.maxRecords > 0) ? properties.searchParams.maxRecords : params.rows;\r\n\r\n        // The Grid only support one row per page in smartphone (DRAGON-41733 / QAF-3916)         \r\n        if (properties.searchParams && typeof(properties.searchParams.maxRows) !== \"undefined\") {\r\n            params.rows = properties.searchParams.maxRows || params.rows;\r\n        }\r\n\r\n        // Resolve with remote data\r\n        self.dataService.submitSearch($.extend(params, {\r\n            url: properties.dataUrl,\r\n            idRender: properties.idRender,\r\n            idPageCache: properties.idPageCache,\r\n            idSearchForm: properties.id,\r\n            allowFullSearch: (properties.searchParams.allowFullSearch ? properties.searchParams.allowFullSearch : null),\r\n            maxRecords: (properties.searchParams.maxRecords > 0 ? properties.searchParams.maxRecords : null),\r\n            criteria: data\r\n\r\n        })).done(function (response) {\r\n\r\n            // Resolve with fetched data    \r\n            properties.page = response.page;\r\n            properties.records = response.records;\r\n            properties.totalPages = response.totalPages || 0;\r\n\r\n            //In tablets are allowed about 10000 records as maximum\r\n            if (response.records > 10000) {\r\n                properties.deviceMaxRecordsExceeded = true;\r\n                response.deviceMaxRecordsExceeded = true;\r\n            } else {\r\n                delete properties.deviceMaxRecordsExceeded;\r\n            }\r\n            \r\n            defer.resolve(response);\r\n\r\n            // Call virtual method\r\n            self.onSearchFinished();\r\n        }).fail(function (errorObject) {\r\n            bizagi.showErrorAlertDialog = false;\r\n            if (errorObject.responseText) {\r\n                try {\r\n                    var message = JSON.parse(errorObject.responseText).message;\r\n                    bizagi.showMessageBox(message, \"\", \"error\");\r\n                } catch (e) { }\r\n            }\r\n            defer.reject();\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Iterate through all the renders in the container and fills the hashtable\r\n    *   - Overriden because server needs this in array\r\n    */\r\n    collectSearchValues: function () {\r\n        var self = this;\r\n\r\n        // Collect data\r\n        var data = {};\r\n        this.collectRenderValues(data);\r\n\r\n        // Changes to array\r\n        var submitArray = [];\r\n        for (key in data) {\r\n            var xpath = key;\r\n            var value = data[key];\r\n            var operation = self.getCriteriaOperation(self.getRender(xpath));\r\n            var criteriaData = {};\r\n            if (!bizagi.util.isEmpty(value)) {\r\n                criteriaData[\"xpath\"] = xpath;\r\n                criteriaData[\"value\"] = value;\r\n                criteriaData[\"operation\"] = operation;\r\n                submitArray.push(criteriaData);\r\n            }\r\n        }\r\n\r\n        return submitArray;\r\n    },\r\n\r\n    /*\r\n    *   This method find out the criterial operation to be executed according to\r\n    *   data type. Text renders use LIKE operation, but other data types such like\r\n    *   numerics use exact match operatiors\r\n    */\r\n    getCriteriaOperation: function (render) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var operation = \"EQUALS\";\r\n        if (render.properties.dataType == \"15\") {\r\n            if (typeof render.properties.typeSearch === \"undefined\" || render.properties.typeSearch === \"approx\"){\r\n                if (properties.allowFullSearch) {\r\n                    operation = \"FULLLIKE\";\r\n                }\r\n                else {\r\n                    operation = \"LIKE\";\r\n                }\r\n            }\r\n        }\r\n        return operation;\r\n    },\r\n\r\n    /*\r\n    *   Render the result controls for the query\r\n    *   Resolved in each device\r\n    */\r\n    renderResult: function () { },\r\n\r\n    /*\r\n    *   Refresh the result panel, making it to query data with current criteria\r\n    */\r\n    refreshResults: function () { },\r\n\r\n    /*\r\n    *   Function to parse the dataType\r\n    */\r\n    parseAdditionalProperties: function (dataType) {\r\n\r\n        // Number\r\n        if (dataType == 1 || dataType == 2 || dataType == 3 ||\r\n            dataType == 4 || dataType == 6 || dataType == 7 ||\r\n            dataType == 10 || dataType == 11 ) {\r\n\r\n            return { type: \"columnNumber\" };\r\n        }\r\n\r\n\r\n        // Oracle Number\r\n        if (dataType == 29) {\r\n\r\n            return { type: \"columnNumberScientificNotation\" };\r\n        }\r\n\r\n        // Money\r\n        if (dataType == 8) {\r\n\r\n            return { type: \"columnMoney\" };\r\n        }\r\n\r\n        // Date\r\n        if (dataType == 12 || dataType == 13) {\r\n\r\n            return { type: \"columnDate\" };\r\n        }\r\n\r\n        // Boolean\r\n        if (dataType == 5) {\r\n\r\n            return { type: \"columnBoolean\" };\r\n        }\r\n\r\n        // Text\r\n        return { type: \"columnText\" };\r\n    },\r\n\r\n    /*\r\n    *\r\n    */\r\n    onSearchFinished: function () {\r\n        // Empty function, overrided for Tablet version for now\r\n    }\r\n\r\n\r\n});\r\n\r\n","/*\r\n *   Name: BizAgi Tab Container Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define a tab container class for all devices\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.tab\", {}, {\r\n\r\n    /*\r\n     *   Constructor\r\n     */\r\n    initializeData: function(params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Default properties\r\n        var properties = self.properties;\r\n        properties.helpText = properties.helpText || properties.displayName;\r\n\r\n        // Extend css property\r\n        properties.cssclass = properties.cssclass || \"\";\r\n    },\r\n\r\n    /*\r\n     *   Render the container layout\r\n     */\r\n    renderContainer: function() {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var tabItems = $.map(self.children, function(child, key) {\r\n            child.properties.counter = key;\r\n            child.properties.tooltip =  child.properties.tooltip || child.properties.displayName || \"\";\r\n            return child.properties;\r\n        });\r\n        var template = self.renderFactory.getTemplate(\"tab\");\r\n        var mode = self.getMode();\r\n\r\n        // Render the tab\r\n        var html = $.fasttmpl(template, {\r\n            id: properties.id,\r\n            tabs: tabItems,\r\n            mode: mode,\r\n            isDesign: (self.getMode() !== \"execution\"),\r\n            editable: properties.editable,\r\n            tabOrientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            cssclass: properties.cssclass\r\n        });\r\n\r\n        // Get active container based on focus\r\n        var activeTab = self.activeTab = self.getActiveTab();\r\n\r\n        // Render children\r\n        for (var i = 0, length = self.children.length; i < length; i++) {\r\n            // Load on demand other tabs besides the first one\r\n            self.children[i].properties.loadOnDemand = (i != activeTab);\r\n        }\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     *   Return the active tab containing the focus, or the first tab\r\n     */\r\n    getActiveTab: function() {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var formParams = this.getFormContainer().getParams();\r\n        var mode = self.getMode();\r\n\r\n        if (mode === \"execution\") {\r\n            if (!formParams.isRefresh && properties.activeTab) {\r\n                self.getFormContainer().setFocusedElement(properties.activeTab);\r\n            }\r\n        }\r\n\r\n        var selectedTabs = formParams && formParams.selectedTabs ? formParams.selectedTabs : {};\r\n\r\n        // Fetch from selected tabs collection\r\n        if (selectedTabs[self.properties.id] >= 0) {\r\n            return selectedTabs[self.properties.id];\r\n        }\r\n\r\n        // Check for focused elements\r\n        for (var i = 0, length = self.children.length; i < length; i++) {\r\n            // Load on demand other tabs besides the first one\r\n            if (self.children[i].containsFocusedElement()) return i;\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    /**\r\n     * Update position of tab\r\n     * @param index\r\n     */\r\n    setActiveTab: function (index) {\r\n        var self = this;\r\n\r\n        self.triggerHandler(\"selected\", { index: index, tab: self.children[index] });\r\n\r\n        if (self.children[index]) {\r\n            var form = self.getFormContainer();\r\n\r\n            self.children[index].activate();\r\n            self.activeTab = index;\r\n\r\n            var selectedTab = {};\r\n            selectedTab[self.children[index].parent.properties.id] = index;\r\n            form.setParam(\"selectedTabs\", selectedTab);\r\n        }\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tab Item Container Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a tab item class for all devices\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.tabItem\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"tabItem\");\r\n\r\n        // Render the tabItem\r\n        var html = $.fasttmpl(template, {\r\n            id: properties.id,\r\n            uniqueId: properties.uniqueId,\r\n            counter: properties.counter,\r\n            isDesign: (self.getMode() !== \"execution\")\r\n        });\r\n\r\n        // Render content\r\n        html = self.renderTabContent(html);\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    * Renders the tab content\r\n    */\r\n    renderTabContent: function (html) {\r\n        // Render children\r\n        return this.replaceChildrenHtml(html, this.renderChildrenHtml());\r\n    },\r\n\r\n    /*\r\n    *   Fires when the tab is selected \r\n    */\r\n    activate: function () {\r\n        this.active = true;\r\n    },\r\n\r\n    /*  \r\n    *   Return the current focuses container\r\n    */\r\n    getFocus: function () {\r\n        var self = this;\r\n        var focus = self._super();\r\n        if (bizagi.util.isEmpty(focus) && self.active) {\r\n            focus = self.properties.id;\r\n        }\r\n\r\n        return focus;\r\n    },\r\n\r\n    /*\r\n    *   Return true if this tab contains the active focused element\r\n    */\r\n    containsFocusedElement: function () {\r\n        var self = this;\r\n        var focus = self.getFormContainer().getFocusedElement();\r\n\r\n        if (focus) {\r\n\r\n            // Locate element\r\n            if (focus.xpath) {\r\n                // Search by xpath and id\r\n                var elements = self.getFormContainer().getRenders(focus.xpath);\r\n                var element;\r\n\r\n                $.each(elements, function (i, item) {\r\n                    // Just select editable control\r\n                    if (item.properties.id == focus.id && item.properties.editable) {\r\n                        element = item;\r\n                    }\r\n                });\r\n            } else {\r\n                // Search just using id\r\n                var element = self.getFormContainer().getContainer(focus) || self.getFormContainer().getRenderById(focus);\r\n            }\r\n\r\n            // Search element parent\r\n            if (element) {\r\n                while (element.parent) {\r\n                    if (element.properties.id == self.properties.id || element.parent.properties.id == self.properties.id) return true;\r\n                    element = element.parent;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n});\r\n\r\n","/*\r\n*   Name: BizAgi Render Layout Render Class\r\n*   Author: Andrés Fernando Muñoz\r\n*   Comments:\r\n*   -   This script will define a base layout render class with common stuff related to all renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutRender\", {}, {\r\n\t/*\r\n\t *   Returns the html templated element\r\n\t */\r\n\trenderElement: function (template) {\r\n\t\tvar self = this;\r\n\t\tvar properties = self.properties;\r\n\t\tvar form = self.getFormContainer();\r\n\t\t// Start rendering deferred\r\n\t\tself.renderingDeferred = new $.Deferred();\r\n\r\n\t\t// Set render template\r\n\t\ttemplate = template || \"render-layout\";\r\n\t\tvar renderTemplate = self.renderFactory.getTemplate(template);\r\n\r\n\t\t// Resolve render label\r\n\t\tvar label = properties.displayName;\r\n\t\tif (typeof label == \"string\") {\r\n\t\t\tlabel = label.replaceAll(\"&\", \"&amp;\");\r\n\t\t\tlabel = label.replaceAll(\"$\", \"&#36;\");\r\n\t\t\tlabel = label.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\r\n\t\t\tlabel = label.replaceAll(\"\\\"\", \"&#34;\").replaceAll(\"'\", \"&#39;\").replaceAll(\"/\", \"&#47;\");\r\n\t\t\tlabel = label.replaceAll(\"\\\\n\", \"<br/>\");\r\n\t\t\tlabel = label.replaceAll(\"\\n\", \"<br/>\");\r\n\t\t}\r\n\r\n\t\t// Render template\r\n\t\tvar html = $.fasttmpl(renderTemplate, {\r\n\t\t\tlabel: label,\r\n\t\t\tisExtendedText: (properties.type == \"text\" && properties.isExtended),\r\n\t\t\torientation: properties.orientation,\r\n\t\t\tuniqueId: properties.uniqueId,\r\n\t\t\tid: properties.id,\r\n\t\t\tisDesign: self.getMode() === \"design\",\r\n\t\t\tmessageValidation: properties.messageValidation,\r\n\t\t\tprintVersion: form.params.printversion,\r\n\t\t\tcssClass: properties.cssclass || \"\",\r\n\t\t\thide: properties.hide\r\n\t\t});\r\n\r\n\t\t// Render internal control html\r\n\t\tvar result = self.internalRenderControl();\r\n\t\tif (!result) {\r\n\t\t\tresult = \"\";\r\n\t\t}\r\n\r\n\t\t// Check if this is an async element or not\r\n\t\tvar async = typeof (result) === \"object\" && result.done;\r\n\t\tif (!async) {\r\n\t\t\thtml = self.replaceControlHtml(html, result);\r\n\r\n\t\t} else {\r\n\t\t\tif (result.state() === \"resolved\") {\r\n\t\t\t\t// Fetch resolved result\r\n\t\t\t\thtml = self.replaceControlHtml(html, self.resolveResult(result));\r\n\t\t\t\tself.asyncRenderDeferred = null;\r\n\t\t\t} else {\r\n\t\t\t\t// Wait for result\r\n\t\t\t\tself.asyncRenderDeferred = result;\r\n\t\t\t\thtml = self.replaceControlHtml(html, \"\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t},\r\n\r\n    /*\r\n    *   Template method to get the control element\r\n    */\r\n\tgetControl: function () {\r\n\t\tvar self = this;\r\n\t\tif (!self.control || (self.control instanceof jQuery && self.control.length === 0)) {\r\n\t\t\tself.control = self.element;\r\n\t\t}\r\n\t\tif (!self.control || self.control.length == 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn self.control;\r\n\t},\r\n\r\n    /*\r\n    * Customizes the font italic style *\r\n    */\r\n\tchangeFontItalic: function (italic) {\r\n\t\tif (bizagi.util.parseBoolean(italic)) {\r\n\t\t\tthis.getControl().css(\"font-style\", \"italic\", \"!important\");\r\n\t\t} else {\r\n\t\t\tthis.getControl().css(\"font-style\", \"normal\", \"!important\");\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n    /*\r\n    * Customizes the font underline\r\n    */\r\n\tchangeFontUnderline: function (underline) {\r\n\t\tvar valueFormat = this.properties.valueFormat || {},\r\n\t\t\tvaluestrikethru = bizagi.util.parseBoolean(valueFormat.strikethru) ? \"line-through \" : \"\";\r\n\r\n\t\tif (bizagi.util.parseBoolean(underline)) {\r\n\t\t\tthis.getControl().css(\"text-decoration\", valuestrikethru + \"underline\", \"!important\");\r\n\t\t} else {\r\n\t\t\tthis.getControl().find(\"*\").each(function (i, element) {\r\n\t\t\t\t$(element).css(\"text-decoration\", valuestrikethru, \"!important\");\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n});","/*\r\n*   Name: BizAgi render layout Image Class\r\n*   Author: Andrés Fernando Muñoz\r\n*   Comments:\r\n*   -   This script will define basic stuff for non editable image control inside templates\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutImage\", { }, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this,\r\n            mode = self.getMode(),\r\n            useDefaultImage = false,\r\n            valueObj = self.properties.value || {},\r\n            uri= \"\";\r\n\r\n        //\r\n        var templateUri = self.renderFactory.getTemplate(\"layout-image\");\r\n\r\n        //Solucion temporal mientras se ajusta la respuesta del servicio cambiar despues de demo de 21/07/2015\r\n        /*if (value.value && value.value !== \"\" && value.value.length > 100){\r\n            var template64 = self.renderFactory.getTemplate(\"layout-image64\");\r\n            return $.fasttmpl(template64, { url: value.value, useDefaultImage: useDefaultImage });\r\n        }*/\r\n\r\n        /* if (mode === 'execution' && valueObj.value && valueObj.value.length > 0) {\r\n            uri = self.getImageUri();\r\n        }\r\n        else{\r\n            useDefaultImage = true;\r\n        } */\r\n\r\n        return $.fasttmpl(templateUri, {useDefaultImage: true });\r\n    },\r\n\r\n    /**\r\n     * Gets the base 64 image, specify in each device in order to change the size\r\n     */\r\n    getImage64: function () {\r\n        var self = this;\r\n        //Gets the real value of the image\r\n        var params = {\r\n            xpath: self.properties.xpath,\r\n            entity: self.value.guid,\r\n            surrogateKey: self.value.surrogateKey,\r\n            width: 96,\r\n            height: 96\r\n        };\r\n\r\n        return self.dataService.getEntityImage64(params);\r\n    },\r\n\r\n    /**\r\n     * Gets the url to get the array image, specify in each device in order to change the size\r\n     */\r\n    getImageUri: function () {\r\n        var self = this;\r\n\r\n        var map = {\r\n            entity: self.value.guid,\r\n            surrogateKey: self.value.surrogateKey,\r\n            xpath: self.properties.xpath,\r\n            width: 96,\r\n            height: 96,\r\n            hash: self.value.value\r\n        };\r\n\r\n        return self.dataService.serviceLocator.getUrl(\"render-entity-layout-imageByteArray\").replaceMultiple(map);\r\n    }\r\n\r\n});","/*\r\n *   Name: BizAgi Render Layout Simple Link Class\r\n *   Author: Andrés Fernando Muñoz\r\n *   Comments:\r\n *   -   This script will define basic stuff for non editable link renders inside templates\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutLink\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-link\");\r\n        // Render template\r\n        var html = $.fasttmpl(template, {displayName: self.properties.displayName});\r\n        return html;\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render Layout Label Class\r\n *   Author: Mauricio Sánchez\r\n *   Comments:\r\n *   -   This script will define basic stuff for labels inside templates\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutLabel\", {}, {\r\n\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        this.properties.required = false;\r\n\r\n        // Set properties\r\n        this.properties.displayType = \"label\";\r\n        this.properties.labelAlign = this.originalProperties.labelAlign || \"left\";\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n\r\n\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-label\");\r\n        var value = self.properties.displayName || self.properties.value || \"\";\r\n        // Render template\r\n        var html = $.fasttmpl(template, {value: value});\r\n        return html;\r\n    }\r\n});\r\n","/*\r\n*   Name: BizAgi Render Layout Text Class\r\n*   Author: Mauricio Sanchez\r\n*   Comments:\r\n*   -   This script will define basic stuff for text renders inside templates\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutText\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        //properties.editable = false;\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-text\");\r\n        // Render template\r\n        var html = $.fasttmpl(template, {value: self.properties.value,editable: self.properties.editable});\r\n        return html;\r\n    },\r\n    /*\r\n     *   Method to render non editable values\r\n     */\r\n    renderReadOnly: function() {\r\n        var self = this;\r\n        // Executes the same template than normal render\r\n        return self.renderControl();\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render Layout Simple Upload Class\r\n *   Author: Elkin Fernando Siabato Cruz\r\n *   Comments:\r\n *   -   This script will define basic stuff for non editable upload renders inside templates\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutUpload\", {\r\n   // Statics\r\n   BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n   BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX,\r\n   BA_PAGE_CACHE: bizagi.render.services.service.BA_PAGE_CACHE\r\n}, {\r\n   /**\r\n    * Constructor\r\n    */\r\n   init: function (params) {\r\n      // Call base\r\n      this._super(params);\r\n   },\r\n\r\n   /**\r\n    *   Update or init the element data\r\n    */\r\n   initializeData: function (data) {\r\n      var self = this;\r\n      // Call base\r\n      this._super(data);\r\n\r\n      var form = self.getFormContainer();\r\n\r\n      // Fill default properties\r\n      var properties = this.properties;\r\n\r\n      properties.editable = true;\r\n      properties.allowDelete = true;\r\n\r\n      properties.contexttype = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : \"\";\r\n      properties.allowSendInMail = properties.allowSendInMail || false;\r\n   },\r\n\r\n   /**\r\n    * Get value files by data\r\n    */\r\n   getValueFilesByData: function(properties){\r\n      var self = this;\r\n      var defer = $.Deferred();\r\n      var dataFiles;\r\n      if (properties.value.value) {//Normal entityTemplate in form QAF-2319\r\n          dataFiles = properties.value.value;\r\n      }\r\n      else {//QAF-2210\r\n          dataFiles = properties.value;\r\n      }\r\n      var valueAuxFiles;\r\n      try{\r\n         if(self.isContextContainerWidgetRender()){\r\n            valueAuxFiles = JSON.parse(\"{ \\\"files\\\": \" + dataFiles  + \"}\");\r\n            defer.resolve(properties, valueAuxFiles);\r\n         }\r\n         else{//context: my stuff\r\n            $.when(self.getDataFilesWithoutScope()).done(function(valueResult){\r\n               valueAuxFiles = JSON.parse(\"{ \\\"files\\\": \" + valueResult  + \"}\");\r\n               defer.resolve(properties, valueAuxFiles);\r\n            });\r\n         }\r\n      }\r\n      catch(err){\r\n         valueAuxFiles = JSON.parse(\"{ \\\"files\\\": []}\");\r\n         defer.resolve(properties, valueAuxFiles);\r\n         console.warn(\"Exception converting data files. Error: \", err);\r\n      }\r\n      return defer.promise();\r\n   },\r\n\r\n   isContextContainerWidgetRender: function(){\r\n      var self = this;\r\n\r\n      var formContainer = self.getFormContainer();\r\n      return formContainer.params.paramsRender && formContainer.params.paramsRender.idRender;\r\n   },\r\n\r\n\r\n   /**\r\n    * Get data files when access from My stuff\r\n    */\r\n   getDataFilesWithoutScope: function(){\r\n      var self = this;\r\n      //Gets the real value of the image\r\n      var params = {\r\n         xpath: self.properties.xpath,\r\n         entity: self.value.guid,\r\n         surrogateKey: self.value.surrogateKey\r\n      };\r\n\r\n      return self.dataService.getFilesDataForLayoutUploadControl(params);\r\n   },\r\n\r\n   /**\r\n    *   Returns the internal value\r\n    */\r\n   getValue: function () {\r\n      return this.files;\r\n   },\r\n\r\n   /**\r\n    *   Returns the xpath to be used\r\n    */\r\n   getUploadXpath: function () {\r\n      return this.properties.xpath;\r\n   }\r\n\r\n});","/*\r\n*   Name: BizAgi Render Layout Boolean Class\r\n*   Author: Alexander Mejia\r\n*   Comments:\r\n*   -   This script will define basic stuff for boolean renders inside templates\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutBoolean\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.editable = false;\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-boolean\");\r\n        // Render template\r\n        var html = $.fasttmpl(template, {value: this.properties.value});\r\n        return html;\r\n    },\r\n    /*\r\n     *   Method to render non editable values\r\n     */\r\n    renderReadOnly: function() {\r\n        var self = this;\r\n        // Executes the same template than normal render\r\n        return self.renderControl();\r\n    },\r\n\r\n    setValue: function (value, triggerEvents) {\r\n        if(value === null || value === \"\"){\r\n            this.properties.value = \"\";\r\n        }\r\n        else if (value.toString().toLowerCase() === \"true\" || value.toString().toLowerCase() === \"false\"){\r\n            this.properties.value = bizagi.util.parseBoolean(value) ? this.getResource(\"render-boolean-yes\") : this.getResource(\"render-boolean-no\");\r\n        }\r\n        this._super(this.properties.value, triggerEvents);\r\n    }\r\n});","/**\r\n * Name: BizAgi Render Layout DateTime Class\r\n * Author: Andres Fernando Muñoz\r\n * Comments:\r\n * - This script will define basic stuff for text renders inside templates\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutDateTime\", {}, {\r\n    /**\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n        var dateFormat = self.getResource(\"dateFormat\");\r\n        var timeFormat = self.getResource(\"timeFormat\");\r\n\r\n        // We will hold here the value to display\r\n        properties.displayValue = \"\";\r\n        properties.showTime = properties.showTime !== undefined ? bizagi.util.parseBoolean(properties.showTime) : false;\r\n        properties.dateFormat = properties.dateFormat || dateFormat;\r\n        properties.timeFormat = properties.timeFormat || timeFormat;\r\n        properties.fullFormat = properties.dateFormat;\r\n\r\n        // Check if it has the showtime property\r\n        if (properties.showTime) {\r\n            if (properties.fullFormat.search(/[h|H]+/ig) === -1) {\r\n                properties.fullFormat = properties.fullFormat + ' ' + properties.timeFormat;\r\n            }\r\n        }\r\n        else{\r\n            var indexHour = properties.fullFormat.search(/[h|H]+/ig);\r\n            if (indexHour !== -1) {\r\n                properties.fullFormat = properties.fullFormat.substring(0, indexHour - 1);\r\n            }\r\n        }\r\n\r\n        // Read always parameter from server in invariant format\r\n        if (properties.value) {\r\n            var date = bizagi.util.dateFormatter.getDateFromInvariant(properties.value, properties.showTime);\r\n\r\n            // Format date to current format\r\n            if (date != 0) {\r\n                var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n                self.value = properties.value; // Value must always hold the value with invariant format\r\n                properties.displayValue = bizagi.util.dateFormatter.formatDate(date, properties.fullFormat, datePickerRegional);\r\n            }\r\n            else {\r\n                self.value = null;\r\n            }\r\n        }\r\n        else {\r\n            self.value = null;\r\n            properties.value = \"\";\r\n            properties.displayValue = \"\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-date-time\");\r\n        var value = (self.properties.value === null || self.properties.value === \"\") ?  \"\" : self.properties.value;\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {value: value});\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this, dateObj;\r\n        var properties = self.properties;\r\n        var dateControl = self.getDateControl();\r\n        var INVARIANT_FORMAT = \"MM/dd/yyyy H:mm:ss\";\r\n        self.i18n = bizagi.localization.getResource(\"datePickerRegional\");\r\n\r\n        if (value.length == INVARIANT_FORMAT.length || value.length == (INVARIANT_FORMAT.length + 1)) {\r\n            dateObj = bizagi.util.dateFormatter.getDateFromInvariant(value, true);\r\n        }\r\n        else {\r\n            dateObj = bizagi.util.dateFormatter.getDateFromInvariant(value);\r\n            if (dateObj && !isNaN(Date.parse(dateObj)) && !$.isNumeric(dateObj)) {\r\n                dateObj.setHours(0, 0, 0, 0);\r\n            }\r\n\r\n        }\r\n        // Set value in input\r\n        if (value && !isNaN(Date.parse(value))) {\r\n            var formattedDateTime = bizagi.util.dateFormatter.formatDate(dateObj, properties.fullFormat, self.i18n);\r\n            dateControl.text(formattedDateTime);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Gets the date control\r\n     */\r\n    getDateControl: function () {\r\n        var self = this;\r\n        self.dateControl = $(\".ui-bizagi-render-date-time\", self.getControl());\r\n        return self.dateControl;\r\n    }\r\n});","/*\r\n*   Name: BizAgi Render Layout number Class\r\n*   Author: Andres Fernando Muñoz\r\n*   Comments:\r\n*   -   This script will define basic stuff for text renders inside templates\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutNumber\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var format = this.getResource(\"numericFormat\");\r\n\r\n        properties.allowDecimals = typeof (properties.allowDecimals) !== \"undefined\" ? bizagi.util.parseBoolean(properties.allowDecimals) : this.getDefaultAllowDecimals(properties.dataType);\r\n        properties.numDecimals = properties.allowDecimals ? (properties.numDecimals ? properties.numDecimals : (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalDigits : 2)) : 0;\r\n        properties.symbol = '';\r\n        properties.positiveFormat = format.positiveFormat;\r\n        properties.negativeFormat = format.negativeFormat;\r\n        properties.decimalSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator : format.decimalSymbol;\r\n        properties.digitGroupSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.groupSeparator : format.digitGroupSymbol;\r\n        properties.groupDigits = this.getDefaultGroupDigits(properties.dataType);\r\n        properties.colorize = properties.colorizeOnNegative || false;\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-number\");\r\n        // Render template\r\n        var html = $.fasttmpl(template, {value: self.properties.value});\r\n        return html;\r\n    },\r\n    /*\r\n     *   Method to render non editable values\r\n     */\r\n    renderReadOnly: function() {\r\n        var self = this;\r\n        // Executes the same template than normal render\r\n        return self.renderControl();\r\n    },\r\n\r\n    /*\r\n     *   Returns the display value of the render\r\n     */\r\n    getDisplayValue: function (value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        // Workaround to get the display value by the format currency plugin, because it requires a control\r\n        var label = $('<label/>').html(value);\r\n        var regExp2 = /[\\u20AC \\u0024\\u00A3]/;\r\n        if (!value.toString().match(regExp2)) {\r\n            label.formatCurrency(\r\n                {\r\n                    symbol: properties.symbol,\r\n                    positiveFormat: properties.positiveFormat,\r\n                    negativeFormat: properties.negativeFormat,\r\n                    decimalSymbol: properties.decimalSymbol,\r\n                    digitGroupSymbol: properties.digitGroupSymbol,\r\n                    groupDigits: properties.groupDigits,\r\n                    roundToDecimalPlace: properties.numDecimals,\r\n                    colorize: properties.colorize\r\n                });\r\n        }\r\n        return label.text();\r\n    },\r\n\r\n    /*\r\n     *   Return the allow decimals default property based on the datatype\r\n     */\r\n    getDefaultAllowDecimals: function (dataType) {\r\n        if (dataType) {\r\n            // Integer data types\r\n            if (dataType == 1 || dataType == 2 || dataType == 3 || dataType == 4 || dataType == 7) {\r\n                return false;\r\n            }\r\n            // Decimal data types\r\n            if (dataType == 6 || dataType == 8 || dataType == 10 || dataType == 11) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    /*\r\n     *   Return the group digits default property based on the datatype\r\n     */\r\n    getDefaultGroupDigits: function (dataType) {\r\n        if (dataType) {\r\n            // Integer data types\r\n            if (dataType == 1 || dataType == 2 || dataType == 3 || dataType == 4 || dataType == 7) {\r\n                return false;\r\n            }\r\n            // Decimal data types\r\n            if (dataType == 6 || dataType == 8 || dataType == 10 || dataType == 11) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n});","/*\r\n*   Name: BizAgi Render Layout Money Class\r\n*   Author: Andrés Fernando Muñoz\r\n*   Comments:\r\n*   -   This script will define basic stuff for money renders inside templates\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutMoney\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var format = this.getResource(\"numericFormat\");\r\n\r\n        // Configures symbol\r\n        properties.showsymbol = typeof (properties.showsymbol) !== \"undefined\" ? properties.showsymbol : true;\r\n\r\n        if (properties.showsymbol) {\r\n            properties.symbol = properties.currencySymbol ? properties.currencySymbol :\r\n                (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.symbol : format.symbol);\r\n        }\r\n        else {\r\n            properties.symbol = \"\";\r\n        }\r\n        properties.groupDigits = true;\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render Layout Label Class\r\n *   Author: Mauricio Sánchez\r\n *   Comments:\r\n *   -   This script will define basic stuff for labels inside templates\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutPlaceholder\", {}, {\r\n\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n                \r\n    },\r\n\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n             \r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-placeholder\");\r\n        var value = self.properties.value || self.properties.displayName || \"\";\r\n        // Render template\r\n        var html = $.fasttmpl(template, {value: value});\r\n        return html;\r\n    }\r\n});\r\n","/*\r\n*   Name: BizAgi Nested Form Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a nested form container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.nestedForm\", {}, {\r\n\r\n});","/**\r\n *   Name: Bizagi Render Combo Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for combo renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.combo\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        properties.hasLocalData = properties.data || false;\r\n        // TODO: Review additional value in radio control\r\n        properties.value = properties.value && properties.value.length > 0 ? properties.value[0] : (properties.defaultValue && properties.defaultValue.length > 0 ? properties.defaultValue[0] : null);\r\n\r\n        if (typeof (properties.enableTyping) === \"undefined\") properties.enableTyping = true;\r\n        if (properties.value && properties.value.id === undefined) properties.value = null;\r\n        this.value = properties.value;\r\n\r\n        // Add empty node if configured\r\n        if (properties.hasLocalData) {\r\n            properties.data = this.complementData(properties.data);\r\n        }\r\n\r\n        // This line is to set a flag to fetch the data when rendering, or on demand, by default is false, overriding it on desktop implementation\r\n        properties.loadOnDemand = false;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var params = {};\r\n        var renderType = bizagi.util.normalizeType(self.properties.type);\r\n\r\n        if (self.isDependant && self.properties && /^cascadingcombo$/i.test(renderType) && self.getParentCombo) {\r\n            var valueControl = self.getParentCombo().getValue();\r\n            if (valueControl && valueControl.id) {\r\n                params[self.Class.BA_ACTION_PARAMETER_PREFIX + \"parent\"] = valueControl.id;\r\n            }\r\n        }\r\n\r\n        return self.renderCombo(params);\r\n    },\r\n\r\n    /*\r\n    *   Renders the combo\r\n    */\r\n    renderCombo: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (properties.loadOnDemand) {\r\n            // Render the combo without data\r\n            var html = self.renderComboTemplate();\r\n            return html;\r\n        } else {\r\n\r\n            // Set data promise \r\n            var defer = new $.Deferred();\r\n            var dataPromise = self.getData(params);\r\n\r\n            // Attach callback \r\n            $.when(dataPromise).done(function (data) {\r\n                // Render combo\r\n                var html = self.renderComboTemplate(data);\r\n                self.properties.data = data;\r\n                defer.resolve(html);\r\n\r\n            }).fail(function (data) {\r\n                var html = self.renderComboTemplate({});\r\n                defer.resolve(html);\r\n            });\r\n\r\n            // Returns a promise so we can hold post-render method until this is done\r\n            return defer.promise();\r\n        }\r\n    },\r\n\r\n    renderComboTemplate: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(self.getTemplateName());\r\n        var emptyValue = bizagi.override.emptyLabelForCombo || self.getResource(\"render-combo-empty-selection\");\r\n        var value = properties.value ? \"\" : emptyValue;\r\n        data = data || self.properties.data || {};\r\n\r\n        if (self.properties.type === \"columnCombo\" && value === \"\" && typeof properties.value === \"object\" && properties.value.id === \"\" && (properties.value.value === \"\" || properties.value.value === self.getResource(\"render-combo-empty-value\"))) {\r\n            value = self.getResource(\"render-combo-empty-selection\");\r\n        }\r\n\r\n        var html = $.fasttmpl(template, $.extend(self.getTemplateParams(), {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            unique: bizagi.util.randomNumber(10000, 1000000),\r\n            idPageCache: properties.idPageCache,\r\n            items: data,\r\n            align: properties.valueAlign,\r\n            value: value,\r\n            editable: properties.editable\r\n        }));\r\n\r\n\r\n        return html;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed in read-only mode\r\n    */\r\n    postRenderReadOnly: function () {\r\n        var self = this;\r\n        self._super();\r\n        var item = self.getValue();\r\n        var control = self.getControl();\r\n\r\n        if (self.control && self.control.parent()) {\r\n            self.control.parent().addClass(\"ui-bizagi-noneditable-\" + self.properties.displayType);\r\n        }\r\n        if (item) {\r\n\r\n            if (item.value != null && typeof (item.value) === \"boolean\") {\r\n                if (bizagi.util.parseBoolean(item.value) === true) {\r\n                    item.value = this.getResource(\"render-boolean-yes\");\r\n\r\n                } else if (bizagi.util.parseBoolean(item.value) == false) {\r\n                    item.value = this.getResource(\"render-boolean-no\");\r\n                }\r\n            }\r\n\r\n            // Returns the cached value from the properties to avoid server side fetching\r\n            if (self.getResource(\"render-combo-empty-value\") === item.value || self.getResource(\"render-combo-empty-selection\") === item.value) {\r\n                control.text(\"\");\r\n            } else {\r\n                control.html(\"<label class='readonly-control'>\" + self.formatItem(item.value) + \"</label>\");\r\n            }\r\n        } else {\r\n            // Render empty \r\n            control.text(\"\");\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Gets the template used by the combo render\r\n    *   can be overriden in subclasses to reuse logic and just change the template\r\n    */\r\n    getTemplateName: function () {\r\n        return \"combo\";\r\n    },\r\n\r\n    /*\r\n    *   Determines if we need to show the empty node or not\r\n    *   Can be overriden to change behaviour\r\n    */\r\n    showEmpty: function () {\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Determines if we need to show the current data regardless if it belongs to data or not\r\n    *   Can be overriden to change behaviour\r\n    */\r\n    showCurrentData: function () {\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Fetch the data into a deferred\r\n    */\r\n    getData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n        var mode = self.getMode();\r\n\r\n        // Just execute ajax calls when rendering in execution mode\r\n        if (mode !== \"execution\") return self.getDummyData();\r\n\r\n        if (properties.hasLocalData) {\r\n\r\n            // Resolve with local data    \r\n            defer.resolve(properties.data);\r\n\r\n        } else {\r\n            var renderType = bizagi.util.normalizeType(properties.type);\r\n\r\n            // Check if the data has been cached\r\n            if (properties.remoteDataLoaded && !(/^cascadingcombo$/i.test(renderType))) {\r\n                defer.resolve(properties.data);\r\n            } else {\r\n                // Go to server\r\n                self.dataService.multiaction().getData({\r\n                    url: properties.dataUrl,\r\n                    xpath: properties.xpath,\r\n                    idRender: properties.id,\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache,\r\n                    extra: params,\r\n                    contexttype: self.properties.contexttype || null\r\n                }).done(function (data) {\r\n\r\n                    // Resolve the data\r\n                    if (!properties.recalculate) {\r\n                        properties.remoteDataLoaded = true;\r\n                    }\r\n                    properties.data = self.complementData(data);\r\n                    defer.resolve(properties.data);\r\n\r\n                }).fail(function (data) {\r\n\r\n                    if (data.type === \"not-processed\")\r\n                        return;\r\n\r\n                    // Show error from server\r\n                    var form = self.getFormContainer();\r\n                    var msgObj = self.properties.displayName + \": \";\r\n\r\n                    if (typeof data === \"string\") {\r\n                        var auxMsg = JSON && JSON.parse(data) || $.parseJSON(data);\r\n                    } else {\r\n                        var auxMsg = data;\r\n                    }\r\n\r\n                    msgObj += auxMsg.message;\r\n\r\n                    form.addValidationMessage(msgObj);\r\n\r\n                    defer.reject(data);\r\n                });\r\n            }\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Creates a set of dummy data in order to display it when rendering in design or layout mode\r\n    */\r\n    getDummyData: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (properties.data) {\r\n            return properties.data;\r\n\r\n        } else {\r\n            properties.data = [];\r\n            properties.data = self.complementData(properties.data);\r\n\r\n            // Add another data\r\n            properties.data.push({id: \"\", value: \"Item 1\"});\r\n            properties.data.push({id: \"\", value: \"Item 2\"});\r\n\r\n            return properties.data;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Resets the data in order to fetch it again when needed\r\n    */\r\n    resetData: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        properties.hasLocalData = false;\r\n        properties.data = null;\r\n        properties.remoteDataLoaded = false;\r\n    },\r\n\r\n    /* \r\n    *   Gets the display value of the render\r\n    */\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n\r\n        if (self.combo && self.combo.length > 0) {\r\n            // When there is a combo painted, we fetch the selected value from it\r\n            return self.getSelectedValue();\r\n        } else {\r\n            var displayValue = \"\";\r\n            var item = self.getValue();\r\n\r\n            if (item) {\r\n                // Check on cached propert from server first if the key exists\r\n                displayValue = self.formatItem(item.value);\r\n            }\r\n\r\n            return displayValue;\r\n        }\r\n    },\r\n\r\n\r\n    /*\r\n    *   Returns the selected value in the template\r\n    */\r\n    getSelectedValue: function () {\r\n    },\r\n\r\n    /*\r\n    *   Adds custom parameters to process the template\r\n    */\r\n    getTemplateParams: function () {\r\n        return {};\r\n    },\r\n\r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n\r\n        if (value !== undefined && value !== null) {\r\n            if ($.isArray(value)) {\r\n\r\n                for (var i = 0, length = value.length; i < length; i++) {\r\n                    if (value[i] != null && typeof (value[i]) === \"boolean\") {\r\n                        if (bizagi.util.parseBoolean(value[i]) === true) {\r\n                            value[i] = this.getResource(\"render-boolean-yes\");\r\n                        } else if (bizagi.util.parseBoolean(value[i]) === false) {\r\n                            value[i] = this.getResource(\"render-boolean-no\");\r\n                        }\r\n                    }\r\n                }\r\n                return value.join(\" - \");\r\n            } else {\r\n                return value;\r\n            }\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Add the render value\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            // Remove empty validation for value for combos        \r\n            if (!bizagi.util.isEmpty(xpath) && value !== null && typeof (value) !== \"undefined\") {\r\n                // Add a validation because sometimes value contains an empty not null object\r\n                if (typeof (value) === \"object\" && (value.id === undefined || value.id === \"\")) {\r\n                    renderValues[properties.xpath] = \"\";\r\n                } else {\r\n                    // Add the value to the server\r\n                    renderValues[properties.xpath] = typeof (value.id) !== \"undefined\" ? value.id : \"\";\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    controlValueIsChanged: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var currentValue = self.getValue();\r\n        var originalValue = properties.originalValue;\r\n        var defaultValue = properties.defaultValue;\r\n\r\n        var result = true;\r\n\r\n        if ($.forceCollectData) {\r\n            return result;\r\n        }\r\n\r\n        currentValue = currentValue && currentValue.length !== undefined ? currentValue[0] : currentValue;\r\n        originalValue = originalValue && originalValue.length !== undefined ? originalValue[0] : originalValue;\r\n        defaultValue = defaultValue && defaultValue.length !== undefined ? defaultValue[0] : defaultValue;\r\n\r\n        currentValue = currentValue && currentValue.id !== undefined ? currentValue.id : currentValue;\r\n        originalValue = originalValue && originalValue.id !== undefined ? originalValue.id : originalValue;\r\n        defaultValue = defaultValue && defaultValue.id !== undefined ? defaultValue.id : defaultValue;\r\n\r\n        if (defaultValue !== undefined) {\r\n            if (defaultValue != originalValue || defaultValue != currentValue) {\r\n                result = true;\r\n            } else {\r\n                result = false;\r\n            }\r\n        } else {\r\n            result = currentValue != originalValue ? true : false;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    * Parses additional values info in order to format them correctly\r\n    */\r\n    parseAdditionalValues: function (data) {\r\n        var self = this;\r\n\r\n        return $.map(data, function (item) {\r\n            var value = item.value ? self.formatItem(item.value) : item;\r\n            var newItem = {id: item.id, value: value};\r\n\r\n            if (item.hidden) newItem.hidden = true;\r\n            return item;\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Complement data from server before control implementation\r\n    */\r\n    complementData: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var bCurrentDataFound = false;\r\n        $.each(data, function (i, item) {\r\n\r\n            if (item.value !== undefined && item.value !== null) {\r\n                item.value = self.formatItem(item.value);\r\n                if (properties.value) {\r\n                    if (item.id == properties.value.id) {\r\n                        bCurrentDataFound = true;\r\n                    }\r\n                }\r\n            } else {\r\n                item.value = \"\";\r\n            }\r\n        });\r\n\r\n        // Add empty node if configured\r\n        if (self.showEmpty()) {\r\n            var emptyFound = false;\r\n            for (var i = 0, length = data.length; i < length; i++) {\r\n                if (data[i].id === \"\") {\r\n                    emptyFound = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!emptyFound) {\r\n                var dataValue = bizagi.override.emptyLabelForCombo || bizagi.localization.getResource(\"render-combo-empty-value\")\r\n                data.unshift({id: \"\", value: dataValue});\r\n            }\r\n        }\r\n\r\n        if (properties.value) {\r\n            if (!bCurrentDataFound && self.showCurrentData()) {\r\n                data.unshift({id: properties.value.id, value: properties.value.value, hidden: true});\r\n            }\r\n        }\r\n\r\n        // Add additional value\r\n        return self.parseAdditionalValues(data);\r\n    },\r\n\r\n    /*\r\n    *   Check if a render has no value for required validation\r\n    */\r\n    hasValue: function () {\r\n        var self = this;\r\n        var currentValue = self.getValue();\r\n\r\n        if (bizagi.util.isEmpty(currentValue)) return false;\r\n        if (Object.prototype.toString.apply(currentValue) === \"[object Object]\" && (bizagi.util.isEmpty(currentValue.id) || currentValue.id == 0)) return false;\r\n\r\n        // Else\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    * Cleans current data\r\n    */\r\n    cleanData: function () {\r\n        var self = this;\r\n        var value = {id: \"\", label: \"\"};\r\n\r\n        self.setDisplayValue(value);\r\n        self.setValue(value, false);\r\n    },\r\n\r\n    beforeToRefresh: function () {\r\n        this.column && !this.column.comboData && this.getData();\r\n    },\r\n\r\n    isExtraItem: function () {\r\n        var self = this;\r\n        var data = self.value || {};\r\n        var value = data.value || \"\";\r\n\r\n        return value === \"\" || value === self.getResource(\"render-combo-empty-selection\") || value === self.getResource(\"render-combo-empty-value\");\r\n    },\r\n\r\n    escapeValue: function (value) {\r\n        if (bizagi.util.isString(value)) {\r\n            var valueToReturn = value.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\r\n            return valueToReturn;\r\n        } else {\r\n            return value;\r\n        }\r\n    },\r\n\r\n    /**\r\n     *  Maps the value, when this one comes from actions\r\n     * @param value\r\n     * @returns {*}\r\n     */\r\n    mapValue: function (value) {\r\n        if (value && value.fromAction) {\r\n            return {\r\n                id: value.value,\r\n                value: value.label,\r\n                label: value.label\r\n            }\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    validateValue: function (value) {\r\n        if ((value.id != undefined) && ((typeof value.id === \"number\" && value.id !== null) || (typeof value.id === \"string\" && value.id.length > 0))) {\r\n            if (value.value !== null && typeof value.value === \"boolean\") {\r\n                translated = true;\r\n                if (bizagi.util.parseBoolean(value.value) === true) {\r\n                    value.value = bizagi.localization.getResource(\"render-boolean-yes\");\r\n                } else if (bizagi.util.parseBoolean(value.value) === false) {\r\n                    value.value = bizagi.localization.getResource(\"render-boolean-no\");\r\n                }\r\n            } else if (value.value != null && typeof value.value === \"object\") {\r\n                for (var i = 0, length = value.value.length; i < length; i++) {\r\n                    if (value.value[i] != null && typeof (value.value[i]) === \"boolean\") {\r\n                        if (bizagi.util.parseBoolean(value.value[i]) === true) {\r\n                            value.value[i] = bizagi.localization.getResource(\"render-boolean-yes\");\r\n                        } else if (bizagi.util.parseBoolean(value.value[i]) === false) {\r\n                            value.value[i] = bizagi.localization.getResource(\"render-boolean-no\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    /**\r\n     * Finds an element in the combo data values by id\r\n     * @param {int} id\r\n     * @returns {Object}\r\n     */\r\n    findDataValueById: function (id) {\r\n        return (this.properties.data || []).find(function (e) {\r\n            return e.id == id;\r\n        });\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Render Check Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for check renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.check\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.value = typeof (properties.value) != \"undefined\" ? bizagi.util.parseBoolean(properties.value) : null;\r\n\r\n        properties.showLetters = (bizagi.override && bizagi.override.enableCheck === true) && !properties.editable;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"check\");\r\n        var randomId = bizagi.util.randomNumber(100, 10000000);\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            id: randomId,\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     * Gets the display value of the render\r\n     */\r\n    getDisplayValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.parseBoolean(value) === true) {\r\n            return this.getResource(\"render-boolean-yes\");\r\n        } else if (bizagi.util.parseBoolean(value) === false) {\r\n            return this.getResource(\"render-boolean-no\");\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if a render has no value for required validation\r\n     */\r\n    hasValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.isEmpty(value)) return false;\r\n\r\n        var booleanValue = bizagi.util.parseBoolean(value);\r\n\r\n        return !(booleanValue === false && this.properties.required);\r\n    }\r\n\r\n});","/*\r\n*   Name: Bizagi Render Number Class\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define basic stuff for numbers\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.number\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var format = this.getResource(\"numericFormat\");\r\n\r\n        properties.allowDecimals = (typeof (properties.allowDecimals) !== \"undefined\") ? bizagi.util.parseBoolean(properties.allowDecimals) : this.getDefaultAllowDecimals(properties.dataType);\r\n        properties.numDecimals = properties.allowDecimals ? (properties.numDecimals ? properties.numDecimals : (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalDigits : 2)) : 0;\r\n        properties.symbol = '';\r\n        properties.positiveFormat = format.positiveFormat;\r\n        properties.negativeFormat = format.negativeFormat;\r\n        properties.decimalSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator : format.decimalSymbol;\r\n        properties.digitGroupSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.groupSeparator : format.digitGroupSymbol;\r\n        properties.groupDigits = this.setGroupDigits();\r\n        properties.colorize = properties.colorizeOnNegative || false;\r\n        properties.dataTypeMinValue = this.calculateMinValue(properties.dataType);\r\n        properties.dataTypeMaxValue = this.calculateMaxValue(properties.dataType);\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"number\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            editable: self.properties.editable,\r\n            value: bizagi.isMobile() ? self.getDisplayValue() : \"\", // Only apply to mobile because in the template value is required (Bug: 11624)\r\n            type: bizagi.util.isAndroidDevice() ? \"tel\" : \"text\", // Change type control for android device\r\n            isDesign: self.getMode() !== \"execution\"\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n\r\n        self._super();\r\n\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n\r\n        self.numericInput = control.find(\"input\");\r\n\r\n        // Add numeric plugin to avoid invalid keystrokes\r\n        self.numericInput.numeric(self.properties.decimalSymbol);\r\n\r\n        // Attach event for retype double\r\n        if (properties.retype === \"double\") {\r\n            self.attachRetypeDouble();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        // Attach Format Currency Plugin to format the input\r\n        this.attachFormatCurrency();\r\n    },\r\n\r\n    /**\r\n     * Removes Validation Messages\r\n     */\r\n    removeValidations: function () {\r\n        var form = this.getFormContainer().parent || this.getFormContainer();\r\n\r\n        form.clearValidationMessages();\r\n    },\r\n\r\n    /**\r\n     * Function virtual implements on children (desktop,smartphone...).\r\n     * @returns {}\r\n     */\r\n    attachRetypeDouble: function () {\r\n    },\r\n\r\n    /**\r\n     * Adds the format currency plugin\r\n     * @returns {}\r\n     */\r\n    attachFormatCurrency: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message = bizagi.localization.getResource(\"render-number-retype-fail\");\r\n        self.isValidRender = self.isValidRender || true;\r\n\r\n        // Extend formatCurrency language\r\n        if ($.formatCurrency.regions[bizagi.language] == null)\r\n            $.formatCurrency.regions[bizagi.language] = this.getResource(\"numericFormat\");\r\n\r\n        // Attach events\r\n        self.numericInput.blur(function () {\r\n            if (typeof (self.getFormContainer().validationController) == \"undefined\") self.getFormContainer().validationController = new bizagi.command.controllers.validation(self.getFormContainer(), self.validations);\r\n            var validationController = self.getFormContainer().validationController || self.getFormContainer().parent.validationController;\r\n            var decimalSeparator = \".\";\r\n            var digitGroupSeparator = \",\";\r\n            if (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) == \"undefined\") {\r\n                decimalSeparator = self.getResource(\"numericFormat\").decimalSymbol || \".\";\r\n                digitGroupSeparator = self.getResource(\"numericFormat\").digitGroupSymbol || \",\";\r\n            }\r\n            else {\r\n                decimalSeparator = BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator;\r\n                digitGroupSeparator = BIZAGI_DEFAULT_CURRENCY_INFO.groupSeparator;\r\n            }\r\n\r\n            var minValue = self.getMinValue();\r\n            var maxValue = self.getMaxValue();\r\n\r\n            if(properties.percentage)self.numericInput.val(self.numericInput.val().replace(\"%\", \"\"));\r\n            var inputValue = self.numericInput.val();\r\n            inputValue = (decimalSeparator == \",\") ? inputValue.replace(/\\,0+$/, '') : inputValue.replace(/\\.0+$/, '');\r\n            inputValue = inputValue.replace(properties.symbol, \"\");\r\n            //Replace all the ocurrences of the digitGroupSeparator\r\n            inputValue = bizagi.util.replaceAll(inputValue, digitGroupSeparator, \"\");\r\n            if (inputValue.toString().indexOf(decimalSeparator) != -1) {\r\n                if (decimalSeparator == \",\") inputValue = inputValue.replace(/([0-9]+(\\,[0-9]+[1-9])?)(\\,?0+$)/, '$1');\r\n                if (decimalSeparator == \".\") inputValue = inputValue.replace(/([0-9]+(\\.[0-9]+[1-9])?)(\\.?0+$)/, '$1');\r\n            }\r\n\r\n            if (inputValue != undefined && inputValue.length > 0) self.numericInput.val(inputValue);\r\n\r\n            if (/(.+)-$/.test(inputValue)) {\r\n                inputValue = inputValue.replace(/(.+)-$/, '-$1');\r\n                self.numericInput.val(inputValue);\r\n            }\r\n\r\n            var inputLength = inputValue.replace(/[^0-9]+/g, \"\").length;\r\n            var xPath = self.properties.xpath;\r\n            var oldVal = self.numericInput.val();\r\n\r\n\r\n            if ((self.isInvalidFormat != null && self.isInvalidFormat == true)\r\n                || (inputValue != \"\" && [\"$\", \"£\", \"€\", \"¥\", properties.symbol].indexOf(inputValue) != -1)) {\r\n                self.setValue(\"\");\r\n                self.getControl().find(\"input\").val(\"\");\r\n                self.numericInput.val(\"\");\r\n                return;\r\n            }\r\n\r\n            if (bizagi.util.trim(inputValue) == \"\") {\r\n                self.setValue(\"\");\r\n                return;\r\n            }\r\n\r\n            //The \",\" is changed to \".\" For the correct operation of \"parseFloat ()\"\r\n            var tempValue = parseFloat(inputValue.replace(\",\", \".\"));\r\n            if (isNaN(tempValue)) {\r\n                tempValue = self.numericInput.asNumber();\r\n            }\r\n\r\n            if (minValue !== undefined && minValue != null && tempValue < minValue) {\r\n                message = bizagi.localization.getResource(\"render-numeric-minimum-validation\")\r\n                    .replaceAll(\"#label#\", properties.displayName + \" (\" + oldVal + \")\")\r\n                    .replaceAll(\"#minValue#\", minValue.toString());\r\n            }\r\n            else if (maxValue !== undefined && maxValue !== null && tempValue > maxValue) {\r\n                message = bizagi.localization.getResource(\"render-numeric-maximum-validation\")\r\n                    .replaceAll(\"#label#\", properties.displayName + \" (\" + oldVal + \")\")\r\n                    .replaceAll(\"#maxValue#\", maxValue.toString());\r\n            } else\r\n                message = message + \" \" + oldVal + \"\";\r\n\r\n\r\n            // Do datatype validations\r\n            if (\r\n                (minValue !== undefined && minValue !== null && tempValue < minValue)\r\n                || (maxValue !== undefined && maxValue !== null && tempValue > maxValue)\r\n                || (self.properties.dataType == 10 && inputLength > 15)\r\n                || (self.properties.dataType == 1 && inputLength > 19)\r\n                || (self.properties.dataType == 11 && inputLength > 7)\r\n                || (self.properties.dataType == 11 && inputLength > 7)\r\n                || (oldVal.match(/[^$£€¥,-.()\\d]/))\r\n            ) {\r\n                if (typeof validationController != \"undefined\" && validationController != null) {\r\n                    self.removeValidations();\r\n\r\n                    var messageToShow = message;\r\n                    if(messageToShow.indexOf(oldVal) === -1){\r\n                        messageToShow = message + \" \" + oldVal + \"\";\r\n                    }\r\n\r\n                    validationController.showValidationMessage(messageToShow, xPath);\r\n                    self.isValidRender = false;\r\n                    self.isValidRenderMessage = messageToShow;\r\n                }\r\n                message = message.replace(oldVal, \"\");\r\n                return;\r\n            }\r\n            else {\r\n                self.isValidRender = true;\r\n                self.isValidRenderMessage = \"\";\r\n            }\r\n\r\n            // Fix decimals specially when it starts with 0 (0000234 -> 234, 00000 -> 0)\r\n            if (this.value.toString().length > 0 && !properties.allowDecimals && !properties.groupDigits) {\r\n                this.value = this.value.toString().replace(/^0+/, '');\r\n                if (properties.symbol.length > 0) this.value = this.value.toString().replace(properties.symbol + \"0\", properties.symbol);\r\n                this.value = this.value.toString().replace(/^0+/, '');\r\n                if (this.value.replaceAll('0', '').length == 0)\r\n                    this.value = properties.symbol + \"0\";\r\n                else if (this.value.toString() == parseInt(this.value)) this.value = properties.symbol + this.value;\r\n            } else {\r\n                //Fix type money when number start with 0 (0000234 -> 234, 00000 -> 0)\r\n                if(self.properties.type === \"money\" || self.properties.type === \"number\" || self.properties.type === \"columnMoney\" || self.properties.type === \"columnNumber\"){\r\n                    this.value = this.value.toString().replace(/^0+/, '');\r\n                    if(this.value === \"\"){\r\n                        this.value = 0;\r\n                    }\r\n                }\r\n            }\r\n            self.executeFormatCurrencyPlugin();\r\n\r\n            // Updates internal value\r\n            self.setValue(self.numericInput.asNumber({\r\n                symbol: properties.symbol,\r\n                positiveFormat: properties.positiveFormat,\r\n                negativeFormat: properties.negativeFormat,\r\n                decimalSymbol: properties.decimalSymbol,\r\n                digitGroupSymbol: properties.digitGroupSymbol,\r\n                groupDigits: properties.groupDigits\r\n            }));\r\n\r\n            if (properties.percentage) {\r\n                if (self.numericInput && self.numericInput.val().indexOf(\"%\") == -1)\r\n                    self.numericInput.val(self.numericInput.val() + '%');\r\n            }\r\n            message = message.replace(oldVal, \"\");\r\n        })\r\n\r\n        // Avoiding pasting invalid characters\r\n            .bind('paste', function (e) {\r\n                try {\r\n                    var tmpData = (bizagi.util.isIE() || bizagi.util.isIE11()) ? window.clipboardData.getData(\"text\") : e.originalEvent.clipboardData.getData(\"Text\");\r\n\r\n\r\n\r\n                    // Next lines checks if there is something different to numbers symbol, decimalSymbol and digitGroupSybol\r\n                    var totalVal = \"/[^0-9\";\r\n                    if (properties.decimalSymbol.length > 0) {\r\n                        totalVal += properties.decimalSymbol;\r\n                    }\r\n                    // Next lines only for currency type\r\n                    if (properties.dataType == 8) {\r\n                        if (properties.symbol.length > 0) {\r\n                            totalVal += properties.symbol;\r\n                        }\r\n                        if (properties.digitGroupSymbol.length > 0) {\r\n                            totalVal += properties.digitGroupSymbol;\r\n                        }\r\n                    }\r\n                    totalVal += \"\\\\-\\\\s]/gi\";\r\n                    try {\r\n                        if (tmpData.replace(eval(totalVal), '').length != tmpData.length)\r\n                            e.preventDefault();\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    bizagi.log(\"Error to pasting content\");\r\n                    self.isInvalidFormat = true;\r\n                }\r\n            })\r\n            // Now we implement keydown instead of keyup in order to include preventDefault\r\n            .keydown(function (e) {\r\n                self.previousValue = this.value;\r\n                e = (window.event && window.event.preventDefault) ? window.event : e;\r\n                var keyUnicode = e.charCode || e.keyCode;\r\n                // Validation for currency info\r\n                if (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) != \"undefined\")\r\n                    if (BIZAGI_DEFAULT_CURRENCY_INFO.decimalDigits == 0) properties.allowDecimals = false;\r\n                if (properties.dataType < 5 || (properties.dataType == 8 && properties.allowDecimals == false))\r\n                    if (keyUnicode == 188 || keyUnicode == 190 || keyUnicode == 110)\r\n                        e.preventDefault();\r\n                if (this.value)\r\n                    if (e !== undefined && this.value.length > 0 && (properties.dataType == 8 || properties.dataType == 10)) {\r\n                        // Just numbers\r\n                        if (keyUnicode > 47 && keyUnicode < 58) {\r\n                            if (self.formatTimeout) {\r\n                                clearTimeout(self.formatTimeout);\r\n                            }\r\n\r\n                            var floatPart = this.value + \"\";\r\n                            //var  floatPart = stringPart.replaceAll(properties.digitGroupSymbol, \"\").replaceAll(properties.symbol,\"\").trim().replaceAll(properties.decimalSymbol,\".\");\r\n                            if (properties.digitGroupSymbol && properties.digitGroupSymbol.length > 0) {\r\n                                floatPart = floatPart.replaceAll(properties.digitGroupSymbol, \"\");\r\n                            }\r\n                            if (properties.symbol.length > 0) {\r\n                                floatPart = floatPart.replaceAll(properties.symbol, \"\");\r\n                            }\r\n\r\n                            floatPart = $.trim(floatPart);\r\n                            if (properties.decimalSymbol && properties.decimalSymbol.length > 0) {\r\n                                floatPart = floatPart.replaceAll(properties.decimalSymbol, \".\");\r\n                            }\r\n                            // If increasing one digit (x10) will overtake the maxValue\r\n                            if (floatPart * 10 > properties.dataTypeMaxValue) {\r\n                                e.preventDefault();\r\n                            }\r\n                        }                  \r\n                        else if (keyUnicode == 109 || keyUnicode == 189) {\r\n                            if (this.selectionStart != 0 || this.selectionEnd != this.value.length) {\r\n                                var currentPosition = this.selectionEnd;\r\n                                this.value = properties.symbol + \"-\" + this.value.replace(properties.symbol, \"\");\r\n                                this.selectionStart = this.selectionEnd = currentPosition + 1;\r\n                            } else if (this.selectionStart == 0 && this.selectionEnd == this.value.length) {\r\n                                this.value = \"-\";\r\n                                this.selectionStart = this.selectionEnd = this.value.length;\r\n                            }\r\n                        }\r\n                    }                    \r\n            })\r\n\r\n            .keyup(function (e) {\r\n                e = window.event || e;\r\n                var keyUnicode = e.charCode || e.keyCode;\r\n                if (e !== undefined) {\r\n                    switch (keyUnicode) {\r\n                        case 16:\r\n                            break; // Shift\r\n                        case 17:\r\n                            break; // Ctrl\r\n                        case 13:\r\n                            break; // Intro\r\n                        case 18:\r\n                            break; // Alt\r\n                        case 27:\r\n                            this.value = '';\r\n                            break; // Esc: clear entry\r\n                        case 35:\r\n                            break; // End\r\n                        case 36:\r\n                            break; // Home\r\n                        case 37:\r\n                            break; // cursor left\r\n                        case 38:\r\n                            break; // cursor up\r\n                        case 39:\r\n                            break; // cursor right\r\n                        case 40:\r\n                            break; // cursor down\r\n                        case 78:\r\n                            break; // N (Opera 9.63+ maps the \".\" from the number key section to the \"N\" key too!) (See: http://unixpapa.com/js/key.html search for \". Del\")\r\n                        case 110:\r\n                            break; // . number block (Opera 9.63+ maps the \".\" from the number block to the \"N\" key (78) !!!)\r\n                        case 188:\r\n                            break; // , comma\r\n                        case 190:\r\n                            break; // .\r\n                        default:\r\n                        {\r\n\r\n                        }\r\n                    }\r\n                }                \r\n            }).keypress(function (e) {\r\n            e = (window.event && window.event.preventDefault) ? window.event : e;\r\n            var keyUnicode = e.charCode || e.keyCode;\r\n            if (typeof (e) !== \"undefined\") {\r\n                if (keyUnicode == 35 || keyUnicode == 37 || keyUnicode == 39) {\r\n                    e.preventDefault();\r\n                } else if (properties.dataType != 8 && keyUnicode == 36) {\r\n                    e.preventDefault();\r\n                }\r\n\r\n                // When no decimals are permited\r\n                var character = String.fromCharCode(keyUnicode);\r\n                if (properties.allowDecimals === false && properties.numDecimals === 0 && character === properties.decimalSymbol)\r\n                    e.preventDefault();\r\n            }\r\n        });\r\n\r\n    },\r\n\r\n    executeFormatCurrencyPlugin: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (self.numericInput) {\r\n            self.numericInput.formatCurrency({\r\n                symbol: properties.symbol,\r\n                positiveFormat: properties.positiveFormat,\r\n                negativeFormat: properties.negativeFormat,\r\n                decimalSymbol: properties.decimalSymbol,\r\n                digitGroupSymbol: properties.digitGroupSymbol,\r\n                groupDigits: properties.groupDigits,\r\n                roundToDecimalPlace: properties.numDecimals,\r\n                colorize: properties.colorize\r\n            });\r\n        }\r\n\r\n        if (properties.dataType !== 8 && bizagi.override.removeTrailingZeros === true) {\r\n            var value = self.numericInput.val();\r\n            var positive = true;\r\n\r\n            if (value.indexOf(\")\") !== -1) {\r\n                positive = false;\r\n                value = value.replace(\"(\", \"\").replace(\")\", \"\")\r\n            }\r\n\r\n            var regExp = new RegExp(\"(\" + properties.decimalSymbol + \"\\\\d*?[1-9])0+$\", \"g\");\r\n            value = value.replace(regExp, \"$1\")\r\n\r\n            regExp = new RegExp(\"\\\\\" + properties.decimalSymbol + \"0+$\", \"g\");\r\n            value = value.replace(regExp, \"\");\r\n            self.numericInput.val(value);\r\n\r\n            if (!positive) self.numericInput.val(\"(\" + value + \")\");\r\n        }\r\n\r\n        if (properties.percentage)\r\n            self.numericInput.val(self.numericInput.val() + '%');\r\n    },\r\n\r\n    /**\r\n     * Returns the display value of the render\r\n     * @returns {*}\r\n     */\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n        var value = self.getValue() !== undefined ? self.getValue() : $(\"input\", control).val() || \"\";\r\n\r\n        // Workaround to get the display value by the format currency plugin, because it requires a control\r\n        var label = $('<label/>').html(value);\r\n\r\n        label.formatCurrency({\r\n            symbol: properties.symbol,\r\n            positiveFormat: properties.positiveFormat,\r\n            negativeFormat: properties.negativeFormat,\r\n            decimalSymbol: properties.decimalSymbol,\r\n            digitGroupSymbol: properties.digitGroupSymbol,\r\n            groupDigits: properties.groupDigits,\r\n            roundToDecimalPlace: properties.numDecimals,\r\n            colorize: properties.colorize\r\n        });\r\n\r\n        if (properties.percentage)\r\n            label = $('<label/>').html(label.text() + '%');\r\n\r\n        // Removing unrequired zeros as requested by BA26331\r\n        if (!properties.editable && properties.dataType !== 8 && bizagi.override.removeTrailingZeros === true) {\r\n            value = label.text();\r\n            var positive = true;\r\n\r\n            if (value.toString().indexOf(\")\") !== -1) {\r\n                positive = false;\r\n                value = value.replace(\"(\", \"\").replace(\")\", \"\");\r\n            }\r\n\r\n            var re = new RegExp(\"(\" + properties.decimalSymbol + \"\\\\d*?[1-9])0+$\", \"g\");\r\n            value = value.replace(re, \"$1\");\r\n\r\n            re = new RegExp(\"\\\\\" + properties.decimalSymbol + \"0+$\", \"g\");\r\n            value = value.replace(re, \"\");\r\n\r\n            if (!positive) value = \"(\" + value + \")\";\r\n            return value;\r\n        }\r\n\r\n        return label.text();\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @returns {*}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        var message;\r\n        var minValue = self.getMinValue();\r\n        var maxValue = self.getMaxValue();\r\n\r\n        if (typeof (value) == \"string\" && value != \"\") {\r\n            value = Number(value);\r\n        }\r\n\r\n        // Check min value\r\n        if (self.hasValue()) {\r\n            if (!bizagi.util.isEmpty(minValue)) {\r\n                if (value < minValue) {\r\n                    message = this.getResource(\"render-numeric-minimum-validation\").replaceAll(\"#label#\", properties.displayName.toString() + \" (\" + value + \")\").replaceAll(\"#minValue#\", minValue.toString());\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n            // Check max value\r\n            if (!bizagi.util.isEmpty(maxValue)) {\r\n                if (value > maxValue) {\r\n                    message = this.getResource(\"render-numeric-maximum-validation\").replaceAll(\"#label#\", properties.displayName.toString() + \" (\" + value + \")\").replaceAll(\"#maxValue#\", maxValue.toString());\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (self.isValidRender === false && !(bValid && bizagi.util.isMobileDevice())) {\r\n            bValid = false;\r\n            var validMessage = self.isValidRenderMessage ? self.isValidRenderMessage : \"error\";\r\n            invalidElements.push({xpath: properties.xpath, message: validMessage});\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Get minimum value\r\n     * @returns {*}\r\n     */\r\n    getMinValue: function () {\r\n        var minValue = this.properties.minValue;\r\n\r\n        if (minValue !== undefined && minValue !== null)\r\n            return minValue;\r\n\r\n        return this.properties.dataTypeMinValue;\r\n    },\r\n\r\n    /**\r\n     * Get maximum value\r\n     * @returns {*}\r\n     */\r\n    getMaxValue: function () {\r\n        var maxValue = this.properties.maxValue;\r\n\r\n        if (maxValue !== undefined && maxValue !== null)\r\n            return maxValue;\r\n\r\n        return this.properties.dataTypeMaxValue;\r\n    },\r\n\r\n    /**\r\n     * Return the allow decimals default property based on the datatype\r\n     * @param dataType\r\n     * @returns {boolean}\r\n     */\r\n    getDefaultAllowDecimals: function (dataType) {\r\n        if (dataType) {\r\n            // Integer data types\r\n            if (dataType === 1 || dataType === 2 || dataType === 3 || dataType === 4 || dataType === 7) {\r\n                return false;\r\n            }\r\n            // Decimal and money data types\r\n            if (dataType === 6 || dataType === 8 || dataType === 10 || dataType === 11) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    /**\r\n     * Return the group digits default property based on the datatype\r\n     * @param dataType\r\n     * @returns {boolean}\r\n     */\r\n    getDefaultGroupDigits: function (dataType) {\r\n        if (dataType) {\r\n            // Integer data types\r\n            if (dataType === 1 || dataType === 2 || dataType === 3 || dataType === 4 || dataType === 7) {\r\n                return false;\r\n            }\r\n\r\n            // Decimal data types\r\n            if (dataType === 6 || dataType === 8 || dataType === 10 || dataType === 11) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Return the group digits default property based on digitGroupSymbol\r\n     * @returns {*}\r\n     */\r\n    setGroupDigits: function () {\r\n        var self = this;\r\n        if (typeof (self.properties.thousands) !== \"undefined\") {\r\n            if (self.properties.digitGroupSymbol) { //some cultures\r\n                return bizagi.util.parseBoolean(self.properties.thousands);\r\n            } else {\r\n                return false;\r\n            }\r\n        } else if (self.properties.digitGroupSymbol) { //some cultures\r\n            return this.getDefaultGroupDigits(self.properties.dataType);\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Calculate Minimum Value\r\n     * @param dataType\r\n     * @returns {*}\r\n     */\r\n    calculateMinValue: function (dataType) {\r\n        if (dataType === 8 || dataType === 10) {\r\n            return -922337203685477; // Money\r\n        }\r\n        if (dataType === 4) {\r\n            return 0; // tinyint\r\n        }\r\n        if (dataType === 3) {\r\n            return -32768; // smallint\r\n        }\r\n        if (dataType === 2) {\r\n            return -2147483648; // int\r\n        }\r\n        if (dataType === 1) {\r\n            return -999999999999999; // bigint\r\n        }\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * Calculate Maximum Value\r\n     * @param dataType\r\n     * @returns {*}\r\n     */\r\n    calculateMaxValue: function (dataType) {\r\n        if (dataType === 8 || dataType === 10) {\r\n            return 922337203685477; // Money\r\n        }\r\n        if (dataType === 4) {\r\n            return 255; // tinyint\r\n        }\r\n        if (dataType === 3) {\r\n            return 32767; // smallint\r\n        }\r\n        if (dataType === 2) {\r\n            return 2147483647; // int\r\n        }\r\n        if (dataType === 1) {\r\n            return 999999999999999; // bigint\r\n        }\r\n        return null;\r\n    },\r\n\r\n    changeMinValue: function (value) {\r\n        var self = this;\r\n        var newValue = Number(value);\r\n\r\n        self.properties.minValue = self.properties.dataTypeMinValue = Number.isNaN(newValue) ? self.calculateMinValue(self.properties.dataType) : newValue;\r\n    },\r\n\r\n    changeMaxValue: function (value) {\r\n        var newValue = Number(value);\r\n\r\n        this.properties.maxValue = this.properties.dataTypeMaxValue = Number.isNaN(newValue) ? this.calculateMaxValue(this.properties.dataType) : newValue;\r\n    },\r\n\r\n    createTooltip: function (control, currentValue, currentTitle) {\r\n        control.data(\"oldValue\", currentValue);\r\n        control.val(\"\");\r\n\r\n        try {\r\n            // Destroy tooltips\r\n            control.tooltip(\"destroy\");\r\n        } catch (e) {\r\n        }\r\n\r\n        control.attr(\"title\", currentTitle);\r\n        control.tooltip();\r\n\r\n        var toolTipZindex = $.getMaxZindex();\r\n        control.tooltip().on(\"tooltipopen\", function (event, ui) {\r\n            ui.tooltip.zIndex(toolTipZindex);\r\n        });\r\n\r\n        // Create new tooltip\r\n        control.tooltip(\"open\");\r\n\r\n        setTimeout(function () {\r\n            control.focus();\r\n        }, 100);\r\n    }\r\n});\r\n\r\n","\r\n/*\r\n*   Name: Bizagi Render Number Scientific notation Class\r\n*   Author: Laura Ariza\r\n*   Comments:\r\n*   -   This script will define basic stuff for scientific notation numbers\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.numberScientificNotation\", {\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n\r\n        properties.decimalSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\"\r\n            ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator : format.decimalSymbol;\r\n    },\r\n\r\n    renderControl: function() {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"numberScientificNotation\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {});\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function() {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        self.numericInput = control.find(\"input\");\r\n        // Add numeric plugin to avoid invalid keystrokes\r\n        self.numericInput.numericSN(self.properties.decimalSymbol);\r\n\r\n    },\r\n\r\n    getDisplayValue: function() {\r\n        var self = this;\r\n        return self.getValue().replace('.', self.properties.decimalSymbol);\r\n    },\r\n\r\n    setValue: function(value) {\r\n        var self = this;\r\n        value = (value || '').toString().replace(self.properties.decimalSymbol, '.');\r\n        self._super(value);\r\n    },\r\n    controlValueIsChanged: function() {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var value = self.getValue() || \"\";\r\n        var compareValue = properties.originalValue || \"\";\r\n        var result = true;\r\n\r\n        // Flag to force to collect data\r\n        if ($.forceCollectData) {\r\n            return true;\r\n        }\r\n        result = (compareValue.toLowerCase() == value.toLowerCase()) ? false : true;\r\n        return result;\r\n    }\r\n\r\n});","/*\r\n*   Name: BizAgi Render Date Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for date renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.date\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var dateFormat = this.getResource(\"dateFormat\");\r\n        var timeFormat = this.getResource(\"timeFormat\");\r\n\r\n        // We will hold here the value to display\r\n        properties.displayValue = \"\";\r\n        properties.showTime = properties.showTime !== undefined ? bizagi.util.parseBoolean(properties.showTime) : false;\r\n        properties.dateFormat = properties.dateFormat || dateFormat;\r\n        properties.timeFormat = properties.timeFormat || timeFormat;\r\n        properties.fullFormat = properties.dateFormat;\r\n\r\n        // Check if it has the showtime property\r\n        if (properties.showTime) {\r\n            if (properties.fullFormat.search(/[h|H]+/ig) === -1) {\r\n                properties.fullFormat = properties.fullFormat + ' ' + properties.timeFormat;\r\n            }\r\n        }\r\n\r\n        // Read always parameter from server in invariant format\r\n        if (properties.value) {\r\n\r\n            var date = bizagi.util.dateFormatter.getDateFromInvariant(properties.value, properties.showTime);\r\n            // Format date to current format\r\n            if (date != 0) {\r\n                // Value must always hold the value with invariant format\r\n                self.value = properties.value;\r\n                var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n                properties.displayValue = bizagi.util.dateFormatter.formatDate(date, properties.fullFormat, datePickerRegional);\r\n            } else {\r\n                self.value = null;\r\n            }\r\n        }\r\n    },\r\n    \r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"date\");\r\n        var indexDateTimeSeparation = properties.dateFormat.substring(0, properties.dateFormat.indexOf(\":\")).lastIndexOf(\" \");\r\n        var dateFormat = (indexDateTimeSeparation > 0) ? properties.dateFormat.substring(0, indexDateTimeSeparation) : properties.dateFormat;\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            showTime: properties.showTime,\r\n            value: properties.value,\r\n            editable: properties.editable,\r\n            dateFormat: bizagi.override && bizagi.override.uppercaseDatePlaceholder === true ? dateFormat.toUpperCase() : dateFormat,\r\n            timeFormat: (properties.showTime && indexDateTimeSeparation > 0) ? properties.dateFormat.substring(indexDateTimeSeparation) : \"\",\r\n            rtl: (properties.orientation == \"rtl\")\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n    */\r\n    configureHandlers: function (intHandler, isNow) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set control references\r\n        var dateControl = self.getDateControl();\r\n        var timeControl = self.getTimeControl();\r\n\r\n        // Set mask\r\n        if (properties.mask) {\r\n            dateControl.mask({\r\n                mask: properties.mask\r\n            });\r\n        }\r\n\r\n        // Attach change event\r\n        dateControl.bind(\"change\", function () {\r\n            self.onChangeHandler();\r\n        });\r\n        if (properties.showTime) {\r\n            timeControl.bind(\"change\", function (e, isNow) {\r\n                if (self.updatingTime) {\r\n                    delete self.updatingTime;\r\n                    return;\r\n                }\r\n                self.onChangeHandler(isNow);\r\n            });\r\n        }\r\n    },\r\n\r\n    /* \r\n    *   Formats the date time value to the hidden control\r\n    */\r\n    onChangeHandler: function () {\r\n    },\r\n\r\n    getDisplayValue: function (value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var displayValue;\r\n\r\n        if (!properties.displayValue && value) {\r\n            var date = bizagi.util.dateFormatter.getDateFromInvariant(value, properties.showTime);\r\n            var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n            displayValue = bizagi.util.dateFormatter.formatDate(date, properties.fullFormat, datePickerRegional);\r\n        } else {\r\n            displayValue = \"\";\r\n        }\r\n\r\n        // We can return the display value isntance\r\n        return properties.displayValue || displayValue || \"\";\r\n    },\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Add the render value\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            if (!bizagi.util.isEmpty(xpath)) {\r\n                if (!bizagi.util.isEmpty(value)) {\r\n                    // Formats the value in full invariant (with time) in order to send to the server\r\n                    var date = bizagi.util.dateFormatter.getDateFromInvariant(value, properties.showTime);\r\n                    if (typeof (date) != \"undefined\")\r\n                        if (date !== 0) {\r\n                            if (!properties.showTime) {\r\n                                date.setHours(0, 0, 0, 0);\r\n                            }\r\n                            renderValues[properties.xpath] = bizagi.util.dateFormatter.formatInvariant(date, true);\r\n                        }\r\n                } else if (value === \"\") {\r\n                    renderValues[properties.xpath] = \"\";\r\n                }\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Gets the date control\r\n    */\r\n    getDateControl: function () { },\r\n\r\n    /*\r\n    *   Gets the time control\r\n    */\r\n    getTimeControl: function () { },\r\n\r\n    /* \r\n    * Public method to determine if a value is valid or not\r\n    */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n        properties = self.properties;\r\n\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        if (value) {\r\n            if (bizagi.util.parseBoolean(properties.editable) === true) {\r\n                value = bizagi.util.dateFormatter.getDateFromInvariant(value, properties.showTime);\r\n                var message;\r\n\r\n                // Check that we have a valid data\r\n                if (value != 0) {\r\n                    // Clear seconds and milliseconds for validations\r\n                    value.setSeconds(0);\r\n                    value.setMilliseconds(0);\r\n\r\n                    // Check min value\r\n                    if (properties.minValue && (typeof properties.minValue === 'string' || typeof properties.minValue == 'number')) {\r\n                        var minValue = typeof properties.minValue == 'string' ? bizagi.util.dateFormatter.getDateFromInvariant(properties.minValue, properties.showTime) : new Date(properties.minValue);\r\n                        minValue.setSeconds(0);\r\n                        minValue.setMilliseconds(0);\r\n\r\n                        if (value < minValue) {\r\n                            message = this.getResource(\"render-date-minimum-validation\").replaceAll(\"#label#\", properties.displayName).replaceAll(\"#minValue#\", bizagi.util.dateFormatter.formatDate(minValue, properties.fullFormat));\r\n                            invalidElements.push({\r\n                                xpath: properties.xpath,\r\n                                message: message\r\n                            });\r\n                            bValid = false;\r\n                        }\r\n                    }\r\n\r\n                    // Check max value\r\n                    if (properties.maxValue && (typeof properties.maxValue == 'string' || typeof properties.maxValue == 'number')) {\r\n                        var maxValue = typeof properties.maxValue == 'string' ? bizagi.util.dateFormatter.getDateFromInvariant(properties.maxValue, properties.showTime) : new Date(properties.maxValue);\r\n                        maxValue.setSeconds(0);\r\n                        maxValue.setMilliseconds(0);\r\n\r\n                        if (value > maxValue) {\r\n                            message = this.getResource(\"render-date-maximum-validation\").replaceAll(\"#label#\", properties.displayName).replaceAll(\"#maxValue#\", bizagi.util.dateFormatter.formatDate(maxValue, properties.fullFormat));\r\n                            invalidElements.push({\r\n                                xpath: properties.xpath,\r\n                                message: message\r\n                            });\r\n                            bValid = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Check that both controls (data and time) are filled out\r\n        if (properties.showTime) {\r\n            if (bizagi.util.parseBoolean(properties.editable) === true) {\r\n                // Check required\r\n                if (properties.required && self.hasValue()) {\r\n\r\n                    // Check both controls\r\n                    var dateControl = self.getDateControl();\r\n                    var timeControl = self.getTimeControl();\r\n\r\n                    // If date is filled but time is not ... show validation\r\n                    if (dateControl.length > 0 && timeControl.length > 0) {\r\n                        if (dateControl.val().length > 0 && timeControl.val().length == 0) {\r\n                            message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                            invalidElements.push({\r\n                                xpath: properties.xpath,\r\n                                message: message\r\n                            });\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Text Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for text renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.extendedText\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Check if offline forms is supported\r\n        this.isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n        this.hasMaxLines = this.properties.maxLines ? true : false;\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        // Fill default properties\r\n        properties.maxLines = this.properties.maxLines || 6;\r\n\r\n        if (properties.regularExpressionExpression) {\r\n            var message = properties.regularExpressionMessage || self.getResource(\"render-text-regular-expression-default-message\");\r\n\r\n            properties.regularExpression = {\"expression\": properties.regularExpressionExpression, \"message\": message};\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"extendedText\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            isEmptyField: typeof (this.properties.value) === \"undefined\",\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        self._super();\r\n\r\n        var control = self.getControl();\r\n        self.textarea = control.find(\"textarea\");\r\n\r\n        // If is textarea, then enable resize element.\r\n        if (self.textarea) {\r\n            self.textarea.css({resize: \"both\"});\r\n        } else {\r\n            self.textarea.css({resize: \"none\"});\r\n        }\r\n\r\n        // Attach event for retype double\r\n        if (self.properties.retype === \"double\")\r\n            self.attachRetypeDouble();\r\n    },\r\n\r\n    /**\r\n     * Function virtual implements on children (desktop,samrtphone...).\r\n     */\r\n    attachRetypeDouble: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set the default maxlength for the input if is 0 or undefined set to infinity\r\n        // this resolve issue with scope strings that don't have maxlength\r\n        if (properties.maxLength)\r\n            self.textarea.prop('maxlength', properties.maxLength);\r\n\r\n        if (properties.maxLines) {\r\n            self.textarea.prop('rows', properties.maxLines)\r\n        } else {\r\n            self.textarea.prop('rows', 6);\r\n        }\r\n\r\n        // Attach change event\r\n        self.textarea.bind(\"change\", function () {\r\n\r\n            // Updates internal value\r\n            self.setValue(self.textarea.val());\r\n\r\n            // Check that the value is valid\r\n            var validationMessages = [];\r\n            if (properties.retype !== \"duplicate\") {\r\n                if (self.isValid(validationMessages) || typeof (properties.regularExpression) === \"undefined\") {\r\n                    // Update value again triggering handlers\r\n                    self.setValue(self.textarea.val(), true);\r\n                } else {\r\n                    // Set error message\r\n                    var message = validationMessages[0].message;\r\n                    bizagi.showMessageBox(message, \"Bizagi\", \"error\");\r\n                }\r\n            }\r\n        });\r\n\r\n        // Attach blur event\r\n        self.textarea.bind(\"blur\", function () {\r\n            // Updates internal value\r\n            self.setValue(self.textarea.val());\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param {} invalidElements\r\n     * @returns {}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        var regEx = new RegExp(\".*?(<|\\\\u003C)(.+?)(>|\\\\u003E)(.?)|eval\\\\(|eval\\\\u0028\", \"g\");\r\n\r\n        // Offline capability\r\n        if (this.isOfflineForm && bizagi.util.isMobileDevice()) {\r\n            value = value && typeof (value) === \"object\" && value.value ? value.value : value;\r\n        }\r\n\r\n        // Check regular expression\r\n        if (properties.regularExpression) {\r\n\r\n            if (value && ((value.match(regEx)) || (!value.match(new RegExp(properties.regularExpression.expression)) && (self.properties && self.properties.xpath === \"userName\")))) {\r\n                message = properties.regularExpression.message;\r\n                invalidElements.push({xpath: properties.xpath, message: message});\r\n                bValid = false;\r\n            } else {\r\n                if (value && ((value.match(regEx)) || (!value.match(new RegExp(properties.regularExpression.expression))))) {\r\n                    message = properties.regularExpression.message;\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n        } else {\r\n            if (value && (value.match(new RegExp(\".*?eval\\\\(\", \"g\"))) && (value.match(new RegExp(\".*?eval\\\\u0028\", \"g\")))) {\r\n                if (properties.editable) {\r\n                    message = this.getResource(\"render-text-regular-expression-default-message\");\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n\r\n        if (self.properties.editable == false) {\r\n            // Render as simple value\r\n            if (typeof (value) == \"string\") {\r\n\r\n                // Replace line breaks for html line breaks\r\n                var valueToDisplay = bizagi.util.decodedDisplayValue(self.getDisplayValue());\r\n\r\n                control.html(valueToDisplay);\r\n            }\r\n        }\r\n\r\n        // Set internal value\r\n        self.setValue(decodedValue, false);\r\n    },\r\n\r\n    /**\r\n     * Add the render data to the given collection in order to send data to the server\r\n     * @param {} renderValues\r\n     * @returns {}\r\n     */\r\n    collectData: function (renderValues) {\r\n        // Call base\r\n        this._super(renderValues);\r\n    },\r\n\r\n    /**\r\n     * Extend setValue to fix all encode data from database\r\n     * More information SUITE-9407\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setValue: function (value) {\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n\r\n        this._super(decodedValue);\r\n    },\r\n\r\n    /**\r\n     * Helptext tooltip\r\n     * @param {} control\r\n     * @param {} currentValue\r\n     * @param {} currentTitle\r\n     */\r\n    createTooltip: function (control, currentValue, currentTitle) {\r\n        control.data(\"oldValue\", currentValue);\r\n        control.val(\"\");\r\n\r\n        try {\r\n            // Destroy tooltips\r\n            control.tooltip(\"destroy\");\r\n        } catch (e) {\r\n        }\r\n\r\n        control.attr(\"title\", currentTitle);\r\n        control.tooltip();\r\n\r\n        var toolTipZindex = $.getMaxZindex();\r\n        control.tooltip().on(\"tooltipopen\", function (event, ui) {\r\n            ui.tooltip.zIndex(toolTipZindex);\r\n        });\r\n\r\n        // Create new tooltip\r\n        control.tooltip(\"open\");\r\n\r\n        setTimeout(function () {\r\n            control.focus();\r\n        }, 100);\r\n    },\r\n\r\n    //#region No side effects funtions    \r\n    /**\r\n     * Gets the string with the correct size\r\n     * @param {string} value String value to validate\r\n     * @param {Int} maxLength Maximum size of the string\r\n     * @returns {string} String value validated\r\n     */\r\n    validateValue: function (value, maxLength) {\r\n        if(maxLength<1 || value.length<=maxLength)return value;\r\n        return value.substr(0, maxLength)\r\n    }\r\n    //#endregion No side effects funtions\r\n});\r\n","/*\r\n *   Name: Bizagi Render Grid Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for grids\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.grid\", {}, {\r\n\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        self.originalData = bizagi.clone(data.properties);\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        self.initProperties();\r\n\r\n        // Set columns\r\n        var areThereEditableColumns;\r\n        var areThereTotalizedColumns;\r\n        self.columns = [];\r\n        self.columnsIds = [];\r\n        self.enabledChecks = {};\r\n        self.exclusiveChanges = {};\r\n        self.originalEnabledChecks = [];\r\n        $.each(data.elements, function (i, column) {\r\n            var columnProperties = column.render.properties;\r\n\r\n            // the groupby property is taken of column\r\n            if (columnProperties.groupBy) {\r\n                properties.groupBy = columnProperties.xpath || \"\";\r\n                properties.allowGrouping = !bizagi.util.isEmpty(properties.groupBy) ? true : false;\r\n            }\r\n            if (columnProperties.type === \"columnLabel\") {\r\n                self.spliceRowData(data.properties.data, i + 1);\r\n            }\r\n\r\n            if (columnProperties.type === \"columnBoolean\" && columnProperties.isExclusive) {\r\n                var params = {\r\n                    xpath: columnProperties.xpath\r\n                };\r\n                if (data.properties.data) {\r\n                    self.enabledChecks[columnProperties.xpath] = [];\r\n                    for (var j = 0; j < data.properties.data.rows.length; j++) {\r\n                        var row = data.properties.data.rows[j];\r\n                        var item = row[i + 1];\r\n                        if (item) {\r\n                            self.originalEnabledChecks.push(row[0]);\r\n                            self.enabledChecks[columnProperties.xpath].push([row[0], item]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // If inlineEdit is false then all columns must be read only\r\n            if (!self.properties.inlineEdit) {\r\n                column.render.properties.editable = false;\r\n            }\r\n\r\n            // Create renderColumns\r\n            var columnRender = self.renderFactory.getColumn({\r\n                type: columnProperties.type,\r\n                data: column.render,\r\n                parent: self,\r\n                singleInstance: properties.singleInstance\r\n            });\r\n\r\n            self.columns.push(columnRender);\r\n            self.columnsIds.push(column.render.properties.id);\r\n\r\n            if (columnProperties.editable) {\r\n                areThereEditableColumns = true;\r\n            }\r\n\r\n            if (columnProperties.totalize && columnProperties.totalize.operation) {\r\n                areThereTotalizedColumns = true;\r\n\r\n                // Default summary format\r\n                columnProperties.totalize.format = columnProperties.totalize.format || {};\r\n                columnProperties.totalize.format.bold = columnProperties.totalize.format.bold !== undefined ? columnProperties.totalize.format.bold : true;\r\n            }\r\n        });\r\n\r\n        // Reverse columns when using right to left orientation\r\n        if (properties.orientation === \"rtl\")\r\n            self.columns = self.columns.reverse();\r\n\r\n        // Turn off inline edit if there are any editable columns        \r\n        if (properties.inlineEdit && !areThereEditableColumns) {\r\n            properties.inlineEdit = false;\r\n            properties.allowEdit = false;\r\n        }\r\n\r\n        // Check if the grid has totalizers\r\n        if (areThereTotalizedColumns) {\r\n            properties.showSummary = true;\r\n            properties.rowsPerPage = 0;\r\n        }\r\n    },\r\n\r\n    initProperties: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        /** Edit properties\r\n         * @default editable true\r\n         */\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) || false;\r\n        properties.allowEdit = bizagi.util.parseBoolean(properties.allowEdit) != null ? bizagi.util.parseBoolean(properties.allowEdit) : true;\r\n        properties.inlineEdit = bizagi.util.parseBoolean(properties.inlineEdit) != null ? bizagi.util.parseBoolean(properties.inlineEdit) : true;\r\n        properties.withEditForm = bizagi.util.parseBoolean(properties.withEditForm) != null ? bizagi.util.parseBoolean(properties.withEditForm) : false;\r\n\r\n        /** Add properties\r\n         * @default  allowAdd true\r\n         */\r\n        properties.allowAdd = bizagi.util.parseBoolean(properties.allowAdd) != null ? bizagi.util.parseBoolean(properties.allowAdd) : true;\r\n        properties.inlineAdd = (properties.allowAdd) ? (bizagi.util.parseBoolean(properties.inlineAdd) != null) ? bizagi.util.parseBoolean(properties.inlineAdd) : true : false;\r\n\r\n        /* Define Delete properties */\r\n        properties.allowDelete = bizagi.util.parseBoolean(properties.allowDelete) != null ? bizagi.util.parseBoolean(properties.allowDelete) : true;\r\n\r\n        /* Define details properties*/\r\n        properties.allowDetail = bizagi.util.parseBoolean(properties.allowDetail) != null ? bizagi.util.parseBoolean(properties.allowDetail) : false;\r\n\r\n        /* Define general properties */\r\n        properties.keyColumn = \"\";\r\n        properties.data = properties.data || null;\r\n        properties.displayType = \"value\";\r\n        properties.skipInitialLoad = properties.skipInitialLoad || false;\r\n        properties.allowMore = bizagi.util.parseBoolean(properties.allowMore) || false;\r\n        properties.allowFilter = bizagi.util.parseBoolean(properties.allowFilter) || false;\r\n        properties.allowGrouping = false;\r\n        properties.groupBy = \"\";\r\n        properties.groupSummary = properties.groupSummary || null;\r\n        properties.groupText = this.getResource(\"render-grid-group-text\");\r\n        properties.groupCollapsed = bizagi.util.parseBoolean(properties.groupCollapsed) || false;\r\n        properties.groupOrder = properties.groupOrder || \"asc\";\r\n        properties.formShowMode = bizagi.util.parseBoolean(properties.formShowMode) || \"popup\";\r\n        properties.floatingHeader = bizagi.util.parseBoolean(properties.floatingHeader) || false;\r\n\r\n        properties.sortBy = properties.sortBy ? properties.sortBy : properties.data && properties.data.sort ? properties.data.sort : properties.keyColumn;\r\n        properties.sortOrder = properties.sortOrder !== undefined && properties.sortOrder !== null ? (properties.sortOrder === \"True\" ? \"asc\" : \"desc\") : properties.data && properties.data.order ? properties.data.order : \"asc\";\r\n        properties.sort = properties.sortBy + \" \" + properties.sortOrder;\r\n\r\n        properties.rowsPerPage = properties.allowGrouping ? 1000 : (properties.rowsPerPage || 20);\r\n        properties.page = 1;\r\n        properties.records = 0;\r\n        properties.totalPages = 0;\r\n\r\n        properties.addLabel = properties.addLabel || this.getResource(\"render-grid-add-label\") + properties.displayName;\r\n        properties.editLabel = properties.editLabel || $.trim(this.getResource(\"render-grid-edit-label\")) + \" \" + properties.displayName;\r\n        properties.deleteLabel = properties.deleteLabel || this.getResource(\"render-ecm-confirm-bt-delete\") + \" \" + properties.displayName;\r\n        properties.exportOptionsLabel = properties.exportOptionsLabel || this.getResource(\"render-grid-export-options-label\") + properties.displayName;\r\n        properties.detailLabel = properties.detailLabel || this.getResource(\"render-collection-navigator-details-form\");\r\n\r\n\r\n        // Apply style to entire table\r\n        properties.tableCssClass = properties.cssClass || \"\";\r\n\r\n        properties.alreadySaved = false;\r\n\r\n        // When grid open in modal window and the parent is entity\r\n        if (properties.contexttype != \"entity\") {\r\n            properties.contexttype = (typeof self.parent.getContextType == 'function') ? self.parent.getContextType() : \"\";\r\n        }\r\n\r\n        // Define if it is editable or not        \r\n        /* This part change all cells in the table to no editable,\r\n         * you must use it when the parent container has noeditable property,\r\n         * so this table is noeditable too.\r\n         */\r\n        try {\r\n            if ((self.parent && typeof self.parent.properties.editable == \"boolean\" && !self.parent.properties.editable) || !properties.editable) {\r\n                properties.allowAdd = false;\r\n                properties.allowEdit = false;\r\n                properties.allowDelete = false;\r\n                properties.inlineEdit = false;\r\n                properties.inlineAdd = false;\r\n                properties.editable = false;\r\n            }\r\n        } catch (e) {\r\n        }\r\n\r\n\r\n        // If grid has not allowEdit property in true, all fields within the grid\r\n        // must be no editables, so these lines changes this behavior\r\n        if (!properties.allowEdit || (!properties.inlineEdit && !properties.withEditForm)) {\r\n            properties.editable = false;\r\n        }\r\n\r\n        // Calculate render width\r\n        properties.labelWidth = 0;\r\n        properties.valueWidth = \"100%\";\r\n\r\n        // This property will be used to make custom grids with another data source\r\n        properties.overrideGetRemoteData = properties.overrideGetRemoteData || undefined;\r\n        //this property use to create a single decorated or a array of decorated\r\n        properties.singleInstance = bizagi.util.isEmpty(properties.singleInstance) ? true : properties.singleInstance;\r\n\r\n        // Check if the grid its opened whitin dialog form and has contextType\r\n        properties.contextType = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : null;\r\n\r\n        // Create a collection to collect changes\r\n        self.changes = {};\r\n\r\n        // Create a collection to override properties per cell\r\n        self.cellOverrides = {};\r\n\r\n\r\n        // Check orientation and change order of data if its necesary (rtl)\r\n        if (self.isRTL() && properties.data != null) {\r\n            properties.data.rows = self.changeOrderData(properties.data.rows);\r\n        }\r\n    },\r\n\r\n    /*\r\n   *   Check if a render has no value for required validation\r\n   */\r\n    hasValue: function () {\r\n        return this.properties.data && this.properties.data.rows.length > 0;\r\n    },\r\n\r\n    isRTL: function () {\r\n        var properties = this.properties;\r\n        if (!properties) return true;\r\n        return (typeof properties.orientation == \"string\" && properties.orientation.toUpperCase() == \"RTL\") ? true : false;\r\n    },\r\n    changeOrderData: function (data) {\r\n        var reverseDataRows = [];\r\n        var rows = data || [];\r\n        var rowKey;\r\n\r\n        $.each(rows, function (key, value) {\r\n            // Extract row key\r\n            rowKey = value.shift();\r\n            reverseDataRows = value.reverse();\r\n            // add element in the start\r\n            reverseDataRows.unshift(rowKey);\r\n\r\n            rows[key] = reverseDataRows;\r\n        });\r\n\r\n        return rows;\r\n    },\r\n\r\n    /**\r\n     * Specific fix RTL with localizated\r\n     * @param data\r\n     * @returns {*|Array}\r\n     */\r\n    removeRemainingColumns: function (data, numColumns) {\r\n        var rows = data || [];\r\n        var remainingColumns = 0;\r\n        if (rows.length > 0) {\r\n            // \"- 1\" because the first column represent id row\r\n            remainingColumns = rows[0].length - numColumns - 1;\r\n        }\r\n        if (remainingColumns > 0) {\r\n            $.each(rows, function (key, value) {\r\n                // Remove remaining columns\r\n                for (var i = 0; i < remainingColumns; i++) {\r\n                    value.pop();\r\n                }\r\n            });\r\n        }\r\n        return rows;\r\n    },\r\n\r\n    /* \r\n     *   Gets a column definition by xpath\r\n     */\r\n    getColumn: function (xpath) {\r\n        var self = this;\r\n        var result = null;\r\n        $.each(self.columns, function (i, column) {\r\n            if (column.properties.xpath == xpath || column.properties.id == xpath) {\r\n                result = column;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    },\r\n\r\n    getColumnType: function (id) {\r\n        var self = this;\r\n        var columnIndex = self.columnsIds.indexOf(id);\r\n\r\n        if (columnIndex != -1) {\r\n            return self.columns[columnIndex].properties.type;\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    /*\r\n     *   Template method to implement in each children to customize each control\r\n     *   Returns a promise that will be resolved when all the columns has been loaded\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var defer = new $.Deferred();\r\n\r\n        // Set dummy data when not in execution mode\r\n        var mode = self.getMode();\r\n        if (mode !== \"execution\") {\r\n            properties.data = self.getDummyData();\r\n        }\r\n\r\n        var template = self.getGridTemplate();\r\n\r\n        // Render template\r\n        var html = self.applyTemplate(template);\r\n\r\n        // Initialize columns\r\n        var columnInitializers = [];\r\n        $.each(self.columns, function (i, column) {\r\n\r\n            // Add to column initializer array so we can synch out the promises\r\n            var result = column.initialize();\r\n            if (result)\r\n                columnInitializers.push(result);\r\n        });\r\n\r\n        // Resolve when all columns has been loaded\r\n        $.when.apply($, columnInitializers).done(function () {\r\n            defer.resolve(html);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n    /*\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Call base\r\n        this._super();\r\n\r\n        // Make control to behave as a block container\r\n        // TODO: Move to instances. This does not apply to mobiles\r\n        control.addClass(\"ui-bizagi-render-grid-container\")\r\n            .addClass(\"ui-bizagi-render-display-block\");\r\n    },\r\n\r\n    /*\r\n     *   Returns the grid template to be used\r\n     */\r\n    getGridTemplate: function () {\r\n        return this.renderFactory.getTemplate(\"grid\");\r\n    },\r\n\r\n    /*\r\n     *   Applies the template to the render and returns the resolved element\r\n     */\r\n    applyTemplate: function (template) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        orientation = self.properties.orientation;\r\n\r\n        return $.fasttmpl(template, {\r\n            id: bizagi.util.encodeXpath(properties.xpath),\r\n            displayName: bizagi.util.encodeXpath(properties.displayName),\r\n            allowAdd: properties.allowAdd,\r\n            addLabel: properties.addLabel\r\n        });\r\n    },\r\n    /*\r\n     *   Method to render non editable values\r\n     *   Returns a promise that will be resolved when all the columns has been loaded\r\n     */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n\r\n        // Override read-only presets\r\n        //  properties.allowAdd = false;\r\n        // Render the same, just change some presets\r\n        return self.renderControl();\r\n    },\r\n    /*\r\n     *   Fetch the data into a deferred\r\n     */\r\n    getRemoteData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set params\r\n        params = params || {};\r\n        $.extend(params, {\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType,\r\n            idPageCache: properties.idPageCache,\r\n            sort: properties.sortBy,\r\n            order: properties.sortType,\r\n            page: properties.page,\r\n            rows: properties.rowsPerPage,\r\n            searchFilter: properties.searchFilter,\r\n            orientation: properties.orientation || \"ltr\"\r\n        });\r\n\r\n        // Check if a custom method has been given\r\n        if (properties.overrideGetRemoteData) {\r\n            return properties.overrideGetRemoteData(params);\r\n        } else {\r\n            // Resolve with remote data\r\n            return self.dataService.multiaction().getGridData(params).then(function (data) {\r\n                self.originalData = self.originalData || {};\r\n                self.originalData.data = bizagi.clone(data);\r\n\r\n                // Resolve with fetched data\r\n                properties.page = data.page;\r\n                properties.records = data.records;\r\n                properties.totalPages = data.totalPages;\r\n\r\n                return data;\r\n            });\r\n        }\r\n    },\r\n    /*\r\n     insert a blank item in the selected column in the data matrix\r\n     */\r\n    spliceRowData: function (data, index) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        if (mode === \"execution\" && (data && data.rows)) {\r\n            $.each(data.rows, function (key, value) {\r\n                var spliceIndex = index || data.rows[key].length;\r\n                data.rows[key].splice(spliceIndex, 0, \"\");\r\n            });\r\n        }\r\n    },\r\n\r\n    spliceRowDataVisible: function(data, index) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        if (mode === \"execution\" && (data && data.visible)) {\r\n            $.each(data.visible, function (key, value) {\r\n                var spliceIndex = index || data.visible[key].length;\r\n                data.visible[key].splice(spliceIndex, 0, true);\r\n            });\r\n        }\r\n    },\r\n\r\n    spliceRowDataEditable: function(data, index) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        if (mode === \"execution\" && (data && data.editable)) {\r\n            $.each(data.editable, function (key, value) {\r\n                var spliceIndex = index || data.editable[key].length;\r\n                data.editable[key].splice(spliceIndex, 0, true);\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n     *   Creates a set of dummy data in order to display it when rendering in design or layout mode\r\n     */\r\n    getDummyData: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (properties.data) {\r\n            return properties.data;\r\n\r\n        } else {\r\n            var rowTemplate = [\"1\"];\r\n\r\n            // Add a value for each column\r\n            for (var i = 0; i < self.columns.length; i++) {\r\n                rowTemplate.push(\"\");\r\n            }\r\n\r\n            var data = {\r\n                \"page\": 1,\r\n                \"total\": 1,\r\n                \"records\": 1,\r\n                \"rows\": [rowTemplate]\r\n            };\r\n\r\n            return data;\r\n        }\r\n    },\r\n    /*\r\n     *   Submits a grid edit record request for the given id\r\n     *   Returns a deferred\r\n     */\r\n    submitEditRequest: function (id) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var xpath = properties.xpath + self.buildCellXpathFilter(id);\r\n\r\n        return self.dataService.editGridRecord({\r\n            url: properties.editUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType\r\n        });\r\n    },\r\n    /*\r\n     *   Submits a grid edit record request for the given id\r\n     *   Returns a deferred\r\n     */\r\n    submitSaveRequest: function (id, data) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        // Check if there are deferreds to wait\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        // Calculate xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + properties.xpath + self.buildCellXpathFilter(id) : properties.xpath + self.buildCellXpathFilter(id);\r\n\r\n        return $.when(deferredsToWait).pipe(function () {\r\n            self.startLoading();\r\n            return self.dataService.saveGridRecord({\r\n                url: properties.saveUrl,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: xpathContext,\r\n                submitData: data,\r\n                contexttype: properties.contextType,\r\n                disableServerGridValidations: data.disableServerGridValidations || false\r\n            }).pipe(function (dataResp) {\r\n                self.endLoading();\r\n                return dataResp;\r\n            }).fail(function (dataFail) {\r\n                var form = self.getFormContainer();\r\n                var message = (dataFail.responseText) ? dataFail.responseText : ((typeof dataFail == \"string\") ? dataFail : dataFail.toString());\r\n                //Convert String to object\r\n                if (typeof message == \"string\") {\r\n                    try {\r\n                        message = JSON.parse(message).message;\r\n                    } catch (e) {\r\n                        message = message.match(/\"message\":(.*)\",/)[0];\r\n                        message = message.substr(11, message.length - 13);\r\n                    }\r\n\r\n                } else if (!message.message) {\r\n                    message = dataFail;\r\n                }\r\n                form.validateForm();\r\n                form.clearValidationMessages();\r\n                form.addValidationMessage(message);\r\n            });\r\n        });\r\n    },\r\n    /*\r\n     *   Submits a grid delete record request for the given id\r\n     *   Returns a deferred\r\n     */\r\n    submitDeleteRequest: function (id) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var xpath = properties.xpath + self.buildCellXpathFilter(id);\r\n\r\n        return self.dataService.deleteGridRecord({\r\n            url: properties.deleteUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType\r\n        }).pipe(function (data) {\r\n            if (data.type == \"validationMessages\") {\r\n                var form = self.getFormContainer();\r\n                var message = data.messages.join(\" \");\r\n                form.failHandler({message: message});\r\n            }\r\n\r\n            return data;\r\n        });\r\n    },\r\n    /*\r\n     *   Submits a grid add record request\r\n     *   Returns a deferred when done, the server returns an id for the new record\r\n     */\r\n    submitAddRequest: function () {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var request = self.dataService.addGridRecord({\r\n            url: properties.addUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType,\r\n            idPageCache: properties.idPageCache\r\n        });\r\n\r\n        var filterResponse = request.pipe(function (data) {\r\n            // Parses response\r\n            return data.idEntity;\r\n        });\r\n\r\n        return filterResponse.promise();\r\n    },\r\n    /*\r\n     *   Submits a grid rollback request\r\n     *   Returns a deferred when done\r\n     */\r\n    submitRollbackRequest: function (params) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        return self.dataService.rollbackGridAction({\r\n            url: properties.rollbackUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: params ? params.idPageCache : properties.idPageCache,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        });\r\n    },\r\n    /*\r\n     *   Collect a single cell change made in the grid to send the data when the user saves the form\r\n     */\r\n    collectGridChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        var id = params.id;\r\n        var xpath = params.xpath;\r\n        var value = params.value;\r\n        var trigger = typeof (params.trigger) !== \"undefined\" ? params.trigger : true;\r\n        var isPressed = params.pressed || false;\r\n\r\n        self.changes[id] = self.changes[id] || {};\r\n        self.changes[id][xpath] = value;\r\n\r\n        if (trigger)\r\n            self.triggerRenderChange({key: id, column: xpath, pressed: isPressed});\r\n    },\r\n    /*\r\n     *   Configures a column to perform a submit on change when the user changes a cell\r\n     */\r\n    configureColumnSubmitOnChange: function (xpath) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Build action\r\n        var action = {\r\n            commands: [{\r\n                xpath: properties.xpath,\r\n                command: 'submit-value',\r\n                argument: 'all'\r\n            }],\r\n            conditions: {\r\n                operator: 'and',\r\n                expressions: [\r\n                    {\r\n                        simple: {\r\n                            operator: 'cell-change',\r\n                            xpath: properties.xpath + '[].' + xpath,\r\n                            argumentType: 'text',\r\n                            argument: xpath\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            dependencies: [properties.xpath]\r\n        };\r\n\r\n        // Add action when form ends its rendering\r\n        $.when(self.ready())\r\n            .done(function () {\r\n                var form = self.getFormContainer();\r\n                form.addSubmitAction(xpath, action);\r\n            });\r\n    },\r\n    /*\r\n     *   Add the render data to the given collection in order to send data to the server\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var keysToDelete = [];\r\n\r\n        for (var id in self.changes) {\r\n            // Dont collect data from totalizers \r\n            if (id != \"summary\") {\r\n                for (var columnXpath in self.changes[id]) {\r\n                    // Check if the render can submit data\r\n                    if (self.canColumnBeSent(id, columnXpath)) {\r\n                        var xpath = properties.xpath + self.buildCellXpathFilter(id) + \".\" + columnXpath;\r\n                        var columnSimpleXpath = properties.xpath + self.buildCellXpathFilter(id) + \".\" + (columnXpath.substr(columnXpath.lastIndexOf('.') + 1, columnXpath.length) || columnXpath);\r\n                        var value = self.changes[id][columnXpath];\r\n\r\n                        renderValues[xpath] = value;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Clean changes \r\n            keysToDelete.push(id);\r\n\r\n        }\r\n\r\n        if (self.exclusiveChanges) {\r\n            for (var id in self.exclusiveChanges) {\r\n\r\n                var columnExclusiveChanges = self.exclusiveChanges[id];\r\n                var columnEnabledChecks = self.enabledChecks[id];\r\n                var lengthEnabledChecks = columnEnabledChecks.length;\r\n                if (columnExclusiveChanges && columnEnabledChecks) {\r\n                    for (var i = 0; i < lengthEnabledChecks; i++) {\r\n                        var columnSimpleXpathEnabled = properties.xpath + self.buildCellXpathFilter(self.enabledChecks[id].shift()[0]) + \".\" + id;\r\n                        renderValues[columnSimpleXpathEnabled] = false;\r\n                    }\r\n\r\n                    var columnSimpleXpath = properties.xpath + self.buildCellXpathFilter(columnExclusiveChanges.key) + \".\" + columnExclusiveChanges.xpath;\r\n                    renderValues[columnSimpleXpath] = columnExclusiveChanges.value;\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // Clean changes array in order to prevent duplicate data\r\n        // when execute SUBMITDATA in multiaction, that make and error\r\n        // in circular dependencies, specially when we add inline record\r\n        $.each(keysToDelete, function (key, v) {\r\n            delete self.changes[v];\r\n        });\r\n    },\r\n\r\n    hasChanged: function (result) {\r\n        var self = this;\r\n        if (!$.isEmptyObject(self.changes)) {\r\n            result.push(true);\r\n            return true;\r\n        } else {\r\n            if (!$.isEmptyObject(self.exclusiveChanges)) {\r\n                result.push(true);\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n     *   Check if a column data can be sent to the server\r\n     */\r\n    canColumnBeSent: function (id, columnXpath) {\r\n        var self = this, i, j, xpath;\r\n        for (i in self.columns) {\r\n            if (self.columns.hasOwnProperty(i)) {\r\n                var column = self.columns[i];\r\n                if (column.properties.type !== \"columnUserfield\") {\r\n                    if (column.properties.xpath == columnXpath) {\r\n                        var cellOverride = self.getCellOverride(id, column.columnIndex - 1);\r\n                        return column.canBeSent(id, cellOverride);\r\n                    }\r\n                } else {\r\n                    for (j in column.properties) {\r\n                        if (column.properties.hasOwnProperty(j)) {\r\n                            if (Object.prototype.toString.apply(column.properties[j]) === \"[object String]\") {\r\n                                xpath = column.properties[j].substr(column.properties[j].lastIndexOf(\".\") + 1);\r\n                                if (xpath === columnXpath) {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n    /* \r\n     *  Method to determine if the render value can be sent to the server or not\r\n     */\r\n    canBeSent: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var displayOnly = bizagi.util.parseBoolean(properties.displayOnly) || false;\r\n\r\n        // The render can be sent if it is \"display only\" and inline Edit is available\r\n        if (!displayOnly && (properties.inlineEdit || properties.inlineAdd || !$.isEmptyObject(self.changes))) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    /*\r\n     *   Return the value for a requested cell\r\n     */\r\n    getCellValue: function (key, xpath) {\r\n        var self = this;\r\n        var data = self.properties.data.rows;\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (data[i][0] == key) {\r\n                for (var j = 0; j < self.columns.length; j++) {\r\n                    if (self.columns[j].properties.xpath == xpath) {\r\n                        var result = data[i][j + 1];\r\n                        return result;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n     *\r\n     */\r\n    getCellCurrentValue: function (key, xpath) {\r\n        var self = this;\r\n\r\n        var control = self.getControlCell(key, xpath);\r\n        if (control && typeof control.getValue === \"function\") {\r\n            return control.getValue();\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n     *   Gets control\r\n     */\r\n    getControlCell: function (key, xpath) {\r\n        var self = this;\r\n        var control = null;\r\n        if (typeof (self.columns) != \"undefined\")\r\n            for (var j = 0; j < self.columns.length; j++) {\r\n                if (self.columns[j].properties.xpath == xpath || self.columns[j].properties.id == xpath) {\r\n                    control = self.columns[j].getDecorated(key);\r\n                    break;\r\n                }\r\n            }\r\n\r\n\r\n        return control;\r\n    },\r\n\r\n    changeRequired: function (argument) {\r\n        this.properties.required = argument;\r\n        this.changeRequiredLabel(argument);\r\n    },\r\n\r\n    changeRequiredLabel: function (argument) {\r\n        var control = this.getControl();\r\n\r\n        if (control.length > 0) {\r\n            if (this.getMode() !== \"execution\") {\r\n                if (bizagi.util.parseBoolean(argument) == true && this.properties.editable) {\r\n                    control.addClass(\"grid-control-required\");\r\n                } else {\r\n                    control.removeClass(\"grid-control-required\");\r\n                }\r\n            } else {\r\n                if (bizagi.util.parseBoolean(argument) == true && !this.hasValue() && this.properties.editable) {\r\n                    control.addClass(\"grid-control-required\");\r\n                } else {\r\n                    control.removeClass(\"grid-control-required\");\r\n                }\r\n            }\r\n        }\r\n\r\n        this.triggerRenderValidate();\r\n    },\r\n\r\n    /*\r\n     *   Fetch the data again and updates the content\r\n     */\r\n    refresh: function () {\r\n    },\r\n    /*\r\n     *   Sets an error on the cell\r\n     */\r\n    setError: function (key, columnXpath) {\r\n    },\r\n    /*\r\n     *   Changes the background for a cell\r\n     */\r\n    changeCellBackgroundColor: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *   Changes the background for a cell\r\n     */\r\n    changeCellColor: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *   Changes the visibility for a cell\r\n     */\r\n    changeCellVisibility: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *   Changes the editability for a cell\r\n     */\r\n    changeCellEditability: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *  Changes the required for cell\r\n     */\r\n    changeCellRequired: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *  Refresh behaviors of cell\r\n     */\r\n    changeCellProperties: function (key, xpath, argument) {\r\n\r\n    },\r\n    /*\r\n     *  Changes the max value for a cell\r\n     */\r\n    changeCellMaxValue: function (key, xpath, argument) {\r\n\r\n    },\r\n    /*\r\n     *  Changes the min value for a cell\r\n     */\r\n    changeCellMinValue: function (key, xpath, argument) {\r\n\r\n    },\r\n    /*\r\n     *  Clean data of cell\r\n     */\r\n    cleanCellData: function (key, xpath) {\r\n    },\r\n\r\n    changeEditability: function (argument) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        self.saveGrid().done(function () {\r\n\r\n            // Renders again\r\n            var properties = {properties: $.extend({editable: bizagi.util.parseBoolean(argument)}, self.originalData)};\r\n\r\n            // Clears control\r\n            control.empty();\r\n\r\n            bizagi.rendering.render.prototype.initializeData.apply(self, [properties]);\r\n\r\n            self.initProperties();\r\n            self.changeColumnsEditability(argument);\r\n\r\n            if (typeof self.internalRenderControl == \"function\") {\r\n                $.when(self.internalRenderControl()).done(function (html) {\r\n                    control.append(html);\r\n                    self.postRenderElement(self.element);\r\n                });\r\n\r\n            }\r\n\r\n        });\r\n\r\n    },\r\n\r\n    saveGrid: function () {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n\r\n        var rows = $(\"[data-bizagi-component=rows]\", self.element).find(\"[data-new-row=true]\");\r\n        if (rows.length > 0) {\r\n            rows = $.map(rows, function (row, i) {\r\n                return $(row).data(\"business-key\");\r\n            });\r\n            self.saveInlineAddedRows(rows).done(function () {\r\n                defer.resolve();\r\n            });\r\n        } else {\r\n            defer.resolve();\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    changeColumnsEditability: function (value) {\r\n        var self = this;\r\n        var columns = self.columns || [];\r\n\r\n        $.each(columns, function (i, column) {\r\n            column.properties.editable = value;\r\n        });\r\n    },\r\n\r\n    /**\r\n     *   Refresh behaviors of cell\r\n     */\r\n    refreshCell: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var key = params.key;\r\n        var column = params.column;\r\n        var xpathContext = (params.xpathContext !== \"\") ? params.xpathContext + \".\" + self.properties.xpath + self.buildCellXpathFilter(key) : self.properties.xpath + self.buildCellXpathFilter(key);\r\n        var cell = self.getControlCell(key, params.column);\r\n        var form = self.getFormContainer();\r\n        var idForm = form.properties.id;\r\n\r\n        if (!cell) {\r\n            return;\r\n        }\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        cell.beforeToRefresh();\r\n\r\n        // Call service\r\n        return $.when(self.dataService.multiaction().refreshGridCell({\r\n            idRender: properties.id,\r\n            column: cell.properties.id,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: xpathContext,\r\n            idForm: idForm,\r\n            typeRender: cell.properties.type\r\n        })).done(function (data) {\r\n            // Extract values\r\n            var getDepthData = function (target) {\r\n                if (target && typeof target == \"object\" && target.length >= 1) {\r\n                    return (target[0].length >= 1) ? target[0][0] : target[0];\r\n                }\r\n                return \"\";\r\n            };\r\n            var newValue = getDepthData(data.rows);\r\n            var editable = getDepthData(data.editable);\r\n            if (!bizagi.util.isBoolean(editable)) {\r\n                editable = editable || true;\r\n            }\r\n            var visible = getDepthData(data.visible);\r\n            if (!bizagi.util.isBoolean(visible)) {\r\n                visible = visible || true;\r\n            }\r\n            \r\n            // Change Visibility & Editability\r\n            self.changeCellVisibility(key, column, visible);\r\n            self.changeCellEditability(key, column, editable);\r\n\r\n            // Change control value\r\n            cell.setValue(newValue);\r\n            cell.setDisplayValue(newValue);\r\n\r\n            // Trigger grid change\r\n            self.triggerRenderChange({key: key, column: column, changed: false});\r\n\r\n            // Update the affected cell manually after a refresh\r\n            //TODO:temporary solution\r\n            //review the DRAGON-5982 \r\n            if (cell.column != undefined && bizagi.util.detectDevice() == \"desktop\") {\r\n                self.updateAffectedCellManually(key, newValue, cell.column.columnIndex);\r\n            }\r\n\r\n\r\n            // Execute personalized stuff after to refresh it\r\n            cell.afterToRefresh();\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Triggers the render change event\r\n     */\r\n    triggerRenderChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        // Property to verify exporting updated grids\r\n        if (!bizagi.util.isEmpty(params) && params.changed != false)\r\n            self.properties.canBeExported = false;\r\n        self.triggerHandler(\"renderchange\", {\r\n            render: self,\r\n            surrogateKey: params.key,\r\n            column: params.column,\r\n            changed: params.changed,\r\n            rowDeleted: params.rowDeleted,\r\n            pressed: params.pressed\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Validate the grid\r\n     */\r\n    validate: function () {\r\n        this.isValid([]);\r\n    },\r\n    /* \r\n     * Public method to determine if a value is valid or not\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var bValid = true;\r\n\r\n        // Clear error message\r\n        self.hasErrors = false;\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check for required columns and null values\r\n        if (self.properties.data && self.properties.data.rows) {\r\n            var newRows = self.getDataNewRows();\r\n            // Preserve elements in data.rows\r\n            // Check required\r\n            if (newRows.length == 0 && bizagi.util.parseBoolean(self.properties.required)) {\r\n                if (!self.hasValue()) {\r\n                    message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", self.properties.displayName);\r\n                    invalidElements.push({\r\n                        xpath: self.properties.xpath,\r\n                        message: message\r\n                    });\r\n                    bValid = false;\r\n                }\r\n            }\r\n\r\n            var data = $.merge($.merge([], self.properties.data.rows), newRows);\r\n\r\n            for (var i = 0; i < self.columns.length; i++) {\r\n                var messages = [];\r\n                var uniqueMessages = {};\r\n\r\n                for (var j = 0; j < data.length; j++) {\r\n                    var value = data[j][i + 1];\r\n                    var key = data[j][0];\r\n                    var xpath = self.columns[i].properties.xpath;\r\n                    if (self.changes[key] !== undefined && self.changes[key][self.columns[i].properties.xpath] !== undefined) {\r\n                        value = self.changes[key][self.columns[i].properties.xpath];\r\n                    }\r\n\r\n                    // Check if the column is valid\r\n                    var valueValid = self.columns[i].isValueValid(key, value, messages, self.getCellOverride(key, i));\r\n                    if (!valueValid) {\r\n                        bValid = false;\r\n\r\n                        self.hasErrors = true;\r\n                        self.setError(key, self.columns[i].properties.xpath);\r\n                    }\r\n                }\r\n                for (var k = 0, messagesLength = messages.length; k < messagesLength; k++) {\r\n                    if (uniqueMessages[messages[k]] == null) {\r\n                        uniqueMessages[messages[k]] = messages[k];\r\n                    }\r\n                }\r\n\r\n                if (messages.length > 0) {\r\n                    var gridValidationMessage = self.getResource(\"render-grid-validation\").replaceAll(\"#grid#\", self.properties.displayName);\r\n                    for (key in uniqueMessages) {\r\n                        invalidElements.push({\r\n                            xpath: self.properties.xpath,\r\n                            message: gridValidationMessage + \" \" + key\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n    /*\r\n     *   Enables submit on change feature for the current render\r\n     */\r\n    configureSubmitOnChange: function () {\r\n        // Don't do anything we will trigger submit on change manually only when the grid add or edit form has been edited   \r\n    },\r\n    /*\r\n     *   Get cell override\r\n     */\r\n    getCellOverride: function (key, column) {\r\n        var self = this;\r\n\r\n        // Convert to numbers\r\n        key = Number(key);\r\n        column = Number(column);\r\n\r\n        // Find overrides\r\n        var columnProperties = self.columns[column].properties;\r\n        if (!self.cellOverrides[key])\r\n            self.cellOverrides[key] = {};\r\n        if (!self.cellOverrides[key][column]) {\r\n            self.cellOverrides[key][column] = {\r\n                visible: columnProperties.visible,\r\n                editable: columnProperties.editable,\r\n                required: columnProperties.required\r\n            };\r\n        }\r\n\r\n        return self.cellOverrides[key][column];\r\n    },\r\n\r\n    /*\r\n     * Set cell overrides based on the data\r\n     */\r\n    setCellOverrides: function (data, columns) {\r\n        var self = this;\r\n        var key;\r\n\r\n        // Init visibility overrides\r\n        if (data.visible) {\r\n            for (var i = 0, len = data.visible.length; i < len; i++) {\r\n                key = data.visible[i][0];\r\n                for (var j = 0, len_v = data.visible[i].length; j < len_v; j++) {\r\n                    // Skip key columns\r\n                    if (j > 0)\r\n                        self.getCellOverride(key, j - 1).visible = bizagi.util.parseBoolean(data.visible[i][j]);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Init editability overrides\r\n        if (data.editable) {\r\n            for (var i = 0, len = data.editable.length; i < len; i++) {\r\n                key = data.editable[i][0];\r\n                for (var j = 0, len_v = data.editable[i].length; j < len_v; j++) {\r\n                    // Skip key columns\r\n                    if (j > 0) {\r\n                        var columnEditable = columns ? bizagi.util.parseBoolean(columns[j - 1].properties.editable) : true;\r\n                        self.getCellOverride(key, j - 1).editable = columnEditable ? bizagi.util.parseBoolean(data.editable[i][j]) : false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Init required overrides\r\n        if (data.required) {\r\n            for (var i = 0, len = data.required.length; i < len; i++) {\r\n                key = data.required[i][0];\r\n                for (var j = 0, len_v = data.required[i].length; j < len_v; j++) {\r\n                    // Skip key columns\r\n                    if (j > 0)\r\n                        self.getCellOverride(key, j - 1).required = bizagi.util.parseBoolean(data.required[i][j]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /*\r\n     *   Returns the row indexes for the data\r\n     */\r\n    getIndexes: function () {\r\n        var self = this;\r\n        var data = $.merge(self.properties.data.rows, self.getDataNewRows());\r\n        return $.map(data, function (item, i) {\r\n            return item[0];\r\n        });\r\n    },\r\n    /**\r\n     *  Return object with value of all new records unsaved within the grid\r\n     *  @return {object} all new records\r\n     */\r\n    getDataNewRows: function () {\r\n        var self = this;\r\n        var newRows = [];\r\n\r\n        if (typeof self.newRecords == \"object\" && !$.isEmptyObject(self.newRecords)) {\r\n            $.each(self.newRecords, function (rowKey) {\r\n                var cellValue = [];\r\n                cellValue.push(Number(rowKey));\r\n                for (var i = 0, length = self.columns.length; i < length; i++) {\r\n                    cellValue.push(self.getCellCurrentValue(rowKey, self.columns[i].properties.xpath));\r\n                }\r\n                // Add cell value row to new rows\r\n                newRows.push(cellValue);\r\n            });\r\n        }\r\n        return newRows;\r\n    },\r\n\r\n    /*\r\n     * Return the object with the required url to access the exported grid to the desired format\r\n     *  @return {object} render attributes, including id, xpathContext, idPagecache, disposition (inline or attachment), and exportType (XLS or PDF)\r\n     */\r\n    getGridExportUrl: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.getGridExportUrl({\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext || \"\",\r\n            idPageCache: properties.idPageCache,\r\n            disposition: params.disposition,\r\n            exportType: params.exportType,\r\n            sort: properties.sort,\r\n            sessionId: self.getSessionId(),\r\n            idForm: self.getFormContainer().properties.id\r\n\r\n        });\r\n    },\r\n\r\n    submitForGridChange: function () {\r\n        var self = this;\r\n        return self.submitOnChange(null, false);\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self.columns) {\r\n                $.each(self.columns, function (i, column) {\r\n                    column.dispose();\r\n                });\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    },\r\n\r\n    getEnabledChecks: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        params = params || {};\r\n        $.extend(params, {\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType,\r\n            idPageCache: properties.idPageCache,\r\n            rows: properties.rowsPerPage,\r\n            xpathfilter: params.xpath\r\n        });\r\n        // Default ajax call\r\n        var defer = new $.Deferred();\r\n        // Resolve with remote data\r\n        self.dataService.multiaction().getGridDataExclusivesSelected(params).done(function (data) {\r\n            // Resolve with fetched data\r\n            properties.page = data.page;\r\n            properties.records = data.records;\r\n            properties.totalPages = data.totalPages;\r\n\r\n            // Check RTL\r\n            if (self.isRTL()) {\r\n                data.rows = self.changeOrderData(data.rows);\r\n            }\r\n            defer.resolve(data);\r\n        });\r\n        return defer.promise();\r\n    },\r\n\r\n    buildCellXpathFilter: function (key) {\r\n        if (bizagi.util.isNumeric(key)) return \"[id=\" + key + \"]\";\r\n        return \"[id='\" + key + \"']\";\r\n    },\r\n\r\n    cleanNewRecords: function () {\r\n        // Mark it as saved\r\n        this.newRecords = {};\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Customizes render background color\r\n     *\r\n     * This method is called when the backgroud color is setted by Form Designer\r\n     *\r\n     * @param color\r\n     */\r\n    changeBackgroundColor: function (color) {\r\n        this._super(color);\r\n\r\n        var control = this.getControl();\r\n        control.find(\".bz-rn-grid-header-title\").css(\"background-color\", color, \"!important\");\r\n        control.find(\".bz-rn-grid-container-foother\").css(\"background-color\", color, \"!important\");\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Check has header format\r\n     * @returns {boolean}\r\n     */\r\n    hasColorHeader: function () {\r\n        var headerFormat = this.properties.headerFormat || {};\r\n\r\n        return headerFormat ? !bizagi.util.isEmpty(headerFormat.color) : false;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Hidden Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for hiddens\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.hidden\", {}, {\r\n\r\n    /**\r\n     * Returns the in-memory processed element\r\n     */\r\n    renderControl: function () {\r\n        if (this.getMode() === \"design\") {\r\n            return \"<div>\" + bizagi.localization.getResource(\"render-hidden-displayName\") + \"</div>\";\r\n        } else {\r\n            return \"<div />\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var properties = this.properties;\r\n\r\n        // Call base\r\n        this._super();\r\n\r\n        // Set the initial value\r\n        if (properties.value !== undefined) {\r\n            this.setDisplayValue(properties.value);\r\n        }\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Label Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for labels\r\n */\r\n$.Class.extend(\"bizagi.rendering.label\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // A label itself is never \"required\" as other controls\r\n        var properties = self.properties;\r\n        properties.required = false;\r\n\r\n        // Set properties\r\n        self.properties.displayType = \"label\";\r\n        //self.properties.labelAlign = self.originalProperties.labelAlign || \"left\";\r\n        self.properties.displayName = data.properties.displayName || \"\";\r\n\r\n        if (bizagi.util.parseBoolean(self.properties.allowDinamiclabel)) {\r\n            this.properties.displayName = data.properties.displayName || bizagi.localization.getResource(\"render-label-default-display-name\");\r\n        }\r\n\r\n        self.bindingValue();\r\n\r\n        // Calculate layout properties\r\n        self.calculateInitialLayoutProperties();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this._super();\r\n        // Just apply display-type: label, align it to the left\r\n        this.changeDisplayOption(\"label\");\r\n        //this.changeLabelAlign(this.properties.labelAlign || \"left\");\r\n\r\n        if (typeof this.configureHelpText == \"function\")\r\n            this.configureHelpText();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this._super();\r\n        // Just apply display-type: label, align it to the left\r\n        this.changeDisplayOption(\"label\");\r\n        this.changeLabelAlign(this.properties.labelAlign || \"left\");\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param {} invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Automatically this render is valid, so we can't check a required label\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    bindingValue: function () {\r\n        var self = this;\r\n\r\n        if (self.properties.allowDinamiclabel && self.properties.value) {\r\n            if (typeof (self.properties.value) === \"object\" && self.properties.value[0]) {\r\n                self.properties.displayName = self.properties.value[0].value;\r\n            } else if (typeof (self.properties.value) === \"string\" && self.properties.value !== \"\") {\r\n                self.properties.displayName = self.properties.value;\r\n            }\r\n        }\r\n    },\r\n\r\n    controlValueIsChanged: function(){\r\n        //Labels never change\r\n        return false;\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: Bizagi Render Search Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for search renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.search\", {}, {\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        properties.searchForms = properties.searchForms || [];\r\n\r\n        // Default maxRecords is 20\r\n        properties.maxRecords = Number(properties.maxRecords) || 20;\r\n        properties.advancedSearch = (bizagi.util.parseBoolean(properties.advancedSearch) === null) ? false : bizagi.util.parseBoolean(properties.advancedSearch);\r\n        properties.allowSuggest = bizagi.util.parseBoolean(properties.allowSuggest) !== null ? bizagi.util.parseBoolean(properties.allowSuggest) : false;\r\n        properties.allowFullSearch = properties.allowFullSearch || false;\r\n        properties.allowAdd = bizagi.util.parseBoolean(properties.allowAdd) || false;\r\n        properties.allowTyping = bizagi.util.parseBoolean(properties.allowTyping) !== null ? bizagi.util.parseBoolean(properties.allowTyping) : false;\r\n        properties.allowTyping = bizagi.util.parseBoolean(properties.allowSuggest) ? true : properties.allowTyping;\r\n        properties.allowClear = bizagi.util.parseBoolean(properties.allowClear) !== null ? bizagi.util.parseBoolean(properties.allowClear) : false;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) !== null ? bizagi.util.parseBoolean(properties.editable) : true;\r\n\r\n        // This length defines the behavior of the suggest, 2 characters are used by default meaning after 2 characters are written the search will take place\r\n        properties.searchLength = properties.searchLength || 2;\r\n\r\n        // Expire local storage cache\r\n        properties.enableLocalStorage = false;\r\n        properties.expireCache = 1000 * 60 * 15; // 15 minutes\r\n\r\n        // QAF-3297 - Compatibility for old versions of advanced search where the \"submitOnChange\" property default is true\r\n        // New \"submitVersion\" property default is 2\r\n        if (properties.advancedSearch && self.getMode() === \"execution\") {\r\n            properties.submitOnChange = bizagi.util.parseBoolean(properties.submitOnChange) || false;\r\n            properties.submitOnChange = (properties.submitVersion || 1) > 1 ? properties.submitOnChange : true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"search\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            allowTyping: properties.allowTyping,\r\n            advancedSearch: properties.advancedSearch,\r\n            allowSuggest: properties.allowSuggest,\r\n            editable: properties.editable,\r\n            allowClear: properties.allowClear,\r\n            hasValue: self.hasValue(),\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Fetch the data into a deferred\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    getData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n        var form = self.getFormContainer();\r\n        var contextType = form.getContextType() || form.params.contexttype || false;\r\n\r\n        params = params || {};\r\n\r\n        // Verify context type\r\n        if (self.properties.contexttype) {\r\n            params.h_contexttype = self.properties.contexttype;\r\n        } else if (contextType) {\r\n            params.h_contexttype = contextType;\r\n        }\r\n\r\n        params.h_contexttype = self.properties.enableQuerySuggestBehavior ? \"metadata\" : params.h_contexttype;\r\n\r\n        // QA-471 When the contexttype is metadata it does not send xpathcontext\r\n        if (params && params.h_contexttype && params.h_contexttype === 'metadata') {\r\n            properties.xpathContext = '';\r\n        }\r\n\r\n        // BA35025 - JFA\r\n        if (properties.term.indexOf(\"\\'\") > -1) {\r\n            var regexC = new RegExp(\"\\'\", \"g\");\r\n            properties.term = properties.term.replace(regexC, \"\\\\'\\\\'\");\r\n        }\r\n\r\n        // QAF-6448 - JFA\r\n        if (properties.term.indexOf(\"\\\"\") > -1) {\r\n            var regexC = new RegExp(\"\\\"\", \"g\");\r\n            properties.term = properties.term.replace(regexC, \"\\\"\");\r\n        }\r\n\r\n        // Resolve with remote data\r\n        self.dataService.multiaction().getSearchData({\r\n            url: properties.dataUrl,\r\n            contexttype: params.h_contexttype,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            term: (properties.allowFullSearch) ? \"%\" + properties.term : properties.term,\r\n            extra: params\r\n        }).done(function (data) {\r\n            // Resolve with fetched data\r\n            properties.data = data;\r\n            defer.resolve(properties.data);\r\n        }).fail(function (data) {\r\n            var hideStatus = data.hideStatus || false;\r\n\r\n            defer.resolve({});\r\n\r\n            if (!hideStatus) {\r\n                self.trigger(\"onSearchError\", data);\r\n            }\r\n        });\r\n\r\n        return defer.promise(defer);\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param {} value\r\n     * @param {} triggerEvents\r\n     * @returns {}\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n        triggerEvents = triggerEvents !== undefined ? triggerEvents : true;\r\n\r\n        self._super(value, triggerEvents);\r\n\r\n        if (value != undefined) {\r\n            this.value = value;\r\n            this.selectedValue = value.label;\r\n        } else {\r\n            this.value = null;\r\n            this.selectedValue = null;\r\n        }\r\n    },\r\n\r\n    /* Maps the value, when this one comes from actions*/\r\n    mapValue: function (value) {\r\n        if (value && value.fromAction) {\r\n            return {\r\n                id: value.value,\r\n                value: value.label,\r\n                label: value.label\r\n            }\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var xpath = self.properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            // Remove empty validation for value for combos\r\n            if (!bizagi.util.isEmpty(xpath) && value !== null && typeof (value) !== \"undefined\") {\r\n                // Add a validation because sometimes value contains an empty not null object\r\n                if (typeof (value) == \"object\" && value.id === undefined)\r\n                    return;\r\n                // Add the value to the server\r\n                renderValues[xpath] = value;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Submits the selected data to the server in order to be saved\r\n     * @returns {}\r\n     */\r\n    submitData: function () {\r\n        var self = this;\r\n        var data = {};\r\n\r\n        // Add current data\r\n        if (!self.grid) {\r\n            data[self.properties.xpath] = self.getValue();\r\n        }\r\n\r\n        // Executes submit on change\r\n        self.submitOnChange(data, undefined, false);\r\n    },\r\n\r\n    /**\r\n     * Check if control is valid or not\r\n     * @param {} invalidElements\r\n     * @returns {}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        return this._super(invalidElements);\r\n    },\r\n\r\n    hasValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (typeof (value) == \"undefined\" || value == null) return false;\r\n\r\n        if (typeof value === \"object\" && value.id !== \"\" && typeof (value.id) !== \"undefined\") return true;\r\n        return !bizagi.util.isEmpty(value);\r\n    },\r\n\r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n        return bizagi.util.formatItem(value);\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Text Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for text renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.text\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        if (properties.regularExpressionExpression) {\r\n            var message = properties.regularExpressionMessage || this.getResource(\"render-text-regular-expression-default-message\");\r\n            properties.regularExpression = {\"expression\": properties.regularExpressionExpression, \"message\": message};\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*}\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"text\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            value: this.properties.value,\r\n            isEmptyField: typeof (this.properties.value) === \"undefined\",\r\n            helpText: this.properties.helpText,\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"text-read-only\");\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.isString(value)) {\r\n            value = value.replaceAll(\"`\", \"&#96;\");\r\n        }\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {value: value, editable: this.properties.editable});\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n\r\n        this.input = this.getControl().find(\"input\");\r\n\r\n        //Attach event for retype double\r\n        if (this.properties.retype === \"double\")\r\n            this.attachRetypeDouble();\r\n    },\r\n\r\n    /**\r\n     * function virtual implements on children (desktop,samrtphone...).\r\n     */\r\n    attachRetypeDouble: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Check mask property\r\n        if (properties.mask)\r\n            self.input.mask({mask: properties.mask});\r\n\r\n        // Attach change event\r\n        self.input.bind(\"change\", function () {\r\n\r\n            // Updates internal value\r\n            self.setValue(self.input.val(), false);\r\n\r\n            // Check that the value is valid\r\n            var validationMessages = [];\r\n            if (properties.retype !== \"duplicate\") {\r\n                if (self.isValid(validationMessages) || typeof (properties.regularExpression) === \"undefined\") {\r\n                    // Update value again triggering handlers\r\n                    self.setValue(self.input.val(), true);\r\n                }\r\n            }\r\n\r\n        }).keypress(function (e) {\r\n            e = window.event || e;\r\n            var keyUnicode = e.charCode || e.keyCode;\r\n\r\n            if (e !== undefined) {\r\n                if (keyUnicode == 13) {\r\n                    $(this).trigger(\"change\");\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @returns {*}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n\r\n        // When the form have big data, block browser executing RegExp. QAF-1418.\r\n        // Check regular expression\r\n        if (typeof value == \"string\") {\r\n            if (properties.regularExpression) {\r\n                var regex = new RegExp(\"\");\r\n                try {\r\n                    regex = new RegExp(properties.regularExpression.expression);\r\n                } catch (e) {\r\n                    if (bizagi.override.showDesignValidations) {\r\n                        bizagi.log(e);\r\n                        invalidElements.push({xpath: properties.xpath, message: e.message});\r\n                        bValid = false;\r\n                    }\r\n                }\r\n\r\n                if (value && ((value.match(new RegExp(\".*?(<|\\\\u003C)(.+?)(>|\\\\u003E)(.?)|eval\\\\(|eval\\\\u0028\", \"g\"))) || (!value.match(regex) && self.properties && self.properties.xpath === \"userName\"))) {\r\n                    var message = properties.regularExpression.message;\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                } else {\r\n                    if (value && ((value.match(new RegExp(\".*?(<|\\\\u003C)(.+?)(>|\\\\u003E)(.?)|eval\\\\(|eval\\\\u0028\", \"g\"))) || (!value.match(regex)))) {\r\n                        var message = properties.regularExpression.message;\r\n                        invalidElements.push({xpath: properties.xpath, message: message});\r\n                        bValid = false;\r\n                    }\r\n                }\r\n            } else {\r\n                // Strange behavior on IE. When matchs are united on IE have is very slow\r\n                // solution, divide matchs\r\n                //.*? means for more information search: \"Lazy matching regexp\"\r\n                if (value && (value.match(new RegExp(\".*?eval\\\\(\", \"g\"))) && (value.match(new RegExp(\".*?eval\\\\u0028\", \"g\")))) {\r\n                    if (properties.editable) {\r\n                        var message = this.getResource(\"render-text-regular-expression-default-message\");\r\n\r\n                        invalidElements.push({xpath: properties.xpath, message: message});\r\n                        bValid = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n\r\n        if (!bizagi.util.parseBoolean(self.properties.editable)) {\r\n            // Render as simple value\r\n            if (typeof (value) === \"string\") {\r\n                // Replace line breaks for html line breaks\r\n                var valueToDisplay = bizagi.util.decodedDisplayValue(self.getDisplayValue());\r\n\r\n                control.html(\"<label class='readonly-control'>\" + valueToDisplay + \"</label>\");\r\n            } else {\r\n                if (bizagi.util.isNull(value)) {\r\n                    control.html(\"\");\r\n                }\r\n            }\r\n        }\r\n\r\n        // Set internal value\r\n        self.setValue(decodedValue, false);\r\n    },\r\n\r\n    /**\r\n     * Extend setValue to fix all encode data from database\r\n     * @param value\r\n     */\r\n    setValue: function (value) {\r\n        this._super(value);\r\n    },\r\n\r\n    /**\r\n     * Helptext tooltip\r\n     * @param {} control\r\n     * @param {} currentValue\r\n     * @param {} currentTitle\r\n     */\r\n    createTooltip: function (control, currentValue, currentTitle) {\r\n        control.data(\"oldValue\", currentValue);\r\n        control.val(\"\");\r\n\r\n        try {\r\n            // Destroy tooltips\r\n            control.tooltip(\"destroy\");\r\n        } catch (e) {\r\n        }\r\n\r\n        control.attr(\"title\", currentTitle);\r\n        control.tooltip();\r\n\r\n        var toolTipZindex = $.getMaxZindex();\r\n        control.tooltip().on(\"tooltipopen\", function (event, ui) {\r\n            ui.tooltip.zIndex(toolTipZindex);\r\n        });\r\n\r\n        // Create new tooltip\r\n        control.tooltip(\"open\");\r\n\r\n        setTimeout(function () {\r\n            control.focus();\r\n        }, 100);\r\n    },\r\n\r\n\r\n    //#region No side effects funtions    \r\n    /**\r\n     * Gets the string with the correct size\r\n     * @param {string} value String value to validate\r\n     * @param {Int} maxLength Maximum size of the string\r\n     * @returns {string} String value validated\r\n     */\r\n    validateValue: function (value, maxLength) {\r\n        if(maxLength<1 || value.length<=maxLength)return value;\r\n        return value.substr(0, maxLength)\r\n    }\r\n    //#endregion No side effects funtions\r\n\r\n});","/*\r\n *   Name: BizAgi Render Radio Class\r\n *   Author: Ivan Ricardo Taimal Narvaez\r\n *   Comments:\r\n *   -   This script will define basic stuff for radio renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.checkList\", {}, {\r\n\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.horizontal = bizagi.util.parseBoolean(properties.horizontal) || false;\r\n        self.setValue(properties.items);\r\n        self.updateOriginalValue();\r\n    },\r\n\r\n    /*\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Call base\r\n        self._super();\r\n        self.checkListGroup = $(\".ui-bizagi-render-checkList .ui-bizagi-render-checkList-item\", control);\r\n    },\r\n\r\n    /*\r\n     *   Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(self.getTemplateName());\r\n        var items = self.properties.items || [];\r\n\r\n        var html = $.fasttmpl(template, $.extend(self.getTemplateParams(), {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            unique: bizagi.util.randomNumber(10000, 1000000),\r\n            idPageCache: properties.idPageCache,\r\n            items: items\r\n        }));\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     *   Gets the template used by the combo render\r\n     *   can be overriden in subclasses to reuse logic and just change the template\r\n     */\r\n    getTemplateName: function () {\r\n        return \"checkList\";\r\n    },\r\n\r\n    /*\r\n     *   Determines if we need to show the empty node or not\r\n     *   Can be overriden to change behaviour\r\n     */\r\n    showEmpty: function () {\r\n        return false;\r\n    },\r\n\r\n    /*\r\n     *   Determines if we need to show the current data regardless if it belongs to data or not\r\n     *   Can be overriden to change behaviour\r\n     */\r\n    showCurrentData: function () {\r\n        return false;\r\n    },\r\n\r\n    /*\r\n     *   Adds custom parameters to process the template\r\n     */\r\n    getTemplateParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return {\r\n            vertical: !properties.horizontal\r\n        };\r\n    },\r\n    /*\r\n     * Cleans current data\r\n     */\r\n    cleanData: function () {\r\n\r\n    },\r\n\r\n    setValue: function (value) {;\r\n        this.value = bizagi.clone(value);\r\n    },\r\n\r\n    getValue: function (data) {;\r\n        return this.value || [];\r\n    }\r\n\r\n});\r\n\r\n","/**\r\n * Base definition of a range control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.range\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function(params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n     * Initialize the control with data provided\r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n    },\r\n\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function() {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var template;\r\n        var html = \"\";\r\n        // Render template\r\n        template = self.renderFactory.getTemplate(\"render-range\");\r\n        html = $.fasttmpl(template, {});\r\n        return html;\r\n    },\r\n    /**\r\n     * Sets the range controls in DOM\r\n     * @param minControl: min range control\r\n     * @param maxControl: max range control\r\n     */\r\n    setRanageControls: function (minControl, maxControl){\r\n        var self = this;\r\n        self.minControl = minControl || null;\r\n        self.maxControl = maxControl || null;\r\n        var control = self.getControl();\r\n\r\n        var $maxCanvas = $(\".bz-range-maximum\", control);\r\n        var $minCanvas = $(\".bz-range-minimum\", control);\r\n\r\n        //var $maxCanvas = $('<div>hola</div>');\r\n        //var $minCanvas = $('<div>hola</div>');\r\n\r\n        self.renderRangeControl($minCanvas, minControl);\r\n        self.renderRangeControl($maxCanvas, maxControl);\r\n    },\r\n\r\n    /*\r\n     *   Returns the internal value\r\n     */\r\n    getValue: function () {\r\n        var self = this;\r\n        var minValue = self.minControl.getValue();\r\n        var maxValue = self.maxControl.getValue();\r\n\r\n        var value = {\r\n            min: minValue,\r\n            max: maxValue\r\n        };\r\n        return value;\r\n    },\r\n\r\n    renderRangeControl: function ($canvas, control){\r\n        $.when(control.render(\"render\")).done(function (html) {\r\n            $canvas.empty().append(html);\r\n            control.postRenderElement($canvas);\r\n        });\r\n    }\r\n});\r\n","/**\r\n * Base definition of a range date control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.rangeDate\", {}, {\r\n\r\n    /**\r\n     * Defines de min date an de max date to the range control\r\n     */\r\n    defineRangeControl: function (params) {\r\n        var self = this;\r\n\r\n        var dateMin = bizagi.rendering.date.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1 ; i >= 0; i--) {\r\n                    this.observer[i].changeMinValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var dateMax = bizagi.rendering.date.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1; i >= 0; i--) {\r\n                    this.observer[i].changeMaxValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n\r\n        var minControl = new dateMin(self.getRenderProperties(\"min\"));\r\n        var maxControl = new dateMax(self.getRenderProperties(\"max\"));\r\n\r\n        minControl.suscribe(maxControl);\r\n        maxControl.suscribe(minControl);\r\n\r\n\r\n        self.setRanageControls(minControl, maxControl);\r\n    },\r\n\r\n    getRenderProperties: function (typeRangeControl) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        var renderProperties = {\r\n            data: {\r\n                properties: {\r\n                    \"id\": properties.id,\r\n                    \"xpath\": properties.xpath + \"_\" + typeRangeControl,\r\n                    \"displayType\": \"value\"\r\n                }\r\n            },\r\n            mode: \"execute\",\r\n            parent: form,\r\n            renderFactory: self.renderFactory,\r\n            resources: bizagi.localization,\r\n            dataService: self.dataService\r\n        };\r\n\r\n        if (typeRangeControl === \"min\") {\r\n            renderProperties.data.properties.displayName = \"From\";\r\n        } else {\r\n            renderProperties.data.properties.displayName = \"To\";\r\n        }\r\n\r\n        return renderProperties;\r\n    }\r\n});\r\n","/**\r\n * Base definition of a range money control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.rangeMoney\", {}, {\r\n    \r\n    /**\r\n     * Defines de min money an de max money to the range control\r\n     */\r\n    defineRangeControl: function () {\r\n        var self = this;\r\n\r\n        var moneyMin = bizagi.rendering.money.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1 ; i >= 0; i--) {\r\n                    this.observer[i].changeMinValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var moneyMax = bizagi.rendering.money.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1; i >= 0; i--) {\r\n                    this.observer[i].changeMaxValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var minControl = new moneyMin(self.getRenderProperties(\"min\"));\r\n        var maxControl = new moneyMax(self.getRenderProperties(\"max\"));\r\n\r\n        minControl.suscribe(maxControl);\r\n        maxControl.suscribe(minControl);\r\n\r\n        self.setRanageControls(minControl, maxControl);\r\n    },\r\n\r\n\r\n    getRenderProperties: function (typeRangeControl){\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        var renderProperties = {\r\n            data: {\r\n                properties: {\r\n                    \"id\": properties.id,\r\n                    \"xpath\": properties.xpath + \"_\" + typeRangeControl,\r\n                    \"displayType\": \"value\"\r\n                }\r\n            },\r\n            mode: \"execute\",\r\n            parent: form,\r\n            renderFactory: self.renderFactory,\r\n            resources: bizagi.localization,\r\n            dataService: self.dataService\r\n        };\r\n        return renderProperties;\r\n    }\r\n});\r\n","/**\r\n * Base definition of a range number control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n $.Class.extend(\"bizagi.rendering.rangeNumber\", {}, {\r\n\r\n    /**\r\n    * Defines de min number an de max number to the range control\r\n    */\r\n    defineRangeControl: function () {\r\n        var self = this;\r\n\r\n        var numberMin = bizagi.rendering.number.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1 ; i >= 0; i--) {\r\n                    this.observer[i].changeMinValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var numberMax = bizagi.rendering.number.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1; i >= 0; i--) {\r\n                    this.observer[i].changeMaxValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var minControl = new numberMin(self.getRenderProperties(\"min\"));\r\n        var maxControl = new numberMax(self.getRenderProperties(\"max\"));\r\n\r\n        minControl.suscribe(maxControl);\r\n        maxControl.suscribe(minControl);\r\n\r\n        self.setRanageControls(minControl, maxControl);\r\n    },\r\n\r\n\r\n    getRenderProperties: function (typeRangeControl){\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        var renderProperties = {\r\n            data: {\r\n                properties: {\r\n                    \"id\": properties.id,\r\n                    \"xpath\": properties.xpath + \"_\" + typeRangeControl,\r\n                    \"displayType\": \"value\"\r\n                }\r\n            },\r\n            mode: \"execute\",\r\n            parent: form,\r\n            renderFactory: self.renderFactory,\r\n            resources: bizagi.localization,\r\n            dataService: self.dataService\r\n        };\r\n\r\n        return renderProperties;\r\n    }\r\n});\r\n","/**\r\n * Base definition of Action Launcher and Entity template controls\r\n *\r\n * @author: Edward Morales\r\n */\r\n$.Class.extend(\"bizagi.rendering.actionLauncher\", {}, {\r\n\r\n    /*\r\n     * Initialize the control with data provided\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n        var form = self.getFormContainer();\r\n        this.typeForm = form.properties.typeForm || \"\";\r\n        var mode = self.getMode();\r\n        var properties = self.properties;\r\n\r\n        self.deferredActions = new $.Deferred();\r\n        self.deferredActions.promise();\r\n\r\n        if (mode == \"execution\") {\r\n            self.engine = new bizagi.templateEngine({\r\n                renderFactory: self.renderFactory,\r\n                cache: true,\r\n                autoGenerateData: false,\r\n                templateGuid: properties.selecttemplate\r\n            });\r\n        }\r\n\r\n        // Data of get process property value\r\n        self.processPropertyValueArgs = {\r\n            \"pcaseId\": self.getIdCase(),\r\n            \"pguidEntity\": self.properties.guidEntity,\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"property\": \"data\",\r\n            \"psurrogatedKey\": self.properties.surrogatedKey,\r\n            \"ptags\": self.properties.tagslist || [],\r\n            \"pmaxitems\": self.properties.maxItems,\r\n            \"pactionXpath\": self.properties.xpathActions\r\n        };\r\n\r\n        self.processPropertyValueDataTmplArgs = {\r\n            \"pactionXpath\": self.properties.xpathActions,\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"ptemplateGuid\": properties.selecttemplate,\r\n            \"property\": \"dataTemplate\",\r\n            \"xpathActions\": self.properties.xpathActions\r\n        };\r\n\r\n        self.properties.valueWidth = 100;\r\n        self.properties.displayType = \"value\";\r\n        var defaultAllowActions = data.properties.type === \"entityTemplate\" ? false : true;\r\n        self.properties.allowactions = (typeof data.properties.allowactions == \"undefined\")\r\n            ? defaultAllowActions : data.properties.allowactions;\r\n        self.properties.isHorizontal = (typeof data.properties.isHorizontal == \"undefined\")\r\n            ? true : data.properties.isHorizontal;\r\n        self.properties.allowSearch = (typeof data.properties.allowSearch == \"undefined\")\r\n            ? false : data.properties.allowSearch;\r\n        self.properties.selecttemplate = (typeof data.properties.selecttemplate == \"undefined\")\r\n            ? \"\" : data.properties.selecttemplate;\r\n        self.properties.templatetype = (typeof properties.templatetype != \"undefined\")\r\n            ? properties.templatetype : 'none';\r\n\r\n        self.properties.sessionId = form.params.data.sessionId;\r\n\r\n        if (!self.properties.value) {\r\n            self.properties.value = self.value = [];\r\n            self.properties.originalValue = [];\r\n        } else if (typeof self.properties.value == \"string\") {\r\n            self.properties.value = self.value = JSON.parse(self.properties.value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Send processpropertyvalue in order to execute an Action\r\n     * This method is used when this control stay in Summary form or Global form\r\n     * @param action\r\n     */\r\n    executeActionImmediately: function (action) {\r\n        var self = this;\r\n        //Execute action immediately\r\n        var form = self.getFormContainer();\r\n\r\n        var processPropertyValueExecuteAction = {\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"property\": \"executeAction\",\r\n            \"psurrogatedKey\": self.properties.surrogatedKey,\r\n            \"pguidAction\": action.guidAction,\r\n            \"pparameters\": JSON.encode({\r\n                \"idStartScope\": action.idStartScope,\r\n                \"pactionXpath\": self.properties.xpathActions,\r\n                \"idPageCache\": action.idPageCache\r\n            })\r\n        };\r\n\r\n        self.dataService.executeActions(processPropertyValueExecuteAction).done(function (data) {\r\n            self.notifyExecution(data, action);\r\n        }).fail(function (error) {\r\n            // TODO: Create generic mechanism to send notifications\r\n            self.notifyExecution(\"Error\", action);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * notify action execution status\r\n     * @param response\r\n     * @param actionName\r\n     */\r\n    notifyExecution: function (response, actionName) {\r\n        // To override in each device\r\n    },\r\n\r\n    /**\r\n     * Render control in read only mode: properties.editable = false\r\n     * @return {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Make a postrender of readonly control\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this.properties.readOnly = true;\r\n        this.postRender();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @return {string}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n        var template;\r\n        var html = \"\";\r\n\r\n        // Render template\r\n        if (mode == \"design\") {\r\n            template = self.renderFactory.getTemplate(\"render-actionLauncher-design\");\r\n            var params = {\r\n                type: properties.type,\r\n                isHorizontal: properties.isHorizontal,\r\n                allowSearch: properties.allowSearch,\r\n                templateDefined: properties.templatetype != 'none',\r\n                allowactions: properties.allowactions\r\n            };\r\n            html = $.fasttmpl(template, params);\r\n        } else if (properties.surrogatedKey) {\r\n            template = self.renderFactory.getTemplate(\"render-actionLauncher\");\r\n            html = $.fasttmpl(template, { allowactions: self.properties.allowactions });\r\n        }\r\n        return html;\r\n    },\r\n\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @return {*}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var value = self.getValue();\r\n        var bValid = false;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) == false) {\r\n            return true;\r\n        }\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) == false) {\r\n            return true;\r\n        }\r\n\r\n        // Check required\r\n        if (properties.required) {\r\n            if (self.value) {\r\n                if (self.value.length > 0)\r\n                    return true;\r\n                message = self.getResource(\"render-required-register-action\");\r\n                invalidElements.push({ xpath: properties.xpath, message: message });\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        // TODO: write functionality\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n    },\r\n\r\n    /**\r\n     * Process an action\r\n     * @param action\r\n     */\r\n    actionManager: function (action) {\r\n        var self = this;\r\n        var guidProcess = action.guidProcess || \"\";\r\n        var def = new $.Deferred();\r\n\r\n        action.recordXpath = self.getFormContainer().properties.recordXpath;\r\n\r\n        /**\r\n         * Check if action is a process\r\n         */\r\n        switch (action.actionType) {\r\n            case \"Process\":\r\n                // Verify if case has startform\r\n                var params = {\r\n                    guidWFClass: guidProcess\r\n                };\r\n\r\n                $.when(self.dataService.hasStartForm(params)).done(function (result) {\r\n                    if (result.hasStartForm) {\r\n                        // Open a dialog with startform and wait for Scope\r\n                        $.when(self.processStartForm({\r\n                            guidprocess: guidProcess,\r\n                            title: action.displayName,\r\n                            recordXpath: action.recordXpath\r\n                        })).done(function (idStartScope) {\r\n                            action.idStartScope = idStartScope;\r\n                            def.resolve(action);\r\n                        });\r\n                    } else {\r\n                        // Just add action to queue to be executed on nextEvent\r\n                        def.resolve(action);\r\n                    }\r\n                });\r\n\r\n                break;\r\n            case \"Rule\":\r\n                // Just add action to queue to be executed on nextEvent\r\n                def.resolve(action);\r\n                break;\r\n            case \"Form\":\r\n                // If it has additional xpath this action is a form of collection\r\n                if (action.xpathContext) {\r\n                    $.when(self.processActionFormCollection(action)).done(function (idStartScope) {\r\n                        action.idStartScope = idStartScope;\r\n                        def.resolve(action);\r\n                    });\r\n                } else {\r\n\r\n                    if (action.actionType === \"Form\") {\r\n                        action.xpathContext = undefined;\r\n                        action.contextType = \"entitytemplate\";\r\n                        action.guidEntity = action.guidEntity || self.properties.guidEntity;\r\n                    }\r\n\r\n                    $.when(self.processActionForm(action)).done(function (idStartScope) {\r\n                        action.idStartScope = idStartScope;\r\n                        def.resolve(action);\r\n                    });\r\n                }\r\n                break;\r\n        }\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Add actions within value object\r\n     * @param action\r\n     */\r\n    addActionToQueue: function (action) {\r\n        var self = this;\r\n        var actionsList = self.getValue();\r\n        var formParams = self.getFormContainer().getParams();\r\n\r\n        action.params = action.params || {};\r\n\r\n        var recordXpath = self.properties.xpathContext;\r\n\r\n        switch (action.actionType) {\r\n            case \"Process\":\r\n                action.params = {\r\n                    idStartScope: action.idStartScope,\r\n                    additionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n                    idParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n                    recordXpath: recordXpath\r\n                };\r\n                break;\r\n            case \"Form\":\r\n                action.params = {\r\n                    idStartScope: action.idStartScope,\r\n                    additionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n                    entityXpath: self.properties.xpathActions,\r\n                    idParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n                    idEntity: action.idEntity\r\n                };\r\n                break;\r\n            case \"Rule\":\r\n                action.params = {\r\n                    xpathActions: action.xpathActions || \"\",\r\n                    recordXpath: recordXpath\r\n                };\r\n                break;\r\n        }\r\n\r\n        var newValueActionsList = bizagi.clone(actionsList);\r\n        newValueActionsList.push(action);\r\n        self.setValue(newValueActionsList);\r\n        self.setDisplayValue(newValueActionsList);\r\n    },\r\n\r\n    /**\r\n     * Remove action within value object\r\n     * @param index\r\n     */\r\n    removeActionToQueue: function (index) {\r\n        var self = this;\r\n        var newValueActionsList = bizagi.clone(self.getValue());\r\n        newValueActionsList.splice(index, 1);\r\n        self.setValue(newValueActionsList);\r\n        self.setDisplayValue(newValueActionsList);\r\n    },\r\n    /**\r\n     * Add the render data to the given collection in order to send data to the server\r\n     * @param renderValues\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        if (self.controlValueIsChanged()) {\r\n            var properties = self.properties;\r\n            var xpath = properties.xpath;\r\n            var controlValue = self.getValue();\r\n            var actions = [];\r\n            $.each(controlValue, function (index, value) {\r\n                var action = {};\r\n                action.params = value.params || {};\r\n                action.guidAction = value.guidAction;\r\n\r\n                actions.push(action);\r\n            });\r\n            renderValues[xpath] = (actions.length == 0) ? \"\" : JSON.encode(actions);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Util to count how many actions are there\r\n     * @param action\r\n     * @return {number}\r\n     */\r\n    countSameActions: function (action) {\r\n        var self = this;\r\n        var value = self.getValue();\r\n        var count = 0;\r\n        $.each(value, function (key, value) {\r\n            if (value.guidAction == action.guidAction) {\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    },\r\n\r\n    /**\r\n    * Normalize action launcher control properties\r\n    * @param actionsLaucher\r\n    * @returns {*}\r\n    */\r\n    getPropertiesActionLaucher: function (actionsLaucher) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        /**\r\n         * The properties of actionLaucher have to 7 properties mandatory\r\n         * 0: guidProcess\r\n         * 1: displayName\r\n         * 2: title\r\n         * 3: actionType\r\n         * 4: guidaction\r\n         * 5: xpathContext\r\n         * 6: readOnlyForm: default: false\r\n         */\r\n        for (var i = 0, length = actionsLaucher.length, j = length; i < j; i += 1) {\r\n            //some ocassions server return 6 or 7 items\r\n            //return 6 properties when launch form action from action launcher control.\r\n            //in this case dont return xpathContext.\r\n            // So, add item position 5, simulate xpathContext empty.\r\n            if (actionsLaucher[i].length === 6) {\r\n                actionsLaucher[i].splice(5, 0, \"\");\r\n\r\n                if (actionsLaucher[i][3] == \"Process\" && form.properties.xpathContext) {\r\n                    actionsLaucher[i][5] = form.properties.xpathContext;\r\n                }\r\n            }\r\n        }\r\n\r\n        return actionsLaucher;\r\n    }\r\n});\r\n","/**\r\n * Base definition of entity template\r\n *\r\n * @author: Andres Fernando Muñoz\r\n * based on action launcher control\r\n */\r\n$.Class.extend(\"bizagi.rendering.entityTemplate\", {}, {\r\n    /**\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /**\r\n     * Initialize the control with data provided\r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n        var form = self.getFormContainer();\r\n\r\n        self.deferredActions = new $.Deferred();\r\n        self.deferredActions.promise();\r\n\r\n        // Data of get process property value\r\n        self.processPropertyValueArgs = {\r\n            \"pcaseId\": self.getIdCase(),\r\n            \"pguidEntity\": self.properties.guidEntity,\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"property\": \"data\",\r\n            \"psurrogatedKey\": self.properties.surrogatedKey\r\n        };\r\n\r\n        self.properties.valueWidth = 100;\r\n        self.properties.displayType = \"value\";\r\n        self.properties.allowactions = (typeof data.properties.allowactions == \"undefined\") ? true : data.properties.allowactions;\r\n\r\n        if(!self.properties.value) {\r\n            self.properties.value = self.value = [];\r\n        } else if(typeof self.properties.value == \"string\") {\r\n            self.properties.value = self.value = JSON.parse(self.properties.value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var template;\r\n        var html = \"\";\r\n        // Render template\r\n        if (mode == \"design\") {\r\n            template = self.renderFactory.getTemplate(\"render-entityTemplate-design\");\r\n            html = $.fasttmpl(template, {});\r\n        }\r\n        else if(self.properties.surrogatedKey) {\r\n            template = self.renderFactory.getTemplate(\"render-entityTemplate\");\r\n            html = $.fasttmpl(template, {allowactions: self.properties.allowactions});\r\n        }\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        // TODO: write functionality\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        // TODO: write functionality\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n    }\r\n});","/**\r\n * Base definition of Polymorphic launcher\r\n *\r\n * @author: Edward J Morales\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.polymorphicLauncher\", {}, {\r\n\t/*\r\n\t * Constructor\r\n\t */\r\n\tinit: function(params) {\r\n\t\t// Call base\r\n\t\tthis._super(params);\r\n\t},\r\n\r\n\t/*\r\n\t * Initialize the control with data provided\r\n\t */\r\n\tinitializeData: function(data) {\r\n\t\tvar self = this;\r\n\t\t// Call base\r\n\t\tthis._super(data);\r\n\t\tvar form = self.getFormContainer();\r\n\t\tthis.typeForm = form.properties.typeForm || \"\";\r\n\t\tvar mode = self.getMode();\r\n\r\n\t\tself.deferredActions = new $.Deferred();\r\n\t\tself.deferredActions.promise();\r\n\r\n\t\tself.properties.valueWidth = 100;\r\n\t\tself.properties.displayType = \"value\";\r\n\t\tself.properties.allowSearch = (typeof data.properties.allowSearch == \"undefined\") ? false : data.properties.allowSearch;\r\n\t\tself.properties.additionalXpath = self.properties.additionalXpath || [];\r\n\r\n\t\tif(!self.properties.value) {\r\n\t\t\tself.properties.value = self.value = [];\r\n\t\t\tself.properties.originalValue = [];\r\n\t\t} else if(typeof self.properties.value == \"string\") {\r\n\t\t\tself.properties.value = self.value = JSON.parse(self.properties.value);\r\n\t\t}\r\n\r\n\t\t// Data of get process property value\r\n\t\tself.processPropertyValueArgs = {\r\n\t\t\t\"pcaseId\": self.getIdCase(),\r\n\t\t\t\"pguidEntity\": self.properties.guidEntity,\r\n\t\t\t\"idRender\": self.properties.id,\r\n\t\t\t\"xpathContext\": form.properties.xpathContext,\r\n\t\t\t\"idPageCache\": form.properties.idPageCache,\r\n\t\t\t\"property\": \"data\",\r\n\t\t\t\"ptags\": self.getTagList(self.properties.tagslist),\r\n\t\t\t\"additionalXpaths\": self.properties.additionalXpath\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t * Send processpropertyvalue in order to execute an Action\r\n\t * This method is used when this control stay in Summary form or Global form\r\n\t * @param action\r\n\t */\r\n\texecuteActionImmediately: function(action) {\r\n\t\tvar self = this;\r\n\t\t//Execute action immediately\r\n\t\tvar form = self.getFormContainer();\r\n\r\n\t\tvar processPropertyValueExecuteConstructor = {\r\n\t\t\t\"idRender\": self.properties.id,\r\n\t\t\t\"xpathContext\": form.properties.xpathContext,\r\n\t\t\t\"idPageCache\": form.properties.idPageCache,\r\n\t\t\t\"property\": \"executeConstructor\",\r\n\t\t\t\"psurrogatedKey\": self.properties.surrogatedKey,\r\n\t\t\t\"pguidConstructor\": action.guidConstructor,\r\n\t\t\t\"pparameters\": JSON.encode({\r\n\t\t\t\t\"idStartScope\": action.idStartScope,\r\n\t\t\t\t\"pactionXpath\": self.properties.xpathActions,\r\n\t\t\t\t\"idPageCache\": action.idPageCache\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tself.dataService.executeActions(processPropertyValueExecuteConstructor).done(function(data) {\r\n\t\t\tself.notifyExecution(data.response, action);\r\n\t\t}).fail(function(error) {\r\n\t\t\t// TODO: Create generic mechanism to send notifications\r\n\t\t\tself.notifyExecution(\"Error\", action);\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * notify action execution status\r\n\t * @param response\r\n\t */\r\n\tnotifyExecution: function(response, actionName) {\r\n\t\t// To override in each device\r\n\t},\r\n\r\n\t/**\r\n\t * Render control in read only mode: properties.editable = false\r\n\t * @return {*}\r\n\t */\r\n\trenderReadOnly: function() {\r\n\t\treturn this.renderControl();\r\n\t},\r\n\r\n\t/**\r\n\t * Make a postrender of readonly control\r\n\t */\r\n\tpostRenderReadOnly: function() {\r\n\t\tthis.properties.readOnly = true;\r\n\t\tthis.postRender();\r\n\t},\r\n\r\n\t/**\r\n\t * Template method to implement in each children to customize each control\r\n\t * @return {string}\r\n\t */\r\n\trenderControl: function() {\r\n\t\tvar self = this;\r\n\t\tvar properties = self.properties;\r\n\t\tvar mode = self.getMode();\r\n\t\tvar template;\r\n\t\tvar html = \"\";\r\n\r\n\t\t// Render template\r\n\t\tif(mode == \"design\") {\r\n\t\t\ttemplate = self.renderFactory.getTemplate(\"render-polymorphicLauncher-design\");\r\n\t\t\tvar params = {\r\n\t\t\t\ttype: properties.type,\r\n\t\t\t\tallowSearch: properties.allowSearch\r\n\t\t\t};\r\n\t\t\thtml = $.fasttmpl(template, params);\r\n\t\t} else if(properties.surrogatedKey) {\r\n\t\t\ttemplate = self.renderFactory.getTemplate(\"render-polymorphicLauncher\");\r\n\t\t\thtml = $.fasttmpl(template);\r\n\t\t}\r\n\t\treturn html;\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Public method to determine if a value is valid or not\r\n\t * @param invalidElements\r\n\t * @return {*}\r\n\t */\r\n\tisValid: function(invalidElements) {\r\n\t\tvar self = this,\r\n\t\t\tproperties = self.properties;\r\n\t\t// Call base\r\n\t\tvar bValid = this._super(invalidElements);\r\n\t\tvar value = self.getValue();\r\n\t\t// TODO: write functionality\r\n\t\treturn bValid;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the value in the rendered control\r\n\t * @param value\r\n\t */\r\n\tsetDisplayValue: function(value) {\r\n\t\tvar self = this;\r\n\t\t// Set internal value\r\n\t\tself.setValue(value, false);\r\n\t},\r\n\r\n\t/**\r\n\t * Process an action\r\n\t * @param action\r\n\t */\r\n\tactionManager: function(action) {\r\n\t\tvar self = this;\r\n\t\tvar guidProcess = action.guidObject || \"\";\r\n\t\tvar def = new $.Deferred();\r\n\r\n        action.recordXpath = self.getFormContainer().properties.recordXpath;\r\n\r\n\t\t/**\r\n\t\t/**\r\n\t\t * Check if action is a process\r\n\t\t */\r\n\t\tswitch(action.actionType) {\r\n\t\t\tcase \"Process\":\r\n\t\t\t\t// Verify if case has startform\r\n\t\t\t\tvar params = {\r\n\t\t\t\t\tguidWFClass: guidProcess\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$.when(self.dataService.hasStartForm(params)).done(function(result) {\r\n\t\t\t\t\tif(result.hasStartForm) {\r\n\t\t\t\t\t\t// Open a dialog with startform and wait for Scope\r\n\t\t\t\t\t\t$.when(self.processStartForm({\r\n\t\t\t\t\t\t\tguidprocess: guidProcess,\r\n\t\t\t\t\t\t\ttitle: action.displayNamee,\r\n                            recordXpath: action.recordXpath\r\n\t\t\t\t\t\t})).done(function(idStartScope) {\r\n\t\t\t\t\t\t\taction.idStartScope = idStartScope;\r\n\t\t\t\t\t\t\tdef.resolve(action);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Just add action to queue to be executed on nextEvent\r\n\t\t\t\t\t\tdef.resolve(action);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Rule\":\r\n\t\t\t\t// Just add action to queue to be executed on nextEvent\r\n\t\t\t\tdef.resolve(action);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Form\":\r\n\t\t\t\t$.when(self.processActionForm(action)).done(function(idStartScope) {\r\n\t\t\t\t\taction.idStartScope = idStartScope;\r\n\t\t\t\t\tdef.resolve(action);\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn def.promise();\r\n\t},\r\n\r\n\t/**\r\n\t * Add actions within value object\r\n\t * @param action\r\n\t */\r\n\taddActionToQueue: function(action) {\r\n\t\tvar self = this;\r\n\t\tvar actionsList = self.getValue();\r\n\t\tvar formParams = self.getFormContainer().getParams();\r\n\t\t\r\n\t\taction.params = action.params || {};\r\n\r\n        var recordXpath = self.properties.xpathContext;\r\n\r\n\t\tswitch(action.actionType) {\r\n\t\t\tcase \"Process\":\r\n\t\t\t\taction.params = {\r\n\t\t\t\t\tadditionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n\t\t\t\t\tidParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n                    recordXpath: recordXpath\r\n\t\t\t\t};\r\n                if (typeof action.idStartScope !== \"undefined\") {\r\n                    action.params.idStartScope = action.idStartScope;\r\n                }\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Form\":\r\n\t\t\t\taction.params = {\r\n\t\t\t\t\tidStartScope: action.idStartScope,\r\n\t\t\t\t\tadditionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n\t\t\t\t\tentityXpath: self.properties.xpathActions,\r\n\t\t\t\t\tidParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n\t\t\t\t\tidEntity: action.idEntity,\r\n\t\t\t\t\tguidEntity: action.guidEntity\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Rule\":\r\n\t\t\t\t//TODO\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tactionsList.push(action);\r\n\t\tself.setValue(actionsList);\r\n\t\tself.setDisplayValue(actionsList);\r\n\t},\r\n\r\n\t/**\r\n\t * Remove action within value object\r\n\t * @param index\r\n\t */\r\n\tremoveActionToQueue: function(index) {\r\n\t\tvar self = this;\r\n\t\tvar value = self.getValue();\r\n\t\tvalue.splice(index, 1);\r\n\t\tself.setValue(value);\r\n\t\tself.setDisplayValue(value);\r\n\t},\r\n\t/**\r\n\t * Add the render data to the given collection in order to send data to the server\r\n\t * @param renderValues\r\n\t */\r\n\tcollectData: function(renderValues) {\r\n\t\tvar self = this;\r\n\t\tif(self.controlValueIsChanged()) {\r\n\t\t\tvar properties = self.properties;\r\n\t\t\tvar xpath = properties.xpath;\r\n\t\t\tvar controlValue = self.getValue();\r\n\t\t\tvar actions = [];\r\n\t\t\t$.each(controlValue, function(index, value) {\r\n\t\t\t\tvar action = {};\r\n\t\t\t\taction.params = value.params || {};\r\n\t\t\t\taction.guidAction = value.guidObject || value.guidAction;\r\n\t\t\t\taction.displayName = value.displayName;\r\n\t\t\t\taction.guidConstructor = value.guidConstructor;\r\n\t\t\t\taction.actionType = value.actionType;\r\n\t\t\t\taction.xpathContext = value.xpathContext;\r\n\t\t\t\taction.guidEntity = value.guidEntity;\r\n\t\t\t\tactions.push(action);\r\n\t\t\t});\r\n\t\t\trenderValues[xpath] = (actions.length == 0) ? \"\" : JSON.encode(actions);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Util to count how many actions are there\r\n\t * @param action\r\n\t * @return {number}\r\n\t */\r\n\tcountSameActions: function(action) {\r\n\t\tvar self = this;\r\n\t\tvar value = self.getValue();\r\n\t\tvar count = 0;\r\n\t\t$.each(value, function(key, value) {\r\n\t\t\tif(value.guidAction == action.guidAction) {\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn count;\r\n\t},\r\n\r\n\t/**\r\n\t * Get list of tags\r\n\t * @param taglist\r\n\t * @return {Array}\r\n\t */\r\n\tgetTagList: function(taglist) {\r\n\t\ttaglist = taglist || [];\r\n\t\tvar result = [];\r\n\r\n\t\tfor(var i = taglist.length; i > 0; i--) {\r\n\t\t\tresult.push(taglist[i - 1].value);\r\n\t\t}\r\n\t\treturn (result.length > 0) ? result : \"\";\r\n\t}\r\n});","/**\r\n *   Name: Bizagi Render Button Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for button renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.button\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.caption = properties.caption || \"\";\r\n\r\n        // set default value from normal to value\r\n        properties.displayType = \"value\";\r\n\r\n        // A button cannot be required\r\n        properties.required = false;\r\n\r\n        // This flag enable/disable default behaviors of buttons\r\n        // auto save and execute rule\r\n        properties.preventDefault = properties.preventDefault || false;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"button\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {\r\n            caption: self.properties.caption,\r\n            cssClass: self.properties.cssclass || \"\",\r\n            editable: self.properties.editable\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {}\r\n     */\r\n    renderReadOnly: function () {\r\n        // Executes the same template than normal render\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        // call base\r\n        this._super();\r\n\r\n        this.getLabel().addClass('bz-form-label--hidden');\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render behaviour after to be processed\r\n     */\r\n    postRender: function () {\r\n        // call base\r\n        this._super();\r\n\r\n        this.getLabel().addClass('bz-form-label--hidden');\r\n    },\r\n\r\n    /**\r\n     * Saves the form\r\n     * @returns {}\r\n     */\r\n    saveForm: function () {\r\n        var form = this.getFormContainer();\r\n        return form.saveForm();\r\n    },\r\n\r\n    /**\r\n     * Executes the button action\r\n     * @returns {}\r\n     */\r\n    executeButton: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = properties.xpathContext || \"\";\r\n\r\n        if (properties.submitOnChangexpathContextRow) {\r\n            xpathContext = xpathContext ? xpathContext + \".\" + properties.submitOnChangexpathContextRow : properties.submitOnChangexpathContextRow;\r\n        }\r\n\r\n        // Set the loading feedback\r\n        self.getFormContainer().startLoading();\r\n\r\n        return self.dataService.multiaction().executeButton({\r\n            idRender: properties.id,\r\n            xpath: properties.xpath || \"\",\r\n            xpathContext: xpathContext || \"\",\r\n            idPageCache: properties.idPageCache\r\n        }).always(function () {\r\n            self.getFormContainer().endLoading();\r\n            return arguments ? arguments[0] : undefined;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Refresh the current form\r\n     * @returns {}\r\n     */\r\n    refreshForm: function () {\r\n        var form = this.getFormContainer();\r\n        form.refreshForm(this.properties.id);\r\n    },\r\n\r\n    /**\r\n     * Process the button actions workflow\r\n     * @returns {}\r\n     */\r\n    processButton: function () {\r\n        var self = this;\r\n\r\n        if (self.properties.editable) {\r\n            // Save the form prior opening the dialog\r\n            self.runButtonAction();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Triggers the render change event\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    triggerRenderChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n\r\n        var pressed = params.pressed || false;\r\n\r\n        self.triggerHandler(\"renderchange\", {render: self, pressed: pressed});\r\n    },\r\n\r\n    /**\r\n     * Run button actions\r\n     * @returns {}\r\n     */\r\n    runButtonAction: function () {\r\n        var self = this;\r\n\r\n        // Save the form prior opening the dialog\r\n        self.getFormContainer().clearValidationMessages();\r\n\r\n        self.saveForm().pipe(function () {\r\n            return self.executeButton();\r\n        }).done(function (result) {\r\n\r\n            if (result == null || result == true || result.result === \"success\" || result.type === \"success\") {\r\n                return self.refreshForm();\r\n            } else if (result.type === \"validationMessages\") {\r\n                try {\r\n                    // Add validation messages\r\n                    self.getFormContainer().addValidationMessage(result.messages);\r\n                } catch (e) {\r\n                    // bizagi.showMessageBox(result.messages, \"Error\"); // TODO\r\n                }\r\n            }\r\n        }).fail(function (a, b, message) {\r\n            // Add error messages\r\n            try {\r\n                self.getFormContainer().addErrorMessage(message);\r\n            } catch (e) {\r\n                // bizagi.showMessageBox(message, \"Error\"); // TODO\r\n            }\r\n        });\r\n    },\r\n\r\n    processLayout: function (isLabelFormat, format) {\r\n        if (isLabelFormat) {\r\n            this.changeBackgroundColor(format.background);\r\n            this._super(!isLabelFormat, format);\r\n        }\r\n    },\r\n\r\n    changeBackgroundColor: function (color) {\r\n        if (typeof color === \"undefined\") return this;\r\n\r\n        if (color !== \"none\") {\r\n            this.getElementsToStylize(this.getControl()).style(\"background\", color, \"important\");\r\n        } else {\r\n            this.getElementsToStylize(this.getControl()).css(\"background\", \"\");\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    getElementsToStylize: function ($context) {\r\n        return $(\"input\", $context);\r\n    },\r\n\r\n    /**\r\n     *  Method to determine if the render value can be sent to the server or not\r\n     * @returns {}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render Fileprint Class\r\n *   Author: Christian Collazos\r\n *   Comments:\r\n *   -   This script will define basic stuff for fileprint renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.fileprint\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.caption = (properties.caption && properties.caption != \" \")? properties.caption : \"render-fileprint-property-caption\";\r\n        properties.filesCount = properties.filesCount ? properties.filesCount : 0;\r\n\r\n        // set default value from normal to value\r\n        properties.displayType = \"value\";\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n\r\n        // A button cannot be required\r\n        properties.required = false;\r\n    },\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"fileprint\");\r\n\r\n        return $.fasttmpl(template, {\r\n            caption: properties.caption\r\n        });\r\n    },\r\n    /*\r\n    *   Method to render non editable values\r\n    */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n\r\n        // Executes the same template than normal render\r\n        return self.renderControl();\r\n    },\r\n\r\n    /*\r\n    *   get the fileprint url\r\n    */\r\n    getFilePrintUrl: function (disposition) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.getFilePrintUrl({\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext || \"\",\r\n            idPageCache: properties.idPageCache,\r\n            disposition: disposition,\r\n            sessionId: self.getSessionId()\r\n        });\r\n\r\n    },\r\n\r\n    /*\r\n    *   Refresh the current form\r\n    */\r\n    refreshForm: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var form = self.getFormContainer();\r\n        form.refreshForm(properties.id);\r\n    },\r\n\r\n     /*\r\n    *   Saves the form\r\n    */\r\n    saveForm: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        return form.saveForm();\r\n    }\r\n});","/**\r\n *   Name: Bizagi Render Simple Link Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for link renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.link\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Set properties\r\n        var properties = this.properties;\r\n        properties.required = false;\r\n        properties.displayType = \"value\";\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"link\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {\r\n            displayName: self.properties.displayName,\r\n            align: self.properties.valueAlign,\r\n            editable: self.properties.editable\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        // Executes the same template than normal render\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Automatically this render is valid, so we can't check a required link\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Do nothing\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        return false;\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Render Geolocation control\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for geolocation renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.geolocation\", {}, {\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {} data\r\n     */\r\n    init: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n        this.geolocation = window.navigator.geolocation;\r\n\r\n        var properties = this.properties;\r\n        properties.allowUpdate = bizagi.util.parseBoolean(properties.allowUpdate) === true;\r\n\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"geolocation\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, self.properties);\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param {} invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Call base\r\n        return this._super(invalidElements);\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Set internal value\r\n        this.setValue(value, false);\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     * @returns {}\r\n     */\r\n    configureHandlers: function () {\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} succes_callback\r\n     * @param {} fail_callback\r\n     */\r\n    getCurrentPosition: function (succes_callback, fail_callback) {\r\n        var self = this;\r\n\r\n        if (typeof (self.geolocation) === \"undefined\") {\r\n            if (fail_callback)\r\n                fail_callback(bizagi.localization.getResource(\"render-control-unsuported-by-browser\").replace(\"{0}\", self.properties.type));\r\n            return;\r\n        }\r\n\r\n        var onSuccess = function (position) {\r\n            if (succes_callback)\r\n                succes_callback(position);\r\n        };\r\n\r\n        var onError = function (error) {\r\n            var strMessage = self.getErrorMessage(error);\r\n\r\n            if (fail_callback)\r\n                fail_callback(strMessage);\r\n        };\r\n\r\n        return self.geolocation.getCurrentPosition(onSuccess, onError);\r\n    },\r\n\r\n    /**\r\n     * Get message of error\r\n     * @param error\r\n     * @returns {*|string}\r\n     */\r\n    getErrorMessage: function (error) {\r\n        var strMessage = \"\";\r\n\r\n        // Check for known errors\r\n        switch (error.code) {\r\n            case error.PERMISSION_DENIED:\r\n            case 1:\r\n                strMessage = bizagi.localization.getResource(\"render-geolocation-permission-denied\");\r\n                break;\r\n            case error.POSITION_UNAVAILABLE:\r\n            case 2:\r\n                strMessage = bizagi.localization.getResource(\"render-geolocation-position-unavailable\");\r\n                break;\r\n            case error.TIMEOUT:\r\n            case 3:\r\n                strMessage = bizagi.localization.getResource(\"render-geolocation-timeout\");\r\n                break;\r\n            default:\r\n                strMessage = \"WD: \" + bizagi.localization.getResource(\"render-geolocation-permission-denied\");\r\n                break;\r\n        }\r\n\r\n        return strMessage;\r\n    },\r\n\r\n    /**\r\n     * Change precision number of coordinates\r\n     * @param data\r\n     * @returns {*}\r\n     */\r\n    performPrecision: function (data) {\r\n        var geolocation = data.split(\" \") || \"\";\r\n\r\n        if (!geolocation) return data;\r\n\r\n        try {\r\n            var latitude = parseFloat(geolocation[0].trim());\r\n            var longitude = parseFloat(geolocation[1].trim());\r\n\r\n            return latitude.toPrecision(10) + \" \" + longitude.toPrecision(10);\r\n        } catch (e) {\r\n            return data;\r\n        }\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Render Association Class\r\n*   Author: Edward Morales\r\n*   Comments:\r\n*   -   This script will define basic stuff for association renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.association\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        var properties = self.properties;\r\n\r\n        // Fill default properties\r\n        properties.property = \"flipped\";\r\n        properties.idRender = self.properties.id;\r\n        properties.allowFlip = (typeof properties.allowFlip != \"undefined\") ? bizagi.util.parseBoolean(properties.allowFlip) : true;\r\n        properties.flipped = (typeof properties.flipped != \"undefined\") ? bizagi.util.parseBoolean(properties.flipped) : false;\r\n        properties.flipstate = properties.flipped;\r\n\r\n\r\n        // data of entities (left and right)\r\n        properties.leftData = properties.leftData || [];\r\n        properties.rightData = properties.rightData || [];\r\n\r\n        if (properties.value) {\r\n            self.processPropertyValue();\r\n        }\r\n    },\r\n\r\n\r\n\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"association\");\r\n        var def = new $.Deferred();\r\n\r\n        self.properties.property = \"flipped\";\r\n        self.properties.idRender = self.properties.id;\r\n\r\n        // Define flipped\r\n        $.when(self.getFlipAssociation())\r\n            .done(function (flip) {\r\n\r\n                // Make json base, create self.properties.formatJson\r\n                self.makeJsonBase();\r\n\r\n                self.properties.flipped = bizagi.util.parseBoolean(flip) || false;\r\n\r\n                var html = $.fasttmpl(template, self.properties, {\r\n                    getColumnData: self.getColumnData,\r\n                    getRightAssociation: self.getRightAssociation\r\n                });\r\n\r\n                /* by default need set self.properties.formatJson */\r\n                self.setValue(JSON.encode(self.properties.formatJson));\r\n\r\n                def.resolve(html);\r\n            });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n\r\n    /*\r\n    * Returns the flip state\r\n    */\r\n    getFlipAssociation: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        if (mode == \"execution\")\r\n            return self.dataService.getFlipAssociation(self.properties);\r\n\r\n        return false;\r\n    },\r\n\r\n    /* \r\n    *   Gets the display value of the render\r\n    */\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n        var value = self.getValue();\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Get the template \r\n    */\r\n    getTemplateName: function () {\r\n        return \"association\";\r\n    },\r\n\r\n\r\n    /**\r\n    * Get Left Data, verify if flipper flags sets true\r\n    * \r\n    * @param column {'0'||'1'}\r\n    */\r\n    getColumnData: function () {\r\n        var self = this;\r\n        var properties = self.data;\r\n        var data = [];\r\n        var associationData = properties.flipped ? properties.rightData : properties.leftData;\r\n\r\n        $.each(associationData, function(key, item) {\r\n            data.push({ id: item.id, value: item.value });\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n    * Association of right elements\r\n    */\r\n    getRightAssociation: function (leftId) {\r\n        var self = this;\r\n        var properties = self.data;\r\n        var association = [];\r\n\r\n\r\n        var isChecked = function (leftId, idRight) {\r\n            var checked = false;\r\n            $.each(properties.formatJson.value, function (key, value) {\r\n                if (!checked && value.id == leftId && value.value.indexOf(idRight) >= 0) {\r\n                    checked = true;\r\n                }\r\n            });\r\n\r\n            return checked;\r\n        };\r\n\r\n        // create association and check element\r\n        if (properties.flipped) {\r\n            // left element\r\n            $.each(properties.leftData, function (key, data) {\r\n                association.push({\r\n                    id: data.id,\r\n                    name: data.value,\r\n                    checked: isChecked(data.id, leftId)\r\n                });\r\n\r\n            });\r\n        } else {\r\n            $.each(properties.rightData, function (key, data) {\r\n                association.push({\r\n                    id: data.id,\r\n                    name: data.value,\r\n                    checked: isChecked(leftId, data.id)\r\n                });\r\n            });\r\n        }\r\n\r\n        return association;\r\n    },\r\n\r\n\r\n    removeElement: function (leftId, rightId) {\r\n        var self = this;\r\n\r\n        $.each(self.properties.formatJson.value, function (key, data) {\r\n            if (self.properties.flipped) {\r\n                if (data.id == rightId) {\r\n                    // Remove right element from left panel\r\n                    $.each(self.properties.formatJson.value[key][\"value\"], function (removeKey, removeValue) {\r\n                        if (leftId == removeValue) {\r\n                            // Splice from array\r\n                            self.properties.formatJson.value[key][\"value\"].splice(removeKey, 1);\r\n                        }\r\n                    });\r\n                }\r\n            } else if (data.id == leftId) {\r\n                // Remove right element from left panel\r\n                $.each(self.properties.formatJson.value[key][\"value\"], function (removeKey, removeValue) {\r\n                    if (rightId == removeValue) {\r\n                        // Splice from array\r\n                        self.properties.formatJson.value[key][\"value\"].splice(removeKey, 1);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        self.setValue(JSON.encode(self.properties.formatJson));\r\n    },\r\n\r\n\r\n    addElement: function (leftId, rightId) {\r\n        var self = this;\r\n\r\n        $.each(self.properties.formatJson.value, function (key, data) {\r\n            if (self.properties.flipped) {\r\n                if (data.id == rightId) {\r\n                    // Add right element to left panel\r\n                    self.properties.formatJson.value[key][\"value\"].push(leftId);\r\n                }\r\n            } else if (data.id == leftId) {\r\n                // Add right element to left panel\r\n                self.properties.formatJson.value[key][\"value\"].push(rightId);\r\n            }\r\n        });\r\n        self.setValue(JSON.encode(self.properties.formatJson));\r\n    },\r\n\r\n    makeJsonBase: function () {\r\n        var self = this;\r\n        self.properties.formatJson = self.properties.formatJson || {\r\n            leftXpath: self.properties.leftXpath,\r\n            rightXpath: self.properties.rightXpath,\r\n            leftFactName: self.properties.leftFactName,\r\n            rightFactName: self.properties.rightFactName,\r\n            value: self.properties.value\r\n        };\r\n    },\r\n\r\n\r\n    /*\r\n    *   Check if a render has no value for required validation\r\n    */\r\n    hasValue: function () {\r\n        var self = this;\r\n\r\n        if (self.properties.formatJson) {\r\n            var values = self.properties.formatJson.value;\r\n        } else {            \r\n            values = self.properties.value;\r\n        }\r\n       \r\n\r\n        for (var i = 0, l = values.length; i < l; i++) {\r\n            var data = values[i];\r\n            if (data && data.value.length > 0) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    /*\r\n    * This method process the value.\r\n    * changes the format to send request\r\n    */\r\n    processPropertyValue: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var values = properties.value;\r\n        var result = [];\r\n\r\n        for (var i = 0, l = values.length; i < l; i++) {\r\n            var value = values[i];\r\n            result.push({ id: value[0], value: value[1] });\r\n        }\r\n\r\n        properties.value = result;\r\n    }\r\n});","/**\r\n *   Name: Bizagi Render Upload Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for uploads\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.upload\", {}, {\r\n    /***\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        var form = self.getFormContainer();\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        var maxFileSizeOfProperty = Number(properties.maxSize) || 0;\r\n        var maxFileSizeOfUser = typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\" ? Number(BIZAGI_SETTINGS.UploadMaxFileSize) : 4091904;\r\n\r\n        properties.maxSize = maxFileSizeOfProperty || maxFileSizeOfUser;\r\n        properties.maxfiles = Number(properties.maxfiles) || 999;\r\n        properties.validExtensions = properties.validExtensions || \"\";\r\n\r\n        if (properties.validExtensions.length > 0 && properties.validExtensions.indexOf(\".\") < 0) {\r\n            var singleExtensions = properties.validExtensions.replace(/\\ /gi, '').split(\";\");\r\n            var defExtensions = [];\r\n\r\n            for (var i = 0; i < singleExtensions.length; i++) {\r\n                if (singleExtensions[i].length > 0) {\r\n                    defExtensions.push(\"*.\" + singleExtensions[i]);\r\n                } else {\r\n                    //Removes the empty element\r\n                    var index = singleExtensions.indexOf(singleExtensions[i]);\r\n                    singleExtensions.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            properties.validExtensions = defExtensions.join(\";\");\r\n        }\r\n\r\n        properties.addUrl = properties.addUrl || self.dataService.getUploadAddUrl();\r\n        properties.deleteUrl = properties.deleteUrl || undefined;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) || false;\r\n        properties.allowDelete = (bizagi.util.parseBoolean(properties.allowDelete) !== null && properties.editable) ? bizagi.util.parseBoolean(properties.allowDelete) : false;\r\n\r\n        properties.contexttype = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : \"\";\r\n        properties.allowSendInMail = properties.allowSendInMail || false;\r\n\r\n        // Set files property\r\n        self.files = properties.value || [];\r\n        self.filesCount = self.files.length;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"upload\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            xpath: bizagi.util.encodeXpath(self.getUploadXpath()),\r\n            editable: properties.editable,\r\n            haveFiles: self.filesCount !== 0,\r\n            noFiles: self.filesCount === 0,\r\n            allowSendInMail: properties.allowSendInMail\r\n        });\r\n\r\n        // Render current children\r\n        var items = \"\";\r\n        for (var i = 0; i < self.filesCount; i++) {\r\n            var file = {id: self.files[i][0], fileName: self.files[i][1]};\r\n            var item = self.renderUploadItem(file);\r\n\r\n            items += item;\r\n        }\r\n\r\n        html = self.replaceFilesHtml(html, items);\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Renders a single upload item\r\n     * @param file\r\n     * @returns {jQuery|*}\r\n     */\r\n    renderUploadItem: function (file) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var itemTemplate = self.getTemplateItemName();\r\n        var template = self.renderFactory.getTemplate(itemTemplate);\r\n\r\n        // Don't render urls when not running in execution mode\r\n        var url = !self.isExecutionMode() ? \"\" : self.buildItemUrl(file); // TODO: Review if need it: javascript:void(0);\r\n\r\n        var html = $.fasttmpl(template, {\r\n            id: file.id,\r\n            mode: mode,\r\n            url: url,\r\n            allowDelete: self.properties.allowDelete,\r\n            filename: file.fileName,\r\n            editable: self.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (file) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n\r\n        return self.dataService.getUploadFileUrl({\r\n            idRender: properties.id,\r\n            xpath: self.getUploadXpath(),\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            fileId: file.id,\r\n            sessionId: form.properties.sessionId,\r\n            contexttype: properties.contexttype\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Replaces a {{files}} tag in the container for the specified \"replace\" element\r\n     * @param html\r\n     * @param replace\r\n     * @returns {*}\r\n     */\r\n    replaceFilesHtml: function (html, replace) {\r\n        return html.replace(\"{{files}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Removes a file from the upload control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    deleteUploadItem: function (item, fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = self.getUploadXpath() + (bizagi.util.isNumeric(fileId) ? \"[id=\" + fileId + \"]\" : \"[id='\" + fileId + \"']\");\r\n\r\n        return self.dataService.deleteUploadFile({\r\n            url: properties.deleteUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contexttype\r\n        }).pipe(function () {\r\n\r\n            // Subtract counter\r\n            self.filesCount = self.filesCount - 1;\r\n\r\n            // Remove from local collection\r\n            self.files = $.grep(self.files, function (fileItem) {\r\n                return fileItem[0] != fileId;\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n\r\n        // Set files property\r\n        self.files = value || []; // Dont remove this line\r\n        self.filesCount = self.files.length;\r\n\r\n        // Call base\r\n        self._super(value, triggerEvents);\r\n    },\r\n\r\n    /**\r\n     * Returns the internal value\r\n     * @returns {*}\r\n     */\r\n    getValue: function () {\r\n        return this.files;\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @returns {boolean}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n        var bValid = true;\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (properties.required && properties.editable) {\r\n            var newRow = self.grid && self.grid.isFromCreatedRow.apply(self);\r\n\r\n            if (self.filesCount <= 0 && !newRow) {\r\n                var inlineEdit = self.grid ? self.grid.properties.inlineEdit : true;\r\n\r\n                if (inlineEdit) {\r\n                    message = self.getResource(\"render-required-upload\").replaceAll(\"#label#\", properties.displayName);\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Build add params to send to the server\r\n     */\r\n    buildAddParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var data = {};\r\n        var prefix = self.Class.BA_CONTEXT_PARAMETER_PREFIX;\r\n\r\n        data[prefix + \"xpath\"] = self.getUploadXpath();\r\n        data[prefix + \"idRender\"] = properties.id;\r\n        data[prefix + \"xpathContext\"] = properties.xpathContext;\r\n        data[prefix + self.Class.BA_PAGE_CACHE] = properties.idPageCache;\r\n        data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = form.properties.sessionId;\r\n        data[prefix + \"contexttype\"] = properties.contexttype;\r\n\r\n        try {\r\n            if (typeof (BIZAGI_SESSION_NAME) !== \"undefined\") {\r\n                data[BIZAGI_SESSION_NAME] = form.properties.sessionId\r\n            } else {\r\n                data[\"JSESSIONID\"] = form.properties.sessionId;\r\n            }\r\n        } catch (e) {\r\n            data[\"JSESSIONID\"] = form.properties.sessionId;\r\n        }\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getUploadXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    checkRequired: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (bizagi.util.parseBoolean(properties.required)) {\r\n            if (self.grid && self.grid.properties.inlineAdd === true) {\r\n                if (!self.hasValue() && !(self.getControl().parents(\"tr\").data(\"new-row\"))) {\r\n                    self.setRenderRequired(invalidElements, properties);\r\n                    return false;\r\n                }\r\n            } else {\r\n                if (!self.hasValue()) {\r\n                    self.setRenderRequired(invalidElements, properties);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    setRenderRequired: function (invalidElements, properties) {\r\n        var self = this;\r\n        var message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n        invalidElements.push({xpath: properties.xpath, message: message});\r\n    },\r\n\r\n    /**\r\n     * Templates\r\n     */\r\n    getTemplateItemName: function () {\r\n        return \"uploadItem\";\r\n    }\r\n});","/**\r\n *   Name: Bizagi Render ECM upload control\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for ECM Control\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.ecm\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        properties.maxSize = Number(properties.maxSize) || (typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\" ? Number(BIZAGI_SETTINGS.UploadMaxFileSize) : properties.maxSize = Number(properties.maxSize) || 4091904);\r\n        properties.maxFiles = Number(properties.maxfiles) || 999;\r\n        properties.validExtensions = properties.validExtensions || \"\";\r\n\r\n        if (properties.validExtensions.length > 0 && properties.validExtensions.indexOf(\".\") < 0) {\r\n            var singleExtensions = properties.validExtensions.split(\";\");\r\n            for (var i = 0; i < singleExtensions.length; i++) {\r\n                singleExtensions[i] = \"*.\" + singleExtensions[i];\r\n            }\r\n            properties.validExtensions = singleExtensions.join(\";\");\r\n        }\r\n\r\n        properties.addUrl = self.dataService.serviceLocator.getUrl(\"render-ecm-upload-url\") + \"?action=uploadECMFile\";\r\n        properties.editUrl = self.dataService.serviceLocator.getUrl(\"render-ecm-upload-url\") + \"?action=updateECMFileContent\";\r\n        properties.deleteUrl = properties.deleteUrl || undefined;\r\n        properties.allowDelete = bizagi.util.parseBoolean(properties.allowDelete) !== null ? bizagi.util.parseBoolean(properties.allowDelete) : true;\r\n        properties.q_xpath = bizagi.util.encodeXpath(properties.xpath);\r\n        properties.showMetadata = properties.showMetadata === undefined || properties.showMetadata === null ? true : bizagi.util.parseBoolean(properties.showMetadata);\r\n\r\n        var dateFormat = this.getResource(\"dateFormat\");\r\n        var timeFormat = this.getResource(\"timeFormat\");\r\n\r\n        // We will hold here the value to display\r\n        properties.displayValue = \"\";\r\n        properties.showTime = properties.showTime !== undefined ? bizagi.util.parseBoolean(properties.showTime) : false;\r\n        properties.dateFormat = properties.dateFormat || dateFormat;\r\n        properties.timeFormat = properties.timeFormat || timeFormat;\r\n        properties.fullFormat = properties.dateFormat;\r\n\r\n        // Set files property\r\n        self.files = properties.value || [];\r\n        self.filesCount = self.files.length;\r\n\r\n        properties.xpathContext = this.parent.properties.xpathContext || properties.xpathContext || \"\";\r\n\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @param listControl\r\n     * @param fileProperties\r\n     * @returns {*}\r\n     */\r\n    renderControl: function (listControl, fileProperties) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"ecm\");\r\n        var mode = self.getMode();\r\n        var defer = new $.Deferred();\r\n\r\n        properties.value = (fileProperties) ? [[fileProperties.idFileUpload, fileProperties.fileName]] : self.value;\r\n        var html = $.fasttmpl(template, properties, {\r\n            getFileExtension: self.getFileExtension,\r\n            isImage: self.isImage\r\n        });\r\n\r\n        if (self.properties.value != undefined) {\r\n\r\n            var lengthValues = self.properties.value.length;\r\n\r\n            if (lengthValues === 0) {\r\n                defer.resolve(html);\r\n            }\r\n\r\n            $.each(self.properties.value, function (key, value) {\r\n                var data = {};\r\n\r\n                data.idFileUpload = value[0];\r\n                data.fileName = value[1];\r\n                data.idPageCache = self.properties.idPageCache;\r\n                data.xpathContext = self.getXpathContext();\r\n                data.xPath = self.properties.xpath;\r\n                data.editable = self.properties.editable;\r\n                data.idAttrib = self.properties.idAttrib;\r\n\r\n                var form = self.getFormContainer();\r\n                if (form && form.properties && form.properties.sessionId) {\r\n                    data.sessionId = form.properties.sessionId;\r\n                }\r\n\r\n                if (mode === \"execution\") {\r\n                    $.when(self.renderFileLayout(data, fileProperties)).done(function (item) {\r\n                        lengthValues--;\r\n\r\n                        if (bizagi.loader.productBuildToAbout && bizagi.loader.productBuildToAbout.indexOf(\"10.4\") === 0) {\r\n                            item = item.replaceAll(\"Handlers/MetadataFile\", \"Handlers/Metadata\");\r\n                        }\r\n\r\n                        html = self.replaceItemHtml(html, self.properties.id + \"-\" + data.idFileUpload, item);\r\n                        if (lengthValues === 0) {\r\n                            defer.resolve(html);\r\n                        }\r\n                    });\r\n\r\n                }\r\n            });\r\n        } else {\r\n            defer.resolve(html);\r\n        }\r\n        return defer.promise();\r\n    },\r\n\r\n    replaceItemHtml: function (html, id, replace) {\r\n        return html.replace(\"{{\" + id + \"}}\", replace);\r\n    },\r\n\r\n    renderFileLayout: function (data, fileProperties) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var metadataTemplate = self.renderFactory.getTemplate(\"ecm-metadata\");\r\n\r\n        var deferred = $.Deferred();\r\n\r\n        $.when(self.dataService.getECMMetadata(data),\r\n            (fileProperties) ? [fileProperties] : self.dataService.getFileProperties(data)\r\n        ).done(function (metaData, fileProperties) {\r\n\r\n            fileProperties[0].data = data;\r\n\r\n            // Make xpath context\r\n            fileProperties[0].xpathContext = fileProperties[0].xpathContext || form.properties.xpathContext || \"\";\r\n            fileProperties[0].xpath = self.properties.xpath;\r\n\r\n            metaData[0].filename = data.fileName;\r\n            metaData[0].url = self.buildItemUrl(fileProperties[0]);\r\n\r\n            // Define File Properties\r\n            metaData[0].ecm_ecmStatus = fileProperties[0].ecmStatus;\r\n            metaData[0].ecm_isVisible = fileProperties[0].isVisible;\r\n            metaData[0].ecm_allowUpdateMetadata = fileProperties[0].allowUpdateMetadata;\r\n            metaData[0].ecm_allowDelete = fileProperties[0].allowDelete;\r\n            metaData[0].ecm_allowUpdateContent = fileProperties[0].allowUpdateContent;\r\n            metaData[0].ecm_allowView = fileProperties[0].allowView;\r\n            metaData[0].ecm_allowCheckOut = fileProperties[0].allowCheckOut;\r\n            metaData[0].ecm_allowCancelCheckOut = fileProperties[0].allowCancelCheckOut;\r\n            metaData[0].ecm_allowEdit = data.editable && fileProperties[0].allowEdit;\r\n            metaData[0].ecm_ecmStatus = fileProperties[0].ecmStatus;\r\n            metaData[0].idFileUploads = fileProperties[0].idFileUpload;\r\n            metaData[0].xpath = fileProperties[0].xpath;\r\n            metaData[0].value = bizagi.util.parseBoolean(fileProperties[0].value);\r\n            metaData[0].deviceType = bizagi.detectDevice();\r\n\r\n            var html = $.fasttmpl(metadataTemplate, metaData[0]);\r\n            deferred.resolve(html);\r\n        });\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    isImage: function (file) {\r\n        var extension = this.getFileExtension(file);\r\n        var image = [\"JPG\", \"JPEG\", \"GIF\", \"PNG\", \"BMP\"];\r\n\r\n        return (image.indexOf(extension.toUpperCase()) > -1) ? true : false;\r\n    },\r\n\r\n    replaceFilesHtml: function (html, replace) {\r\n        return html.replace(\"{{files}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (file) {\r\n        var self = this;\r\n        var p_sessionId = bizagi.cookie(\"JSESSIONID\");\r\n\r\n        if(!file.data) {\r\n            file.data = {fileName: file.fileName, idAttrib: file.idAttrib}\r\n        }\r\n\r\n        return self.dataService.getECMFileUrl({\r\n            idFileUpload: file.idFileUpload,\r\n            xPath: file.xpath || file.xPath,\r\n            xpathContext: file.xpathContext,\r\n            idAttrib: file.data.idAttrib,\r\n            idPageCache: self.properties.idPageCache,\r\n            fileName: file.data.fileName.replace(/ /g, \"_\"),\r\n            p_sessionId: p_sessionId,\r\n            sessionId: file.data.sessionId || \"\"\r\n        });\r\n    },\r\n\r\n    buildAddParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var data = {};\r\n\r\n        // data.fileExt = properties.validExtensions;\r\n        // data.fileDesc = properties.validExtensions ? self.getResource(\"render-upload-allowed-extensions\") + properties.validExtensions : \"\";\r\n        data.xPath = properties.xpath;\r\n        data.idAttrib = properties.idAttrib;\r\n        data.xpathContext = properties.xpathContext;\r\n        data.metaValues = [];\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = properties.idPageCache;\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Get name of file extension\r\n     * @param fileName\r\n     * @returns {*}\r\n     */\r\n    getFileExtension: function (fileName) {\r\n        fileName = fileName || \"\";\r\n        return fileName.split(\".\").pop();\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Call base\r\n        self._super(value, triggerEvents);\r\n\r\n        // Set files property\r\n        self.files = properties.value || [];\r\n        self.filesCount = (self.files.length) ? self.files.length : properties.value;\r\n    },\r\n\r\n    /**\r\n     * Gets xpath context\r\n     * @returns {*|string}\r\n     */\r\n    getXpathContext: function () {\r\n        return this.properties.xpathContext || \"\";\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getUploadXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Removes a file from the ECM control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    deleteUploadItem: function (item, fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var params = {\r\n            idFileUpload: fileId,\r\n            xPath: properties.xpath,\r\n            idAttrib: properties.idAttrib,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: self.getXpathContext()\r\n        };\r\n\r\n        return self.dataService.deleteECMFile(params).pipe(function () {\r\n\r\n            // Subtract counter\r\n            self.filesCount = self.filesCount - 1;\r\n\r\n            // Remove from local collection\r\n            self.files = $.grep(self.files, function (fileItem) {\r\n                return fileItem[0] != fileId;\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Lock a file from the ECM control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    lockUploadItem: function (fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var params = {\r\n            idFileUpload: fileId,\r\n            xPath: properties.xpath,\r\n            idAttrib: properties.idAttrib,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: self.getXpathContext()\r\n        };\r\n\r\n        return self.dataService.checkOutFile(params);\r\n    },\r\n\r\n    /**\r\n     * Unlock a file from the ECM control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    unlockUploadItem: function (fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var params = {\r\n            idFileUpload: fileId,\r\n            xPath: properties.xpath,\r\n            idAttrib: properties.idAttrib,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: self.getXpathContext()\r\n        };\r\n\r\n        return self.dataService.cancelCheckOut(params);\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Render Yes-no Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for yes-no renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.yesno\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.value = typeof (properties.value) != \"undefined\" ? bizagi.util.parseBoolean(properties.value) : null;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"yesno\");\r\n        var randomId = bizagi.util.randomNumber(100, 10000000);\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            id: randomId,\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Gets the display value of the render\r\n     */\r\n    getDisplayValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.parseBoolean(value) === true) {\r\n            return this.getResource(\"render-boolean-yes\");\r\n        } else if (bizagi.util.parseBoolean(value) === false) {\r\n            return this.getResource(\"render-boolean-no\");\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if a render has no value for required validation\r\n     * @returns {boolean}\r\n     */\r\n    hasValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.isEmptyValue(value)) return false;\r\n        return bizagi.util.parseBoolean(value) !== null;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Letter Class\r\n*   Author: Diego Parra\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for letter renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.letter\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Create a variable to check if the letter has been opened when editable\r\n        this.letterOpened = false;\r\n    },\r\n\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"letter\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template);\r\n    },\r\n\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"letter.readonly\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template);\r\n    },\r\n\r\n    /**\r\n     * Returns the letter content from the server\r\n     */\r\n    getLetterContent: function () {\r\n        // Set flag to true\r\n        this.letterOpened = true;\r\n\r\n        return this.dataService.getLetterContent({\r\n            url: this.properties.getUrl,\r\n            idRender: this.properties.id,\r\n            xpath: this.getXpath(),\r\n            xpathContext: this.getContextXpath(),\r\n            idPageCache: this.properties.idPageCache\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sends the content to the server in order to save\r\n     * @param {} content\r\n     */\r\n    saveLetterContent: function (content) {\r\n        return this.dataService.saveLetterContent({\r\n            url: this.properties.saveUrl,\r\n            idRender: this.properties.id,\r\n            xpath: this.getXpath(),\r\n            xpathContext: this.getContextXpath(),\r\n            idPageCache: this.properties.idPageCache,\r\n            content: content\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Returns the letter content from the server\r\n     */\r\n    getCanGenerateLetter: function () {\r\n        return this.dataService.getCanGenerateLetter({\r\n            idRender: this.properties.id,\r\n            xpath: this.getXpath(),\r\n            xpathContext: this.getContextXpath(),\r\n            idPageCache: this.properties.idPageCache\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Saves the form\r\n     */\r\n    saveForm: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        return form.saveForm();\r\n    },\r\n\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) == false) return true;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) == false) return true;\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (properties.required) {\r\n            if (self.letterOpened == false) {\r\n                message = self.getResource(\"render-letter-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                invalidElements.push({xpath: properties.xpath, message: message});\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns the current xpath\r\n     */\r\n    getXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Returns the current context xpath\r\n     */\r\n    getContextXpath: function () {\r\n        return this.properties.xpathContext;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Form Link Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for form link renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.formLink\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Set properties\r\n        var properties = this.properties;\r\n\r\n        properties.displayType = \"value\";\r\n        properties.maximized = bizagi.util.parseBoolean(this.properties.maximized) != null ? bizagi.util.parseBoolean(this.properties.maximized) : false;\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"formLink\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            align: properties.valueAlign,\r\n            displayName: properties.displayName,\r\n            value: properties.value,\r\n            editable: properties.editable,\r\n            likeButton: bizagi.util.parseBoolean(properties.likeButton) || false\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        // Executes the same template than normal render\r\n        return this.renderControl();\r\n\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Submits a edit request for a link display form\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    submitEditRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Don't send request when the link is not editable\r\n        if (!properties.editable && !properties.value)\r\n            return null;\r\n\r\n        return self.dataService.editLinkForm({\r\n            url: properties.editUrl,\r\n            idRender: properties.id,\r\n            xpath: self.getFormLinkXpath(),\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Submits a link save request for the displayed form\r\n     * @param data\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    submitSaveRequest: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Don't send request when the link is not editable\r\n        if (!properties.editable && !properties.value)\r\n            return null;\r\n\r\n        var xpath = self.getFormLinkXpath();\r\n        var xpathContext = xpath;\r\n\r\n        if (typeof (properties.xpathContext) !== \"undefined\" && properties.xpathContext !== \"\") {\r\n            xpathContext = xpath ? properties.xpathContext + \".\" + xpath : properties.xpathContext;\r\n        }\r\n\r\n        return self.dataService.saveLinkForm({\r\n            url: properties.saveUrl,\r\n            idRender: properties.id,\r\n            xpathContext: xpathContext,\r\n            submitData: data\r\n        }).done(function (response) {\r\n            var executeSubmitOnChange = true;\r\n\r\n            if (response && response.type === \"validationMessages\")\r\n                executeSubmitOnChange = false;\r\n\r\n            if (executeSubmitOnChange)\r\n                self.submitOnChange({});\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Submits a rollback request\r\n     * @param params\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitRollbackRequest: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function(){\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value){\r\n                return null;\r\n            }\r\n            else{\r\n                return self.dataService.rollbackLinkForm({\r\n                    url: properties.rollbackUrl,\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: params ? params.idPageCache : properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Submits a commit request\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitCommitRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function(){\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value){\r\n                return null;\r\n            } else {\r\n                return self.dataService.commitLinkForm({\r\n                    url: properties.commitUrl,\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Submits a checkpoint request\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitCheckpointRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function(){\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value){\r\n                return null;\r\n            } else {\r\n                return self.dataService.sendCheckpoint({\r\n                    url: properties.checkpointUrl,\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Submits a submitData request\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitDataRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function () {\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value) {\r\n                return null;\r\n            } else {\r\n\r\n\r\n                return self.dataService.submitData({\r\n                    url: properties.checkpointUrl,\r\n                    action: \"SUBMITDATA\",\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Automatically this render is valid, so we can't check a required link\r\n    },\r\n\r\n    /**\r\n     * Get Form Link xpath to use\r\n     * @returns {*}\r\n     */\r\n    getFormLinkXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Don't do anything\r\n    }\r\n\r\n});\r\n\r\n","/*\r\n*   Name: Bizagi Render Cascading Combo Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for cascading combo renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.cascadingCombo\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n    BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX\r\n}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Create dependency collection\r\n        self.dependants = [];\r\n        self.isDependant = false;\r\n    },\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.hasLocalData = bizagi.util.isEmpty(properties.parentCombo) ? properties.hasLocalData : false;\r\n\r\n        if (properties.value && properties.value.id === undefined)\r\n            properties.value = null;\r\n\r\n        self.value = properties.value;\r\n\r\n        // Add empty node if configured\r\n        if (properties.hasLocalData)\r\n            properties.data = self.complementData(properties.data);\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        // Check if this is a dependant combo\r\n        var parentCombo = self.parentCombo = self.getParentCombo();\r\n        if (parentCombo != null) {\r\n            var renderType = bizagi.util.normalizeType(parentCombo.properties.type);\r\n\r\n            if (/^cascadingcombo$/i.test(renderType)) {\r\n                self.isDependant = true;\r\n            }\r\n        }\r\n\r\n        // Apply element plugin, set a flag to avoid dependant combo ajax requests\r\n        self.initializingCascadingCombo = true;\r\n\r\n        // Call base\r\n        var result = this._super();\r\n\r\n        if (mode !== \"execution\") {\r\n            self.initializingCascadingCombo = false;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        self.initializingCascadingCombo = false;\r\n\r\n        // Bind with parent combo\r\n        if (self.isDependant) {\r\n            self.parentCombo.bindDependantCombo(self);\r\n        }\r\n    },\r\n\r\n    configureReadOnlyHandlers: function () {\r\n        var self = this;\r\n        self.initializingCascadingCombo = false;\r\n\r\n        // Bind with parent combo\r\n        if (self.isDependant) {\r\n            self.parentCombo.bindDependantCombo(self);\r\n        }\r\n    },\r\n    /*\r\n    *   Refresh the combo, after it has been painted\r\n    */\r\n    refresh: function (params, isInitialValue) {\r\n        var self = this;\r\n\r\n        // Wait until current element is rendered\r\n        $.when(self.isRendered()).done(function () {\r\n\r\n            // Unbind previous handler\r\n            // self.parentCombo.unbindDependantCombo(self);\r\n\r\n            // Clear current control\r\n            var control = self.getControl();\r\n            var mode = self.getMode();\r\n            control.empty();\r\n\r\n            // Render combo again\r\n            $.when(self.renderCombo(params)).then(function (html) {\r\n                // Append new element\r\n                control.html(html);\r\n\r\n                // Post-render method\r\n                self.postRender();\r\n\r\n                if (mode == \"execution\") {\r\n                    self.configureHandlers();\r\n                }\r\n\r\n                // Set current value\r\n                if (self.getValue() !== undefined) {\r\n                    self.setDisplayValue(self.getValue());\r\n                }\r\n\r\n                if (self.deferredVisible) {\r\n                    self.deferredVisible.resolve();\r\n                }\r\n\r\n                self.trigger(\"select\", [self.value, isInitialValue]);\r\n\r\n            });\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Fetch the data into a deferred\r\n    */\r\n    getData: function (params) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        // Just execute ajax calls when rendering in execution mode\r\n        if (mode != \"execution\") return self.getDummyData();\r\n\r\n        // Do not load dependant combos when there are no parent id\r\n        if (self.isDependant) {\r\n            if (self.parentCombo && params) {\r\n                self.properties.remoteDataLoaded = false;\r\n            }\r\n\r\n            // Return an empty array when there are no parent defined when the combo is dependant\r\n\r\n            var parentValue = (self.parentCombo.selectedValue) ? self.parentCombo.selectedValue.id : '';\r\n\r\n            if (parentValue != '') {\r\n                return this._super(params);\r\n            } else {\r\n                return [];\r\n            }\r\n        }\r\n\r\n        return this._super(params);\r\n    },\r\n\r\n\r\n    /* \r\n    *   Bind the combos to create the cascading feature\r\n    */\r\n    bindDependantCombo: function (dependantCombo) {\r\n        var self = this;\r\n        var renderType = bizagi.util.normalizeType(dependantCombo.properties.type);\r\n\r\n        // Check it is a cascading combo\r\n        if (/^cascadingcombo$/i.test(renderType)) {\r\n\r\n            // Append to dependant combos\r\n            self.dependants.push(dependantCombo);\r\n\r\n            // When this combo is selected we need to make the other combo to auto fill with an extra filter\r\n            dependantCombo.onChangeFunction = function (event, item, isInitialValue) {\r\n                // Fill items for next combo\r\n                self.refreshDependantCombo(dependantCombo, item.id, self.focusDependant, isInitialValue);\r\n\r\n                //if initial value is true, it prevents deleting the next combo\r\n                if (!isInitialValue) {\r\n                    // Clean next inputs\r\n                    dependantCombo.cleanInput();\r\n                }\r\n            };\r\n\r\n            if (!self.isEventBinded(\"select\")) {\r\n                self.bind(\"select\", dependantCombo.onChangeFunction);\r\n            }\r\n\r\n            // After the event binding has been made, we need to fill the new dependant render if this instance (the parent) has a value\r\n            if (!bizagi.util.isEmpty(self.getValue())) {\r\n\r\n                // Auto fill dependant items with current value\r\n                if (self.properties.hasLocalData) {\r\n                    self.refreshDependantCombo(dependantCombo, self.getValue().id);\r\n                }\r\n\r\n            }\r\n        }\r\n    },\r\n    isEventBinded: function (event) {\r\n        if (typeof $._data(this.observableElement.get(0), \"events\") === \"undefined\") {\r\n            return false;\r\n        } else {\r\n            if (typeof $._data(this.observableElement.get(0), \"events\")[event] === \"undefined\") {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /* \r\n    *   Unbind the combos that are being redrawn\r\n    */\r\n    unbindDependantCombo: function (dependantCombo) {\r\n        // When this combo is selected we need to make the other combo to auto fill with an extra filter\r\n        this.unbind(\"select\", dependantCombo.onChangeFunction);\r\n    },\r\n\r\n    /*\r\n    *   Fills the next dependant combo based on the given value\r\n    */\r\n    refreshDependantCombo: function (dependant, parentValue, focus, isInitialValue) {\r\n        var self = this;\r\n        var params = {};\r\n        params[self.Class.BA_ACTION_PARAMETER_PREFIX + \"parent\"] = parentValue;\r\n\r\n        dependant.deferredVisible = $.Deferred();\r\n\r\n        if (!isInitialValue) {\r\n            // Clear dependant value\r\n            dependant.setValue(\"\", false);\r\n        }\r\n\r\n        dependant.refresh(params, isInitialValue);\r\n\r\n        if (focus) {\r\n            $.when(dependant.deferredVisible.promise()).done(function () {\r\n                dependant.inputCombo.trigger(\"click\");\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Empty html when render from action\r\n     */\r\n\r\n    emptyControlByChangeEditability: function () {\r\n        var control = this.getControl();\r\n        control.empty();\r\n    },\r\n\r\n    /* \r\n    *   Cleans the combo value\r\n    */\r\n    cleanInput: function () {\r\n        this.triggerHandler(\"select\", {id: 0});\r\n    },\r\n\r\n    /*\r\n    *   Search for the other cascading combo refering this one, by idRender\r\n    */\r\n    getParentCombo: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Check if parentCombo is defined\r\n        if (properties.parentCombo === undefined)\r\n            return null;\r\n\r\n        // Get form reference\r\n        var form = self.getFormContainer();\r\n        var renderType = bizagi.util.normalizeType(self.properties.type);\r\n        var controls = /^cascadingcombo$/i.test(renderType) ? form.getRenderByType(properties.type) : [];\r\n\r\n        var i = 0;\r\n        var j = 0;\r\n        var parents = [];\r\n\r\n        var control = null;\r\n\r\n        for (; i < controls.length; i++) {\r\n            if (properties.parentCombo === controls[i].properties.id) {\r\n                parents.push({control: controls[i], index: i});\r\n            }\r\n        }\r\n\r\n        if (parents.length > 1) {\r\n            var parentLength, parent, xpathParent, parentArray;\r\n\r\n            for (; j < parents.length; j++) {\r\n                parent = parents[j].control;\r\n                xpathParent = parent.properties.xpath;\r\n                parentArray = xpathParent.split(\".\");\r\n                parentLength = parentArray.length;\r\n                xpathParent = parentArray.slice(0, parentLength - 1).join(\".\");\r\n\r\n                if (xpathParent === properties.xpath) {\r\n                    control = controls[parents[j].index];\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            control = form.getRenderById(properties.parentCombo);\r\n        }\r\n\r\n        // Return parent combo\r\n        return control;\r\n    },\r\n\r\n    /* \r\n    *  Method to determine if the render value can be sent to the server or not\r\n    */\r\n    canBeSent: function () {\r\n        var self = this;\r\n\r\n        // If the render has dependants we can't send to the server\r\n        return self._super() && bizagi.util.isMapEmpty(self.dependants);\r\n    },\r\n\r\n    /*\r\n    *   Determines if we need to show the current data regardless if it belongs to data or not\r\n    *   Can be overriden to change behaviour\r\n    */\r\n    showCurrentData: function () {\r\n        var mode = this.getMode();\r\n\r\n        if (mode != \"execution\") return true;\r\n        return false;\r\n    },\r\n\r\n    /*\r\n    *   Enables submit on change feature for the current render\r\n    */\r\n    configureSubmitOnChange: function () {\r\n        var self = this;\r\n\r\n        if (!self.configured) {\r\n            // Call super\r\n            self._super();\r\n            self.configured = true;\r\n        }\r\n    },\r\n\r\n    internalSubmitOnChange: function (data, bRefreshForm) {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        if (self.isDependant && self.canBeSent() && self.itemSelected !== undefined)\r\n            return self._super(data, bRefreshForm);\r\n        return defer.resolve();\r\n    },\r\n    /*\r\n    *   Sets the initial value for the renders\r\n    */\r\n    internalSetInitialValue: function () {\r\n        var self = this;\r\n        // Call original method\r\n        self._super();\r\n\r\n        if (self.value && self.isDependant == false) {\r\n            self.internalSetInitialValueFlag = true;\r\n            self.trigger(\"select\", [self.value, true]);\r\n        }\r\n\r\n        self.internalSetInitialValueFlag = false;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi Render List Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for list renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.list\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data \r\n     * @returns {} \r\n     */\r\n    initializeData: function(data) {      \r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.listSize = properties.listSize || 0;\r\n    },\r\n\r\n    /**\r\n     * Gets the template used by the combo render can be overriden in subclasses\r\n     * to reuse logic and just change the template\r\n     * @returns {} \r\n     */\r\n    getTemplateName: function() {\r\n        return \"list\";\r\n    },\r\n\r\n    /**\r\n     * Determines if we need to show the current data regardless if it belongs\r\n     * to data or not Can be overriden to change behaviour    \r\n     * @returns {} \r\n     */\r\n    showCurrentData: function() {\r\n        return false;\r\n    }\r\n\r\n});","/*\r\n *   Name: Bizagi Render MultiSelect Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for multiselect renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.multiSelect\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) !== null ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.maxRecords = Number(properties.maxRecords) || 20;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"list-multiselect\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            editable: properties.editable,\r\n            align: properties.valueAlign\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"list-multiselect\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            editable: properties.editable,\r\n            align: properties.valueAlign\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Fetch the data into a deferred\r\n     * @returns {*[]}\r\n     */\r\n    getData: function () {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n        var properties = this.properties;\r\n\r\n        // Go to server\r\n        self.dataService.multiaction().getData({\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contexttype || null,\r\n            idPageCache: properties.idPageCache\r\n        }).done(function (data) {\r\n\r\n            properties.data = data;\r\n            defer.resolve(properties.data);\r\n\r\n        }).fail(function (data) {\r\n            if (data.type === \"not-processed\")\r\n                return;\r\n\r\n            // Show error from server\r\n            var auxMsg = \"\";\r\n            var form = self.getFormContainer();\r\n            var msgObj = self.properties.displayName + \": \";\r\n\r\n            if (typeof data == \"string\") {\r\n                auxMsg = JSON && JSON.parse(data) || $.parseJSON(data);\r\n            } else {\r\n                auxMsg = data;\r\n            }\r\n\r\n            msgObj += auxMsg.message;\r\n\r\n            form.addValidationMessage(msgObj);\r\n\r\n            defer.reject(data);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        triggerEvents = triggerEvents !== undefined ? triggerEvents : true;\r\n\r\n        value = JSON.encode({\"value\": value});\r\n\r\n        this._super(value, triggerEvents);\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns the internal value\r\n     * @returns {*|Array}\r\n     */\r\n    getValue: function () {\r\n        return this.value || [];\r\n    },\r\n\r\n    /**\r\n     * Get list of data\r\n     * @returns {*|Array}\r\n     */\r\n    getDataValue: function () {\r\n        var list;\r\n\r\n        try {\r\n            list = JSON.parse(this.value);\r\n\r\n            return list.value || [];\r\n        } catch (e) {\r\n            return [];\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if a render has no value for required validation\r\n     * @returns {*|Array|boolean}\r\n     */\r\n    hasValue: function () {\r\n        var values = this.getDataValue();\r\n\r\n        return values && values.length > 0;\r\n    },\r\n\r\n    getElementsToStylize: function (context) {\r\n        return $(\".bz-multiselect .bz-multiselect__tag:not(.bz-multiselect__plus)\", context);\r\n    },\r\n\r\n    /**\r\n     * Add elements to global value\r\n     * @param value\r\n     */\r\n    addElement: function (value) {\r\n        var newValue = this.getDataValue();\r\n\r\n        newValue.push(value);\r\n\r\n        this.setValue(newValue);\r\n    },\r\n\r\n    /**\r\n     * Remove elements to global value\r\n     * @param value\r\n     */\r\n    removeElement: function (value) {\r\n        var idToRemove = value.id;\r\n        var newValue = this.getDataValue()\r\n            .filter(function (item) {\r\n                return item.id !== idToRemove;\r\n            });\r\n\r\n        this.setValue(newValue);\r\n    },\r\n\r\n    /**\r\n     * Submit the selected data to the server in order to be saved\r\n     */\r\n    submitData: function () {\r\n        var data = {};\r\n\r\n        // Add current data\r\n        data[this.properties.xpath] = this.getValue();\r\n\r\n        // Executes submit on change\r\n        this.submitOnChange(data);\r\n    },\r\n\r\n    /**\r\n     * Mark a item how checked\r\n     * @param id\r\n     * @returns {*}\r\n     */\r\n    markAsChecked: function (id) {\r\n        var self = this;\r\n\r\n        return self.selected.some(function (item, index) {\r\n            var found = item.id === id;\r\n\r\n            if (found) self.selected.splice(index, 1);\r\n            return found;\r\n        });\r\n    },\r\n\r\n    isChecked: function (values, id) {\r\n        return values.some(function (item) {\r\n            return item.id == id;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to verify if can add more items\r\n     * @param $tagsContainer\r\n     * @returns {boolean}\r\n     */\r\n    canAddMoreItems: function ($tagsContainer) {\r\n        var self = this;\r\n        var containerWidth = parseInt($tagsContainer.css(\"width\"));\r\n        var $children = $tagsContainer.children();\r\n\r\n        var childrenWidth = $children\r\n            .toArray()\r\n            .reduce(function (acc, child) {\r\n                acc += self.getElementWidth(child);\r\n                return acc;\r\n            }, 0);\r\n\r\n        return containerWidth > (childrenWidth + self.Class.MORE_OPTION_WIDTH)\r\n\r\n    },\r\n\r\n    /**\r\n     * getElementWidth\r\n     * @param element\r\n     * @returns {*}\r\n     */\r\n    getElementWidth: function (element) {\r\n        var styles = window.getComputedStyle(element);\r\n        var outerWidth = $(element).outerWidth();\r\n        return outerWidth + [\r\n            \"padding-left\",\r\n            \"padding-right\",\r\n            \"margin-left\",\r\n            \"margin-right\"\r\n        ].reduce(function (acc, property) {\r\n            acc += parseInt(styles[property]);\r\n            return acc;\r\n        }, 0);\r\n    },\r\n\r\n    /**\r\n     * Filtering list of elements\r\n     * @param query\r\n     * @param $container\r\n     */\r\n    filterList: function (query, $container) {\r\n\r\n        $container.filter(function () {\r\n            var stringContainer = $(this).text().toUpperCase();\r\n            var stringToSearch = query.toUpperCase();\r\n\r\n            if (stringContainer.indexOf(stringToSearch) >= 0) {\r\n                return $(this);\r\n            } else {\r\n                $(this).hide();\r\n            }\r\n        }).show();\r\n\r\n    },\r\n\r\n    /**\r\n     * addSelectedElements\r\n     */\r\n    addSelectedElements: function () {\r\n    },\r\n\r\n    /**\r\n     * Find item by id\r\n     * @param id\r\n     * @returns {[]}\r\n     */\r\n    findItemById: function (id) {\r\n        return (this.properties.data || []).find(function (item) {\r\n            return item.id == id;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n        return bizagi.util.formatItem(value);\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi Render Search List Control\r\n*   Author: UI Forms Team\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.searchList\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data \r\n     * @returns {} \r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.maxRecords = Number(properties.maxRecords) || 20;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) !== null ? bizagi.util.parseBoolean(properties.editable) : true;\r\n\r\n        // Set value\r\n        self.setValue(properties.value);\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {} \r\n     */\r\n    renderControl: function() {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"searchList\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            value: properties.value,\r\n            allowTyping: properties.allowTyping,\r\n            items: properties.value,\r\n            hasSearchForm: properties.searchForms ? true : false,\r\n            editable: properties.editable\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {} \r\n     */\r\n    renderReadOnly: function() {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param {} value \r\n     * @returns {} \r\n     */\r\n    setValue: function(value) {\r\n        this.value = JSON.encode({ \"value\": value });\r\n        this.triggerRenderChange();\r\n    },\r\n\r\n    /**\r\n     * Add elements to global value\r\n     * @param value = { id:integer,value:[string || array] }\r\n     * @returns {} \r\n     */\r\n    addElement: function(value) {\r\n        var list = JSON.parse(this.value);\r\n\r\n        list.value.push(value);\r\n\r\n        this.setValue(list.value);\r\n    },\r\n\r\n    /**\r\n     * Remove elements to global value\r\n     * @param value = { id:integer }\r\n     * @returns {} \r\n     */\r\n    removeElement: function(value) {\r\n        var list = JSON.parse(this.value);\r\n        var result = [];\r\n\r\n        $.each(list.value, function(key, val) {\r\n            if (val.id != value.id) {\r\n                result.push({ id: val.id, value: val.value });\r\n            }\r\n        });\r\n\r\n        this.setValue(result);\r\n    },\r\n\r\n    /**\r\n     * Remove last element to global value\r\n     * @returns {} \r\n     */\r\n    removeLastElement: function() {\r\n        var list = JSON.parse(this.value);\r\n\r\n        if (list.value.length > 0) {\r\n            list.value.pop();\r\n            this.setValue(list.value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Fetch the data into a deferred\r\n     * @param {} params \r\n     * @returns {} \r\n     */\r\n    getData: function(params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n\r\n        // Resolve with remote data\r\n        self.dataService.getSearchData({\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            term: properties.term,\r\n            extra: params\r\n        }).done(function(data) {\r\n            // Resolve with fetched data\r\n            properties.data = data;\r\n            defer.resolve(properties.data);\r\n        }).fail(function(data) {\r\n            var hideStatus = data.hideStatus || false;\r\n\r\n            defer.resolve({});\r\n\r\n            if (!hideStatus) {\r\n                self.trigger(\"onSearchError\", data);\r\n            }\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Submits the selected data to the server in order to be saved\r\n     * @returns {} \r\n     */\r\n    submitData: function() {\r\n        var data = {};\r\n\r\n        // Add current data\r\n        data[this.properties.xpath] = this.getValue();\r\n\r\n        // Executes submit on change\r\n        this.submitOnChange(data);\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {} \r\n     */\r\n    canBeSent: function() {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Check if the control has value\r\n     * @returns {} \r\n     */\r\n    hasValue: function() {\r\n        var list = this.getListItems();\r\n\r\n        return list.length > 0;\r\n    },\r\n\r\n    getListItems: function(){\r\n        var value = this.getValue();\r\n        var finalValue = typeof (value) === \"string\" ? JSON.parse(value).value : value.value;\r\n\r\n        return finalValue || [];\r\n    },\r\n    \r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n        return bizagi.util.formatItem(value);\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Money Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for money numbers\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.money\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n        var format = this.getResource(\"numericFormat\");\r\n\r\n        // Configures symbol\r\n        properties.showsymbol = typeof (properties.showsymbol) !== \"undefined\" ? properties.showsymbol : true;\r\n\r\n        if (properties.showsymbol) {\r\n            var symbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.symbol : format.symbol;\r\n            properties.symbol = properties.currencySymbol ? properties.currencySymbol : symbol;\r\n        } else {\r\n            properties.symbol = \"\";\r\n        }\r\n\r\n        properties.groupDigits = true;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Radio Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for radio renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.radio\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.horizontal = bizagi.util.parseBoolean(properties.horizontal) || false;\r\n\r\n        // Set a random identifier to fix a problem when using radio buttons inside grids and the plugin mismatch the elements because all of them have the same name\r\n        properties.unique = bizagi.util.randomNumber(1000, 1000000);\r\n    },\r\n\r\n    /**\r\n     * Gets the template used by the combo render\r\n     * Can be overridden in subclasses to reuse logic and just change the template\r\n     * @returns {string}\r\n     */\r\n    getTemplateName: function () {\r\n        return \"radio\";\r\n    },\r\n\r\n    /**\r\n     * Determines if we need to show the empty node or not\r\n     * Can be overridden to change behaviour\r\n     * @returns {boolean}\r\n     */\r\n    showEmpty: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Determines if we need to show the current data regardless if it belongs to data or not\r\n     * Can be overridden to change behaviour\r\n     * @returns {boolean}\r\n     */\r\n    showCurrentData: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Adds custom parameters to process the template\r\n     * @returns {{vertical: boolean}}\r\n     */\r\n    getTemplateParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return {\r\n            vertical: !properties.horizontal,\r\n            horizontal: properties.horizontal\r\n        };\r\n    },\r\n\r\n    /**\r\n     * Cleans current data\r\n     */\r\n    cleanData: function () {\r\n        var self = this;\r\n        var value = {id: \"\", label: \"\"};\r\n        var selectedItem = self.element.find(\".ui-radio-state-checked\");\r\n\r\n        selectedItem.removeClass(\"ui-radio-state-checked\");\r\n        self.setDisplayValue(value);\r\n        self.setValue(value, false);\r\n        self.clearDisplayValue();\r\n    },\r\n\r\n    /**\r\n     * Check value of control is changed\r\n     * @returns {boolean}\r\n     */\r\n    controlValueIsChanged: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var value = self.getValue();\r\n        var compareValue = properties.originalValue;\r\n        var baseValue = properties.defaultValue;\r\n\r\n        var result = true;\r\n\r\n        if (value && value.length !== undefined) {\r\n            value = value[0];\r\n        }\r\n        if (compareValue && compareValue.length !== undefined) {\r\n            compareValue = compareValue[0];\r\n        }\r\n        if (baseValue && baseValue.length !== undefined) {\r\n            baseValue = baseValue[0];\r\n        }\r\n\r\n        value = value && value.id !== undefined ? value.id : value;\r\n        compareValue = compareValue && compareValue.id !== undefined ? compareValue.id : compareValue;\r\n        baseValue = baseValue && baseValue.id !== undefined ? baseValue.id : baseValue;\r\n\r\n        if (baseValue !== undefined) {\r\n            if ((baseValue == value) && (value == compareValue)) {\r\n                result = false;\r\n            } else {\r\n                if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                    result = false;\r\n                } else {\r\n                    result = (compareValue == value) ? false : true;\r\n                }\r\n            }\r\n        } else {\r\n            if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue == value) ? false : true;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n});\r\n\r\n","/**\r\n*   Name: Bizagi Render Image Class\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define basic stuff for image control\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.image\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n    BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX,\r\n    BA_PAGE_CACHE: bizagi.render.services.service.BA_PAGE_CACHE\r\n}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var maxSize = 4091904;\r\n\r\n        if(properties.maxSize) {\r\n            maxSize = Number(properties.maxSize);\r\n        } else if (typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\") {\r\n            maxSize = Number(BIZAGI_SETTINGS.UploadMaxFileSize);\r\n        }\r\n\r\n        properties.maxSize = maxSize;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) === true;\r\n        properties.validExtensions = properties.validExtensions || \"\";\r\n\r\n        if (properties.validExtensions.length > 0 && properties.validExtensions.indexOf(\".\") < 0) {\r\n            var singleExtensions = properties.validExtensions.replace(/\\ /gi, '').split(\";\");\r\n\r\n            for (var i = 0; i < singleExtensions.length; i++) {\r\n                if (singleExtensions[i].length != 0) {\r\n                    singleExtensions[i] = \"*.\" + singleExtensions[i].replaceAll(\" \", \"\");\r\n                } else {\r\n                    //Removes the empty element\r\n                    var index = singleExtensions.indexOf(singleExtensions[i]);\r\n                    singleExtensions.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            properties.validExtensions = singleExtensions.join(\";\");\r\n        }\r\n\r\n        properties.addUrl = properties.addUrl || self.dataService.getUploadAddFileUrl(properties.isUserPreference);\r\n        properties.allowDelete = bizagi.util.parseBoolean(properties.allowDelete) !== null\r\n\r\n        properties.isAutoWidth = false;\r\n        properties.isAutoHeight = false;\r\n\r\n        if (properties.width === -1) {\r\n            properties.width = \"100%\";\r\n            properties.isAutoWidth = true;\r\n        } else {\r\n            properties.width = properties.width + \"px\";\r\n        }\r\n\r\n        if (properties.height === -1) {\r\n            properties.height = \"auto\";\r\n            properties.isAutoHeight = true;\r\n        } else {\r\n            properties.height = properties.height + \"px\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var def = new $.Deferred(); //design\r\n        var template = self.renderFactory.getTemplate(\"image\");        \r\n\r\n        $.when(self.buildItemUrl()).done(function (dataUrl) {\r\n            if (!self.isDisposed()) {\r\n                self.properties.url = dataUrl !== \"\" ? dataUrl : \"\";\r\n                self.properties.value = self.value = self.properties.url.length > 0 ? [self.properties.url] : null;\r\n                self.setValue(self.properties.value);                \r\n\r\n                var html = $.fasttmpl(template, { url: self.properties.url });\r\n                def.resolve(html);\r\n            }\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"image-readonly\");\r\n        var html = $.fasttmpl(template);\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * This method return the name of template of items, please make a override in each device\r\n     * @returns {*}\r\n     */\r\n    getTemplateItem: function () {\r\n        return this.renderFactory.getTemplate(\"image-item\");\r\n    },\r\n\r\n    /**\r\n     * Renders a single upload item\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    renderUploadItem: function (file) {\r\n        var self = this;\r\n        var mode = self.getMode();        \r\n        var def = new $.Deferred();\r\n        var template = self.getTemplateItem();\r\n\r\n        $.when(self.buildItemUrl()).done(function (dataUrl) {\r\n            var url = dataUrl || \"\";\r\n\r\n            var html = $.fasttmpl(template, {\r\n                url: url,\r\n                allowDelete: self.properties.allowDelete,\r\n                editable: self.properties.editable,\r\n                mode: mode,                \r\n            });\r\n\r\n            self.properties.url = url;\r\n            self.properties.value = url.length > 0 ? [url] : null;\r\n\r\n            def.resolve(html);\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param params\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var def = new $.Deferred();\r\n        var url = \"\";\r\n\r\n        if (!this.isExecutionMode()) {\r\n            url = \"\"; // TODO: Review the use of \"javascript:void(0);\";\r\n            def.resolve(url);\r\n        } else {\r\n            var parameters = {\r\n                url: properties.dataUrl,\r\n                xpath: properties.xpath,\r\n                idRender: properties.id,\r\n                xpathContext: properties.xpathContext,\r\n                idPageCache: properties.idPageCache,\r\n                property: params && params.property ? params.property : \"fileContent\",\r\n                dataType: \"text\"\r\n            };\r\n\r\n            if (properties.contexttype) {\r\n                parameters.contexttype = properties.contexttype;\r\n            }\r\n\r\n            if (properties.isUserPreference) {\r\n                self.currentUser = bizagi.currentUser.idUser;\r\n                parameters.xpathContext = \"@Context.Users[id == \" + self.currentUser + \"]\";\r\n                parameters.contexttype = \"entity\";\r\n                parameters.surrogatekey = self.currentUser;\r\n            }\r\n\r\n            self.dataService.multiaction().getPropertyData(parameters, \"text\")\r\n                .done(function (data) {\r\n                    if (data.charAt(0) === \"\\\"\") {\r\n                        data = data.slice(1, -1);\r\n                    }\r\n\r\n                    if (data !== \"\") {\r\n                        url = \"data:image/png;base64,\" + data;\r\n                    }\r\n\r\n                    def.resolve(url);\r\n                });\r\n        }\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    buildItemUrlOffline: function(parameters){\r\n        var def = new $.Deferred();\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var formParams = self.getFormParams();\r\n        var parameters = {\r\n            idCase: formParams.idCase,\r\n            idWorkitem: formParams.idWorkitem,\r\n            id: properties.xpath,\r\n            offlineType: formParams.offlineType\r\n        }\r\n        $.when(self.dataService.getOfflineImage(parameters, \"base64\"))\r\n        .done( function(imageValue){\r\n            properties.value = imageValue;\r\n            def.resolve(bizagi.util.getDataUrl(properties));\r\n        });\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Create an image offline\r\n     * @param path File in Browser or Path in Mobile Devices\r\n     * @param promise Promise to be resolved when save is completed\r\n     */\r\n    saveImageOffline: function (path, promise) {\r\n        var self = this;        \r\n        var blobPromise = new $.Deferred();\r\n\r\n        if(self.isNative){\r\n            var fileName = self.fileProperties.name;            \r\n            if (!bizagi.util.isAndroidDevice()) {\r\n                path = bizagi.util.media.normalizeIOSFilePath(path);\r\n            }\r\n            else{\r\n                // Fix android 4.4 getting images from recent folder\r\n                path = bizagi.util.media.getImagePath(path);\r\n            }\r\n            \r\n            var errorHandler = function (error) {\r\n                bizagi.log('error converting path to blob', error);  \r\n                blobPromise.reject(error);\r\n            };\r\n    \r\n            window.resolveLocalFileSystemURL(path, function (fileEntry) {\r\n                fileEntry.file(function (file) {    \r\n                    var reader = new FileReader();\r\n                    reader.onloadend = function () {\r\n                        var blob = new Blob([this.result], {type: file.type});\r\n                        blob.name = fileName;\r\n                        blobPromise.resolve(blob);\r\n                    }    \r\n                    reader.readAsArrayBuffer(file);\r\n                }, errorHandler);\r\n            }, errorHandler);\r\n        }\r\n        else {\r\n            blobPromise.resolve(path);\r\n        }        \r\n\r\n        $.when(blobPromise)\r\n        .done( function(blobImage) {\r\n            // Save the image as attachment \r\n            var formParams = self.getFormParams();\r\n            var parameters = {\r\n                idCase: formParams.idCase,\r\n                idWorkitem: formParams.idWorkitem,\r\n                id: self.properties.xpath,\r\n                operationType: \"edition\",\r\n                offlineType: formParams.offlineType\r\n            }\r\n\r\n            $.when(self.dataService.saveOfflineImage(parameters, blobImage))\r\n            .done( function() {\r\n                promise.resolve();\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url in real size\r\n     * @returns {*}\r\n     */\r\n    buildFullItemUrl: function () {\r\n        var def = new $.Deferred();\r\n\r\n        $.when(this.buildItemUrl({\"property\": \"fileFullContent\"}))\r\n            .done(function (dataUrl) {\r\n                def.resolve(dataUrl);\r\n            });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        // Call base\r\n        this._super(value, triggerEvents);\r\n    },\r\n\r\n    /**\r\n     * Returns the internal value\r\n     * @returns {*|Array}\r\n     */\r\n    getValue: function () {\r\n        return this.properties.value || [];\r\n    },\r\n\r\n    /**\r\n     * Check if control is valid or not\r\n     * @param invalidElements\r\n     * @returns {boolean}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(self.properties.visible) === false) {\r\n            return true;\r\n        }\r\n\r\n        // Don't check non- editable renders\r\n        if (bizagi.util.parseBoolean(self.properties.editable) === false) {\r\n            return true;\r\n        }\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (self.properties.required) {\r\n            var newRow = self.grid && self.grid.isFromCreatedRow.apply(self);\r\n\r\n            if (!newRow) {\r\n                var value = self.getValue();\r\n\r\n                if (value.length === 0) {\r\n                    var message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", self.properties.displayName);\r\n                    invalidElements.push({ xpath: self.properties.xpath, message: message });\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Build add params to send to the server\r\n     */\r\n    buildAddParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var data = {};\r\n\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = self.getUploadXpath();\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = properties.id;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = properties.xpathContext;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = properties.idPageCache;\r\n        data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = form.properties.sessionId;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = 'savefile';\r\n\r\n        if (properties.contexttype) {\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = properties.contexttype;\r\n        }\r\n\r\n        try {\r\n            if (typeof (BIZAGI_SESSION_NAME) !== \"undefined\") {\r\n                data[BIZAGI_SESSION_NAME] = form.properties.sessionId;\r\n            } else {\r\n                data[\"JSESSIONID\"] = form.properties.sessionId;\r\n            }\r\n        } catch (e) {\r\n            data[\"JSESSIONID\"] = form.properties.sessionId;\r\n        }\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getUploadXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Clean html because some scenarios render twice\r\n     */\r\n    emptyControlByAsyncRenderDeferred: function () {\r\n        var $control = this.getControl();\r\n        $control.empty();\r\n    }\r\n});","/*\r\n*   Name: BizAgi User field render\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define the basic behavior for userfields\r\n*/\r\n$.Class.extend(\"bizagi.rendering.userfieldDefinition\", {}, {\r\n\r\n    /*************************************************************/\r\n    /* Private section of the userfield                          */\r\n    /*************************************************************/\r\n\r\n    /*\r\n    *   Method to be overriden by userfields in order to ensure that custom files are loaded before the execution\r\n    */\r\n    getFileDependencies: function () {\r\n        return null;\r\n    },\r\n\r\n    postRender: function () {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super();\r\n\r\n        var defer = $.Deferred();\r\n        var fileDependencies = self.getFileDependencies();\r\n        if (fileDependencies && fileDependencies.length > 0) {\r\n            bizagi.loader.loadFile(fileDependencies)\r\n\t\t\t.then(function () {\r\n\t\t\t    // After all dependencies has been resolved\r\n\t\t\t    self.internalRenderControl();\r\n\t\t\t    defer.resolve();\r\n\t\t\t});\r\n\r\n        } else {\r\n            $.when( self.renderUserfieldControl()).done(function () {\r\n                defer.resolve();\r\n            });\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    renderUserfieldControl: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n        var def = new $.Deferred();\r\n\r\n        if (properties.extendedData && properties.extendedData.length > 0) {\r\n            self.extendedData = bizagi.services.ajax.parseJSON(properties.extendedData);\r\n        } else {\r\n            self.extendedData = {};\r\n        }\r\n\r\n\r\n        var loadUserfield = function () {\r\n            var userEditableControl = self.getEditableControl();\r\n            if (userEditableControl) {\r\n                self.input = control.html(userEditableControl);\r\n            }\r\n            self.renderComplex();\r\n            def.resolve();\r\n        };\r\n\r\n        \r\n            loadUserfield();\r\n    \r\n        \r\n        return def.promise();\r\n    },\r\n\r\n    postRenderReadOnly: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n\r\n        if (properties.extendedData && properties.extendedData.length > 0) {\r\n            self.extendedData = bizagi.services.ajax.parseJSON(properties.extendedData);\r\n        } else {\r\n            self.extendedData = {};\r\n        }\r\n\r\n        var loadUserfieldReadOnly = function () {\r\n            try {\r\n                var userReadOnlyControl = self.getReadonlyControl();\r\n                if (userReadOnlyControl) {\r\n                    self.input = control.html(userReadOnlyControl);\r\n                }                                                 \r\n                self.renderComplex();\r\n                \r\n            } catch (error) {\r\n                var displayName = self.properties.displayName || \"Widget\";\r\n                control.html(\"<h6>\" + displayName  + \"</h6>\")\r\n            }\r\n            \r\n        };\r\n\r\n        if (self.ready) {\r\n            self.ready().done(function () {\r\n                loadUserfieldReadOnly();\r\n            });\r\n        } else {\r\n            loadUserfieldReadOnly();\r\n        }\r\n    },\r\n\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n        return self.getReadonlyValue();\r\n    },\r\n\r\n    /*\r\n    *   Sets the value in the rendered control \r\n    */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self.setValue(value);\r\n\r\n        // Set editable value in control\r\n        self.setEditableValue(value);\r\n    },\r\n\r\n    getValue: function () {\r\n        var self = this;\r\n        return self.getEditableValue();\r\n    },\r\n\r\n    getPropertyValue: function (propertyName, params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n        self.dataService.multiaction().getPropertyData({\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            property: propertyName,\r\n            extra: params,\r\n            dataType: params ? params.dataType : null\r\n        }).done(function (data) {\r\n            if (data.type == \"error\") {\r\n                // Workflow engine error, we gotta show it with error\r\n                self.getFormContainer().addErrorMessage(data.message);\r\n                defer.reject(data);\r\n            } else {\r\n                defer.resolve(data);\r\n            }\r\n        }).fail(function (jqXHR, textStatus, errorThrown) {\r\n            defer.reject(jqXHR, textStatus, errorThrown);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Saves the form\r\n    */\r\n    saveForm: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        return form.saveForm();\r\n    },\r\n\r\n    /**\r\n    * Returns all the elements that match the given xpath\r\n    */\r\n    getRenderElements: function (xpath) {\r\n        var self = this;\r\n        var result = $();\r\n        var controls = self.getFormContainer().getRenders(xpath);\r\n        $.each(controls, function (i, item) {\r\n            result = result.add($(item.element));\r\n        });\r\n\r\n        return result;\r\n    },\r\n\r\n    getServerResourceURL: function (resource) {\r\n        var self = this;\r\n        var url = \"Rest/Userfields/{0}/resource/{1}/{2}\";\r\n        url = url.replace(\"{0}\", self.properties.userfieldGuid);\r\n        resource = resource.replace(\"\\\\\", \"__\").replace(\"/\", \"__\");\r\n        var device = bizagi.util.detectDevice();\r\n        url = url.replace(\"{1}\", device);\r\n        url = url.replace(\"{2}\", resource);\r\n        //Rest/Userfields/{0}/resource/desktop/{1}\r\n        return url;\r\n    },\r\n\r\n    /**\r\n    * Returns all the elements that match the given xpath\r\n    */\r\n    getRenderValue: function (xpath) {\r\n        var self = this;\r\n        var controls = self.getFormContainer().getRenders(xpath);\r\n        var control;\r\n        $.each(controls, function (index, item) {\r\n            if (!control || item.properties.editable) {\r\n                control = item;\r\n            }\r\n        });\r\n        if (control) {\r\n            return control.getValue();\r\n        } else {\r\n            return null;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Refresh the current form\r\n    */\r\n    refreshForm: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var form = self.getFormContainer();\r\n        form.refreshForm(properties.id);\r\n    },\r\n\r\n    /*\r\n    * Shows a jquery dialog\r\n    */\r\n    showDialog: function (url, params) {\r\n        bizagi.util.mustImplement(\"Must implement the showDialog method\");\r\n    },\r\n\r\n    /*\r\n    *   Shows a browser popup\r\n    */\r\n    showPopup: function (url, params) {\r\n        bizagi.util.mustImplement(\"Must implement the showPopup method\");\r\n    },\r\n\r\n    updateOriginalValue: function () {\r\n        var self = this;\r\n        self.properties.originalValue = self.value = self.properties.value;\r\n    }\r\n\r\n\r\n});\r\n\r\n\r\n$.Class.extend(\"bizagi.rendering.basicUserField\", {}, {\r\n\r\n    /*************************************************************/\r\n    /* methods to be overriden by the implementations            */\r\n    /*************************************************************/\r\n    getEditableControl: function () {\r\n    },\r\n\r\n    renderComplex: function () {\r\n    },\r\n\r\n    // Returns the value of the control\r\n    getEditableValue: function () {\r\n        return bizagi.rendering.render.prototype.getValue.apply(this, arguments);\r\n    },\r\n\r\n    // \r\n    setEditableValue: function (value) {\r\n        return bizagi.rendering.render.prototype.setValue.apply(this, arguments);\r\n    },\r\n\r\n    getReadonlyControl: function () {\r\n    },\r\n\r\n    getReadonlyValue: function () {\r\n        // if the method is not overriden then call the parent method \r\n        return bizagi.rendering.render.prototype.getDisplayValue.apply(this, arguments);\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super();\r\n    }\r\n\r\n});\r\n\r\n/*\r\n*   This control will wrap any userfield in order to load the code remotely, \r\n*   when executing renderControl, which is an async method\r\n*/\r\n$.Class.extend(\"bizagi.rendering.userfieldWrapper\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n        // Save userfield guid and name\r\n        self.initialParams = params;\r\n        self.userfieldGuid = this.properties.userfieldGuid;\r\n        self.userfieldName = this.properties.control;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    */\r\n    internalPostRender: function () {\r\n        var self = this;\r\n        $.when(self.getUserfieldControl())\r\n        .done(function (control) {\r\n            control.element = self.element;\r\n\r\n            // Add grid and surrogatekey properties if the userfield is a column userfield\r\n            if (self.column) {\r\n                control.isColumn = true;\r\n                control.grid = self.grid;\r\n                control.surrogateKey = self.surrogateKey;\r\n                control.properties.xpathContext = self.getControlXpathContext(control);\r\n                control.getControl = self.column.getControl;\r\n            }\r\n\r\n            return control.internalPostRender();\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Helper for userfields to fetch the xpathContext\r\n    */\r\n    getControlXpathContext: function (control) {\r\n        var self = this;\r\n        var properties = control.properties;\r\n\r\n        if (control.isColumn) {\r\n            return properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + control.grid.properties.xpath + \"[id=\" + control.surrogateKey + \"]\" : control.grid.properties.xpath + \"[id=\" + control.surrogateKey + \"]\";\r\n        }\r\n\r\n        return properties.xpathContext;\r\n    },\r\n\r\n\r\n    getUserFieldInstance: function(params){\r\n        console.log(\"not implemented\");\r\n    },\r\n\r\n    /*\r\n    *   Replicate all userfield methods to this instance in order to create a proxy\r\n    */\r\n    replicateUserfieldMethods: function (control) {\r\n        var self = this;\r\n        for (var key in control.Class.prototype) {\r\n            // Omit the folowing methods\r\n            if (key == \"init\" || key == \"constructor\" || key == \"Class\" || key == \"subscribe\" || key == \"unsubscribe\" ||\r\n                key == \"publish\" || key == \"render\" || key == \"triggerHandler\" || key == \"dispose\") continue;\r\n\r\n            // Replicate instance methods\r\n            self[key] = eval('var tmp = function(){ if (this.userfieldInstance) return this.userfieldInstance.' + key + '.apply(this.userfieldInstance, arguments); return null;};tmp');\r\n        }\r\n\r\n        // Replicate properties and value\r\n        control.properties = self.properties;\r\n        control.value = self.value;\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self.userfieldInstance) {\r\n                self.userfieldInstance.unbind(\"renderchange\");\r\n                self.userfieldInstance.dispose();\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    }\r\n});\r\n\r\n","/**\r\n *   Name: Bizagi Render Document Generator\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for document generator render\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.document\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        var properties = this.properties;\r\n\r\n        properties.validate = bizagi.util.parseBoolean(properties.validate) != null ? bizagi.util.parseBoolean(properties.validate) : false;\r\n        properties.downloadalldocuments = properties.downloadalldocuments ? properties.downloadalldocuments : false;\r\n        properties.allowGenerate = properties.allowGenerate !== undefined ? properties.allowGenerate : true;\r\n        properties.append = properties.append ? properties.append : false;\r\n\r\n        if (properties.caption) {\r\n            properties.caption = bizagi.util.trim(properties.caption);\r\n\r\n            if (properties.caption.length === 0) {\r\n                properties.caption = this.getResource(\"render-documentgenerator-button-label\");\r\n            }\r\n        } else {\r\n            properties.caption = this.getResource(\"render-documentgenerator-button-label\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n\r\n        self.preRenderControl();\r\n\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n        var downloadAllDocuments = properties.downloadalldocuments;\r\n        var allowGenerate = properties.allowGenerate;\r\n        var template = self.renderFactory.getTemplate(self.getTemplate());\r\n        var documents = properties.value || [];\r\n        var noFiles = documents ? (documents.length === 0) : true;\r\n\r\n        // Render template\r\n        var html = self.getControlHtml(template, mode, downloadAllDocuments, allowGenerate, properties, noFiles);\r\n\r\n        // Render current children\r\n        var items = this.renderDocumentsHtml(documents);\r\n        items += this.renderActionsHtml(documents, noFiles, downloadAllDocuments);\r\n\r\n        html = self.replaceFilesHtml(html, items);\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @param template\r\n     * @param mode\r\n     * @param downloadAllDocuments\r\n     * @param allowGenerate\r\n     * @param properties\r\n     * @param noFiles\r\n     * @returns {*|jQuery}\r\n     */\r\n    getControlHtml: function (template, mode, downloadAllDocuments, allowGenerate, properties, noFiles) {\r\n        var self = this;\r\n\r\n        return $.fasttmpl(template, {\r\n            noActivateButton: false,\r\n            editable: mode !== \"execution\",\r\n            mode: mode,\r\n            downloadalldocuments: downloadAllDocuments,\r\n            required: properties.required,\r\n            allowgenerate: allowGenerate,\r\n            xpath: self.getXpath(properties.xpath),\r\n            append: properties.append,\r\n            caption: properties.caption,\r\n            noFiles: noFiles,\r\n            allowSendInMail: properties.allowSendInMail\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @param xpath\r\n     * @returns {*}\r\n     */\r\n    getXpath: function (xpath) {\r\n        return xpath;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    preRenderControl: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {boolean}\r\n     */\r\n    activateButton: function () {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @param xpath\r\n     * @returns {*}\r\n     */\r\n    getDocumentXpath: function (xpath) {\r\n        return xpath;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getContextXpath: function () {\r\n        return this.properties.xpathContext;\r\n    },\r\n\r\n    /**\r\n     * Renders a single document item\r\n     * @param file\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderDocumentItem: function (file) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var template = self.renderFactory.getTemplate(self.getTemplateItem());\r\n        var url = self.buildItemUrl(file);\r\n\r\n        // Don't render urls when not running in execution mode\r\n        if (mode !== \"execution\") url = \"javascript:void(0);\";\r\n\r\n        var html = $.fasttmpl(template, {\r\n            url: url,\r\n            allowDelete: self.properties.allowDelete,\r\n            filename: file.fileName,\r\n            mode: mode,\r\n            editable: self.properties.editable,\r\n            joined: false\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (file) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.getUploadFileUrl({\r\n            idRender: properties.id,\r\n            xpath: self.getDocumentXpath(properties.xpath),\r\n            xpathContext: self.getContextXpath(),\r\n            idPageCache: properties.idPageCache,\r\n            fileId: file.id,\r\n            sessionId: self.getSessionId()\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Builds the download all items item url\r\n     * @returns {*}\r\n     */\r\n    buildAllDocumentsUrl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var returnLink = self.dataService.getAllDocumentsDownloadUrl({\r\n            xpath: self.getDocumentXpath(properties.xpath),\r\n            xpathContext: self.getContextXpath(),\r\n            idPageCache: properties.idPageCache,\r\n            idCase: properties.caseId,\r\n            idWorkItem: properties.workitemId,\r\n            sessionId: self.getSessionId()\r\n        });\r\n\r\n        return returnLink;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed (Virtual method)\r\n     * @returns {string}\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n\r\n        return \"<div></div>\";\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        if (mode !== \"design\") {\r\n            var control = self.getControl();\r\n            var htmlControl = self.renderControl();\r\n\r\n            control.append(htmlControl);\r\n\r\n            self.updateControlForPrintMode(control);\r\n\r\n            // Execute the same as post-render\r\n            self.postRender();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Saves the form before the document generation\r\n     * @returns {*}\r\n     */\r\n    validateContainer: function () {\r\n        // Check if the form is valid, then generate\r\n        var form = this.getFormContainer();\r\n        return form.validateForm();\r\n    },\r\n\r\n    /**\r\n     * Saves the form before the document generation\r\n     * @returns {*}\r\n     */\r\n    save: function () {\r\n        var form = this.getFormContainer();\r\n\r\n        return form.saveForm();\r\n    },\r\n\r\n    /**\r\n     * Replaces a {{files}} tag in the container for the specified \"replace\" element\r\n     * @param html\r\n     * @param replace\r\n     * @returns {*}\r\n     */\r\n    replaceFilesHtml: function (html, replace) {\r\n        return html.replace(\"{{files}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Replaces a {{actions}} tag in the container for the specified \"replace\" element\r\n     * @param html\r\n     * @param replace\r\n     * @returns {*}\r\n     */\r\n    replaceActionsHtml: function (html, replace) {\r\n        return html.replace(\"{{actions}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @param invalidElements\r\n     * @returns {boolean}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties,\r\n            message;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) === false) {\r\n            return true;\r\n        }\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) === false) {\r\n            return true;\r\n        }\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (properties.required && !properties.buttonExecuted) {\r\n            if (self.value) {\r\n                if (self.value.length > 0) return true;\r\n                message = self.getResource(\"render-document-required-text\");\r\n                invalidElements.push({xpath: properties.xpath, message: message});\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var mode = self.getMode();\r\n\r\n        // Call base\r\n        self._super();\r\n\r\n        // Attach handler\r\n        var generateLink = $(\".ui-bizagi-button-documentgenerator\", control);\r\n        if (mode === \"execution\") {\r\n            generateLink.click(function (e) {\r\n                if (e.isPropagationStopped()) return;\r\n                e.stopPropagation();\r\n\r\n                self.properties.buttonExecuted = true;\r\n\r\n                if (self.properties.validate) {\r\n                    // Check if the form is valid, then generate\r\n                    var isValid = self.validateContainer();\r\n                    if (isValid) {\r\n                        self.documentTemplateGenerate();\r\n                    }\r\n                } else {\r\n                    // Just generate the form\r\n                    self.documentTemplateGenerate();\r\n                }\r\n\r\n                self.properties.buttonExecuted = false;\r\n            });\r\n        }\r\n\r\n        // Configure preview handler\r\n        $(\".ui-bizagi-document-preview\", control).click(function (e) {\r\n            if (e.isPropagationStopped()) return;\r\n            e.stopPropagation();\r\n\r\n            self.showDocumentPreview($(this).data(\"url\"), $(this).data(\"filename\"));\r\n        });\r\n\r\n        // Configure preview handler\r\n        $(\".ui-bizagi-container-documents-item-delete\", control).click(function (e) {\r\n            if (e.isPropagationStopped()) return;\r\n            e.stopPropagation();\r\n\r\n            self.deleteDocumentTemplate($(this).data(\"filename\"));\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Creates the event of generation of templates.\r\n     * @param filename\r\n     */\r\n    deleteDocumentTemplate: function (filename) {\r\n        var self = this;\r\n        var params = {\r\n            xpath: self.properties.xpath + \"[fileName='\" + filename + \"']\",\r\n            idRender: self.properties.id,\r\n            xpathContext: self.getContextXpath(),\r\n            idPageCache: self.properties.idPageCache\r\n        };\r\n\r\n        self.startLoading();\r\n\r\n        $.when(self.dataService.deleteUploadFile(params))\r\n            .done(function () {\r\n                $.when(self.dataService.multiaction().getPropertyData({\r\n                    xpath: self.properties.xpath,\r\n                    idRender: self.properties.id,\r\n                    xpathContext: self.getContextXpath(),\r\n                    idPageCache: self.properties.idPageCache,\r\n                    property: \"value\"\r\n                })).done(function (documents) {\r\n                    self.resolveDeleteDocumentTemplate(documents, false, self.properties.downloadalldocuments);\r\n\r\n                    // Finish loading\r\n                    self.endLoading();\r\n                });\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Creates the event of generation of templates.\r\n     */\r\n    documentTemplateGenerate: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        self.startLoading();\r\n\r\n        //Get the context xPath\r\n        properties.xpathcontext = self.getContextXpath();\r\n        properties.xpath = self.getDocumentXpath(properties.xpath);\r\n\r\n        self.save().done(function () {\r\n\r\n            bizagi.showErrorAlertDialog = false;\r\n\r\n            $.when(self.dataService.generateDocumentTemplate(properties))\r\n                .done(function () {\r\n\r\n                    // Fetch again the value property\r\n                    $.when(self.dataService.multiaction().getPropertyData({\r\n                        xpath: properties.xpath,\r\n                        idRender: properties.id,\r\n                        xpathContext: self.getContextXpath(),\r\n                        idPageCache: properties.idPageCache,\r\n                        property: \"value\"\r\n                    })).done(function (documents) {\r\n                        self.resolveDocumentTemplateGenerate(documents, false, properties.downloadalldocuments);\r\n\r\n                        // Finish loading\r\n                        self.endLoading();\r\n                    });\r\n\r\n                }).fail(function (error) {\r\n                self.endLoading();\r\n\r\n                // Add error messages\r\n                self.showErrorMessage(error);\r\n            });\r\n        }).fail(function (message) {\r\n            self.endLoading();\r\n\r\n            // Add error messages\r\n            self.showErrorMessage(error);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Show the error message when something went wrong with the service.\r\n     * @param error\r\n     */\r\n    showErrorMessage: function (error) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var messageText = self.resources.getResource('render-upload-alert-maxsize').replace(\"{0}\", BIZAGI_SETTINGS.UploadMaxFileSize);\r\n\r\n        try {\r\n            messageText = error && typeof (error.responseText) !== \"undefined\" ? JSON.parse(error.responseText).message : error;\r\n        } catch (e) {\r\n        }\r\n\r\n        form.addErrorMessage(messageText);\r\n        form.endLoading();\r\n    },\r\n\r\n    /**\r\n     * Shows the document if the flag is set. (virtual Function)\r\n     */\r\n    autoOpenDocuments: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed (Virtual method)\r\n     * @param url\r\n     * @param filename\r\n     */\r\n    showDocumentPreview: function (url, filename) {\r\n    },\r\n\r\n    /**\r\n     * Identifies the extension of the file in a simpler way that ECM does\r\n     * @param file\r\n     * @returns {string}\r\n     */\r\n    returnCssTypeFile: function (file) {\r\n\r\n        if (file == undefined || file.lenght === 0) {\r\n            return \"ui-bizagi-document-upload-item-generic-file\";\r\n        }\r\n\r\n        var extension = file.substr((file.lastIndexOf('.') + 1));\r\n\r\n        switch (extension) {\r\n            case 'docx':\r\n                return \"ui-bizagi-document-upload-item-doc\";\r\n            case 'pdf':\r\n                return \"ui-bizagi-document-upload-item-pdf\";\r\n            case 'xlsx':\r\n                return \"ui-bizagi-document-upload-item-xls\";\r\n            default:\r\n                return \"ui-bizagi-document-upload-item-generic-file\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Redraw documents when needed\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    redrawDocuments: function (documents, noFiles, downloadAllDocuments) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var html = \"\";\r\n        var documentContainer = $(\"[data-component='files']\", control);\r\n\r\n        // Clear current links\r\n        documentContainer.empty();\r\n\r\n        // Draw links again\r\n        html += this.renderDocumentsHtml(documents);\r\n\r\n        // Check if there are documents and the flag to download all are available to show the link.\r\n        html += this.renderActionsHtml(documents, noFiles, downloadAllDocuments);\r\n\r\n        documentContainer.append(html);\r\n\r\n        //Set value\r\n        self.setValue(documents);\r\n    },\r\n\r\n    /**\r\n     * This method must be implemented by the specific class of each device. (Virtual method)\r\n     * @param file\r\n     * @returns {*|*|*}\r\n     */\r\n    renderAllDocumentDownload: function (file) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n\r\n        var template = self.renderFactory.getTemplate(self.getTemplateItem());\r\n        var url = self.buildAllDocumentsUrl();\r\n\r\n        // Don't render urls when not running in execution mode\r\n        if (mode !== \"execution\") url = \"javascript:void(0);\";\r\n\r\n        var html = $.fasttmpl(template, {\r\n            url: url,\r\n            allowDelete: properties.allowDelete,\r\n            filename: file.fileName,\r\n            mode: mode,\r\n            joined: true\r\n        });\r\n\r\n        return self.removeDeleteButton(html);\r\n    },\r\n\r\n    /**\r\n     * removeDeleteButton\r\n     * @param html\r\n     * @returns {*}\r\n     */\r\n    removeDeleteButton: function (html) {\r\n        var startIndex = html.indexOf(\"<span class=\\\"ui-bizagi-container-documents-item-delete\");\r\n\r\n        if (startIndex > 0) {\r\n            var restOfWord = html.substring(startIndex);\r\n            var finishIndex = restOfWord.indexOf(\"</span>\") + 7;\r\n\r\n            return html.substring(0, startIndex) + restOfWord.substring(finishIndex);\r\n        } else {\r\n            return html;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Process request of DeleteDocumentTemplate action\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    resolveDocumentTemplateGenerate: function (documents, noFiles, downloadAllDocuments) {\r\n        // Redraw documents\r\n        this.redrawDocuments(documents, noFiles, downloadAllDocuments);\r\n        this.value = documents;\r\n\r\n        // This does not apply for mobile.\r\n        this.autoOpenDocuments();\r\n        this.configureHandlers();\r\n    },\r\n\r\n    /**\r\n     * Process request of DocumentTemplateGenerate action\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    resolveDeleteDocumentTemplate: function (documents, noFiles, downloadAllDocuments) {\r\n        // Redraw documents\r\n        this.redrawDocuments(documents, noFiles, downloadAllDocuments);\r\n        this.value = documents;\r\n\r\n        // This does not apply for mobile.\r\n        this.configureHandlers();\r\n    },\r\n\r\n    /**\r\n     * Method to renders the documents\r\n     * @param documents\r\n     * @returns {string}\r\n     */\r\n    renderDocumentsHtml: function (documents) {\r\n        var items = \"\";\r\n\r\n        for (var i = 0; i < documents.length; i++) {\r\n            var document = {id: documents[i][0], fileName: documents[i][1]};\r\n            var item = this.renderDocumentItem(document);\r\n\r\n            items += item;\r\n        }\r\n\r\n        return items;\r\n    },\r\n\r\n    /**\r\n     * Methos to renders action of document\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     * @returns {string}\r\n     */\r\n    renderActionsHtml: function (documents, noFiles, downloadAllDocuments) {\r\n        var actions = \"\";\r\n\r\n        if (downloadAllDocuments && (!noFiles && documents.length > 0)) {\r\n            var downloadAllDocumentsLink = {fileName: this.getResource(\"render-document-downloadalldocuments\")};\r\n            var action = this.renderAllDocumentDownload(downloadAllDocumentsLink);\r\n\r\n            actions += action;\r\n        }\r\n\r\n        return actions;\r\n    },\r\n\r\n    getTemplate: function () {\r\n        return \"document\";\r\n    },\r\n\r\n    getTemplateItem: function () {\r\n        return \"document-item\";\r\n    },\r\n\r\n    getErrorTemplate: function () {\r\n        return \"form-error\";\r\n    },\r\n\r\n    getTemplateDownload: function () {\r\n        return \"document-download\";\r\n    },\r\n\r\n    getTemplateReadonly: function () {\r\n        return \"document-readonly\";\r\n    }\r\n\r\n});","/*\r\n *   Name: BizAgi Render Column Decorator Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define basic stuff for Columns\r\n */\r\n\r\nbizagi.rendering.element.extend(\"bizagi.rendering.columns.column\", {}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        this.decoratedClass = params.decorated;\r\n        this.data = params.data;\r\n        if (params.singleInstance) {\r\n            this.decorated = new this.decoratedClass({\r\n                data: this.data,\r\n                parent: this.parent,\r\n                renderFactory: this.renderFactory,\r\n                dataService: this.dataService\r\n            });\r\n            this.decorated.getControl = this.getControl;\r\n            params.decorated = this.decorated;\r\n            this.decorated.properties.isColumn = true;\r\n        } else {\r\n            this.decorateRenders = [];\r\n        }\r\n        this.grid = params.parent;\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n        properties.columnVisible = bizagi.util.parseBoolean(properties.columnVisible) != null ? bizagi.util.parseBoolean(properties.columnVisible) : true;\r\n        properties.align = properties.align || 'center';\r\n        properties.textFormat = properties.textFormat || {};\r\n        properties.submitOnChange = (typeof properties.submitOnChange != \"undefined\") ? bizagi.util.parseBoolean(properties.submitOnChange) : false;\r\n        properties.singleInstance = params.singleInstance;\r\n        properties.editable = (typeof properties.editable != \"undefined\") ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.visible = (typeof properties.visible != \"undefined\") ? bizagi.util.parseBoolean(properties.visible) : true;\r\n        properties.required = (typeof properties.required != \"undefined\") ? bizagi.util.parseBoolean(properties.required) : false;\r\n        properties.showColumn = (typeof properties.showColumn != \"undefined\") ? bizagi.util.parseBoolean(properties.showColumn) : true;\r\n\r\n        // Define if it is editable or not        \r\n        try {\r\n            if (params.parent && typeof params.parent.properties.editable == \"boolean\" && !params.parent.properties.editable) {\r\n                properties.editable = false;\r\n            }\r\n        } catch (e) {\r\n        }\r\n\r\n        // Define if the column is readonly\r\n        this.readonly = properties.readonly !== undefined ? properties.readonly : false;\r\n        if (this.readonly) properties.editable = required = false;\r\n\r\n        // Save original properties\r\n        this.originalProperties = JSON.parse(JSON.encode(properties));\r\n    },\r\n\r\n    /*\r\n    *   Return true if the column is read-only, so we can make a quick render\r\n    */\r\n    isReadonly: function () {\r\n        return false;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Method to retrieve the decorated control\r\n    */\r\n    getControl: function () {\r\n        var self = this;\r\n        return $(\".ui-bizagi-render-control\", self.element || self.observableElement);\r\n    },\r\n    /*\r\n    *   Returns the decorated cell instance to use\r\n    */\r\n    getDecorated: function (surrogateKey) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (properties.singleInstance) {\r\n            return self.decorated;\r\n        }\r\n        else {\r\n            var decorated = self.decorateRenders[surrogateKey];\r\n            if (decorated == undefined) {\r\n                if (typeof self.decorateRenders != \"object\") {\r\n                    self.decorateRenders = [];\r\n                }\r\n                var instanceDecoratedClass = new this.decoratedClass({\r\n                    data: bizagi.clone(this.data),\r\n                    parent: this.parent,\r\n                    renderFactory: this.renderFactory,\r\n                    dataService: this.dataService\r\n                });\r\n                decorated = instanceDecoratedClass;\r\n                self.decorateRenders[surrogateKey] = instanceDecoratedClass;\r\n\r\n                // Set surrogate key to all controls\r\n                decorated.surrogateKey = surrogateKey;\r\n\r\n                // Execute decorated overrides\r\n                self.applyOverrides(decorated);\r\n\r\n                // Also override setDisplayValue on summary row for non numeric columns\r\n                if (surrogateKey == \"summary\" && decorated.properties.type != \"columnMoney\" && decorated.properties.type != \"columnNumber\") {\r\n\r\n                    decorated.setDisplayValue = function (value) {\r\n                        var control = this.getControl();\r\n\r\n                        // Replace line breaks for html line breaks\r\n                        control.html(value);\r\n                    };\r\n                }\r\n            }\r\n            return decorated;\r\n        }\r\n    },\r\n    /*\r\n    *   Set a ready function to execute when the render has been inserted in the dom\r\n    */\r\n    ready: function () {\r\n        return this.readyDeferred.promise();\r\n    },\r\n    /*\r\n    *   Load stuff needed for the column\r\n    *   It could return a promise if the column need to load async stuff\r\n    */\r\n    initialize: function () {\r\n        // Override to do any stuff needed here\r\n    },\r\n    /* \r\n    *  Method to determine if the render value can be sent to the server or not\r\n    */\r\n    canBeSent: function (surrogateKey, cellOverrides) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n\r\n        if (cellOverrides) {\r\n            decorated.properties.visible = cellOverrides.visible;\r\n            decorated.properties.editable = cellOverrides.editable;\r\n        }\r\n        return decorated.canBeSent() || (!self.properties.editable && self.hasChanged()) || (!decorated.properties.editable && self.hasChanged());\r\n    },\r\n    /*\r\n    *   Method to check if a value is valid or not in this render\r\n    */\r\n    isValueValid: function (surrogateKey, value, messages, propertyOverrides) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var invalidElements = [];\r\n\r\n        if (propertyOverrides.visible) {\r\n            self.setValue(surrogateKey, value);\r\n\r\n            // Override properties\r\n            decorated.properties = $.extend(decorated.properties, propertyOverrides);\r\n\r\n            if (self.grid && typeof(decorated.grid) === \"undefined\") {\r\n                decorated.grid = self.grid;\r\n            }\r\n\r\n            // Validate field\r\n            decorated.isValid(invalidElements);\r\n        }\r\n\r\n        if (invalidElements.length > 0) {\r\n            $.each(invalidElements, function (i, invalidElement) {\r\n                messages.push(invalidElement.message);\r\n            });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    },\r\n    /*\r\n    *   Apply custom overrides to each decorated instance\r\n    */\r\n    applyOverrides: function (decorated) {\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element \r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        // Set grid and id references to the control in order to render the content\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        decorated.grid = self.grid;\r\n        decorated.column = this;\r\n        decorated.surrogateKey = surrogateKey;\r\n\r\n        // Set cell value\r\n        self.setValue(surrogateKey, value);\r\n\r\n        // Override render properties\r\n        self.overrideDecoratedRenderProperties(surrogateKey);\r\n\r\n        // Set flag to check when a render has changed\r\n        self.changed = false;\r\n\r\n        // If the render is not editable return the readonly version of the column\r\n        //Fix: Uncaught RangeError: Maximum call stack size exceeded\r\n        if (!properties.editable && arguments[3] !== \"CALLER_RENDER_READ_ONLY_COLUMNSLINK\")\r\n            return self.renderReadOnly.apply(self, arguments);\r\n\r\n        // Returns the decorated render inside a custom layout for columns\r\n        self.readyDeferred = new $.Deferred();\r\n        var cell = decorated.render(\"cell\");\r\n\r\n        // If the render changes set the flag on\r\n        decorated.bind(\"renderchange\", function () {\r\n            self.changed = true;\r\n        });\r\n\r\n        self.bind(\"rendered\", function () {\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n        return cell;\r\n    },\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRender: function (surrogateKey, cell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        decorated.postRenderElement(cell);\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element when the element is read-only\r\n    */\r\n    renderReadOnly: function (surrogateKey, value) {\r\n        var self = this;\r\n        // Set grid and id references to the control in order to render the content\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        decorated.grid = self.grid;\r\n        decorated.column = this;\r\n        decorated.surrogateKey = surrogateKey;\r\n\r\n        // Set cell value\r\n        self.setValue(surrogateKey, value);\r\n\r\n        // Override render properties\r\n        self.overrideDecoratedRenderProperties(surrogateKey);\r\n\r\n        // Changes editable to false to render read-only\r\n        decorated.properties.editable = false;\r\n\r\n        // Perform the internal render\r\n        self.readyDeferred = new $.Deferred();\r\n        var result = decorated.render(\"cell.readonly\");\r\n\r\n        self.bind(\"rendered\", function () {\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n        // Returns the decorated render inside a custom layout for columns\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *  Returns the html template to draw the summary cell\r\n    */\r\n    renderSummary: function (key, value) {\r\n        var self = this;\r\n        var result = self.renderFactory.getTemplate(\"cell.summary\")\r\n        return $.tmpl(result).html();\r\n    },\r\n\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRenderReadOnly: function (surrogateKey, cell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var editable = self.properties.editable;\r\n        decorated.properties.editable = false;\r\n        if (self.properties.singleInstance) {\r\n            decorated.element = cell;\r\n        }\r\n        decorated.postRenderElement(cell);\r\n        decorated.properties.editable = editable;\r\n    },\r\n\r\n    /*\r\n    * Return false to all columns that doesn't need special treatment (like number or currency)\r\n    */\r\n    postRenderSummary: function () {\r\n        return false;\r\n    },\r\n\r\n    /*\r\n    *   Returns the cell html to be inserted in the table\r\n    */\r\n    getCell: function () {\r\n        return this.decorated.getDisplayValue();\r\n    },\r\n    /*\r\n    *   Sets the surrogate key for this row\r\n    */\r\n    setSurrogateKey: function (key) {\r\n        this.surrogateKey = key;\r\n    },\r\n    /*\r\n    *   Sets the internal value, only must be called internally\r\n    */\r\n    setValue: function (surrogateKey, value) {\r\n        var self = this;\r\n\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated != \"undefined\" && decorated != null) {\r\n\r\n            decorated.properties.originalValue = value;\r\n            decorated.properties.previousValue = value;\r\n\r\n            if ((value === null || value === undefined) && self.properties.defaultvalue !== undefined && decorated.grid != undefined) {\r\n                value = self.setDefaultValue(surrogateKey, decorated);\r\n            }\r\n\r\n            decorated.properties.value = value;\r\n            decorated.setValue(value, false);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Set the cell default value and make this action as a change to send it to server\r\n    */\r\n    setDefaultValue: function (surrogateKey, decorated) {\r\n        var self = this;\r\n        var value = self.properties.defaultvalue;\r\n\r\n        decorated.grid.changes[surrogateKey] = decorated.grid.changes[surrogateKey] || {};\r\n        decorated.grid.changes[surrogateKey][self.properties.xpath] = value;\r\n\r\n        return value;\r\n    },\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        return decorated.getValue();\r\n    },\r\n    /*\r\n    *   Gets the composite value (applies for non-standard render values)\r\n    */\r\n    getCompositeValue: function (surrogateKey) {\r\n        return this.getValue(surrogateKey);\r\n    },\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () {\r\n        return bizagi.rendering.element.ELEMENT_TYPE_COLUMN;\r\n    },\r\n    /*\r\n    *   Determines if a render has changed its value\r\n    */\r\n    hasChanged: function () {\r\n        return this.changed;\r\n    },\r\n    /*\r\n    *   Triggers an event inside the control\r\n    */\r\n    trigger: function (eventType, data) {\r\n        if (this.decorated)\r\n            this.decorated.trigger(eventType, data);\r\n    },\r\n    /*\r\n    *   Triggers an event handler inside the control\r\n    */\r\n    triggerHandler: function (eventType, data) {\r\n        if (this.decorated)\r\n            this.decorated.triggerHandler(eventType, data);\r\n    },\r\n    /*\r\n    *   Binds to an event\r\n    */\r\n    bind: function (eventType, fn) {\r\n        if (this.decorated)\r\n            this.decorated.bind(eventType, fn);\r\n    },\r\n    /*\r\n    *   Unbinds to an event\r\n    */\r\n    unbind: function (eventType, fn) {\r\n        if (this.decorated)\r\n            this.decorated.unbind(eventType, fn);\r\n    },\r\n    /*\r\n    *   Override decorated properties\r\n    */\r\n    overrideDecoratedRenderProperties: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n\r\n        // Override decorated control properties\r\n        decorated.properties.editable = this.properties.editable;\r\n        decorated.properties.visible = this.properties.visible;\r\n        decorated.properties.required = this.properties.required;\r\n    },\r\n\r\n    overrideProperties: function (properties) {\r\n        var self = this;\r\n\r\n        self.properties.editable = properties.editable || self.properties.editable;\r\n        self.properties.visible = properties.visible || self.properties.visible;\r\n        self.properties.required = properties.required || self.properties.required;\r\n    },\r\n\r\n    /*\r\n    *   Returns the xpath used to sort the grid\r\n    */\r\n    getSortName: function () {\r\n        var self = this;\r\n\r\n        // Check if there is an override for the default behaviour \r\n        var decorated = self.getAnyDecoratedInstance();\r\n        if (decorated && decorated.getSortColumn) {\r\n            return decorated.getSortColumn();\r\n        }\r\n\r\n        // Default behaviour\r\n        return self.properties.xpath;\r\n    },\r\n\r\n    /*\r\n    *   Returns any of the decorated instances, if there are none, return null\r\n    */\r\n    getAnyDecoratedInstance: function () {\r\n        var self = this;\r\n        var first;\r\n\r\n        // Get the first key for the hash\r\n        for (first in this.decorateRenders) break;\r\n\r\n        // Return the first decorated render\r\n        if (first) return this.decorateRenders[first];\r\n\r\n        return null;\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self.decorated) {\r\n                self.decorated.unbind(\"renderchange\");\r\n                self.decorated.dispose();\r\n            }\r\n        \r\n            if (self.decorateRenders) {\r\n                bizagi.util.arrayEach(self.decorateRenders, function (key, render) {\r\n                    if (render) {\r\n                        render.unbind(\"renderchange\");\r\n                        render.dispose();\r\n                    }\r\n                });\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n        \r\n        // Call base\r\n        self._super();\r\n    }\r\n});\r\n\r\n","/*\r\n *   Name: BizAgi Render Column ReadOnlyDecorator Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define basic stuff for readonly-columns\r\n */\r\n\r\n// Extends itself\r\n$.Class.extend(\"bizagi.rendering.columns.readonly\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n\r\n        // Define the column as readonly\r\n        properties.editable = required = false;\r\n    },\r\n\r\n    /*\r\n    *   Return true if the column is read-only, so we can make a quick render\r\n    */\r\n    isReadonly: function () {\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element \r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value) {\r\n        if (typeof value === \"string\") {\r\n            var valueToDisplay = value.replaceAll(\"\\\\n\", \"<br/>\");\r\n            valueToDisplay = valueToDisplay.replaceAll(\"\\n\", \"<br/>\");\r\n            return valueToDisplay;\r\n        }\r\n        else if (value === null){\r\n            return \"\";\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRender: function (surrogateKey, cell) {\r\n        // DON'T DO ANYTHING\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element when the element is read-only\r\n    */\r\n    renderReadOnly: function (surrogateKey, value) {\r\n        return this.render(surrogateKey, value);\r\n    },\r\n\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRenderReadOnly: function (surrogateKey, cell) {\r\n        // DON'T DO ANYTHING\r\n    },\r\n    \r\n    /*\r\n    *   Method to check if a value is valid or not in this render\r\n    */\r\n    isValueValid: function () {\r\n        // It is always valid because the column is readonly\r\n        return true;\r\n    }\r\n});\r\n\r\n","/*\r\n*   Name: BizAgi Render Combo Column Decorator Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for Combo Columns\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.combo\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n        properties.recalculate = bizagi.util.parseBoolean(properties.recalculate) || false;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Apply custom overrides to each decorated instance\r\n    */\r\n    applyOverrides: function (decorated) {\r\n        var properties = this.properties;\r\n\r\n        this._super(decorated);\r\n\r\n        if (!properties.recalculate) {\r\n            decorated.originalGetData = decorated.getData;\r\n            decorated.getData = this.getDataForAllCells;\r\n            decorated.findDataById = this.findDataById;\r\n        }\r\n    },\r\n\r\n    findDataById: function (id) {\r\n        var self = this;\r\n        var result = {};\r\n        if (this.column && this.column.comboData) {\r\n            $.each(this.column.comboData, function (key, value) {\r\n                if (value.id == id) {\r\n                    result = value;\r\n                }\r\n            });\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Single data fetch for all the cells\r\n    */\r\n    getDataForAllCells: function (params) {\r\n        var column = this.column;\r\n        if (column.comboData) return column.comboData;\r\n        if (column.fetchingData) return column.dataPromise;\r\n\r\n        // Start fetching\r\n        column.fetchingData = true;\r\n        column.dataPromise = $.when(this.originalGetData(params))\r\n        .pipe(function (result) {\r\n            column.comboData = result;\r\n            column.fetchingData = false;\r\n            return result;\r\n        });\r\n\r\n        return column.dataPromise;\r\n    },\r\n\r\n    /*\r\n    *   Sets the internal value\r\n    */\r\n    setValue: function(surrogateKey, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated === null) {\r\n            return;\r\n        }\r\n\r\n        // Perform default set value when rendering summary row\r\n        if (surrogateKey == \"summary\") return self._super(surrogateKey, value);\r\n\r\n        if (value && bizagi.util.isString(value)) {        \r\n            self._super(surrogateKey, value);\r\n        } else if (value && value.length > 0) {\r\n            // Create the value property\r\n            var newValue = {\r\n                id: value[0][0],\r\n                value: value[0].length > 2 ? $.grep(value[0], function(item, i) { return i != 0; }) : value[0][1]\r\n            };\r\n            // Call base\r\n            self._super(surrogateKey, newValue);\r\n            decorated.selectedValue = newValue.value;\r\n        } else if (value && value.id && value.value) {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value.value;\r\n        } else if (self.properties.type == \"columnRadio\") {\r\n            self._super(surrogateKey, null);\r\n            decorated.selectedValue = value;\r\n        } else if (value && typeof (value) == \"number\") {\r\n            self._super(surrogateKey, value);\r\n        } else {\r\n            // Set null values when the entry array is null\r\n            self._super(surrogateKey, null);\r\n            decorated.selectedValue = \"\";\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getCompositeValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var value = decorated.getValue();\r\n        var label = decorated.getSelectedValue();\r\n\r\n        // Build value for grid data\r\n        var valueForGrid = [];\r\n        if (value && (value.id > 0 || bizagi.util.isString(value.id))) {\r\n            valueForGrid.push([]);\r\n            valueForGrid[0].push(value.id);\r\n            valueForGrid[0].push(label);\r\n        } else {\r\n            valueForGrid.push([]);\r\n        }\r\n\r\n        return valueForGrid;\r\n    },\r\n\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var value = decorated.getValue();\r\n        if (value) return value.id;\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element \r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value, tableCell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var properties = self.properties;\r\n\r\n        // If the control needs to recalculate data, reset it on the decorated render\r\n        if (properties.recalculate) {\r\n            decorated.resetData();\r\n        }\r\n\r\n        // Change the xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + surrogateKey + \"]\" : self.grid.properties.xpath + \"[id=\" + surrogateKey + \"]\";\r\n        decorated.properties.xpathContext = xpathContext;\r\n\r\n        // Render the control\r\n        var result = this._super(surrogateKey, value, tableCell);\r\n\r\n        return result;\r\n    },\r\n\r\n    renderReadOnly: function (key, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(key);\r\n        var properties = self.properties;\r\n\r\n        // Change the xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + key + \"]\" : self.grid.properties.xpath + \"[id=\" + key + \"]\";\r\n        decorated.properties.xpathContext = xpathContext;\r\n\r\n        // Render the control\r\n        var result = this._super(key, value);\r\n\r\n        return result;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Render Date Column Decorator Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for Date Columns\r\n*/\r\n\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.date\", {}, {\r\n\r\n    /*\r\n    *   Sets the internal value\r\n    */\r\n    setValue: function (surrogateKey, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated === null) return;\r\n\r\n        self._super(surrogateKey, value);\r\n        if ((value === null || value === undefined) && self.properties.defaultvalue !== undefined) {\r\n            value = self.setDefaultValue(surrogateKey, decorated);\r\n        }\r\n\r\n        // Perform default set value when rendering summary row\r\n        if (surrogateKey === \"summary\") return self._super(surrogateKey, value);\r\n\r\n        if (value == null) {\r\n            decorated.setValue(value, false);\r\n            decorated.properties.displayValue = \"\";\r\n        }\r\n\r\n        var date = bizagi.util.dateFormatter.getDateFromInvariant(value, decorated.properties.showTime);\r\n\r\n        if (date === 0) {\r\n            // force another attempt in order to check invariant format for the value with time or without time (reverse option)\r\n            date = bizagi.util.dateFormatter.getDateFromInvariant(value, !decorated.properties.showTime);\r\n        }\r\n        // Format date to current format\r\n        if (date !== 0) {\r\n            var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n            var formattedDate = bizagi.util.dateFormatter.formatDate(date, decorated.properties.fullFormat, datePickerRegional);\r\n\r\n            // Set formatted value in display value property\r\n            decorated.properties.displayValue = formattedDate;\r\n\r\n            // Send original value to decorated control, because it must be with invariant format\r\n            decorated.setValue(value, false);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Set the cell default value and make this action as a change to send it to server\r\n    */\r\n    setDefaultValue: function (surrogateKey, decorated) {\r\n        var self = this;\r\n        var value = self.properties.defaultvalue;\r\n\r\n        decorated.grid.changes[surrogateKey] = decorated.grid.changes[surrogateKey] || {};\r\n\r\n        value = bizagi.util.dateFormatter.getDateFromInvariant(value, decorated.properties.showTime || false);\r\n\r\n        value = bizagi.util.dateFormatter.formatInvariant(value, true);\r\n        decorated.grid.changes[surrogateKey][self.properties.xpath] = value;\r\n\r\n        return value;\r\n    }\r\n});\r\n\r\n","/*\r\n*   Name: BizAgi Render Combo Column Decorator Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for Combo Columns\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.search\", {}, {\r\n\r\n\t/*\r\n\t*   Constructor\r\n\t*/\r\n\tinit: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n\r\n        if (properties.advancedSearch && this.getMode() === \"execution\") {\r\n            properties.submitOnChange = bizagi.util.parseBoolean(properties.submitOnChange) || false;\r\n            properties.submitOnChange = (properties.submitVersion || 1) > 1 ? properties.submitOnChange : true;\r\n        }\r\n    },\r\n\r\n\t/*\r\n\t*   Returns the in-memory processed element \r\n\t*   so the caller could append it to any place\r\n\t*/\r\n\trender: function (surrogateKey, value, tableCell) {\r\n\t\tvar self = this;\r\n\t\tvar decorated = self.getDecorated(surrogateKey);\r\n\t\tvar properties = self.properties;\r\n\r\n\t\t// If the control needs to recalculate data, reset it on the decorated render\r\n\t\tif (properties.recalculate) {\r\n\t\t\tdecorated.resetData();\r\n\t\t}\r\n\r\n\t\t// Change the xpath context\r\n\t\tvar xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + surrogateKey + \"]\" : self.grid.properties.xpath + \"[id=\" + surrogateKey + \"]\";\r\n        decorated.properties.xpathContext = xpathContext;\r\n\r\n\t\t// Render the control\r\n\t\tvar result = this._super(surrogateKey, value, tableCell);\r\n\r\n\t\treturn result;\r\n\t},\r\n\r\n\t/*\r\n    *   Gets the internal value\r\n    */\r\n    getValue: function (surrogateKey) {\r\n        var self = this;\r\n    \tvar decorated = self.getDecorated(surrogateKey);\r\n        var value = decorated.getValue();\r\n        if (value && typeof(value) == \"object\" ) return value.id;\r\n        \t\r\n    \treturn value;\r\n    },\r\n    setValue: function (surrogateKey, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated === null) { return; }\r\n\r\n        // Perform default set value when rendering summary row\r\n        if (surrogateKey == \"summary\") return self._super(surrogateKey, value);\r\n\r\n        if (value && value.length > 0) {\r\n            // Create the value property\r\n            var newValue = {\r\n                id: value[0][0],\r\n                value: value[0].length > 2 ? $.grep(value[0], function (item, i) { return i != 0; }) : value[0][1]\r\n            };\r\n            // Call base\r\n            self._super(surrogateKey, newValue);\r\n            decorated.selectedValue = newValue.value;\r\n        } else if (value && value.id && value.value) {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value.value;\r\n        } else if(value && value.id && value.label){\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value.label;\r\n        }\r\n        else{\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = \"\";\r\n        }\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: Bizagi Base Render Factory\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define an abstract render factory in order to do common stuff for all device factories\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.base.factory\", {}, {\r\n    /* \r\n    *   Constructor\r\n    */\r\n    init: function (dataService) {\r\n        this.templates = {};\r\n        this.dataService = dataService;        \r\n    },\r\n\r\n    /**\r\n    * Load client resources in order to override a default behavior\r\n    */\r\n    loadOverrides: function () {\r\n    },\r\n    /*\r\n    *   This function will load asynchronous stuff needed in the module\r\n    */\r\n    initAsyncStuff: function() {\r\n        return $.when.apply($, [this.loadOverrides(), this.loadTemplates()]);\r\n    },\r\n    /*\r\n    *   Load all the templates used for rendering\r\n    */\r\n    loadTemplates: function () {\r\n    },\r\n    /*\r\n    *   Load one template and save it internally\r\n    */\r\n    loadTemplate: function(template, templateDestination) {\r\n        var self = this;\r\n\r\n        // Go fetch the template\r\n        return bizagi.templateService.getTemplate(templateDestination, template)\r\n                .done(function (resolvedTemplate) {\r\n                self.templates[template] = resolvedTemplate;\r\n            });\r\n    },\r\n    /*\r\n    * Returns a common  used template for the framework\r\n    */\r\n    getCommonTemplate: function (template) {        \r\n        return this.templates[template];\r\n    },\r\n    /*\r\n    *   Returns the appropiate container based on the container type\r\n    */\r\n    getContainer: function (params) {\r\n        // TODO: REMOVE IMPLEMENTATION\r\n\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var containerParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type == \"form\") {\r\n            return new bizagi.rendering.form(containerParams);\r\n        }\r\n\r\n        if (type == \"mobileform\") {\r\n            return new bizagi.rendering.mobileform(containerParams);\r\n        }\r\n\r\n        if (type == \"template\") {\r\n            return new bizagi.rendering.formTemplate(containerParams);\r\n        }\r\n\r\n        if (type == \"queryForm\") {\r\n            return new bizagi.rendering.queryForm(containerParams);\r\n        }\r\n\r\n        if (type == \"layout\") {\r\n            return new bizagi.rendering.layout(containerParams);\r\n        }\r\n\r\n        if (type == \"usersForm\") {\r\n            return new bizagi.rendering.usersForm(containerParams);\r\n        }\r\n\r\n        if (type == \"panel\") {\r\n            return new bizagi.rendering.panel(containerParams);\r\n        }\r\n\r\n        if (type == \"contentPanel\" || type == \"contentpanel\") {\r\n            return new bizagi.rendering.contentPanel(containerParams);\r\n        }\r\n\r\n        if (type.toLowerCase() == \"nestedform\") {\r\n            return new bizagi.rendering.nestedForm(containerParams);\r\n        }\r\n\r\n        if (type == \"tab\") {\r\n            return new bizagi.rendering.tab(containerParams);\r\n        }\r\n\r\n        if (type == \"tabItem\" || type == \"tabitem\") {\r\n            return new bizagi.rendering.tabItem(containerParams);\r\n        }\r\n\r\n        if (type == \"horizontal\") {\r\n            return new bizagi.rendering.horizontal(containerParams);\r\n        }\r\n\r\n        if (type == \"accordion\") {\r\n            return new bizagi.rendering.accordion(containerParams);\r\n        }\r\n\r\n        if (type == \"accordionItem\") {\r\n            return new bizagi.rendering.accordionItem(containerParams);\r\n        }\r\n\r\n        if (type == \"group\") {\r\n            return new bizagi.rendering.group(containerParams);\r\n        }\r\n\r\n        if (type == \"mobilegroup\") {\r\n            return new bizagi.rendering.mobilegroup(containerParams);\r\n        }\r\n\r\n        if (type == \"searchForm\") {\r\n            containerParams.context = \"search\";\r\n            containerParams.contexttype = \"metadata\";\r\n            return new bizagi.rendering.searchForm(containerParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate render based on the render type\r\n    */\r\n    getRender: function (params) {\r\n\r\n        // TODO: REMOVE IMPLEMENTATION\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var renderParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (!type)\r\n            type = \"label\";\r\n\r\n        if (type == \"text\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                return new bizagi.rendering.extendedText(renderParams);\r\n            }\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.text(renderParams);\r\n        }\r\n        if (type == \"mobiletext\") {\r\n            return new bizagi.rendering.mobiletext(renderParams);\r\n        }\r\n\r\n        if (type == \"association\") {\r\n            return new bizagi.rendering.association(renderParams);\r\n        }\r\n\r\n        if (type == \"label\") {\r\n            return new bizagi.rendering.label(renderParams);\r\n        }\r\n\r\n        if (type == \"hidden\") {\r\n            return new bizagi.rendering.hidden(renderParams);\r\n        }\r\n\r\n        if (type == \"number\") {\r\n            return new bizagi.rendering.number(renderParams);\r\n        }\r\n\r\n        if (type == \"money\") {\r\n            return new bizagi.rendering.money(renderParams);\r\n        }\r\n\r\n        if (type == \"date\") {\r\n            return new bizagi.rendering.date(renderParams);\r\n        }\r\n\r\n        if (type == \"boolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                return new bizagi.rendering.check(renderParams);\r\n            }\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.yesno(renderParams);\r\n        }\r\n\r\n        if (type == \"combo\") {\r\n            return new bizagi.rendering.combo(renderParams);\r\n        }\r\n\r\n        if (/^cascadingcombo$/i.test(type)) {\r\n            return new bizagi.rendering.cascadingCombo(renderParams);\r\n        }\r\n\r\n        if (type == \"list\") {\r\n            return new bizagi.rendering.list(renderParams);\r\n        }\r\n\r\n        if (type == \"multiSelect\") {\r\n            return new bizagi.rendering.multiSelect(renderParams);\r\n        }\r\n\r\n        if (type == \"radio\") {\r\n            return new bizagi.rendering.radio(renderParams);\r\n        }\r\n\r\n        if (type == \"image\") {\r\n            // Override for test purposes\r\n            return new bizagi.rendering.image(renderParams);\r\n        }\r\n        if (type == \"uploadecm\") {\r\n            // Check if its ECM file            \r\n            return new bizagi.rendering.ecm(renderParams);\r\n        }\r\n\r\n        if (type == \"upload\") {\r\n            return new bizagi.rendering.upload(renderParams);\r\n        }\r\n        if (type == \"grid\") {\r\n            return new bizagi.rendering.grid(renderParams);\r\n        }\r\n\r\n        if (type == \"groupedgrid\") {\r\n            return new bizagi.rendering.grid(renderParams);\r\n        }\r\n\r\n        if (type == \"search\") {\r\n            return new bizagi.rendering.search(renderParams);\r\n        }\r\n\r\n        if (type == \"suggest\") {\r\n            renderParams.data.properties.enableQuerySuggestBehavior = true;\r\n            return new bizagi.rendering.search(renderParams);\r\n        }\r\n\r\n        if (type == \"searchList\") {\r\n            return new bizagi.rendering.searchList(renderParams);\r\n        }\r\n\r\n        if (type == \"letter\") {\r\n            return new bizagi.rendering.letter(renderParams);\r\n        }\r\n\r\n        if (type == \"button\") {\r\n            return new bizagi.rendering.button(renderParams);\r\n        }\r\n\r\n        if (type == \"formLink\") {\r\n            return new bizagi.rendering.formLink(renderParams);\r\n        }\r\n\r\n        if (type == \"link\") {\r\n            return new bizagi.rendering.link(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutImage\") {\r\n            return new bizagi.rendering.layoutImage(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutLink\") {\r\n            return new bizagi.rendering.layoutLink(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutLabel\") {\r\n            return new bizagi.rendering.layoutLabel(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutText\") {\r\n            return new bizagi.rendering.layoutText(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutDateTime\") {\r\n            return new bizagi.rendering.layoutDateTime(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutNumber\") {\r\n            return new bizagi.rendering.layoutNumber(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutMoney\") {\r\n            return new bizagi.rendering.layoutMoney(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutPlaceholder\") {\r\n            return new bizagi.rendering.layoutPlaceholder(renderParams);\r\n        }\r\n\r\n        if (type == \"actionLauncher\") {\r\n            return new bizagi.rendering.actionLauncher(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutBoolean\") {\r\n            return new bizagi.rendering.layoutBoolean(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutUpload\") {\r\n            return new bizagi.rendering.layoutUpload(renderParams);\r\n        }\r\n\r\n        if (type == \"entityTemplate\") {\r\n            return new bizagi.rendering.entityTemplate(renderParams);\r\n        }\r\n\r\n        if (type == \"polymorphicLauncher\") {\r\n            return new bizagi.rendering.polymorphicLauncher(renderParams);\r\n        }\r\n\r\n        if (type == \"userfield\") {\r\n            return new bizagi.rendering.userfieldWrapper(renderParams);\r\n        }\r\n\r\n        // Check search renders (starts with \"search\")\r\n        if (type.indexOf(\"search\") == 0) {\r\n            return this.getSearchRender(params);\r\n        }\r\n\r\n        if (type.indexOf(\"query\") == 0) {\r\n            return this.getQueryRender(params);\r\n        }\r\n\r\n        if (type == \"document\") {\r\n            return new bizagi.rendering.document(renderParams);\r\n        }\r\n\r\n        if (type == \"image\") {\r\n            return new bizagi.rendering.image(renderParams);\r\n        }\r\n        if (type == \"fileprint\") {\r\n            return new bizagi.rendering.fileprint(renderParams);\r\n        }\r\n        if (type == \"geolocation\") {\r\n            return new bizagi.rendering.geolocation(renderParams);\r\n        }\r\n\r\n        if (type == \"collectionnavigator\") {\r\n            return new bizagi.rendering.collectionnavigator(renderParams);\r\n        }\r\n\r\n        if (type == \"getUser\") {\r\n            return new bizagi.rendering.getUser(renderParams);\r\n        }\r\n\r\n        if (type == \"rangeDate\") {\r\n            return new bizagi.rendering.rangeDate(renderParams);\r\n        }\r\n\r\n        if (type == \"rangeMoney\") {\r\n            return new bizagi.rendering.rangeMoney(renderParams);\r\n        }\r\n\r\n        if (type == \"rangeNumber\") {\r\n            return new bizagi.rendering.rangeNumber(renderParams);\r\n        }\r\n\r\n        if (type == \"activityCheckList\") {\r\n            return new bizagi.rendering.activityCheckList(renderParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate column based on the render type\r\n    */\r\n    getColumn: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var columnParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService,\r\n            singleInstance: bizagi.util.isEmpty(params.singleInstance) ? true : params.singleInstance\r\n        });\r\n\r\n        if (type == \"columnText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                columnParams.decorated = bizagi.rendering.extendedText;\r\n            } else {\r\n                // Creates one normal text render\r\n                columnParams.decorated = bizagi.rendering.text;\r\n            }\r\n            return new bizagi.rendering.columns.text(columnParams);\r\n        }\r\n\r\n        if (type == \"columnSearchList\") {\r\n            columnParams.decorated = bizagi.rendering.searchList;\r\n            return new bizagi.rendering.columns.searchList(columnParams);\r\n        }\r\n\r\n        if (type == \"columnNumber\") {\r\n            columnParams.decorated = bizagi.rendering.number;\r\n            return new bizagi.rendering.columns.number(columnParams);\r\n        }\r\n\r\n        if (type == \"columnMoney\") {\r\n            columnParams.decorated = bizagi.rendering.money;\r\n            return new bizagi.rendering.columns.number(columnParams);\r\n        }\r\n\r\n        if (type == \"columnDate\") {\r\n            columnParams.decorated = bizagi.rendering.date;\r\n            return new bizagi.rendering.columns.date(columnParams);\r\n        }\r\n\r\n        if (type == \"columnBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                columnParams.decorated = bizagi.rendering.check;\r\n                if (params.data.properties.isExclusive) {\r\n                    return new bizagi.rendering.columns.exclusiveCheck(columnParams);\r\n                }\r\n            } else {\r\n                // Creates one yes-no render\r\n                columnParams.decorated = bizagi.rendering.yesno;\r\n            }\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnCombo\") {\r\n            columnParams.decorated = bizagi.rendering.combo;\r\n            return new bizagi.rendering.columns.combo(columnParams);\r\n        }\r\n\r\n        if (type == \"columnRadio\") {\r\n            columnParams.decorated = bizagi.rendering.radio;\r\n            return new bizagi.rendering.columns.radio(columnParams);\r\n        }\r\n\r\n        if (type == \"columnList\") {\r\n            columnParams.decorated = bizagi.rendering.list;\r\n            return new bizagi.rendering.columns.list(columnParams);\r\n        }\r\n\r\n        if (type == \"columnHidden\") {\r\n            columnParams.decorated = bizagi.rendering.hidden;\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUpload\") {\r\n            columnParams.decorated = bizagi.rendering.upload;\r\n            return new bizagi.rendering.columns.upload(columnParams);\r\n        }\r\n\r\n        if (type == \"columnImage\") {\r\n            columnParams.decorated = bizagi.rendering.image;\r\n            return new bizagi.rendering.columns.image(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUploadEcm\") {\r\n            columnParams.decorated = bizagi.rendering.ecm;\r\n            return new bizagi.rendering.columns.uploadecm(columnParams);\r\n        }\r\n        if (type == \"columnLink\") {\r\n            columnParams.decorated = bizagi.rendering.link;\r\n            return new bizagi.rendering.columns.link(columnParams);\r\n        }\r\n\r\n        if (type == \"columnFormLink\") {\r\n            columnParams.decorated = bizagi.rendering.formLink;\r\n            return new bizagi.rendering.columns.link(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUserfield\") {\r\n            columnParams.decorated = bizagi.rendering.userfieldWrapper;\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnSearch\") {\r\n            columnParams.decorated = bizagi.rendering.search;\r\n            return new bizagi.rendering.columns.search(columnParams);\r\n        }\r\n\r\n        if (type == \"columnLabel\") {\r\n            columnParams.decorated = bizagi.rendering.label;\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnReadonly\") {\r\n            columnParams.decorated = bizagi.rendering.label;\r\n            return new bizagi.rendering.columns.readonly(columnParams);\r\n        }\r\n\r\n        if (type == \"columnDocument\") {\r\n            columnParams.decorated = bizagi.rendering.document;\r\n            return new bizagi.rendering.columns.document(columnParams);\r\n        }\r\n\r\n        if (type == \"columnLetter\") {\r\n            columnParams.decorated = bizagi.rendering.letter;\r\n            return new bizagi.rendering.columns.letter(columnParams);\r\n        }\r\n\r\n        if (type == \"columnButton\") {\r\n            columnParams.decorated = bizagi.rendering.button;\r\n            return new bizagi.rendering.columns.button(columnParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate search render based on the type\r\n    */\r\n    getSearchRender: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var searchParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type == \"searchText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                return new bizagi.rendering.extendedText(searchParams);\r\n            }\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.text(searchParams);\r\n        }\r\n\r\n        if (type == \"searchBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                return new bizagi.rendering.check(searchParams);\r\n            }\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.yesno(searchParams);\r\n        }\r\n\r\n        if (type == \"searchNumber\") {\r\n            if (data.properties.dataType == 29) {\r\n                //Creates a Scientific Notation render\r\n                return new bizagi.rendering.numberScientificNotation(searchParams);\r\n            }\r\n            return new bizagi.rendering.number(searchParams);\r\n        }\r\n\r\n        if (type == \"searchMoney\") {\r\n            return new bizagi.rendering.money(searchParams);\r\n        }\r\n\r\n        if (type == \"searchDate\") {\r\n            return new bizagi.rendering.date(searchParams);\r\n        }\r\n\r\n        if (type == \"searchCombo\") {\r\n            return new bizagi.rendering.combo(searchParams);\r\n        }\r\n\r\n        if (type == \"searchSuggest\") {\r\n            return new bizagi.rendering.search(searchParams);\r\n        }\r\n\r\n        if (type == \"searchLabel\") {\r\n            return new bizagi.rendering.label(searchParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate search render based on the type\r\n    */\r\n    getQueryRender: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var searchParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type == \"queryText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                return new bizagi.rendering.queryExtendedText(searchParams);\r\n            }\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.queryText(searchParams);\r\n        }\r\n\r\n        if (type == \"queryBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                return new bizagi.rendering.queryCheck(searchParams);\r\n            }\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.queryYesNo(searchParams);\r\n        }\r\n\r\n        if (type == \"queryNumber\") {\r\n\r\n            return new bizagi.rendering.queryNumber(searchParams);\r\n        }\r\n\r\n        if (type == \"queryMoney\") {\r\n            return new bizagi.rendering.queryMoney(searchParams);\r\n        }\r\n\r\n        if (type == \"queryDate\") {\r\n            return new bizagi.rendering.queryDate(searchParams);\r\n        }\r\n\r\n        if (type == \"queryCombo\") {\r\n            return new bizagi.rendering.queryCombo(searchParams);\r\n        }\r\n\r\n        if (type == \"queryCascadingCombo\") {\r\n            return new bizagi.rendering.queryCascadingCombo(searchParams);\r\n        }\r\n\r\n        if (type == \"querySuggest\") {\r\n            return new bizagi.rendering.querySuggest(searchParams);\r\n        }\r\n\r\n        if (type == \"queryLabel\") {\r\n            return new bizagi.rendering.queryLabel(searchParams);\r\n        }\r\n\r\n        if (type == \"queryList\") {\r\n            return new bizagi.rendering.queryList(searchParams);\r\n        }\r\n        \r\n        if (type == \"queryMultiSelect\") {\r\n            return new bizagi.rendering.queryMultiSelect(searchParams);\r\n        }\r\n\r\n        if (type == \"querySearch\") {\r\n            return new bizagi.rendering.querySearch(searchParams);\r\n        }\r\n\r\n        if (type == \"queryRadio\") {\r\n            return new bizagi.rendering.queryRadio(searchParams);\r\n        }\r\n\r\n        if (type == \"queryState\") {\r\n            return new bizagi.rendering.queryState(searchParams);\r\n        }\r\n\r\n        if (type == \"queryCaseState\") {\r\n            return new bizagi.rendering.queryCaseState(searchParams);\r\n        }\r\n\r\n        if (type == \"queryProcess\") {\r\n            return new bizagi.rendering.queryProcess(searchParams);\r\n        }\r\n\r\n        if (type == \"querySearchUser\") {\r\n            return new bizagi.rendering.querySearchUser(searchParams);\r\n        }\r\n\r\n        if (type == \"queryHidden\") {\r\n            return new bizagi.rendering.hidden(searchParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Method to fetch templates from a private dictionary\r\n    */\r\n    getTemplate: function (template) {\r\n        var self = this;\r\n        return self.templates[template];\r\n    }\r\n});\r\n","/*\r\n*   Name: Bizagi Device Render Factory\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will detect the current device and then will load the appropriate factory on demand\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.device.factory\", {}, {\r\n\r\n    /**\r\n     * Constructor, detects the device\r\n     * @param params\r\n     */\r\n    init: function (params) {\r\n        this.execution_device = bizagi.util.detectDevice();\r\n        this.cachedFactory = {};\r\n    },\r\n\r\n    /**\r\n     * Returns the appropriate render factory based on the device detection\r\n     * Because it loads the scripts on demand it must return a promise\r\n     * @param dataService\r\n     * @param device\r\n     * @returns {*}\r\n     */\r\n    getRenderFactory: function (dataService, device) {\r\n        var self = this;\r\n        device = device || \"desktop\";\r\n        var defer = new $.Deferred();\r\n\r\n        if (typeof self.cachedFactory[device] !== \"undefined\") {\r\n            // Reset print version value\r\n            self.cachedFactory[device].printVersion = false;\r\n            // Resolve with cached factory                \r\n            defer.resolve(self.cachedFactory[device]);\r\n        } else {\r\n            // If factory is not cached then build it\r\n            if (device === \"print\") {\r\n\r\n                // Load print version references\r\n                self.cachedFactory[device] = new bizagi.rendering.print.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n\r\n            } else if (device === \"desktop\") {\r\n\r\n                // Load desktop references\r\n                self.cachedFactory[device] = new bizagi.rendering.desktop.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n\r\n            } else if (bizagi.util.isTabletDevice(device)) {\r\n\r\n                // Load tablet references\r\n                self.cachedFactory[device] = new bizagi.rendering.tablet.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n            } else if (bizagi.util.isSmartphoneDevice(device)) {\r\n\r\n                // Load tablet references\r\n                self.cachedFactory[device] = new bizagi.rendering.smartphone.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n            } else {\r\n                // if no device suuported\r\n                bizagi.showMessageBox(\"Not supported device: \" + device);\r\n                defer.reject(\"Not supported device: \" + device);\r\n            }\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Returns the current data service being used\r\n     * @returns {*}\r\n     */\r\n    getDataService: function () {\r\n        return this.dataService;\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: BizAgi Rendering\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will process a rendering page by calling an ajax service to retrieve the model,\r\n *       and then process it to create base layout, and then call the device render factory\r\n */\r\n\r\n// Define BizAgi Rendering namespace\r\nbizagi.rendering = bizagi.rendering || {};\r\n\r\n/*\r\n *   This class will define a method to process the page\r\n *   1. Fetch the data\r\n *   2. Call the device factory to appropriately render the content\r\n */\r\n$.Class.extend(\"bizagi.rendering.facade\", {\r\n    form: undefined,\r\n    executionDeferred: new $.Deferred()\r\n}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        params = params || {};\r\n\r\n        // Set observable element\r\n        this.observableElement = $({});\r\n\r\n        // Injection of Device, only for print version purpose\r\n        var device = params.device || \"\";\r\n\r\n        // Defines a device factory for all rendering\r\n        this.deviceFactory = new bizagi.rendering.device.factory();\r\n\r\n        // Creates a data service instance\r\n        this.dataService = new bizagi.render.services.service(params);\r\n\r\n        // Retrieves the render factory\r\n        this.renderFactory = this.deviceFactory.getRenderFactory(this.dataService, device);\r\n    },\r\n    getFactory: function () {\r\n        var self = this;\r\n        return {\r\n            deviceFactory: self.deviceFactory,\r\n            dataService: self.dataService,\r\n            renderFactory: self.renderFactory\r\n        };\r\n    },\r\n    /*\r\n    *   Subscribe method\r\n    */\r\n    subscribe: function () {\r\n        this.observableElement.bind.apply(this.observableElement, arguments);\r\n    },\r\n    /*\r\n    *   Unsubscribe method\r\n    */\r\n    unsubscribe: function () {\r\n        this.observableElement.unbind.apply(this.observableElement, arguments);\r\n    },\r\n    /*\r\n    *   Publish method\r\n    */\r\n    publish: function () {\r\n        return this.observableElement.triggerHandler.apply(this.observableElement, arguments);\r\n    },\r\n    /*\r\n    *   This method will re-execute the process\r\n    */\r\n    update: function (params) {\r\n        var self = this;\r\n\r\n        // Update rendering mode\r\n        if (params.mode)\r\n            self.mode = params.mode;\r\n\r\n        // Enable form buttons on desktop view\r\n        return self.execute($.extend({\r\n            canvas: self.canvas,\r\n            mode: self.mode\r\n        }, params));\r\n    },\r\n    /*\r\n    *   Start point method to use in the main javascript pages\r\n    *   This method will process everything and attach the html directly to the dom\r\n    */\r\n    execute: function (params) {\r\n        var self = this;\r\n        var doc = this.ownerDocument;\r\n        var body = $(\"body\", doc);\r\n        params = params || {};\r\n\r\n        // Creates ready deferred\r\n        if (self.executionDeferred && self.executionDeferred.state) {\r\n            if (self.executionDeferred.state() == \"resolved\") {\r\n                self.executionDeferred = $.Deferred();\r\n            }\r\n        } else {\r\n            self.executionDeferred = $.Deferred();\r\n        }\r\n\r\n        // Performance measurement stuff\r\n        bizagi.chrono.initAndStart(\"rendering+data\", true);\r\n        bizagi.rendering.render.startOptimization();\r\n\r\n        // Override mode\r\n        if (typeof (params.mode) === \"undefined\") {\r\n            if (!bizagi.util.isEmpty(window.location.search)) {\r\n                var queryString = bizagi.util.getQueryString();\r\n                params.mode = queryString[\"mode\"];\r\n            }\r\n        }\r\n\r\n        // If the canvas is not given, we need to create one\r\n        var canvas = self.canvas = params.canvas = params.canvas || $(\"<div />\").appendTo(body);\r\n        self.mode = params.mode;\r\n\r\n        self.process(params).done(function (form) {\r\n\r\n            // Clear canvas    \r\n            if (!params.refreshing) {\r\n                canvas.empty();\r\n            }\r\n\r\n            // Append content\r\n            canvas.append(form.container);\r\n\r\n            // Include process path\r\n            $(form.pathProcess).insertBefore(form.container);\r\n\r\n            // Keep reference in class\r\n            self.form = form;\r\n            self.form.setSize({width: self.lastWidth, height: self.lastHeight});\r\n\r\n            // Save window size variables\r\n            setTimeout(function () {\r\n                self.lastWidth = $(window).width();\r\n                self.lastHeight = $(window).height();\r\n                if (window.self !== window.top)\r\n                    self.resizeInPopUpHTML();\r\n            }, 2000);\r\n\r\n            // Publish an event to check if the form has been set in the DOM\r\n            form.triggerHandler(\"ondomincluded\");\r\n\r\n            // Notify to module users that the form has been rendered\r\n            self.publish(\"rendering-formRendered\", {});\r\n\r\n            // Configure handlers\r\n            self.configureRefresh(form, canvas);\r\n            self.configureRouting(form, canvas);\r\n            self.configureRenderError(form, canvas);\r\n            self.configureResize(form);\r\n            self.configureGlobalHandlers(form);\r\n\r\n            // Check if it is a summary form\r\n            if (params.summaryForm) {\r\n                form.container.addClass(\"ui-bizagi-summary-form\");\r\n            }\r\n\r\n            // Ends main timer and log everything\r\n            bizagi.chrono.stopAndLog(\"rendering\");\r\n            bizagi.chrono.stopAndLog(\"rendering+data\");\r\n            bizagi.chrono.stopAndLog(\"submitForm\");\r\n            bizagi.chrono.stopAndLog(\"submitForm-ajax\");\r\n            bizagi.chrono.stopAndLog(\"waiting\");\r\n\r\n            // Resolves deferred\r\n            bizagi.rendering.render.stopOptimization();\r\n\r\n            // Expose public reference of form\r\n            if (bizagi.override.enableE2EInterface) {\r\n                self.Class.form = self.form;\r\n                self.Class.executionDeferred.resolve(self.form);\r\n            }\r\n\r\n            self.executionDeferred.resolve(self.form);\r\n\r\n        }).fail(function (message, errorType) {\r\n\r\n            $.when(self.renderFactory)\r\n                .done(function (renderFactory) {\r\n\r\n                    if (typeof message === \"undefined\" || message === \"\") {\r\n                        message = bizagi.localization.getResource(\"render-error-unknown\");\r\n                    }\r\n\r\n                    var errorTemplate = renderFactory.getCommonTemplate(\"form-error\");\r\n                    // Fill canvas\r\n                    canvas.empty();\r\n                    canvas.append($.tmpl(errorTemplate, {\r\n                        message: message\r\n                    }));\r\n                    self.publish(\"rendering-formRenderedError\", message);\r\n                    self.canvas.triggerHandler(\"errorform\", message);\r\n                    // Ends main timer and log everything\r\n                    bizagi.chrono.stopAndLog(\"rendering\");\r\n                    bizagi.chrono.stopAndLog(\"rendering+data\");\r\n\r\n                    self.executionDeferred.reject();\r\n                });\r\n        });\r\n\r\n        return self.executionDeferred.promise();\r\n    },\r\n    /*\r\n    *   Returns the execution deferred to determine if the component is ready or not\r\n    */\r\n    ready: function () {\r\n        return this.executionDeferred.promise();\r\n    },\r\n    /*\r\n    *   Loads data and render factory in order to process the form\r\n    *   Returns a deferred to set callbacks when the process is done\r\n    */\r\n    process: function (params) {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        // Call get form data service\r\n        var dataPromise = self.dataService.getFormData(params);\r\n\r\n        var canvas = self.canvas || params.canvas;\r\n\r\n        bizagi.showErrorAlertDialog = false;\r\n        // Set callback when requests have been done\r\n        $.when(dataPromise, self.renderFactory)\r\n            .done(function (data, renderFactory) {\r\n                bizagi.showErrorAlertDialog = true;\r\n\r\n                // When there is no data trigger an event\r\n                if (bizagi.util.isEmpty(data)) {\r\n                    self.publish(\"no-data-found\");\r\n                    defer.fail();\r\n                    return;\r\n                }\r\n\r\n                if (data && data.type == \"reload\") {\r\n                    var form = self.form;\r\n                    if (form) {\r\n                        form.endLoading();\r\n                        form.dispose();\r\n                    }\r\n                    // Trigger handler on canvas\r\n                    canvas.triggerHandler(\"routing\");\r\n\r\n                } else if (data && data.type == \"suspended\") {\r\n                    var errorTemplate = renderFactory.getTemplate(\"info-message\");\r\n                    var message = bizagi.localization.getResource(\"render-case-suspended\");\r\n                    var errorHtml = $.tmpl(errorTemplate, {\r\n                        message: message\r\n                    });\r\n                    // Remove loading icon from summary container\r\n                    errorHtml.appendTo(canvas);\r\n\r\n                    defer.fail();\r\n\r\n                } else if (data && data.type != \"error\") {\r\n                    if (params.hasOwnProperty('printversion')) {\r\n                        data = self.transformGridControl(data);\r\n                        data.form.properties.editable = \"False\";\r\n                    }\r\n\r\n                    bizagi.chrono.initAndStart(\"rendering\");\r\n                    params.type = (data.form && data.form.properties.type) || params.type;\r\n                    var form = self.processForm(data.form, renderFactory, params);\r\n\r\n                    // Resolve deferred\r\n                    defer.resolve(form);\r\n\r\n                } else {\r\n                    self.getFailDeferred(data, defer);\r\n                }\r\n            }).fail(function (errorMessage) {\r\n            self.getFailDeferred(errorMessage, defer);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n    /**\r\n     * In the print version widget when grid control was rendered, the main render has broken\r\n     * Is necesary change id of grid control to fixed these  problems\r\n     */\r\n    transformGridControl: function (data) {\r\n        var self = this;\r\n        if (data == null) {\r\n            return data;\r\n        }\r\n\r\n        if (data.hasOwnProperty('type') && data.type == 'grid') {\r\n            data.id = data.id + \"-print\";\r\n            data.allowAdd = \"False\";\r\n            data.allowDelete = \"False\";\r\n            data.allowEdit = \"False\";\r\n            data.allowGrouping = \"False\";\r\n            data.allowMore = \"False\";\r\n            data.allowSearch = \"False\";\r\n        } else {\r\n            $.each(data, function (key, value) {\r\n                if (typeof (value) == 'object') {\r\n                    data[key] = self.transformGridControl(data[key]);\r\n                }\r\n            });\r\n        }\r\n        return data;\r\n    },\r\n    /**\r\n     * Resolve deferred\r\n     */\r\n    getFailDeferred: function (errorMessage, defer) {\r\n        var self = this;\r\n        var message = \"\";\r\n        var jsonErrorMessage = {};\r\n        try {\r\n            jsonErrorMessage = JSON.parse(errorMessage.responseText);\r\n        } catch (e) {\r\n            jsonErrorMessage = {message: errorMessage.responseText, errorType: \"ERRORUNKNOWN\"};\r\n        }\r\n\r\n\r\n        if (jsonErrorMessage.message) {\r\n            message += \"<br>Error Type: \" + jsonErrorMessage.errorType;\r\n            message += \"<br>Error Message: \" + jsonErrorMessage.message;\r\n        } else {\r\n            if (jsonErrorMessage.errorType == \"JSharpNotSupportedException\") {\r\n                message += \"<br>Error Message: \" + bizagi.localization.getResource(\"jsharp-required\");\r\n            }\r\n        }\r\n\r\n        // Error in metadata InvalidFormMetadata\r\n        if (jsonErrorMessage.errorType == 'ERRORUNKNOWN') {\r\n            defer.reject(message, jsonErrorMessage.errorType);\r\n        } else {\r\n\r\n            defer.reject(message);\r\n        }\r\n    },\r\n    /*\r\n    *   Process the form\r\n    */\r\n    processForm: function (data, renderFactory, params) {\r\n        var form = renderFactory.getContainer($.extend(params, {\r\n            type: params.type || \"form\",\r\n            data: data\r\n        }));\r\n\r\n        //Orientation RTL - OrderButtons\r\n        if (typeof BIZAGI_ORIENTATION != \"undefined\") {\r\n            if ((form.properties.orientation == \"rtl\" || BIZAGI_ORIENTATION == 'rtl') && form.buttons.length > 0) {\r\n                var buttonsForm = form.buttons[0];\r\n\r\n                form.buttons.splice(0, 1);\r\n                form.buttons.push(buttonsForm);\r\n            }\r\n        }\r\n\r\n        // Render the full form\r\n        form.render();\r\n\r\n        return form;\r\n    },\r\n    /*\r\n    *   Performs a resize\r\n    */\r\n    resize: function (args) {\r\n        var self = this;\r\n        if (self.form) {\r\n            self.form.trigger(\"renderresize\", args);\r\n        }\r\n    },\r\n    /*\r\n    *   Binds a refresh handler to detect when the whole form needs to fetch all data from server\r\n    */\r\n    configureRefresh: function (form, canvas) {\r\n        var self = this;\r\n\r\n        // Attach a refresh handler to recreate all the form\r\n        form.bind(\"refresh\", function (_, refreshParams) {\r\n\r\n            // Find the scroll top\r\n            var parent = form.container.parent();\r\n            parent = bizagi.util.scrollTop(parent);\r\n            var scrollTop = parent.scrollTop();\r\n\r\n            $(self.form).trigger(\"onRefreshStarted\");\r\n\r\n            //Dispose current form\r\n            form.dispose(refreshParams);\r\n            canvas.fastEmpty();\r\n            var canvasParent = canvas.parent();\r\n            if (canvasParent.find(\".ui-bizagi-button-container\").length > 0) {\r\n                canvasParent.find(\".ui-bizagi-button-container\").remove();\r\n            }\r\n\r\n            if (self.executionDeferred && self.executionDeferred.state) {\r\n                if (self.executionDeferred.state() == \"resolved\") {\r\n                    self.executionDeferred = $.Deferred();\r\n                }\r\n            }\r\n\r\n            var formParams = self.form.getParams();\r\n            // Re-execute process\r\n            $.when(self.execute($.extend(refreshParams, {\r\n                canvas: canvas,\r\n                refreshing: true,\r\n                idCase: formParams.idCase,\r\n                displayName: formParams.displayName\r\n            }))).done(function () {\r\n\r\n                // Restore scroll at same position\r\n                setTimeout(function () {\r\n                    parent.scrollTop(scrollTop);\r\n                    $(self.form).trigger(\"onRefreshFinished\");\r\n                }, 100);\r\n            });\r\n\r\n            return self.executionDeferred.promise();\r\n        });\r\n    },\r\n    /*\r\n    *   Binds a resize hanlder to configure the resize behaviour\r\n    */\r\n    configureResize: function (form) {\r\n        var self = this;\r\n\r\n        // Attach resize handler\r\n        form.bind(\"renderresize\", function (_, args) {\r\n            args = args || {};\r\n            // Just allow one resize at a time\r\n            if (self.resizeTimeout)\r\n                return;\r\n            var resizeFn = function () {\r\n                // Call resize event in form\r\n                var width = $(window).width();\r\n                var height = $(window).height();\r\n                if (args.forceResize || width != self.lastWidth) {\r\n\r\n                    // Logging stuff\r\n                    bizagi.chrono.initAndStart(\"resize\");\r\n\r\n                    // Perform resize\r\n                    form.resize({\r\n                        width: width,\r\n                        height: height\r\n                    });\r\n                    self.lastWidth = width;\r\n                    self.lastHeight = height;\r\n\r\n                    // Logging stuff\r\n                    bizagi.chrono.stopAndLog(\"resize\");\r\n                    bizagi.chrono.log(\"resize\");\r\n                }\r\n\r\n                self.resizeTimeout = null;\r\n            };\r\n            self.resizeTimeout = setTimeout(resizeFn, 0);\r\n\r\n        });\r\n        self.resize();\r\n    },\r\n    /*\r\n    *   Binds a routing handler to detect when the workportal need to enroute the case\r\n    */\r\n    configureRouting: function (form, canvas) {\r\n        // Attach a routing handler to notify to the caller\r\n        form.bind(\"routing\", function (context, triggerParams) {\r\n            //Dispose current form\r\n            form.dispose();\r\n\r\n            // Trigger handler on canvas\r\n            canvas.triggerHandler(\"routing\", triggerParams);\r\n        });\r\n    },\r\n    /*\r\n    *   Binds a generic handler that will be replicated to facade instantiators\r\n    */\r\n    configureGlobalHandlers: function (form) {\r\n        var self = this;\r\n\r\n        // Attach a routing handler to notify to the caller\r\n        form.bind(\"globalHandler\", function (_, args) {\r\n            // Trigger handler on canvas\r\n            return self.publish(args.eventType, args.data);\r\n        });\r\n    },\r\n    /*\r\n    * Binds error form handler to detect when the render element nop posible get information or error in server\r\n    */\r\n    configureRenderError: function (form, canvas) {\r\n        var self = this;\r\n\r\n        form.bind(\"formRenderingError\", function (event, errorMessage) {\r\n            $.when(self.renderFactory)\r\n                .done(function (renderFactory) {\r\n                    var message = \"<br>Error: \";\r\n\r\n                    errorMessage = errorMessage.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\r\n\r\n                    var jsonErrorMessage = JSON.parse(errorMessage);\r\n                    if (jsonErrorMessage.message) {\r\n                        message += jsonErrorMessage.message;\r\n                        message += \"<br>Error Type: \" + jsonErrorMessage.errorType;\r\n                    }\r\n                    var errorTemplate = renderFactory.getCommonTemplate(\"form-error\");\r\n                    // Fill canvas\r\n                    canvas.empty();\r\n                    canvas.append($.tmpl(errorTemplate, {\r\n                        message: message\r\n                    }));\r\n                    //send the type error to differentiate between a form and an item for render\r\n                    self.canvas.triggerHandler(\"errorform\", \"renderItemError\");\r\n                    // Ends main timer and log everything\r\n                    bizagi.chrono.stopAndLog(\"rendering+data\");\r\n                    bizagi.chrono.stopAndLog(\"rendering\");\r\n                });\r\n        });\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n        if (self.form) {\r\n            self.form.dispose();\r\n        }\r\n        bizagi.util.dispose(self);\r\n    },\r\n\r\n    resizeInPopUpHTML: function () {\r\n        if ($(\".activitiFormContainer\").length > 0 && bizagi.util.getQueryString().type != \"cases\") {\r\n            var heightActivitiFormContainer = $(\".activitiFormContainer\").height() || 0;\r\n            var renderForm = $(\".activitiFormContainer #ui-bizagi-webpart-render-container\");\r\n            var buttonContainer = $(\".ui-bizagi-button-container\", \".activitiFormContainer\");\r\n            var heightButtonContainer = buttonContainer.outerHeight() || 0;\r\n            var renderBehavior = bizagi.util.getQueryString().renderBehavior || \"\";\r\n            renderBehavior = renderBehavior.replace(\"#\", \"\");\r\n\r\n            if (renderBehavior == \"PopUp\") {\r\n                if (typeof (self.postMessageSocket) == \"undefined\") {\r\n                    var heightCanvas = $(\".activitiFormContainer\").height() - 50 || 396;\r\n                    $(\"#render-canvas\").height(heightCanvas);\r\n                    $(\"#render-canvas\").css(\"overflowY\", \"scroll\");\r\n                } else $(\".activitiFormContainer\").height($(\".activitiFormContainer\").height() + $(\".ui-bizagi-button-container\").height() + 30);\r\n                $(\".ui-bizagi-button-container\").css(\"position\", \"absolute\");\r\n                $(\".ui-bizagi-button-container\").appendTo(\".activitiFormContainer\");\r\n                if ($(\".ui-bizagi-button-container\").length > 1) {\r\n                    $(\".ui-bizagi-button-container:first\").hide();\r\n                    renderForm.css(\"marginTop\", \"-17px\");\r\n                }\r\n            }\r\n            if (buttonContainer.length > 0) {\r\n                //display buttons\r\n                renderForm.height(heightActivitiFormContainer - 97 - heightButtonContainer);\r\n            }\r\n            if ($(\".ui-bizagi-button-container\").children().length == 0)\r\n                $(\"#render-canvas\").height($(\"#render-canvas\").height() + heightButtonContainer);\r\n            else {\r\n                buttonContainer.width(\"100%\");\r\n                buttonContainer.css(\"marginLeft\", 0);\r\n                buttonContainer.css(\"bottom\", 0);\r\n            }\r\n        } else if (bizagi.util.getQueryString().type == \"render\") {\r\n            $(\"html\").css(\"overflowX\", \"hidden\");\r\n            ($(\"#render\").height() <= window.innerHeight + 5) ? $(\"html\").css(\"overflowY\", \"hidden\")\r\n                : $(\"html\").css(\"overflowY\", \"scroll\");\r\n            $(\".ui-widget-overlay\").height(650);\r\n        }\r\n    }\r\n\r\n});"]}