{"version":3,"sources":["jquery/rendering/js/services/bizagi.render.services.endPoints.js","jquery/rendering/js/services/bizagi.render.services.context.js","jquery/rendering/js/services/bizagi.render.services.service.js","jquery/rendering/js/services/bizagi.render.services.multiactionservice.js","jquery/rendering/js/services/bizagi.render.services.metadataMultiactionservice.js","jquery/rendering/js/base/command/bizagi.command.controllers.controller.js","jquery/rendering/js/base/command/bizagi.command.controllers.validation.js","jquery/rendering/js/base/command/bizagi.command.controllers.action.js","jquery/rendering/js/base/bizagi.rendering.element.js","jquery/rendering/js/base/container/bizagi.rendering.container.js","jquery/rendering/js/base/container/bizagi.rendering.form.js","jquery/rendering/js/base/container/bizagi.rendering.formTemplate.js","jquery/rendering/js/base/container/bizagi.rendering.layout.js","jquery/rendering/js/base/container/bizagi.rendering.accordion.js","jquery/rendering/js/base/container/bizagi.rendering.accordionItem.js","jquery/rendering/js/base/container/bizagi.rendering.group.js","jquery/rendering/js/base/container/bizagi.rendering.horizontal.js","jquery/rendering/js/base/container/bizagi.rendering.panel.js","jquery/rendering/js/base/container/bizagi.rendering.contentPanel.js","jquery/rendering/js/base/container/bizagi.rendering.searchForm.js","jquery/rendering/js/base/container/bizagi.rendering.tab.js","jquery/rendering/js/base/container/bizagi.rendering.tabItem.js","jquery/rendering/js/base/render/bizagi.rendering.render.js","jquery/rendering/js/base/render/bizagi.rendering.render.base.js","jquery/rendering/js/base/render/bizagi.rendering.combo.js","jquery/rendering/js/base/render/bizagi.rendering.collectionnavigator.js","jquery/rendering/js/base/render/bizagi.rendering.check.js","jquery/rendering/js/base/render/bizagi.rendering.number.js","jquery/rendering/js/base/render/bizagi.rendering.numberScientificNotation.js","jquery/rendering/js/base/render/bizagi.rendering.date.js","jquery/rendering/js/base/render/bizagi.rendering.extendedText.js","jquery/rendering/js/base/render/bizagi.rendering.grid.js","jquery/rendering/js/base/render/bizagi.rendering.hidden.js","jquery/rendering/js/base/render/bizagi.rendering.label.js","jquery/rendering/js/base/render/bizagi.rendering.search.js","jquery/rendering/js/base/render/bizagi.rendering.text.js","jquery/rendering/js/base/render/bizagi.rendering.button.js","jquery/rendering/js/base/render/bizagi.rendering.fileprint.js","jquery/rendering/js/base/render/bizagi.rendering.link.js","jquery/rendering/js/base/render/bizagi.rendering.checkList.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.render.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.image.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.link.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.label.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.text.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.upload.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.boolean.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.dateTime.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.number.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.money.js","jquery/rendering/js/base/render/layout/bizagi.rendering.layout.placeholder.js","jquery/rendering/js/base/render/bizagi.rendering.geolocation.js","jquery/rendering/js/base/render/bizagi.rendering.upload.js","jquery/rendering/js/base/render/bizagi.rendering.ecm.js","jquery/rendering/js/base/render/bizagi.rendering.yesno.js","jquery/rendering/js/base/render/bizagi.rendering.letter.js","jquery/rendering/js/base/render/bizagi.rendering.formLink.js","jquery/rendering/js/base/render/bizagi.rendering.document.js","jquery/rendering/js/base/render/bizagi.rendering.cascadingCombo.js","jquery/rendering/js/base/render/bizagi.rendering.list.js","jquery/rendering/js/base/render/bizagi.rendering.multiSelect.js","jquery/rendering/js/base/render/bizagi.rendering.money.js","jquery/rendering/js/base/render/bizagi.rendering.radio.js","jquery/rendering/js/base/render/bizagi.rendering.searchList.js","jquery/rendering/js/base/render/bizagi.rendering.userfield.js","jquery/rendering/js/base/render/bizagi.rendering.image.js","jquery/rendering/js/base/render/bizagi.rendering.association.js","jquery/rendering/js/base/render/bizagi.rendering.getUser.js","jquery/rendering/js/base/render/bizagi.rendering.queryProcess.js","jquery/rendering/js/base/render/bizagi.rendering.querySearchUser.js","jquery/rendering/js/base/render/bizagi.rendering.comboSelected.js","jquery/rendering/js/base/render/bizagi.rendering.userPassword.js","jquery/rendering/js/base/render/bizagi.rendering.stakeholder.js","jquery/rendering/js/base/render/bizagi.rendering.actionLauncher.js","jquery/rendering/js/base/render/bizagi.rendering.range.js","jquery/rendering/js/base/render/bizagi.rendering.rangeDate.js","jquery/rendering/js/base/render/bizagi.rendering.rangeMoney.js","jquery/rendering/js/base/render/bizagi.rendering.rangeNumber.js","jquery/rendering/js/base/render/bizagi.rendering.entityTemplate.js","jquery/rendering/js/base/render/bizagi.rendering.polymorphicLauncher.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.column.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.readonly.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.document.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.letter.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.combo.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.search.js","jquery/rendering/js/base/render/column/bizagi.rendering.columns.date.js","jquery/rendering/js/base/bizagi.rendering.base.factory.js","jquery/rendering/js/bizagi.rendering.device.factory.js","jquery/rendering/js/bizagi.rendering.facade.js"],"names":["bizagi","render","services","endPoints","getEndPoints","params","renderHandlerPathRest","renderUploadHandlerPathRest","renderFileHandlerPathRest","letterHandlerPathRest","multiActionHandlerPathRest","metadataHandlerPathRest","context","form-get-data","proxyPrefix","form-submit-data","form-submit-data-upload","render-property-refresh","render-multiaction","render-upload-cancel-image","render-upload-data-url","render-upload-add-url","render-upload-delete-url","render-ecm-upload-url","render-multiaction-metadata","render-grid-edit-url","render-grid-save-url","render-grid-add-url","render-grid-rollback-url","render-grid-commit-url","render-grid-checkpoint-url","render-save-entity","render-stakeholder-associated","render-search-default-image","render-search-form-get-data","render-search-advanced-url","render-letter-notEditable-url","render-letter-content-url","render-letter-save-url","render-letter-content-icons","render-userfield-definition","render-document-generate","render-document-generateAllDocuments","render-processes-startform","render-processes-getstartform","render-entity-layout-image64","render-entity-layout-imageByteArray","getXSRFToken","render-entity-layout-upload-files","case-handler-getCaseSummary","case-handler-getCaseSummaryByGuid","case-handler-getCaseAssignees","case-handler-getWorkItems","case-handler-getWorkItemsByGuid","admin-getUsersList","admin-getUsersList-FromPreferences","admin-getUsersList-ForStakeholders","admin-getUsersForAssignation","admin-users-config","admin-usersform","admin-GenerateDataToSendByEmail","admin-sendUserEmail","alert","sharepointProxyPrefix","$","Class","extend","init","this","util","isEmpty","getUrl","service","setProxyPrefix","BA_ACTION_PARAMETER_PREFIX","BA_CONTEXT_PARAMETER_PREFIX","BA_PAGE_CACHE","serviceLocator","multiactionService","multiactionservice","guid","Math","override","enableECMMetadataMultiaction","multiactionMetadataService","metadatamultiactionservice","userfieldRequests","deviceType","isSmartphoneDevice","deviceEnum","smartphone","isTabletDevice","tablet","desktop","deviceCode","getDeviceCode","multiaction","metadataECMMultiaction","getFormData","self","data","action","idProcess","idForm","idEntity","surrogateKey","idRender","xpathContext","requestedForm","recordXPath","summaryForm","idCase","idWorkitem","idTask","idPageCache","contextType","guidEntity","isRefresh","isActionStartForm","additionalXpaths","idStartScope","readOnlyForm","printversion","recordXpath","downloadOfflineForm","editable","BA_ALL_PARAMETER_PREFIX","prepare","chrono","initAndStart","ajax","url","type","dataType","serviceType","pipe","response","stopAndLog","form","properties","transformGridDataToReadOnly","_data","hasOwnProperty","id","allowAdd","allowDelete","allowEdit","allowGrouping","allowMore","allowSearch","each","key","value","e","getSearchFormData","xpath","idSearchForm","processDataValues","o","submitData","resolveData","contexttype","transitions","surrogatekey","forcePlanCompletion","actionType","toString","toUpperCase","debug","name","newName","isEmptyObject","search","substr","getPropertyData","extra","property","sessionId","guidentity","pxpath","prows","ppage","undefined","pfilter","psort","porder","pcaseId","pguidEntity","psurrogatedKey","pactionXpath","ptemplateGuid","pparameters","beforeSend","xhr","status","multiactionConnection","push","getData","getSearchData","term","getCollapseData","collapseState","getGridData","sort","order","page","rows","searchFilter","getGridDataExclusivesSelected","xpathfilter","getUploadCancelImage","pathToBase","getUploadFileUrl","fileId","verifyPathToBase","jQuery","param","getUploadFileEntityUrl","isContextContainerWidgetRender","xpathActions","getUploadAddUrl","getUploadAddFileUrl","isUserPreferences","deleteImage","deleteUploadFile","getECMMetadata","idFileUpload","xPath","idAttrib","interceptor","intercept","source","checkOutFile","cancelCheckOut","deleteECMFile","updateECMFileContent","metaValues","updateECMMetadata","getFileProperties","uploadECMFile","fileUpload","fileName","getECMFileUrl","p_sessionId","isFileOnECM","idUpload","read","editGridRecord","addGridRecord","addGridRecordData","saveGridRecord","disableServerGridValidations","deleteGridRecord","getFlipAssociation","flipstate","parseJSON","rollbackGridAction","getSearchDefaultImage","processDataCriteria","criteria","submitSearch","JSON","encode","allowFullSearch","maxRecords","associateStakeholder","associatedUser","refreshAssociateStakeholder","getLetterNotEditableUrl","getLetterContent","getCanGenerateLetter","saveLetterContent","content","fullUrl","getLetterEditorIconsPath","executeButton","getFilePrintUrl","disposition","editLinkForm","saveLinkForm","rollbackLinkForm","commitLinkForm","commitGridAction","sendCheckpoint","sendCheckpointAction","getUserfieldDefinition","userfield","guidUserfield","device","refreshControl","refreshGridCell","column","typeRender","executeRule","rule","create","executeInterface","interface","executeSAPConnector","guidsap","executeConnector","guidConnector","generateDocumentTemplate","append","h_pageCacheId","contextXpath","xpathcontext","groupMappingId","groupMapping","xpathAttribute","controlId","getAllDocumentsDownloadUrl","idWorkItem","getCaseNumber","replace","isMobile","getCaseAssignees","getWorkitems","onlyUserWorkItems","getGridExportUrl","exportType","sendEmail","to","subject","message","selected","invalidatePageCache","getUsersList","getUsersListFromPreferences","getUsersListForStakeholders","getUsersForAssignation","getUsersForm","generateDataToSendByEmail","idUser","password","sendUserEmail","eMailTo","body","getConfiguration","indexOf","getTemplate","forcePersonalizedColumns","templateType","templateGuid","isDefaultTemplate","detectDevice","hasStartForm","guidWFClass","getStartForm","guidprocess","surrogatedKey","mappingstakeholders","cache","editActionForm","getActions","extendParams","ptags","pmaxitems","executeActions","pguidConstructor","pguidAction","getPolymorphicActions","serializePolymorphicActions","values","actions","getParents","node","parents","fillTree","list","children","child","displayName","hasConstructor","guidObject","guidConstructor","length","getEntityImage64","width","height","entity","getFilesDataForLayoutUploadControl","processUploadFile","verifyMobilePathToBase","formData","contentType","processData","isSharepointContext","replaceAll","batch","batchTimer","circularDependencies","replicateServiceMethods","getService","prototype","eval","proxyMethod","method","arguments","apply","add","makeCircularDependenciesError","error","messageTmpl","localization","getResource","printf","dependencyFrom","dependencyTo","deferred","Deferred","h_action","detectCircularDependencies","addNode","clearTimeout","batchTimeout","tag","singleAction","setTimeout","resolveDependencies","resolve","i","multiactionError","reject","fire","promise","item","when","execute","rejectDeferreds","done","responses","result","fail","errorMessage","finalResponse","responseText","parse","THROW_ERROR","dateFormat","buildConditions","conditions","bGridDetected","bCheckEditability","operator","expressions","buildConditionOperator","sJsCondition","expression","simple","bGDetected","searchGridReferenceInCondition","buildSimpleCondition","complex","conditionsOperator","condition","sXpath","sArgument","ensureValueJs","ensureEditable","control","renderId","detectedArgumentType","detectConditionArgumentType","argumentType","buildXpath","boolean","argument","buildArgument","getRender","getRenderById","Error","gridXpath","processGridXpath","remainingXpath","getColumn","renderType","normalizeType","isRelatedEntityRender","showTime","includes","test","number","toLowerCase","Number","NaN","date","dateFormatter","getDateFromInvariant","Date","setHours","formatInvariant","setSeconds","setMilliseconds","stringify","isEditable","showRenderNotFoundError","isVisible","visible","isParentVisible","parent","evalGridXpath","evalXpath","grid","gridColumn","cellValue","getCellCurrentValue","index","display","renderToEval","renders","getRenders","rendersToEval","bIsGrid","getValue","isFileUploaded","isValidEmail","match","RegExp","isButtonPressed","pressed","isGridButtonPressed","arrGridXpath","columns","isChanged","grep","onDeletedGridRow","rowDeleted","idMatches","exec","showContainerNotFoundError","containerId","getCurrentDate","currentDate","matches","searchForGridReference","commands","command","searchForGridReferenceInCommand","substring","bGridReferenceFound","searchGridReferenceInXpath","getGridControl","getControlCell","controllers","controller","validations","mainForm","enableDebug","_super","container","validationBox","appendTo","widget","ui","bizagi_notifications","expand","triggerGlobalHandler","collapse","hide","itemIcon","minimized","clearEnabled","title","orientation","bind","onNotificationClick","buildValidations","fnValidations","buildAllValidations","showErrorMessage","showErrorAlertDialog","showValidationMessage","showAlertMessage","showInfoMessage","focus","icon","itemAdditionalClass","performValidationFn","clearValidationMessages","validating","performValidations","countValidationMessages","hideValidationMessages","setValidationMessage","isIE8","one","not","showValidationMessages","expandNotificationBox","autofocus","isExpandedNotificationBox","invalidElements","bRendersValid","validateRenders","bFormValid","triggerHandler","sJSCode","enabled","buildValidation","validationCommand","logError","sStatement","evalValidation","sJsValidation","gridReference","tokens","sGridStatement","bValid","isValid","forEach","element","showValidationMessageById","console","log","globalDependencies","initialCallFunctions","initialCallFunctionsDeferred","buildActions","internalSubmitActions","initialCallTimeout","initialCallIncrements","actionsHistory","period","processInternalSubmitAction","buildAction","isSummaryOrGlobalForm","typeForm","evalClientAction","serverCommand","concat","elseCommands","isClientAction","dontExecute","len","hashes","executeOnlyClientActions","hash","md5","hashC","unbindActions","unbind","handle","refreshActions","newActions","_","dependencies","dependenciesId","j","dependencyAlreadyAdded","renderById","inArray","fn","buildFunction","ev","args","changed","gridColumns","searchGridColumns","sJsAction","sJsElseAction","bAutomaticRestore","bCondition","queueAction","isServerCommand","buildCommand","buildRestoreCommand","elseCommand","commandType","isRecentAction","prefix","runAction","detectCommandArgumentType","controlType","parseBoolean","ruleObj","guidRule","xpathContextRow","interfaceObj","guidInterface","connectorObj","restoreRender","originalProperties","textFormat","changeRenderBackground","background","changeRenderForeground","color","changeRenderVisibility","changeRenderEditability","changeRenderRequired","required","restoreContainer","getContainer","changeContainerBackground","backgroundColor","changeContainerVisibility","toogleContainer","changeContainerEditability","isGridComponent","ready","lenIndex","indexes","getIndexes","changeCellBackgroundColor","changeBackgroundColor","changeButtonBackground","getButton","css","addClass","style","setProperty","changeCellColor","changeColor","changeButtonForeground","changeCellVisibility","renderingDeferred","changeVisibility","changeButtonVisibility","show","isValidRender","changeCellEditability","changeEditability","changeButtonEditability","removeAttr","attr","triggerClick","trigger","changeCellRequired","changeRequired","changeRenderValue","fromAction","changeCellValue","asyncRenderDeferred","setDisplayValue","changeRenderMinValue","changeCellMinValue","changeMinValue","changeRenderMaxValue","changeCellMaxValue","changeMaxValue","executeCalculatedField","runFormula","queue","bizagiQueue","refreshContainer","def","map","internalQueue","addParallel","refreshCell","submitFormData","submitRender","submitOnChange","cleanRenderData","cleanCellData","cleanData","changeActiveItem","loadingDeferred","setAsActiveContainer","changeFormButtonVisibility","buttons","findIndex","navigation","getNavigation","setNavigationButtons","ELEMENT_TYPE_CONTAINER","ELEMENT_TYPE_RENDER","ELEMENT_TYPE_COLUMN","renderFactory","dataService","resources","observableElement","disposed","initializeData","subscribers","getXpathContext","getPageCache","getFormContainer","getElementType","resize","size","layout","isScrolledIntoView","effect","eventType","event","getRenderedElement","getMode","getParams","getFormType","isReadyToSave","getCustomHandlers","dispose","off","disposeTime","isDisposed","processFailMessage","isOfflineForm","errorType","validationController","code","startLoading","endLoading","beforeToRefresh","afterToRefresh","rendering","TYPE_QUERY_FORM","uniqueId","ceil","random","childrenHash","elements","createRenderElement","createContainerElement","createFormElement","originalElement","inlineEdit","retype","clone","mode","processDuplicateRender","registerRender","isDesign","getElement","getElementsByType","clonedElement","isClone","cloneRender","internalRender","applyContainerDefaults","html","renderContainerHtml","postRenderContainer","renderContainer","isRendered","replaceTag","replaceSelector","replaceChildrenTag","replaceChildrenHtml","executeChildrenPostRender","configureHandlers","applyPlaceHolderPolyfill","configureDesignView","configureLayoutView","config","window","placeHolderConfig","forceApply","Placeholders","enable","childrenElements","childElement","postRenderElement","renderChildrenHtml","temp","renderElement","collectRenderValues","renderValues","canBeSent","collectData","hasChanged","collectRenderValuesQueryForm","canBeSentQueryForm","collectDataQueryForm","firstChild","getRendersByXpath","hasValidGrids","childrenPromises","getFocus","getCustomHandler","customHandlers","unregisterChildren","removeActions","currentContainer","replaceWith","triggerChildrenActions","always","refreshDesignContainer","messageValidation","l","triggerRenderChange","registerActions","actionController","unregisterRender","replaceChild","splice","getChildById","rendersById","rendersByXpath","rendersByType","pageCacheId","displayAsReadOnly","userConfirmationMessage","hasRule","paramsRender","processPath","breadCrumb","split","allowValidateAndSaveAction","enableActionValidateAndSave","initializeButtons","originalProcessButton","processButton","isRoutingDisabled","applicationParent","isOfflineFormsV2Supported","isMobileDevice","button","caption","ordinal","next","nextWithoutValidations","cancel","back","createnewcase","validate","save","routing","refresh","buildButtonStyle","useCustomButtons","unshift","setParam","isArray","listRendesByType","getRenderByType","listRendesByTypeLength","renderKey","listRender","getGridByColumn","grids","columnsIds","template","fasttmpl","helptext","helpText","queryForm","globalForm","complexGatewayContainer","hasClass","activeTransitions","processButtons","validation","readyDeferred","find","checkboxLabel","transitionId","removeClass","format","newFontSize","bold","isIE","italic","underline","strikethru","strStyle","getContextType","getEndPointAction","formtype","getButtons","on","preventDefault","stopImmediatePropagation","buttonProperties","lastActionButton","routingDisabled","prop","propagateExternalEvents","processDefer","contains","document","documentElement","get","preProcessButton","postProcessButton","setLoaderDeferred","loaderDeferred","deleteLoaderDeferred","isLoaderDeferredSet","useOrSetLoaderDeferred","getLoaderPromise","appendWaitForLoader","then","defer","getAllTabs","getAllTabsLength","innerTabsLoading","needsUserConfirmation","showConfirmationBox","submitForm","customHandler","validateForm","saveForm","collectRenderValuesForSubmit","deferredsToWait","deferreds","internalSubmitFormOffline","internalSubmitForm","checkWidgetsData","isComplexGatewayPainted","getLastActionButton","countProps","showMessageBox","offlineType","waitForOnlineResponse","online","tryPushResponsePromise","responsePromise","IdCase","caseNumber","CaseNumber","failHandler","offlineAction","isValidResource","showNotification","text","animate","scrollTop","submitDataAction","executeButtonAction","performAction","checkpointAction","commitAction","waitingDeferreds","prepareCheckpointAction","prepareCommitAction","getButtonAction","flowControlDeferred","bHasValidations","stop","alertMessage","propertiesToDisplayMessages","validationToDisplayMessages","messages","modalError","sendRollbackAction","refreshForm","jqxhrList","abortAll","messageType","addValidationMessage","validationMessage","addErrorMessage","options","selectedTabs","getSelectedTabs","tabContainers","tabs","tabContainer","tab","activeTab","addSubmitAction","waitingTemplate","waitingOverlay","waitingMessage","tmpl","isSharePoint","canvas","getSize","position","getOffset","top","min-height","min-width","outerHeight","left","outerWidth","remove","getFocusedElement","setFocusedElement","errorJson","setSize","offset","updateOriginalValue","clearOnlyServer","join","internalSubmitOnChange","bRefreshForm","notCollect","cancelPreviousRequest","focusIdentifier","idCaseObject","IdScope","objMessage","strMessage","connection","pop","abort","buttonId","checkpointUrl","commitUrl","rollbackUrl","getFloatingButton","evt","click","contextEvent","processTemplate","controls","processedTemplate","g1","g2","string","parameters","layoutCollection","getCss","layoutGuid","layoutguid","loadStyle","getContextEvent","stripslashes","activate","active","cssclass","expandedIcon","getExpandedIcon","collapsedIcon","getCollapsedIcon","expandedClassIcon","bImmediate","loading","cssClass","panel","renderResult","performSearch","searchParams","refreshResults","getRemoteData","collectSearchValues","isMapEmpty","maxRows","dataUrl","records","totalPages","deviceMaxRecordsExceeded","onSearchFinished","errorObject","submitArray","operation","getCriteriaOperation","criteriaData","typeSearch","parseAdditionalProperties","tabItems","counter","tooltip","tabOrientation","getActiveTab","loadOnDemand","formParams","containsFocusedElement","setActiveTab","selectedTab","renderTabContent","postRenderTimeout","maxRendersPerScreen","rendersExecuted","renderOptimization","startOptimization","stopOptimization","included","includedInResult","maxLength","trim","valueFormat","isHidden","labelAlign","valueAlign","originalValue","previousValue","calculateInitialLayoutProperties","displayType","getDefaultLabelAlign","getDefaultValueAlign","getRTLAlign","renderWidth","calculateRenderWidth","labelWidth","valueWidth","label","layoutType","renderTemplateName","renderTemplate","isFullRender","parseFloat","isExtendedText","isExtended","displayOptionClass","getDisplayOptionClass","labelAlignClass","getAlignClass","valueAlignClass","stringLabelWidth","stringValueWidth","printVersion","showFullRender","internalRenderControl","state","replaceControlHtml","resolveResult","renderControl","renderReadOnly","configureSubmitOnChange","isLabelFormat","executePostRender","_element","internalPostRender","getControl","emptyControlByAsyncRenderDeferred","processLayout","postRenderPrintVersion","postRender","postRenderReadOnly","performExecutionModeMethods","performDesignModeMethods","configureHandlersQueryForm","configureHandlersReadOnly","internalSetInitialValue","internalSetInitialValueFlag","inlineAdd","hasValue","isQueryForm","filter","messageData","isQuery","val","columnEditable","isNumeric","controlValueIsChanged","changeFontBold","changeFontItalic","changeFontUnderline","changeFontStrikethru","changeFontSize","setValue","triggerEvents","identicalObjects","checkRequired","changeRequiredLabel","triggerRenderValidate","validateInputRetype","enableCheck","displayValue","getDisplayValue","sanitizeHTML","getLabel","mustImplement","getControlFiller","readOnlyValue","isObject","isString","decodedDisplayValue","changeDisplayOption","changeLabelAlign","alignType","changeValueAlign","customizeRenderWidth","getElementsToStylize","originalColor","currentStyle","getFormattingLabel","compareValue","baseValue","defaultValue","forceCollectData","compareValueObj","_findAction","targetObj","guidAction","objectValue","valuestrikethru","valueunderline","empty","emptyControlByChangeEditability","changeEditabilityCellControl","renderColumn","decorated","getDecorated","onCellChange","labelElement","controlElement","prepend","controlFiller","currentElement","refreshDesignControl","clearDisplayValue","input","change","is","queryValue","searchType","rangeQuery","newParameter","orderType","displayXpath","force","displayOnly","time","defaultControl","first","innerControl","autoScrollBottom","align","submitOnChangexpathContext","getCacheIdCase","percent2Number","getIdCase","getIdWorkitem","getidTask","getSessionId","backgroundImage","needBGPaint","background-color","background-image","closest","startActionExecution","actionExecutionDeferred","endActionExecution","readyActionExecution","isFromCreatedRow","isNewRow","submitInvalidatePageCacheRequest","pageCacheToInvalidate","isDesignMode","isExecutionMode","preventDefaultForAnchorTag","processLabelLayout","processControlLayout","warm","$label","changeFontColor","changeTextDecoration","$control","$elements","$element","textDecoration","hasLocalData","enableTyping","complementData","isDependant","getParentCombo","valueControl","renderCombo","renderComboTemplate","dataPromise","getTemplateName","emptyValue","emptyLabelForCombo","getTemplateParams","unique","randomNumber","items","formatItem","showEmpty","showCurrentData","getDummyData","remoteDataLoaded","recalculate","msgObj","auxMsg","resetData","combo","getSelectedValue","currentValue","parseAdditionalValues","newItem","hidden","bCurrentDataFound","emptyFound","dataValue","Object","comboData","isExtraItem","escapeValue","mapValue","validateValue","translated","findDataValueById","withAddForm","withEditForm","allowDetail","keys","getKeys","pointer","totalRows","inlineAddRecords","row","showPreview","drawControls","drawActions","drawControl","drawForms","drawPreview","templateItem","hasData","getTotalRows","getRow","getNextRow","getPreviousRow","getFirstRow","getLastRow","setPointer","isTherePendingInlineRow","addKey","newId","removeKey","navigationform","getParameters","submitAddRequest","addUrl","submitEditRequest","editUrl","submitDeleteRequest","deleteUrl","submitSaveRequest","saveUrl","dataFail","submitRollbackRequest","validateControls","showLetters","randomId","allowDecimals","getDefaultAllowDecimals","numDecimals","BIZAGI_DEFAULT_CURRENCY_INFO","decimalDigits","symbol","positiveFormat","negativeFormat","decimalSymbol","decimalSeparator","digitGroupSymbol","groupSeparator","groupDigits","setGroupDigits","colorize","colorizeOnNegative","dataTypeMinValue","calculateMinValue","dataTypeMaxValue","calculateMaxValue","isAndroidDevice","numericInput","numeric","attachRetypeDouble","attachFormatCurrency","removeValidations","formatCurrency","regions","language","blur","digitGroupSeparator","minValue","getMinValue","maxValue","getMaxValue","percentage","inputValue","inputLength","oldVal","isInvalidFormat","tempValue","isNaN","asNumber","messageToShow","isValidRenderMessage","parseInt","executeFormatCurrencyPlugin","tmpData","isIE11","clipboardData","originalEvent","totalVal","keydown","keyUnicode","charCode","keyCode","formatTimeout","floatPart","selectionStart","selectionEnd","currentPosition","keyup","keypress","character","String","fromCharCode","roundToDecimalPlace","removeTrailingZeros","positive","regExp","re","validMessage","getDefaultGroupDigits","thousands","newValue","createTooltip","currentTitle","toolTipZindex","getMaxZindex","zIndex","numericSN","timeFormat","fullFormat","datePickerRegional","formatDate","indexDateTimeSeparation","lastIndexOf","uppercaseDatePlaceholder","rtl","intHandler","isNow","dateControl","getDateControl","timeControl","getTimeControl","mask","onChangeHandler","updatingTime","hasMaxLines","maxLines","regularExpressionExpression","regularExpressionMessage","regularExpression","isEmptyField","textarea","validationMessages","regEx","decodedValue","decodeURI","valueToDisplay","originalData","areThereEditableColumns","areThereTotalizedColumns","initProperties","enabledChecks","exclusiveChanges","originalEnabledChecks","columnProperties","groupBy","spliceRowData","isExclusive","columnRender","singleInstance","totalize","reverse","showSummary","rowsPerPage","keyColumn","skipInitialLoad","allowFilter","groupSummary","groupText","groupCollapsed","groupOrder","formShowMode","floatingHeader","sortBy","sortOrder","addLabel","editLabel","deleteLabel","exportOptionsLabel","detailLabel","tableCssClass","alreadySaved","overrideGetRemoteData","changes","cellOverrides","isRTL","changeOrderData","rowKey","reverseDataRows","shift","removeRemainingColumns","numColumns","remainingColumns","getColumnType","columnIndex","getGridTemplate","applyTemplate","columnInitializers","initialize","encodeXpath","sortType","spliceIndex","spliceRowDataVisible","spliceRowDataEditable","rowTemplate","total","buildCellXpathFilter","dataResp","collectGridChange","isPressed","configureColumnSubmitOnChange","keysToDelete","columnXpath","canColumnBeSent","columnExclusiveChanges","columnEnabledChecks","lengthEnabledChecks","v","cellOverride","getCellOverride","getCellValue","setError","changeCellProperties","saveGrid","changeColumnsEditability","saveInlineAddedRows","cell","getDepthData","target","isBoolean","updateAffectedCellManually","canBeExported","hasErrors","newRows","getDataNewRows","merge","uniqueMessages","isValueValid","k","messagesLength","gridValidationMessage","setCellOverrides","len_v","newRecords","submitForGridChange","getEnabledChecks","cleanNewRecords","hasColorHeader","headerFormat","allowDinamiclabel","bindingValue","configureHelpText","searchForms","advancedSearch","allowSuggest","allowTyping","allowClear","searchLength","enableLocalStorage","expireCache","submitVersion","h_contexttype","enableQuerySuggestBehavior","regexC","hideStatus","selectedValue","regex","showDesignValidations","isNull","submitOnChangexpathContextRow","runButtonAction","a","b","$context","filesCount","horizontal","checkListGroup","vertical","templateUri","useDefaultImage","getImage64","getImageUri","replaceMultiple","allowSendInMail","getValueFilesByData","dataFiles","valueAuxFiles","getDataFilesWithoutScope","valueResult","err","warn","formContainer","files","getUploadXpath","indexHour","dateObj","INVARIANT_FORMAT","i18n","formattedDateTime","showsymbol","currencySymbol","geolocation","navigator","allowUpdate","getCurrentPosition","succes_callback","fail_callback","getErrorMessage","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","performPrecision","latitude","longitude","toPrecision","maxFileSizeOfProperty","maxSize","maxFileSizeOfUser","BIZAGI_SETTINGS","UploadMaxFileSize","maxfiles","validExtensions","singleExtensions","defExtensions","haveFiles","noFiles","file","renderUploadItem","replaceFilesHtml","itemTemplate","getTemplateItemName","buildItemUrl","filename","deleteUploadItem","fileItem","newRow","buildAddParams","BIZAGI_SESSION_NAME","setRenderRequired","maxFiles","q_xpath","showMetadata","listControl","fileProperties","getFileExtension","isImage","lengthValues","renderFileLayout","loader","productBuildToAbout","replaceItemHtml","metadataTemplate","metaData","ecm_ecmStatus","ecmStatus","ecm_isVisible","ecm_allowUpdateMetadata","allowUpdateMetadata","ecm_allowDelete","ecm_allowUpdateContent","allowUpdateContent","ecm_allowView","allowView","ecm_allowCheckOut","allowCheckOut","ecm_allowCancelCheckOut","allowCancelCheckOut","ecm_allowEdit","idFileUploads","extension","cookie","lockUploadItem","unlockUploadItem","isEmptyValue","letterOpened","getXpath","getContextXpath","maximized","likeButton","getFormLinkXpath","executeSubmitOnChange","submitCommitRequest","submitCheckpointRequest","submitDataRequest","downloadalldocuments","allowGenerate","preRenderControl","downloadAllDocuments","documents","getControlHtml","renderDocumentsHtml","renderActionsHtml","noActivateButton","allowgenerate","activateButton","getDocumentXpath","renderDocumentItem","getTemplateItem","joined","buildAllDocumentsUrl","caseId","workitemId","htmlControl","updateControlForPrintMode","validateContainer","replaceActionsHtml","buttonExecuted","generateLink","isPropagationStopped","stopPropagation","documentTemplateGenerate","showDocumentPreview","deleteDocumentTemplate","resolveDeleteDocumentTemplate","resolveDocumentTemplateGenerate","messageText","autoOpenDocuments","returnCssTypeFile","lenght","redrawDocuments","documentContainer","renderAllDocumentDownload","removeDeleteButton","startIndex","restOfWord","finishIndex","downloadAllDocumentsLink","getErrorTemplate","getTemplateDownload","getTemplateReadonly","dependants","parentCombo","initializingCascadingCombo","bindDependantCombo","configureReadOnlyHandlers","isInitialValue","deferredVisible","dependantCombo","onChangeFunction","refreshDependantCombo","focusDependant","cleanInput","isEventBinded","unbindDependantCombo","dependant","parentValue","inputCombo","parentLength","parentArray","slice","configured","itemSelected","listSize","getDataValue","addElement","removeElement","idToRemove","markAsChecked","some","found","isChecked","canAddMoreItems","$tagsContainer","toArray","reduce","acc","getElementWidth","MORE_OPTION_WIDTH","styles","getComputedStyle","filterList","query","$container","stringContainer","stringToSearch","addSelectedElements","findItemById","hasSearchForm","removeLastElement","getListItems","getFileDependencies","fileDependencies","loadFile","renderUserfieldControl","extendedData","userEditableControl","getEditableControl","renderComplex","loadUserfieldReadOnly","userReadOnlyControl","getReadonlyControl","getReadonlyValue","setEditableValue","getEditableValue","getPropertyValue","propertyName","jqXHR","textStatus","errorThrown","getRenderElements","getServerResourceURL","resource","userfieldGuid","getRenderValue","showDialog","showPopup","initialParams","userfieldName","getUserfieldControl","isColumn","getControlXpathContext","getUserFieldInstance","replicateUserfieldMethods","userfieldInstance","isUserPreference","isAutoWidth","isAutoHeight","currentUser","charAt","buildItemUrlOffline","getFormParams","getOfflineImage","imageValue","getDataUrl","saveImageOffline","path","blobPromise","isNative","media","getImagePath","normalizeIOSFilePath","errorHandler","resolveLocalFileSystemURL","fileEntry","reader","FileReader","onloadend","blob","Blob","readAsArrayBuffer","blobImage","operationType","saveOfflineImage","buildFullItemUrl","allowFlip","flipped","leftData","rightData","processPropertyValue","flip","makeJsonBase","getColumnData","getRightAssociation","formatJson","associationData","leftId","association","idRight","checked","rightId","removeValue","leftXpath","rightXpath","leftFactName","rightFactName","allowDelegatedUser","loadtemplates","getUserData","leftValues","filterData","rightValues","dataList","orderArraySelected","nA","nB","dataListArray","renderControlReadOnly","valuePassword","userName","userNames","entities","valueXpath","currentPage","refreshStakeholderList","deferredActions","engine","templateEngine","autoGenerateData","selecttemplate","processPropertyValueArgs","tagslist","maxItems","processPropertyValueDataTmplArgs","defaultAllowActions","allowactions","isHorizontal","templatetype","executeActionImmediately","processPropertyValueExecuteAction","notifyExecution","actionName","readOnly","templateDefined","actionManager","guidProcess","processStartForm","processActionFormCollection","processActionForm","addActionToQueue","actionsList","additionalXpath","idParentWorkitem","entityXpath","newValueActionsList","removeActionToQueue","controlValue","countSameActions","count","getPropertiesActionLaucher","actionsLaucher","setRanageControls","minControl","maxControl","$maxCanvas","$minCanvas","renderRangeControl","min","max","$canvas","defineRangeControl","dateMin","suscribe","observer","notify","dateMax","getRenderProperties","typeRangeControl","renderProperties","moneyMin","money","moneyMax","numberMin","numberMax","getTagList","processPropertyValueExecuteConstructor","displayNamee","taglist","decoratedClass","decorateRenders","columnVisible","showColumn","readonly","isReadonly","instanceDecoratedClass","applyOverrides","propertyOverrides","invalidElement","overrideDecoratedRenderProperties","renderSummary","postRenderSummary","getCell","setSurrogateKey","defaultvalue","setDefaultValue","getCompositeValue","overrideProperties","getSortName","getAnyDecoratedInstance","getSortColumn","arrayEach","originalGetData","getDataForAllCells","findDataById","fetchingData","valueForGrid","tableCell","formattedDate","templates","loadOverrides","initAsyncStuff","loadTemplates","loadTemplate","templateDestination","templateService","resolvedTemplate","getCommonTemplate","containerParams","mobileform","formTemplate","usersForm","contentPanel","nestedForm","tabItem","accordion","accordionItem","group","mobilegroup","searchForm","renderParams","extendedText","mobiletext","check","yesno","cascadingCombo","multiSelect","radio","image","ecm","upload","searchList","letter","formLink","link","layoutImage","layoutLink","layoutLabel","layoutText","layoutDateTime","layoutNumber","layoutMoney","layoutPlaceholder","actionLauncher","layoutBoolean","layoutUpload","entityTemplate","polymorphicLauncher","userfieldWrapper","getSearchRender","getQueryRender","fileprint","collectionnavigator","getUser","rangeDate","rangeMoney","rangeNumber","activityCheckList","columnParams","exclusiveCheck","uploadecm","numberScientificNotation","queryExtendedText","queryText","queryCheck","queryYesNo","queryNumber","queryMoney","queryDate","queryCombo","queryCascadingCombo","querySuggest","queryLabel","queryList","queryMultiSelect","querySearch","queryRadio","queryState","queryCaseState","queryProcess","querySearchUser","execution_device","cachedFactory","getRenderFactory","print","factory","getDataService","executionDeferred","deviceFactory","getFactory","subscribe","unsubscribe","publish","update","doc","ownerDocument","location","queryString","getQueryString","process","refreshing","pathProcess","insertBefore","lastWidth","lastHeight","resizeInPopUpHTML","configureRefresh","configureRouting","configureRenderError","configureResize","configureGlobalHandlers","enableE2EInterface","errorTemplate","transformGridControl","processForm","getFailDeferred","jsonErrorMessage","BIZAGI_ORIENTATION","buttonsForm","refreshParams","fastEmpty","canvasParent","resizeTimeout","forceResize","triggerParams","heightActivitiFormContainer","renderForm","buttonContainer","heightButtonContainer","renderBehavior","heightCanvas","innerHeight"],"mappings":"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","sourcesContent":["/*\r\n*   Name: BizAgi Services Rendering End Points\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script defines all the end-points used to retrieve ajax stuff\r\n*   -   All urls must be relative to the base application\r\n*/\r\n\r\n// Create or define namespace\r\nbizagi.render = (typeof (bizagi.render) !== \"undefined\") ? bizagi.render : {};\r\nbizagi.render.services = (typeof (bizagi.render.services) !== \"undefined\") ? bizagi.render.services : {};\r\nbizagi.render.services.endPoints = [];\r\n\r\n// Creates a endpoint hash factory to resolve custom requirements\r\nbizagi.render.services.getEndPoints = function (params) {\r\n\r\n    var renderHandlerPathRest = \"Rest/Handlers/Render\";\r\n    var renderUploadHandlerPathRest = \"Rest/Handlers/Render/Upload\";\r\n    var renderFileHandlerPathRest = \"Rest/Handlers/RenderFile\";\r\n    var letterHandlerPathRest = \"Rest/Handlers/Letter\";\r\n    var multiActionHandlerPathRest = \"Rest/Handlers/MultiAction\";\r\n    var metadataHandlerPathRest = \"Rest/Handlers/Metadata\";\r\n    var metadataMultiactionHandlerPathRest = \"Rest/Handlers/MetadataMultiAction\";\r\n    // Default workportal end-points\r\n    if (params.context == \"workflow\") {\r\n        return {\r\n            \"form-get-data\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"form-submit-data\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"form-submit-data-upload\": params.proxyPrefix + renderUploadHandlerPathRest,\r\n            \"render-property-refresh\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-multiaction\": params.proxyPrefix + multiActionHandlerPathRest,\r\n            \"render-upload-cancel-image\": params.proxyPrefix + \"jquery/rendering/css/desktop/plugins/other/images/upload-cancel.png\",\r\n            \"render-upload-data-url\": params.proxyPrefix + renderFileHandlerPathRest,\r\n            \"render-upload-add-url\": params.proxyPrefix + renderUploadHandlerPathRest,\r\n            \"render-upload-delete-url\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-ecm-upload-url\": params.proxyPrefix + metadataHandlerPathRest,\r\n            \"render-multiaction-metadata\": params.proxyPrefix + metadataMultiactionHandlerPathRest,\r\n            \"render-grid-edit-url\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-grid-save-url\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-grid-add-url\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-grid-rollback-url\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-grid-commit-url\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-grid-checkpoint-url\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-save-entity\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-stakeholder-associated\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-search-default-image\": params.proxyPrefix + \"jquery/rendering/css/desktop/images/bizagi_xpress.png\",\r\n            \"render-search-form-get-data\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-search-advanced-url\": params.proxyPrefix + \"Rest/Handlers/Query\",\r\n            \"render-letter-notEditable-url\": params.proxyPrefix + letterHandlerPathRest,\r\n            \"render-letter-content-url\": params.proxyPrefix + letterHandlerPathRest,\r\n            \"render-letter-save-url\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-letter-content-icons\": params.proxyPrefix + \"jquery/rendering/css/desktop/plugins/other/images/nicEditorIcons.gif\",\r\n            \"render-userfield-definition\": params.proxyPrefix + \"Rest/Userfields/{guidUserfield}/UserfieldDependency/{device}\",\r\n            \"render-document-generate\": params.proxyPrefix + \"Rest/DocumentTemplates/CaseTemplates\",\r\n            \"render-document-generateAllDocuments\": params.proxyPrefix + \"Rest/DocumentTemplates/TemplatesConcatFilesToPDF\",\r\n            \"render-processes-startform\": params.proxyPrefix + \"Rest/Processes/HasStartForm\",\r\n            \"render-processes-getstartform\": params.proxyPrefix + \"Rest/Processes/HasStartForm\",\r\n            \"render-entity-layout-image64\": params.proxyPrefix + \"Api/Entities/{entity}/Picture/{surrogateKey}/Base64\",\r\n            \"render-entity-layout-imageByteArray\": params.proxyPrefix + \"Api/Entities/{entity}/Picture/{surrogateKey}/Array?xpath={xpath}&width={width}&height={height}&idcase={idcase}&idworkitem={idworkitem}&contextxpath={contextxpath}&h_={hash}\" + \"&xsrf=\" + bizagi.getXSRFToken(),\r\n            \"render-entity-layout-upload-files\": params.proxyPrefix + \"Api/Entities/{entity}/Files/{surrogateKey}/Array?xpath={xpath}\",\r\n            \"case-handler-getCaseSummary\": params.proxyPrefix + \"Rest/Cases/{idCase}/SummaryGuid\",\r\n            \"case-handler-getCaseSummaryByGuid\": params.proxyPrefix + \"Rest/Cases/{guid}/SummaryByGuid\",\r\n            \"case-handler-getCaseAssignees\": params.proxyPrefix + \"Rest/Cases/{idCase}/AssigneesGuid\",\r\n            \"case-handler-getWorkItems\": params.proxyPrefix + \"Rest/Cases/{idCase}/WorkItems\",\r\n            \"case-handler-getWorkItemsByGuid\": params.proxyPrefix + \"Rest/Cases/{guid}/WorkItemsByGuid\",\r\n            \"admin-getUsersList\": params.proxyPrefix + \"Rest/Users/SearchUsers\",\r\n            \"admin-getUsersList-FromPreferences\": params.proxyPrefix + \"Rest/Users/SearchUsersFromPreferences\",\r\n            \"admin-getUsersList-ForStakeholders\": params.proxyPrefix + \"Rest/Users/SearchUsersForStakeholders\",\r\n            \"admin-getUsersForAssignation\": params.proxyPrefix + \"Rest/Users/UsersForAssignation\",\r\n            \"admin-users-config\": params.proxyPrefix + \"Api/Authentication/BizagiConfig\",\r\n            //users administration\r\n            \"admin-usersform\": params.proxyPrefix + \"Rest/Handlers/Render\",\r\n            \"admin-GenerateDataToSendByEmail\": params.proxyPrefix + \"Rest/Users/GenerateDataToSendByEmail\",\r\n            \"admin-sendUserEmail\": params.proxyPrefix + \"Rest/Users/SendUserEmail\"\r\n        };\r\n    }\r\n    // Sharepoint end-points (must be customized for each project)\r\n    if (params.context == \"sharepoint\" || params.context == \"portal\") {\r\n        if (typeof (params.sharepointProxyPrefix) === \"undefined\") alert(\"sharepointProxyPrefix param is requiered to build endpoints when context is 'sharepoint'\");\r\n        return {\r\n            \"form-get-data\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"form-submit-data\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"form-submit-data-upload\": params.sharepointProxyPrefix + renderUploadHandlerPathRest,\r\n            \"render-property-refresh\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"render-multiaction\": params.sharepointProxyPrefix + multiActionHandlerPathRest,\r\n            \"render-upload-cancel-image\": \"jquery/rendering/css/desktop/plugins/other/images/upload-cancel.png\",\r\n            \"render-upload-data-url\": params.sharepointProxyPrefix + renderFileHandlerPathRest,\r\n            \"render-upload-add-url\": params.sharepointProxyPrefix + renderUploadHandlerPathRest,\r\n            \"render-upload-delete-url\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"render-ecm-upload-url\": params.sharepointProxyPrefix + metadataHandlerPathRest,\r\n            \"render-grid-edit-url\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"render-grid-save-url\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"render-grid-add-url\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"render-grid-rollback-url\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"render-grid-commit-url\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"render-grid-checkpoint-url\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"render-save-entity\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"render-stakeholder-associated\": params.proxyPrefix + renderHandlerPathRest,\r\n            \"render-search-default-image\": \"jquery/css/bizagi/desktop/images/bizagi_xpress.png\",\r\n            \"render-search-form-get-data\": params.sharepointProxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-search-advanced-url\": params.sharepointProxyPrefix + \"Rest/Handlers/Query\",\r\n            \"render-letter-notEditable-url\": params.sharepointProxyPrefix + letterHandlerPathRest,\r\n            \"render-letter-content-url\": params.sharepointProxyPrefix + letterHandlerPathRest,\r\n            \"render-letter-save-url\": params.sharepointProxyPrefix + renderHandlerPathRest,\r\n            \"render-letter-content-icons\": \"jquery/css/plugins/other/images/nicEditorIcons.gif\",\r\n            \"render-userfield-definition\": params.sharepointProxyPrefix + \"Rest/Userfields/{guidUserfield}/UserfieldDependency/{device}\",\r\n            \"render-document-generate\": params.sharepointProxyPrefix + \"Rest/DocumentTemplates/CaseTemplates\",\r\n            \"render-document-generateAllDocuments\": params.sharepointProxyPrefix + \"Rest/DocumentTemplates/TemplatesConcatFilesToPDF\",\r\n            \"render-processes-startform\": params.proxyPrefix + \"Rest/Processes/HasStartForm\",\r\n            \"render-processes-getstartform\": params.proxyPrefix + \"Rest/Processes/HasStartForm\",\r\n            \"render-entity-layout-image64\": params.proxyPrefix + \"Api/Entities/{entity}/Picture/{surrogateKey}/Base64\",\r\n            \"render-entity-layout-imageByteArray\": params.proxyPrefix + \"Api/Entities/{entity}/Picture/{surrogateKey}/Array?xpath={xpath}&width={width}&height={height}&idcase={idcase}&idworkitem={idworkitem}&contextxpath={contextxpath}&h_={hash}\" + \"&xsrf=\" + bizagi.getXSRFToken(),\r\n            \"case-handler-getCaseSummary\": params.sharepointProxyPrefix + \"Rest/Cases/{idCase}/Summary\",\r\n            \"case-handler-getCaseSummaryByGuid\": params.sharepointProxyPrefix + \"Rest/Cases/{guid}/SummaryByGuid\",\r\n            \"case-handler-getWorkItems\": params.sharepointProxyPrefix + \"Rest/Cases/{idCase}/WorkItems\",\r\n            \"case-handler-getWorkItemsByGuid\": params.proxyPrefix + \"Rest/Cases/{guid}/WorkItemsByGuid\"\r\n        };\r\n    }\r\n\r\n    if (params.context == \"entitymanagement\") {\r\n        return {\r\n            \"form-get-data\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"form-submit-data\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"form-submit-data-upload\": params.proxyPrefix + renderUploadHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-property-refresh\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-upload-cancel-image\": \"jquery/rendering/css/desktop/plugins/other/images/upload-cancel.png\",\r\n            \"render-upload-data-url\": params.proxyPrefix + renderFileHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-upload-add-url\": params.proxyPrefix + renderUploadHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-upload-delete-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-grid-edit-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-grid-save-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-grid-add-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-grid-rollback-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-grid-commit-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-grid-checkpoint-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-search-default-image\": \"jquery/rendering/css/desktop/images/bizagi_xpress.png\",\r\n            \"render-search-form-get-data\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-search-advanced-url\": params.proxyPrefix + \"Rest/Handlers/Query\" + \"?h_contexttype=entity\",\r\n            \"render-letter-notEditable-url\": params.proxyPrefix + letterHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-letter-content-url\": params.proxyPrefix + letterHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-letter-save-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=entity\",\r\n            \"render-letter-content-icons\": \"jquery/rendering/css/desktop/plugins/other/images/nicEditorIcons.gif\"\r\n        };\r\n    }\r\n\r\n    if (params.context == \"search\") {\r\n        return {\r\n            \"form-get-data\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"form-submit-data\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"form-submit-data-upload\": params.proxyPrefix + renderUploadHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-property-refresh\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-upload-cancel-image\": \"jquery/rendering/css/desktop/plugins/other/images/upload-cancel.png\",\r\n            \"render-upload-data-url\": params.proxyPrefix + renderFileHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-upload-add-url\": params.proxyPrefix + renderUploadHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-upload-delete-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-grid-edit-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-grid-save-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-grid-add-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-grid-rollback-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-grid-commit-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-grid-checkpoint-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-search-default-image\": \"jquery/rendering/css/desktop/images/bizagi_xpress.png\",\r\n            \"render-search-form-get-data\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-search-advanced-url\": params.proxyPrefix + \"Rest/Handlers/Query\" + \"?h_contexttype=metadata\",\r\n            \"render-letter-notEditable-url\": params.proxyPrefix + letterHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-letter-content-url\": params.proxyPrefix + letterHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-letter-save-url\": params.proxyPrefix + renderHandlerPathRest + \"?h_contexttype=metadata\",\r\n            \"render-letter-content-icons\": \"jquery/rendering/css/desktop/plugins/other/images/nicEditorIcons.gif\"\r\n        };\r\n    }\r\n\r\n    return {};\r\n};\r\n","/*\r\n*   Name: BizAgi Rendering Service Context Factory\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define the endpoints to be used based on the given context\r\n*/\r\n\r\n$.Class.extend(\"bizagi.render.services.context\", {}, {\r\n    /* \r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        this.context = params.context;\r\n        this.endPoints = bizagi.render.services.getEndPoints(params);\r\n        this.proxyPrefix = !bizagi.util.isEmpty(params.proxyPrefix) ? params.proxyPrefix : \"\";\r\n    },\r\n\r\n    /*\r\n    *   Returns the given url for a specified service\r\n    */\r\n    getUrl: function (service) {\r\n        if (this.endPoints[service] == null) {\r\n            alert(\"No endpoint defined for: \" + service);\r\n        }\r\n        return this.endPoints[service];\r\n    },\r\n\r\n    setProxyPrefix: function(params){\r\n        this.proxyPrefix = !bizagi.util.isEmpty(params.proxyPrefix) ? params.proxyPrefix : \"\";\r\n        this.endPoints = bizagi.render.services.getEndPoints(params);\r\n    }\r\n});","/*\r\n *   Name: BizAgi Rendering Services\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This class will provide a facade to access to rendering REST services\r\n */\r\n\r\n$.Class.extend(\"bizagi.render.services.service\",\r\n    {\r\n        // Statics\r\n        BA_ACTION_PARAMETER_PREFIX: \"p_\",\r\n        BA_CONTEXT_PARAMETER_PREFIX: \"h_\",\r\n        BA_PAGE_CACHE: \"pageCacheId\"\r\n    },\r\n    {\r\n        /*\r\n         *   Constructor\r\n         */\r\n        init: function(params) {\r\n            params = params || {};\r\n            params.context = params.context || \"workflow\";\r\n            params.proxyPrefix = !bizagi.util.isEmpty(params.proxyPrefix) ? params.proxyPrefix : \"\";\r\n            this.serviceLocator = new bizagi.render.services.context(params);\r\n            this.multiactionService = new bizagi.render.services.multiactionservice(this);\r\n            this.guid = Math.guid();\r\n\r\n            if (bizagi.override.enableECMMetadataMultiaction) {\r\n                this.multiactionMetadataService = new bizagi.render.services.metadatamultiactionservice(this);\r\n            }\r\n\r\n            // Userfield definitions mini-cache\r\n            this.userfieldRequests = {};\r\n\r\n            this.deviceType = params.deviceType || (bizagi.util.isSmartphoneDevice() ? bizagi.deviceEnum.smartphone: (bizagi.util.isTabletDevice() ? bizagi.deviceEnum.tablet: bizagi.deviceEnum.desktop));\r\n            this.deviceCode = bizagi.util.getDeviceCode();\r\n        },\r\n        /*\r\n         *   Return the multiaction-service\r\n         */\r\n        multiaction: function() {\r\n            return this.multiactionService;\r\n        },\r\n\r\n        metadataECMMultiaction: function () {\r\n            return bizagi.override.enableECMMetadataMultiaction ? this.multiactionMetadataService: this;\r\n        },\r\n        /*\r\n         *   SINGLE SERVICES METHODS\r\n         */\r\n\r\n        /*\r\n         *   Gets form data\r\n         *   Returns a promise of the data being retrieved\r\n         */\r\n        getFormData: function(params) {\r\n            var self = this;\r\n\r\n            // Check if the params contains mocked data\r\n            if (params && params.data) {\r\n                return params.data;\r\n            }\r\n\r\n            // Define data\r\n            params = params || {};\r\n            var data = {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = params.action || \"LOADFORM\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"devicetype\"] = self.deviceType;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"devicecode\"] = self.deviceCode;\r\n\r\n            if (params.idProcess)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idProcess\"] = params.idProcess;\r\n            if (params.idForm)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idForm\"] = params.idForm;\r\n            if (params.idEntity)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idEntity\"] = params.idEntity;\r\n            if (params.surrogateKey)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"surrogateKey\"] = params.surrogateKey;\r\n            if (params.idRender)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            if (params.xpathContext)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            if (params.requestedForm)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"requestedForm\"] = params.requestedForm;\r\n            if (params.recordXPath)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"recordXPath\"] = params.recordXPath;\r\n            if (params.summaryForm)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"summaryForm\"] = params.summaryForm;\r\n            if (params.idCase)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idCase\"] = params.idCase;\r\n            if (params.idWorkitem)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idWorkitem\"] = params.idWorkitem;\r\n            if (params.idTask)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idTask\"] = params.idTask;\r\n            if (params.idPageCache)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            if (params.contextType)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contextType;\r\n            if (params.guidEntity)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidEntity\"] = params.guidEntity;\r\n            if (!bizagi.util.isEmpty(params.isRefresh))\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"isRefresh\"] = params.isRefresh;\r\n            if (params.isActionStartForm)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"isActionStartForm\"] = params.isActionStartForm;\r\n            if (params.additionalXpaths)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"additionalXpaths\"] = params.additionalXpaths;\r\n            if (params.idStartScope)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idStartScope\"] = params.idStartScope;\r\n            if (typeof params.readOnlyForm !== \"undefined\")\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"readonlyform\"] = params.readOnlyForm;\r\n            if (typeof params.printversion !== \"undefined\")\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"printForm\"] = params.printversion;\r\n            if (typeof params.recordXpath !== \"undefined\")\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"recordlauncherxpath\"] = params.recordXpath;\r\n            if (params.guid)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guid\"] = params.guid;\r\n            if (params.downloadOfflineForm)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"downloadofflineform\"] = 1;\r\n\r\n            if (params.editable === false) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"DisplayFormAsReadOnly\"] = true;\r\n            }\r\n\r\n            // Support parameter from ui\r\n            // Parameters that affects all the same attributes of render\r\n            if (params.printversion) {\r\n                //Print limit grid rows\r\n                var BA_ALL_PARAMETER_PREFIX = \"all_\";\r\n\r\n                if (params[self.Class.BA_ACTION_PARAMETER_PREFIX + BA_ALL_PARAMETER_PREFIX + \"rows\"]) {\r\n                    data[self.Class.BA_ACTION_PARAMETER_PREFIX + BA_ALL_PARAMETER_PREFIX + \"rows\"] = params[self.Class.BA_ACTION_PARAMETER_PREFIX + BA_ALL_PARAMETER_PREFIX + \"rows\"];\r\n                }\r\n            }\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n\r\n            // Call ajax and returns promise\r\n            bizagi.chrono.initAndStart(\"data\");\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"form-get-data\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: params.action || \"LOAD\"\r\n            })\r\n                .pipe(function(response) {\r\n                    bizagi.chrono.stopAndLog(\"data\");\r\n\r\n                    // Transform data for read only version\r\n                    if (params.printversion) {\r\n                        try {\r\n                            response.form.properties.editable = \"False\";\r\n\r\n                            var transformGridDataToReadOnly = function(_data) {\r\n                                if (_data == null) {\r\n                                    return _data;\r\n                                }\r\n                                if (_data.hasOwnProperty('type') && _data.type == 'grid') {\r\n                                    _data.id = data.id + \"-print\";\r\n                                    _data.allowAdd = \"False\";\r\n                                    _data.allowDelete = \"False\";\r\n                                    _data.allowEdit = \"False\";\r\n                                    _data.allowGrouping = \"False\";\r\n                                    _data.allowMore = \"False\";\r\n                                    _data.allowSearch = \"False\";\r\n                                } else {\r\n                                    $.each(data, function(key, value) {\r\n                                        if (typeof (value) == 'object') {\r\n                                            _data[key] = transformGridDataToReadOnly(_data[key]);\r\n                                        }\r\n                                    });\r\n                                }\r\n                                return _data;\r\n                            };\r\n                            response = transformGridDataToReadOnly(response);\r\n                        } catch (e) {\r\n                        }\r\n                    }\r\n\r\n                    return response;\r\n                });\r\n        },\r\n        /*\r\n         *   Gets a search form data\r\n         *   Returns a promise of the data being retrieved\r\n         */\r\n        getSearchFormData: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            params = params || {};\r\n            var data = {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"SEARCHFORM\";\r\n            if (params.xpath)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            if (params.idRender)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            if (params.xpathContext)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            if (params.idSearchForm)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"searchForm\"] = params.idSearchForm;\r\n            if (params.idPageCache)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-search-form-get-data\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"SEARCHFORM\"\r\n            });\r\n        },\r\n\r\n        processDataValues: function(data) {\r\n            var o;\r\n            data = $.extend(true, {}, data);\r\n            for (o in data) {\r\n                if (data.hasOwnProperty(o) && $.type(data[o]) == \"object\") {\r\n                    // for search\r\n                    if (data[o].hasOwnProperty(\"id\")) {\r\n                        data[o] = data[o].id;\r\n                    }\r\n                }\r\n            }\r\n            return data;\r\n        },\r\n        /*\r\n         *   Sends a form action to the server\r\n         */\r\n        submitData: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            data = self.resolveData(params.data || {}, params.xpathContext);\r\n            data = self.processDataValues(data);\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = params.action;\r\n\r\n            // Fill optional parameters\r\n            params = params || {};\r\n            if (params.xpath)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            if (params.idRender)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            if (params.xpathContext)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            if (params.idPageCache)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            if (params.guidEntity)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidEntity\"] = params.guidEntity;\r\n            if (params.contexttype)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            if (params.transitions)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"transitions\"] = params.transitions;\r\n            if (params.surrogatekey)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"surrogateKey\"] = params.surrogatekey;\r\n            if (params.forcePlanCompletion)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"forcePlanCompletion\"] = params.forcePlanCompletion;\r\n\r\n            /* if (params.isActionStartForm)\r\n             data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"isActionStartForm\"] = params.isActionStartForm;\r\n             */\r\n            var actionType = params.action.toString().toUpperCase();\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Data sent\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"form-submit-data\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: actionType\r\n            });\r\n        },\r\n        /*\r\n         * Get data processing xpathcontext\r\n         */\r\n        resolveData: function(data, xpathContext) {\r\n            var name, newName, value;\r\n            if (!$.isEmptyObject(data) && xpathContext) {\r\n                if (xpathContext.search(/\\[id=\\d+\\]/) !== -1) {\r\n                    for (name in data) {\r\n                        if (name.search(/\\[id=\\d+\\]/) !== -1 && xpathContext == name.substr(0, name.search(/\\]/) + 1)) {\r\n                            newName = name.substr(name.search(/\\]/) + 2);\r\n                            value = data[name];\r\n                            data[newName] = value;\r\n                            delete data[name];\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return data;\r\n        },\r\n        /*\r\n         *   Fetch a property from the server\r\n         *   Params:\r\n         *   -   xpath\r\n         *   -   idRender\r\n         *   -   xpathContext\r\n         *   -   property\r\n         */\r\n        getPropertyData: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"PROCESSPROPERTYVALUE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"propertyName\"] = params.property;\r\n\r\n            if (params.sessionId)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = params.sessionId;\r\n            if (params.contexttype)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            if (params.guidentity)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidEntity\"] = params.guidentity;\r\n            if (params.surrogatekey)\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"surrogateKey\"] = params.surrogatekey;\r\n            if (params.pxpath)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"xpath\"] = params.pxpath;\r\n            if (params.prows)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"rows\"] = params.prows;\r\n            if (params.ppage)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"page\"] = params.ppage;\r\n            if (params.pfilter != undefined && params.pfilter != null)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"filter\"] = params.pfilter;\r\n            /*else\r\n             data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"filter\"] = \"\";*/\r\n            if (params.psort != undefined && params.psort != null)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sort\"] = params.psort;\r\n            if (params.porder)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"order\"] = params.porder;\r\n            if (params.pcaseId)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"caseId\"] = params.pcaseId;\r\n            if (params.pguidEntity)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"guidEntity\"] = params.pguidEntity;\r\n            if (params.psurrogatedKey) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"surrogatedKey\"] = params.psurrogatedKey;\r\n            }\r\n            if (params.pactionXpath) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"actionXpath\"] = params.pactionXpath;\r\n            }\r\n            if (params.ptemplateGuid) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"templateGuid\"] = params.ptemplateGuid;\r\n            }\r\n            if (params.pparameters) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"parameters\"] = params.pparameters;\r\n            }\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Property refresh for '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            // TODO: change REST library in order to support extra HTTP parameters\r\n            // Please be careful with dataType parameter\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-property-refresh\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: params.dataType || \"json\",\r\n                serviceType: \"PROCESSPROPERTYVALUE\",\r\n                beforeSend: function(xhr, status) {\r\n                    bizagi.multiactionConnection = bizagi.multiactionConnection || [];\r\n                    bizagi.multiactionConnection.push(xhr);\r\n                }\r\n            });\r\n\r\n        },\r\n        /*\r\n         *   Refresh the data property from the server\r\n         *   Params:\r\n         *   -   xpath\r\n         *   -   idRender\r\n         *   -   xpathContext\r\n         */\r\n        getData: function(params) {\r\n            return this.getPropertyData($.extend(params, {\r\n                property: \"data\"\r\n            }));\r\n        },\r\n        /*\r\n         *   Refresh the data property from the server\r\n         *   This version is to fetch search data\r\n         *   Params:\r\n         *   -   xpath\r\n         *   -   idRender\r\n         *   -   xpathContext\r\n         *   -   term\r\n         */\r\n        getSearchData: function(params) {\r\n            var self = this;\r\n            params.extra = params.extra || {};\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"term\"] = params.term;\r\n\r\n            return this.getPropertyData($.extend(params, {\r\n                property: \"data\"\r\n            }));\r\n        },\r\n\r\n        /*\r\n         * Refresh tha data property from the server\r\n         * Params:\r\n         *   -   collapsestate\r\n         */\r\n        getCollapseData: function(params) {\r\n            var self = this;\r\n            params.extra = params.extra || {};\r\n\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"collapseState\"] = params.collapseState;\r\n\r\n            return this.getPropertyData($.extend(params, {\r\n                property: \"collapseState\"\r\n            }));\r\n        },\r\n\r\n        /*\r\n         *   Refresh the data property from the server\r\n         *   This version is to fetch grid data\r\n         *   Params:\r\n         *   -   xpath\r\n         *   -   idRender\r\n         *   -   xpathContext\r\n         *   -   sort\r\n         *   -   page\r\n         *   -   rows\r\n         */\r\n        getGridData: function(params) {\r\n            var self = this;\r\n            params.extra = params.extra || {};\r\n\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sort\"] = params.sort;\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"order\"] = params.order;\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"page\"] = params.page;\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"rows\"] = params.rows;\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"searchFilter\"] = params.searchFilter;\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"value\"] = params.value;\r\n\r\n            return this.getPropertyData($.extend(params, {\r\n                property: \"data\"\r\n            }));\r\n        },\r\n\r\n        getGridDataExclusivesSelected: function(params) {\r\n            var self = this;\r\n            params.extra = params.extra || {};\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"rows\"] = params.rows;\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"value\"] = params.value;\r\n            params.extra[self.Class.BA_ACTION_PARAMETER_PREFIX + \"xpathfilter\"] = params.xpathfilter;\r\n            return this.getPropertyData($.extend(params, {\r\n                property: \"exclusivesSelected\"\r\n            }));\r\n        },\r\n\r\n        /*\r\n         *   Returns the upload plugin cancel image\r\n         */\r\n        getUploadCancelImage: function() {\r\n            return bizagi.services.ajax.pathToBase + this.serviceLocator.getUrl(\"render-upload-cancel-image\");\r\n        },\r\n        /*\r\n         *   Returns the upload file url for each file\r\n         */\r\n        getUploadFileUrl: function(params) {\r\n            var self = this;\r\n            var url = this.serviceLocator.getUrl(\"render-upload-data-url\");\r\n            var data = {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"PROCESSPROPERTYVALUE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"propertyName\"] = \"fileContent\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"fileId\"] = params.fileId;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = params.sessionId;\r\n            (params.contexttype) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype : \"\";\r\n            return self.verifyPathToBase(bizagi.services.ajax.pathToBase, url) + \"?\" + jQuery.param(data) + \"&xsrf=\" + bizagi.getXSRFToken();\r\n        },\r\n\r\n        getUploadFileEntityUrl: function(params) {\r\n            var self = this;\r\n            var url = this.serviceLocator.getUrl(\"render-upload-data-url\");\r\n            var data = {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"PROCESSPROPERTYVALUETEMPLATE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"propertyName\"] = \"fileContent\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"fileId\"] = params.fileId;\r\n            if (params.isContextContainerWidgetRender) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = params.sessionId;\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"xpathactions\"] = params.xpathActions;\r\n            } else {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"surrogateKey\"] = params.surrogatekey;\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidEntity\"] = params.guidentity;\r\n            }\r\n\r\n            return self.verifyPathToBase(bizagi.services.ajax.pathToBase, url) + \"?\" + jQuery.param(data) + \"&xsrf=\" + bizagi.getXSRFToken();\r\n        },\r\n\r\n        /*\r\n         *   Returns the upload add url\r\n         */\r\n        getUploadAddUrl: function() {\r\n            var self = this;\r\n            var url = this.serviceLocator.getUrl(\"render-upload-add-url\");\r\n            var data = {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"ADDFILE\";\r\n\r\n            return self.verifyPathToBase(bizagi.services.ajax.pathToBase, url) + \"?\" + jQuery.param(data);\r\n        },\r\n        /*\r\n         *   Returns the upload add url\r\n         */\r\n        getUploadAddFileUrl: function(isUserPreferences) {\r\n            var self = this;\r\n            var url = this.serviceLocator.getUrl(\"form-submit-data-upload\");\r\n            var data = {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = (isUserPreferences === true) ? \"SAVEUSERIMAGE\" : \"savefile\";\r\n\r\n            return self.verifyPathToBase(bizagi.services.ajax.pathToBase, url) + \"?\" + jQuery.param(data);\r\n        },\r\n\r\n        deleteImage: function(params) {\r\n            var self = this;\r\n\r\n            var data = params.extra || {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"DELETEUSERIMAGE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            (params.contexttype) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype : \"\";\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Removing image '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-upload-delete-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n\r\n        /*\r\n         *   Returns the upload add url\r\n         */\r\n        deleteUploadFile: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"REMOVERELATION\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            (params.contexttype) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype : \"\";\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Removing file in upload '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-upload-delete-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n\r\n            });\r\n        },\r\n        /*\r\n         * Return file meta data\r\n         */\r\n        getECMMetadata: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data.action = \"getECMMetadata\";\r\n            data.idFileUpload = params.idFileUpload;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data.xpathContext = params.xpathContext;\r\n            data.xPath = params.xPath;\r\n            data.idAttrib = params.idAttrib;\r\n            if (params.sessionId) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = params.sessionId;\r\n            }\r\n            // Log submit data\r\n            bizagi.debug(\"Get file metadata '\" + params.xPath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-ecm-upload-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                interceptor: {\r\n                    intercept: true,\r\n                    source: \"rendering_\" + self.guid,\r\n                }\r\n            });\r\n\r\n        },\r\n        /*\r\n         * Checkout a file\r\n         **/\r\n        checkOutFile: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data.action = \"checkOutFile\";\r\n            data.idFileUpload = params.idFileUpload;\r\n            data.xPath = params.xPath;\r\n            data.idAttrib = params.idAttrib;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data.xpathContext = params.xpathContext;\r\n\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"file checkout '\" + params.xPath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-ecm-upload-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n        /*\r\n         * cancelCheckOut\r\n         **/\r\n        cancelCheckOut: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data.action = \"cancelCheckOut\";\r\n            data.idFileUpload = params.idFileUpload;\r\n            data.xPath = params.xPath;\r\n            data.idAttrib = params.idAttrib;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data.xpathContext = params.xpathContext;\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"file checkout '\" + params.xPath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-ecm-upload-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n        /*\r\n         * Checkout a file\r\n         **/\r\n        deleteECMFile: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data.action = \"delete\";\r\n            data.idFileUpload = params.idFileUpload;\r\n            data.xPath = params.xPath;\r\n            data.idAttrib = params.idAttrib;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data.xpathContext = params.xpathContext;\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"delete file'\" + params.xPath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-ecm-upload-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n        /*\r\n         *  Update ECM file content\r\n         **/\r\n        updateECMFileContent: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data.action = \"updateECMFileContent\";\r\n            data.idFileUpload = params.idFileUpload;\r\n            data.xPath = params.xPath;\r\n            data.idAttrib = params.idAttrib;\r\n\r\n            data.metaValues = params.metaValues;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data.xpathContext = params.xpathContext;\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Update file content '\" + params.xPath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-ecm-upload-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n        /*\r\n         *  Update file content\r\n         **/\r\n        updateECMMetadata: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data.action = \"updateECMMetadata\";\r\n            data.idFileUpload = params.idFileUpload;\r\n            data.xPath = params.xPath;\r\n            data.idAttrib = params.idAttrib;\r\n\r\n            data.metaValues = params.metaValues;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data.xpathContext = params.xpathContext;\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Update file meta data '\" + params.xPath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-ecm-upload-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n        getFileProperties: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data.action = \"getFileProperties\";\r\n            data.idFileUpload = params.idFileUpload;\r\n            data.xPath = params.xPath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data.xpathContext = params.xpathContext;\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Get file properties '\" + params.xPath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-ecm-upload-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                interceptor: {\r\n                    intercept: true,\r\n                    source: \"rendering_\" + self.guid,\r\n                }\r\n            });\r\n        },\r\n        uploadECMFile: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data.action = \"uploadECMFile\";\r\n            data.fileUpload = params.fileUpload; // Content of file\r\n            data.xPath = params.xPath;\r\n\r\n            data.idAttrib = params.idAttrib;\r\n            data.fileName = params.fileName;\r\n            data.metaValues = params.metaValues;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data.xpathContext = params.xpathContext;\r\n\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Upload ECM file '\" + params.xPath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-ecm-upload-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n        getECMFileUrl: function(params) {\r\n            var self = this;\r\n            var url = params.url || self.serviceLocator.getUrl(\"render-ecm-upload-url\") + \"File\";\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data.action = \"viewECMFile\";\r\n            data.idFileUpload = params.idFileUpload;\r\n            data.xPath = params.xPath;\r\n            data.idAttrib = params.idAttrib;\r\n\r\n            data.fileName = params.fileName;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data.xpathContext = params.xpathContext;\r\n            if (params.sessionId) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = params.sessionId;\r\n            }\r\n            if (params.p_sessionId) {\r\n                data.p_sessionId = params.p_sessionId;\r\n            }\r\n\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"View uploaded file '\" + params.xPath + \"'\", data);\r\n\r\n            return self.verifyPathToBase(bizagi.services.ajax.pathToBase, url) + \"?\" + jQuery.param(data) + \"&xsrf=\" + bizagi.getXSRFToken();\r\n        },\r\n        /*\r\n         *\r\n         */\r\n        isFileOnECM: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = {};\r\n            data[\"action\"] = \"isFileOnECM\";\r\n            data[\"idUpload\"] = params.idUpload;\r\n\r\n            // Call ajax and returns promise\r\n            return $.read(self.serviceLocator.getUrl(\"render-ecm-upload-url\"), data);\r\n        },\r\n        /*\r\n         *   Start a grid record edition\r\n         */\r\n        editGridRecord: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"EDITRELATION\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            if (params.contexttype) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            }\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Sending edit request for relation '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-grid-edit-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"EDITRELATION\"\r\n            });\r\n        },\r\n        /*\r\n         *   Sends a grid request to add a new row\r\n         *   The server returns the new row in json\r\n         */\r\n        addGridRecord: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"ADDRELATION\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            if (params.contexttype) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            }\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Sending add request for grid '\" + params.xpath + \"'\", data);\r\n\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-grid-add-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"ADDRELATION\"\r\n            });\r\n        },\r\n        /*\r\n         *   Sends a grid request to add a new row, and sending the data at the same time\r\n         *   The server returns the new row in json\r\n         */\r\n        addGridRecordData: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"ADDRELATIONWITHDATA\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            if (params.contexttype) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            }\r\n\r\n            // Build data to submit\r\n            var submitData = params.submitData || {};\r\n            for (key in submitData) {\r\n                data[key] = submitData[key];\r\n            }\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Sending add request for grid '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-grid-add-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"ADDRELATIONWITHDATA\"\r\n            });\r\n        },\r\n        /*\r\n         *   Submits the grid record data to the server\r\n         */\r\n        saveGridRecord: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"SAVERELATION\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n\r\n            if (params.contexttype) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            }\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"disableServerGridValidations\"] = params.disableServerGridValidations || false;\r\n\r\n            // Send the submitted data page cache because it cointains the grid's form page cache\r\n            if (params.submitData.idPageCache) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.submitData.idPageCache;\r\n                delete params.submitData.idPageCache;\r\n            }\r\n\r\n            var submitData = params.submitData || {};\r\n\r\n            // Build data to submit\r\n            submitData = self.processDataValues(submitData);\r\n\r\n            for (key in submitData) {\r\n                data[key] = submitData[key];\r\n            }\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Sending save request for grid '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-grid-save-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"SAVERELATION\"\r\n            });\r\n        },\r\n        /*\r\n         *   Deletes a grid record in the server\r\n         */\r\n        deleteGridRecord: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"REMOVERELATION\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            if (params.contexttype) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            }\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Sending delete request for grid '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-grid-save-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"REMOVERELATION\"\r\n            });\r\n        },\r\n\r\n        /*\r\n         * Get association flipped status\r\n         */\r\n        getFlipAssociation: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"PROCESSPROPERTYVALUE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.id;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"propertyName\"] = \"flipped\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"flipstate\"] = params.flipstate;\r\n            if (params.contexttype) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            }\r\n\r\n            // Log request data\r\n            bizagi.debug(\"Sending request for flip association control '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-property-refresh\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"text\"\r\n            }).pipe(function(response) {\r\n                try {\r\n                    // Try to attempt to parse JSON\r\n                    return bizagi.services.ajax.parseJSON(response);\r\n                } catch (e) {\r\n                    // If JSON is not valid we need to return the original text response\r\n                    return response;\r\n                }\r\n            });\r\n        },\r\n        /*\r\n         *   Cancels an add or edit request for a grid\r\n         */\r\n        rollbackGridAction: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"ROLLBACK\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            if (params.contexttype) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            }\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Sending rollback request for grid '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-grid-rollback-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"ROLLBACK\"\r\n            });\r\n        },\r\n        /*\r\n         *   Returns the search render default image\r\n         */\r\n        getSearchDefaultImage: function() {\r\n            return bizagi.services.ajax.pathToBase + this.serviceLocator.getUrl(\"render-search-default-image\");\r\n        },\r\n\r\n        processDataCriteria: function(criteria) {\r\n            var o;\r\n            criteria = $.extend(true, [], criteria);\r\n            for (o in criteria) {\r\n                if (criteria.hasOwnProperty(o) && criteria[o].hasOwnProperty(\"value\") && $.type(criteria[o].value) == \"object\") {\r\n                    // for search\r\n                    if (criteria[o].value.hasOwnProperty(\"id\") && criteria[o].value.hasOwnProperty(\"label\")) {\r\n                        criteria[o].value = criteria[o].value.id;\r\n                    }\r\n                }\r\n            }\r\n            return criteria;\r\n        },\r\n\r\n        /*\r\n         *   Perform entity search in the server\r\n         */\r\n        submitSearch: function(params) {\r\n            var self = this, criteria;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            var sort = params.sort && params.sort !== \"\" ? params.sort : \"\";\r\n\r\n            if (params.order && params.order !== \"\" && sort !== \"\")\r\n                sort += \" \" + params.order;\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"SEARCHENTITYFORRENDER\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"searchForm\"] = params.idSearchForm;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sort\"] = sort;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"page\"] = params.page;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"pageSize\"] = params.rows;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"searchFilter\"] = params.searchFilter;\r\n\r\n            criteria = self.processDataCriteria(params.criteria);\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"searchCriteria\"] = JSON.encode(criteria);\r\n\r\n            // Optional search params\r\n            if (params.allowFullSearch)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"allowFullSearch\"] = params.allowFullSearch;\r\n            if (params.maxRecords)\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"maxRowsAllowed\"] = params.maxRecords;\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Performing advanced search\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-search-advanced-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"SEARCHENTITYFORRENDER\"\r\n            });\r\n        },\r\n\r\n        /*\r\n         *   Submits the stakeholder associated\r\n         */\r\n        associateStakeholder: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"SAVE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"surrogateKey\"] = params.surrogateKey;\r\n            data[\"associatedUser\"] = params.associatedUser;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidEntity\"] = params.guidentity;\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Property refresh for '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            // TODO: change REST library in order to support extra HTTP parameters\r\n            // Please be careful with dataType parameter\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-stakeholder-associated\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: params.dataType || \"json\"\r\n            });\r\n        },\r\n\r\n        /*\r\n         *   Refresh the stakeholder associated list\r\n         */\r\n        refreshAssociateStakeholder: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"PROCESSPROPERTYVALUE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"propertyName\"] = params.property;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Property refresh for '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            // TODO: change REST library in order to support extra HTTP parameters\r\n            // Please be careful with dataType parameter\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-stakeholder-associated\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: params.dataType || \"json\",\r\n                serviceType: \"PROCESSPROPERTYVALUE\"\r\n            });\r\n        },\r\n\r\n        /*\r\n         *   Gets the link to the letter\r\n         */\r\n        getLetterNotEditableUrl: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"GETLETTER\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            // Call ajax and returns promise\r\n            var url = params.url || self.serviceLocator.getUrl(\"render-letter-notEditable-url\");\r\n            return self.verifyPathToBase(bizagi.services.ajax.pathToBase, url) + \"?\" + jQuery.param(data);\r\n        },\r\n        /*\r\n         *   Gets the content for editable letters\r\n         */\r\n        getLetterContent: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"GETLETTER\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-letter-content-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"html\"\r\n            }).pipe(function(response) {\r\n                try {\r\n                    return bizagi.services.ajax.parseJSON(response);\r\n                } catch (e) {\r\n                    return response;\r\n                }\r\n            });\r\n        },\r\n        /*\r\n         *   Get the can generate letter flag\r\n         */\r\n        getCanGenerateLetter: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"CANGENERATELETTER\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: self.serviceLocator.getUrl(\"render-letter-content-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n        /*\r\n         *   Saves the content for editable letters\r\n         */\r\n        saveLetterContent: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"UPDATELETTER\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            // Define content\r\n            var content = params.content || \"\";\r\n\r\n            // Define url\r\n            var url = params.url || (self.serviceLocator.getUrl(\"render-letter-save-url\"));\r\n            var fullUrl = url + \"?\" + jQuery.param(data);\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Save request for letter sent to: \" + fullUrl, content);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: fullUrl,\r\n                data: content,\r\n                type: \"POST\",\r\n                dataType: \"html\"\r\n            });\r\n        },\r\n        /*\r\n         *   Returns the icons path for the letter plugin\r\n         */\r\n        getLetterEditorIconsPath: function() {\r\n            return bizagi.services.ajax.pathToBase + this.serviceLocator.getUrl(\"render-letter-content-icons\");\r\n        },\r\n        /*\r\n         *   Executes a button action in the server\r\n         */\r\n        executeButton: function(params) {\r\n            return this.getPropertyData($.extend(params, {\r\n                property: \"buttonRule\"\r\n            }));\r\n        },\r\n        /*\r\n         *   Executes a fileprint action in the server\r\n         */\r\n        getFilePrintUrl: function(params) {\r\n\r\n            var self = this;\r\n            var url = this.serviceLocator.getUrl(\"render-upload-data-url\");\r\n            var data = {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"PROCESSPROPERTYVALUE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"propertyName\"] = \"data\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"disposition\"] = params.disposition;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = params.sessionId;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            (params.contexttype) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype : \"\";\r\n\r\n            return self.verifyPathToBase(bizagi.services.ajax.pathToBase, url) + \"?\" + jQuery.param(data);\r\n\r\n        },\r\n        /*\r\n         *   Start a link form edition\r\n         */\r\n        editLinkForm: function(params) {\r\n            // Actually it does the same than edit grid records\r\n            return this.editGridRecord(params);\r\n        },\r\n        /*\r\n         *   Saves the content of the link form\r\n         */\r\n        saveLinkForm: function(params) {\r\n            // Actually it does the same than edit grid records\r\n            //return this.saveGridRecord(params);\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"SAVEFORMLINKRELATION\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n\r\n            if (params.contexttype) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            }\r\n\r\n            // Send the submitted data page cache because it cointains the grid's form page cache\r\n            if (params.submitData.idPageCache) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.submitData.idPageCache;\r\n                delete params.submitData.idPageCache;\r\n            }\r\n\r\n            var submitData = params.submitData || {};\r\n\r\n            // Build data to submit\r\n            submitData = self.processDataValues(submitData);\r\n\r\n            for (key in submitData) {\r\n                data[key] = submitData[key];\r\n            }\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Sending save request for grid '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-grid-save-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"SAVEFORMLINKRELATION\"\r\n            });\r\n        },\r\n        /*\r\n         *   Rollbacks the link form edition\r\n         */\r\n        rollbackLinkForm: function(params) {\r\n            // Actually it does the same than rollback grid records\r\n            return this.rollbackGridAction(params);\r\n        },\r\n        /*   Commit the link form edition\r\n         */\r\n        commitLinkForm: function(params) {\r\n            // Actually it does the same than rollback grid records\r\n            return this.commitGridAction(params);\r\n        },\r\n        /*   Sends schekpoint action\r\n         */\r\n        sendCheckpoint: function(params) {\r\n            // Actually it does the same than rollback grid records\r\n            return this.sendCheckpointAction(params);\r\n        },\r\n        /*\r\n         *   Loads the userfield definition\r\n         */\r\n        getUserfieldDefinition: function(params) {\r\n            var self = this;\r\n            params = params || {};\r\n\r\n            // Check in deferreds cache\r\n            if (self.userfieldRequests[params.userfield])\r\n                return self.userfieldRequests[params.userfield];\r\n\r\n            // Required params: idCase\r\n            self.userfieldRequests[params.userfield] = $.read(self.serviceLocator.getUrl(\"render-userfield-definition\"),\r\n                {\r\n                    guidUserfield: params.userfield,\r\n                    device: (params.device || \"desktop\")\r\n                }\r\n            );\r\n\r\n            // Return deferred\r\n            return self.userfieldRequests[params.userfield];\r\n        },\r\n        /**\r\n         *  Get render json for one render o container\r\n         *  @param {object} params object with idRender,idPageCache\r\n         */\r\n        refreshControl: function(params) {\r\n            var self = this;\r\n            params = params || {};\r\n\r\n            var data = {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"REFRESH\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            (params.xpathContext) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext : \"\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            (params.contexttype) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype : \"\";\r\n            (params.idForm) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idForm\"] = params.idForm : \"\";\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"form-get-data\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"PARTIALREFRESH\"\r\n            });\r\n        },\r\n        /**\r\n         *  Get render json for one render o container\r\n         *  @param {object} params object with idRender,idPageCache\r\n         */\r\n        refreshGridCell: function(params) {\r\n            var self = this;\r\n            params = params || {};\r\n\r\n            var data = {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"REFRESHGRIDCELL\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidcolumn\"] = params.column;\r\n            (params.xpathContext) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext : \"\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            (params.idForm) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idForm\"] = params.idForm : \"\";\r\n            (params.typeRender) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"typeRender\"] = params.typeRender : \"\";\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"form-get-data\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n        /**\r\n         * Request to execute rule on server\r\n         * @param {object} params h_pageCacheId, guidrule\r\n         */\r\n        executeRule: function(params) {\r\n            var self = this;\r\n\r\n\r\n            var data = {};\r\n            params = params || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"EXECUTERULE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidrule\"] = params.rule || \"\";\r\n            (params.xpathContext) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext : \"\";\r\n            (params.contexttype) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype : \"\";\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n\r\n            return $.create(self.serviceLocator.getUrl(\"form-submit-data\"), data);\r\n        },\r\n        /**\r\n         * Request to execute interface on server\r\n         * @param {object} params h_pageCacheId, guidinterface\r\n         */\r\n        executeInterface: function(params) {\r\n            var self = this;\r\n            var data = {};\r\n            params = params || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"EXECUTEINTERFACE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidinterface\"] = params.interface || \"\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext || \"\";\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n\r\n            return $.create(self.serviceLocator.getUrl(\"form-submit-data\"), data);\r\n        },\r\n        /**\r\n         * Request to execute SAP Connecor\r\n         * @param {object} params h_pageCacheId, guidinterface\r\n         */\r\n        executeSAPConnector: function(params) {\r\n            var self = this;\r\n            var data = {};\r\n            params = params || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"EXECUTESAP\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidsap\"] = params.guidsap || \"\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext || \"\";\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n\r\n            return $.create(self.serviceLocator.getUrl(\"form-submit-data\"), data);\r\n        },\r\n        /**\r\n         * Request to execute a Bizagi connector\r\n         * @param params\r\n         * @return {{}}\r\n         */\r\n        executeConnector: function(params) {\r\n            var self = this;\r\n            var data = {};\r\n            params = params || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"EXECUTECONNECTOR\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidConnector\"] = params.guidConnector || \"\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext || \"\";\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n\r\n            return $.create(self.serviceLocator.getUrl(\"form-submit-data\"), data);\r\n        },\r\n        /*\r\n         *   Document Templates generate rest service\r\n         */\r\n        generateDocumentTemplate: function(params) {\r\n            var self = this;\r\n            params = params || {};\r\n            params.append = params.append ? params.append : false;\r\n\r\n            return $.create(\r\n                self.serviceLocator.getUrl(\"render-document-generate\"),\r\n                {\r\n                    h_pageCacheId: params.idPageCache,\r\n                    contextXpath: params.xpathcontext,\r\n                    groupMappingId: params.groupMapping,\r\n                    xpathAttribute: params.xpath,\r\n                    append: params.append,\r\n                    controlId: params.id\r\n                }\r\n            );\r\n        },\r\n        /*\r\n         *   Document Templates generate rest service\r\n         */\r\n        getAllDocumentsDownloadUrl: function(params) {\r\n            var self = this;\r\n            var url = this.serviceLocator.getUrl(\"render-document-generateAllDocuments\");\r\n            var data = {};\r\n            data[\"h_pageCacheId\"] = params.idPageCache;\r\n            data[\"contextXpath\"] = params.xpathContext;\r\n            data[\"xpathAttribute\"] = params.xpath;\r\n            data[\"idCase\"] = params.idCase;\r\n            data[\"idWorkItem\"] = params.idWorkItem;\r\n            data[\"p_sessionId\"] = params.sessionId;\r\n\r\n            return self.verifyPathToBase(bizagi.services.ajax.pathToBase, url) + \"?\" + jQuery.param(data) + \"&xsrf=\" + bizagi.getXSRFToken();\r\n\r\n        },\r\n\r\n\r\n        getCaseNumber: function(params) {\r\n            var self = this;\r\n            //this function use sendEMail\r\n            //and not possible use dat ain ajax\r\n            //this is workaround (rhonyp)\r\n            return $.ajax({\r\n                url: self.serviceLocator.getUrl(\"case-handler-getCaseSummary\").replace(\"{idCase}\", params.idCase) + \"?eventAsTasks=false&onlyUserWorkItems=true&mobileDevice=\" + bizagi.isMobile(),\r\n                type: \"GET\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n\r\n        getCaseAssignees: function(params) {\r\n            var self = this;\r\n            params = params || {};\r\n\r\n            // Required params: idCase\r\n            return $.read(\r\n                self.serviceLocator.getUrl(\"case-handler-getCaseAssignees\"), {\r\n                    idCase: params.idCase\r\n                }\r\n            ).pipe(function(response) {\r\n                    return response;\r\n                });\r\n        },\r\n\r\n        getWorkitems: function(params) {\r\n            var self = this;\r\n            params = params || {};\r\n\r\n            return $.read(self.serviceLocator.getUrl(\"case-handler-getWorkItems\"), {\r\n                idCase: params.idCase,\r\n                onlyUserWorkItems: params.onlyUserWorkItems || \"\"\r\n            });\r\n        },\r\n        /*\r\n         *   Executes a grid export action in the server\r\n         */\r\n        getGridExportUrl: function(params) {\r\n\r\n            var self = this,\r\n                url = this.serviceLocator.getUrl(\"render-upload-data-url\"),\r\n                data = {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"PROCESSPROPERTYVALUE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"propertyName\"] = params.exportType; //\"data\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"disposition\"] = params.disposition;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sort\"] = params.sort;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = params.sessionId;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"idForm\"] = params.idForm;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            (params.contexttype) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype : \"\";\r\n\r\n            return self.verifyPathToBase(bizagi.services.ajax.pathToBase, url) + \"?\" + jQuery.param(data) + \"&xsrf=\" + bizagi.getXSRFToken();\r\n        },\r\n\r\n        /*\r\n         * Executes a send email action in the server\r\n         */\r\n        sendEmail: function(params) {\r\n            var self = this;\r\n            params = params || {};\r\n\r\n            var data = {};\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"PROCESSPROPERTYVALUE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"propertyName\"] = params.property || \"sendEmail\";\r\n            (params.xpathContext) ? data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext : \"\";\r\n\r\n            // Email parameters\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"to\"] = params.to;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"subject\"] = params.subject;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"message\"] = params.message;\r\n            data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"selected\"] = JSON.encode(params.selected);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n\r\n            var url = params.url || self.serviceLocator.getUrl(\"form-get-data\");\r\n\r\n            return $.create(url, data);\r\n        },\r\n\r\n        /*\r\n         * Request to invalidates page cache in server, since it is no needed anymore\r\n         */\r\n        invalidatePageCache: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"INVALIDATEPAGECACHE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"form-submit-data\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"INVALIDATEPAGECACHE\"\r\n            });\r\n        },\r\n\r\n        /*\r\n         * Search users usign parameters suchs as userName, fullName, domain and organization\r\n         * @params { domain: (string), userName: (string), fullName: (string), organization: (string), page: (int), pageSize: (int) }\r\n         * @return {deferred} ajax object with JSON content\r\n         */\r\n        getUsersList: function(params) {\r\n            var self = this;\r\n\r\n            return $.read(self.serviceLocator.getUrl(\"admin-getUsersList\"), params);\r\n        },\r\n        /*\r\n         * Search users for preferences usign parameters suchs as userName, fullName, domain and organization\r\n         * @params { domain: (string), userName: (string), fullName: (string), organization: (string), page: (int), pageSize: (int) }\r\n         * @return {deferred} ajax object with JSON content\r\n         */\r\n        getUsersListFromPreferences: function(params) {\r\n            return $.read(this.serviceLocator.getUrl(\"admin-getUsersList-FromPreferences\"), params);\r\n        },\r\n\r\n        /*\r\n         * Search users for Stakeholders\r\n         * @params { domain: (string), userName: (string), fullName: (string), organization: (string), page: (int), pageSize: (int) }\r\n         * @return {deferred} ajax object with JSON content\r\n         */\r\n        getUsersListForStakeholders: function(params) {\r\n            return $.read(this.serviceLocator.getUrl(\"admin-getUsersList-ForStakeholders\"), params);\r\n        },\r\n\r\n        /*\r\n         * Search users usign parameters suchs as userName, fullName, domain and organization\r\n         * @params { domain: (string), userName: (string), fullName: (string), organization: (string), page: (int), pageSize: (int) }\r\n         * @return {deferred} ajax object with JSON content\r\n         */\r\n        getUsersForAssignation: function(params) {\r\n            var self = this;\r\n\r\n            return $.read(self.serviceLocator.getUrl(\"admin-getUsersForAssignation\"), params);\r\n        },\r\n\r\n        /**\r\n         * Get Users Creation/Edition Form\r\n         */\r\n        getUsersForm: function(params) {\r\n            var self = this;\r\n            return $.create(self.serviceLocator.getUrl(\"admin-usersform\"), params);\r\n        },\r\n        /**\r\n         *   Return generate Data To Send By Email\r\n         */\r\n        generateDataToSendByEmail: function(params) {\r\n            var self = this;\r\n            params = params || {};\r\n            var data = {\r\n                action: \"GenerateDataToSendByEmail\",\r\n                idUser: params.idUser,\r\n                password: params.password\r\n            };\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: self.serviceLocator.getUrl(\"admin-GenerateDataToSendByEmail\"),\r\n                data: params,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n        /**\r\n         * Return generate Send user password Mail\r\n         */\r\n        sendUserEmail: function(params) {\r\n            var self = this;\r\n            params = params || {};\r\n            var data = {\r\n                action: \"SendUserEmail\",\r\n                emailTo: params.eMailTo,\r\n                subject: params.subject,\r\n                body: params.body\r\n            };\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: self.serviceLocator.getUrl(\"admin-sendUserEmail\"),\r\n                data: params,\r\n                type: \"POST\",\r\n                dataType: \"json\"\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get bizagi configuration\r\n         * @param {Function}   type callback function when the file load is succed\r\n         * @return {deferred} ajax object with JSON content\r\n         */\r\n        getConfiguration: function() {\r\n            var self = this;\r\n            var url = self.serviceLocator.getUrl(\"admin-users-config\");\r\n\r\n            return $.read(url);\r\n        },\r\n\r\n        /**\r\n         * Validate if url has 'http' string, in that case is not necesary add the pathToBase prefix\r\n         */\r\n        verifyPathToBase: function(pathToBase, url) {\r\n\r\n            if (url.indexOf(\"http\") != -1 && pathToBase != \"\") {\r\n                return url;\r\n            } else {\r\n                return pathToBase + url;\r\n            }\r\n\r\n        },\r\n\r\n        /**\r\n         * Get template of entity\r\n         * @param params { guid, prepare}\r\n         */\r\n        getTemplate: function(params) {\r\n            var self = this;\r\n            var data = {};\r\n            params = params || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"LOADTEMPLATE\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = \"entity\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidEntity\"] = params.guid;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"isProcessData\"] = params.forcePersonalizedColumns;\r\n\r\n            if (params.templateType) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"templatetype\"] = params.templateType;\r\n            }\r\n\r\n            if (params.templateGuid) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"templateguid\"] = params.templateGuid;\r\n            }\r\n\r\n            if (params.isDefaultTemplate != undefined) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"isDefaultTemplate\"] = params.isDefaultTemplate;\r\n            }\r\n\r\n            // Fix device type since on mobility there are tablet_ios, tablet_android, smartphone_ios, smartphone_ios\r\n            // and the service recives either tablet or smartphone\r\n            var deviceType = bizagi.util.detectDevice();\r\n            if (bizagi.util.isTabletDevice()) {\r\n                deviceType = \"tablet\";\r\n            } else if (bizagi.util.isSmartphoneDevice()) {\r\n                deviceType = \"mobile\";\r\n            }\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"devicetype\"] = deviceType;\r\n\r\n            // When prepare is true just return data, this feature is used by multiaction service\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n\r\n            return $.create(self.serviceLocator.getUrl(\"form-get-data\"), data);\r\n        },\r\n\r\n        /**\r\n         * Chek if an entity has startform\r\n         * @param params\r\n         * @return {*}\r\n         */\r\n        hasStartForm: function(params) {\r\n            var self = this;\r\n            var data = {};\r\n\r\n            if (params.guidWFClass) {\r\n                data.guidWFClass = params.guidWFClass;\r\n            }\r\n\r\n            return $.read(self.serviceLocator.getUrl(\"render-processes-startform\"), data);\r\n        },\r\n\r\n        /**\r\n         * Get the start form of the case\r\n         * @param params\r\n         * @return {*}\r\n         */\r\n        getStartForm: function(params) {\r\n            var self = this;\r\n            var data = {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"LOADSTARTFORM\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"guidprocess\"] = params.guidprocess;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"isActionStartForm\"] = true;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"devicetype\"] = self.deviceType;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"devicecode\"] = self.deviceCode;\r\n\r\n            if (params.idStartScope) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idStartScope\"] = params.idStartScope;\r\n            }\r\n            if (params.idCase) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idCase\"] = params.idCase;\r\n            }\r\n            if (params.idStartScope) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idStartScope\"] = params.idStartScope;\r\n            }\r\n            if (params.idWorkitem) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idWorkitem\"] = params.idWorkitem;\r\n            }\r\n            if (params.additionalXpaths) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"additionalXpaths\"] = params.additionalXpaths;\r\n            }\r\n            if (params.surrogatedKey) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"surrogatedKey\"] = params.surrogatedKey;\r\n            }\r\n            if (params.recordXpath) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"recordlauncherxpath\"] = params.recordXpath;\r\n            }\r\n            if (params.mappingstakeholders) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"mappingstakeholders\"] = params.mappingstakeholders;\r\n            }\r\n\r\n            return $.ajax({\r\n                url: self.serviceLocator.getUrl(\"form-get-data\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                cache: true\r\n            });\r\n        },\r\n        /*\r\n         *   Start a link form edition\r\n         */\r\n        editActionForm: function(params) {\r\n            // Actually it does the same than edit grid records\r\n            return this.editGridRecord(params);\r\n        },\r\n\r\n        /**\r\n         * Get list of actions in action launcher\r\n         * @param params\r\n         * @return {*}\r\n         */\r\n        getActions: function(params) {\r\n            var self = this;\r\n            var extendParams = $.extend(params, { prepare: true });\r\n\r\n            var data = self.getPropertyData(extendParams) || [];\r\n\r\n            if (params.ptags) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"tags\"] = params.ptags;\r\n            }\r\n\r\n            if (params.pmaxitems) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"maxitems\"] = params.pmaxitems;\r\n            }\r\n\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-property-refresh\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: params.dataType || \"json\",\r\n                serviceType: \"PROCESSPROPERTYVALUE\",\r\n                beforeSend: function(xhr, status) {\r\n                    bizagi.multiactionConnection = bizagi.multiactionConnection || [];\r\n                    bizagi.multiactionConnection.push(xhr);\r\n                }\r\n            });\r\n\r\n        },\r\n\r\n        /**\r\n         * Execute actions or constructors\r\n         * @param params\r\n         */\r\n        executeActions: function(params) {\r\n            var self = this;\r\n            var extendParams = $.extend({}, params, { prepare: true });\r\n            var data = self.getPropertyData(extendParams) || [];\r\n\r\n            if (params.pguidConstructor) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"guidConstructor\"] = params.pguidConstructor;\r\n            }\r\n\r\n            if (params.pguidAction) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"guidAction\"] = params.pguidAction;\r\n            }\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-property-refresh\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: params.dataType || \"json\",\r\n                serviceType: \"PROCESSPROPERTYVALUE\"\r\n            });\r\n\r\n        },\r\n\r\n        /**\r\n         * Get list of actions in action launcher\r\n         * @param params\r\n         * @return {*}\r\n         */\r\n        getPolymorphicActions: function(params) {\r\n            var self = this;\r\n            var extendParams = $.extend(params, { prepare: true });\r\n            var data = self.getPropertyData(extendParams) || [];\r\n\r\n            if (params.ptags) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"tags\"] = params.ptags;\r\n            }\r\n\r\n            if (params.additionalXpaths) {\r\n                data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"additionalXpaths\"] = params.additionalXpaths;\r\n            }\r\n\r\n            if (params.prepare) {\r\n                return data;\r\n            }\r\n\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-property-refresh\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: params.dataType || \"json\",\r\n                serviceType: \"PROCESSPROPERTYVALUE\"\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Make a JSON tree of polymorphic constructors categories\r\n         * @param values\r\n         * @return {Array}\r\n         */\r\n        serializePolymorphicActions: function(values) {\r\n            // json serializer\r\n            var actions = [];\r\n            var GUID_ENTITY = 0, DISPLAY_NAME = 1, XPATHCONTEXT = 2, TYPE = 3, GUID_OBJECT = 4, GUID_CONSTRUCTOR = 5, GUID_PARENT_ENTITY = 6;\r\n\r\n            /**\r\n             * Get children by guid of entity\r\n             * @param guid\r\n             * @return {Array}\r\n             */\r\n            var getChildren = function(guid) {\r\n                var children = [];\r\n                guid = guid || \"\";\r\n\r\n                $.each(values, function(key, value) {\r\n                    if (value[GUID_PARENT_ENTITY] == guid) {\r\n                        children.push(value);\r\n                    }\r\n                });\r\n                return children;\r\n            };\r\n\r\n            /**\r\n             * Get parents by action object\r\n             * @param node\r\n             * @return {string}\r\n             */\r\n            var getParents = function(node) {\r\n                node = node || {};\r\n                var parents = \"\";\r\n\r\n                $.each(values, function(key, value) {\r\n                    if (value[GUID_ENTITY] == node[GUID_PARENT_ENTITY]) {\r\n                        parents += getParents(value) + value[DISPLAY_NAME] + \" > \";\r\n                    }\r\n                });\r\n                return parents;\r\n            };\r\n\r\n\r\n            /**\r\n             * Make a tree of actions\r\n             * @param list\r\n             * @param guid\r\n             * @return {*}\r\n             */\r\n            var fillTree = function(list, guid) {\r\n                var node;\r\n                var children = getChildren(guid);\r\n                $.each(children, function(key, value) {\r\n                    var child = fillTree([], value[GUID_ENTITY]);\r\n                    node = {\r\n                        \"guidEntity\": value[GUID_ENTITY],\r\n                        \"displayName\": value[DISPLAY_NAME],\r\n                        \"hasConstructor\": (value[GUID_CONSTRUCTOR]) ? true : false,\r\n                        \"type\": value[TYPE],\r\n                        \"guidObject\": value[GUID_OBJECT],\r\n                        \"guidConstructor\": value[GUID_CONSTRUCTOR],\r\n                        \"xpathContext\": value[XPATHCONTEXT],\r\n                        \"children\": child,\r\n                        \"parents\": getParents(value)\r\n                    };\r\n                    if (node.guidConstructor !== \"\" || node.children.length > 0) {\r\n                        list.push(node);\r\n                    }\r\n                });\r\n\r\n                return list;\r\n            };\r\n            fillTree(actions, \"\");\r\n            return actions;\r\n        },\r\n\r\n        /**\r\n         * Gets the image for an entity xpath\r\n         * @param params\r\n         */\r\n        getEntityImage64: function(params) {\r\n            var self = this,\r\n                data = {\r\n                    width: params.data,\r\n                    height: params.height,\r\n                    xpath: params.xpath\r\n                },\r\n                url = self.serviceLocator.getUrl(\"render-entity-layout-image64\").replace(\"{entity}\", params.entity).replace(\"{surrogateKey}\", params.surrogateKey);\r\n\r\n            return $.ajax({\r\n                url: url,\r\n                data: data\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Get data files when user access from my stuff, because there is no scope\r\n         */\r\n        getFilesDataForLayoutUploadControl: function(params) {\r\n            var self = this;\r\n            return $.read(self.serviceLocator.getUrl(\"render-entity-layout-upload-files\"), params);\r\n        },\r\n\r\n        /**\r\n         * Process an upload file into the server\r\n         * @param {} params\r\n         * @returns {}\r\n         */\r\n        processUploadFile: function(params) {                \r\n            return $.ajax({\r\n                url: this.verifyMobilePathToBase(bizagi.services.ajax.pathToBase || \"\", params.url),\r\n                data: params.formData,\r\n                type: \"POST\",\r\n                contentType: false,\r\n                processData: false\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Commit an add or edit request for a grid\r\n         * @param params\r\n         * @returns {*}\r\n         */\r\n        commitGridAction: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"COMMIT\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            if (params.contexttype) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            }\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Sending rollback request for grid '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-grid-commit-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"COMMIT\"\r\n            });\r\n        },\r\n        /*\r\n         *   Commit an add or edit request for a grid\r\n         */\r\n        sendCheckpointAction: function(params) {\r\n            var self = this;\r\n\r\n            // Define data\r\n            var data = params.extra || {};\r\n\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"CHECKPOINT\";\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = params.xpath;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = params.idRender;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = params.xpathContext;\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = params.idPageCache;\r\n\r\n            if (params.contexttype) {\r\n                data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = params.contexttype;\r\n            }\r\n\r\n            // Log submit data\r\n            bizagi.debug(\"Sending checkpoint request for grid '\" + params.xpath + \"'\", data);\r\n\r\n            // If the parameter \"prepare\" is true, only return the data, so we can use the multiaction request\r\n            if (params.prepare)\r\n                return data;\r\n\r\n            // Call ajax and returns promise\r\n            return $.ajax({\r\n                url: params.url || self.serviceLocator.getUrl(\"render-grid-checkpoint-url\"),\r\n                data: data,\r\n                type: \"POST\",\r\n                dataType: \"json\",\r\n                serviceType: \"CHECKPOINT\"\r\n            });\r\n        },\r\n\r\n        /**\r\n         * Validate if url has 'http' string, in that case is not necesary add the pathToBase prefix\r\n         */\r\n        verifyMobilePathToBase: function(pathToBase, url) {\r\n            return bizagi.util.isSharepointContext() ? (url || \"\").replaceAll(pathToBase, \"\"): url;                \r\n        }\r\n\r\n    });\r\n","/*\r\n *   Name: BizAgi Rendering Services\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This class will provide a facade to access to multiaction rendering REST services\r\n */\r\n$.Class.extend(\"bizagi.render.services.multiactionservice\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: \"p_\",\r\n    BA_CONTEXT_PARAMETER_PREFIX: \"h_\",\r\n    BA_PAGE_CACHE: \"pageCacheId\"\r\n}, {\r\n\r\n    /* \r\n    *   Constructor\r\n    */\r\n    init: function (service) {\r\n        this.service = service;\r\n        this.serviceLocator = service.serviceLocator;\r\n\r\n        // Multiaction - batch stuff\r\n        this.batch = {};\r\n        this.batchTimer = 50;\r\n        this.circularDependencies = new bizagi.circularDependencies();\r\n\r\n        // Create proxyed version of methods\r\n        this.replicateServiceMethods();\r\n    },\r\n\r\n    /*\r\n    *   Returns the internal service\r\n    */\r\n    getService: function () {\r\n        return this.service;\r\n    },\r\n\r\n    /*\r\n    *   Create a proxied multiaction version for service calls\r\n    */\r\n    replicateServiceMethods: function () {\r\n        var self = this;\r\n        for (var key in this.service.Class.prototype) {\r\n            // Omit the folowing methods\r\n            if (key == \"init\" || key == \"constructor\" || key == \"Class\" || key == \"multiaction\") continue;\r\n\r\n            // Replicate instance methods\r\n            self[key] = eval('var tmp = function(){ return this.proxyMethod(this.getService().' + key + ', arguments);};tmp');\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Perform the proxy call for each service method\r\n    */\r\n    proxyMethod: function (method, arguments) {\r\n        var service = this.service;\r\n\r\n        // Check if has only one argument, else execute directly\r\n        if (!arguments || arguments.length != 1) {\r\n            return method.apply(service, arguments);\r\n        }\r\n\r\n        // Check if the argument is object, else execute directly\r\n        if (typeof (arguments[0]) != \"object\") {\r\n            return method.apply(service, arguments);\r\n        }\r\n\r\n        var params = arguments[0];\r\n\r\n        // If the caller is requesting a prepare call, just execute the method with the current arguments\r\n        if (params.prepare == true) return method.apply(service, arguments);\r\n\r\n        // Prepare the ajax instead of sending it\r\n        params.prepare = true;\r\n        var action = method.apply(service, arguments);\r\n\r\n        return this.add(action);\r\n    },\r\n\r\n    /**\r\n    * This method make a standard error message\r\n    */\r\n    makeCircularDependenciesError: function (error) {\r\n        var messageTmpl = bizagi.localization.getResource(\"render-actions-loop-validation\");\r\n\r\n        return printf(messageTmpl, error.dependencyFrom, error.dependencyTo);\r\n    },\r\n\r\n\r\n    /*\r\n    *   Add an action to be performed in a multiaction, and be resolved later\r\n    *   returns a deferred\r\n    */\r\n    add: function (action) {\r\n        var self = this;\r\n        var deferred = new $.Deferred();\r\n\r\n        var name = action.h_action || \"unnamed\";\r\n\r\n        // Put here all actions to ignore in circular dependencies\r\n        var exceptionActions = [\"PROCESSPROPERTYVALUE\", \"LOADTEMPLATE\", \"ADDRELATIONWITHDATA\"];\r\n\r\n        if (exceptionActions.indexOf(name) < 0 && bizagi.override.detectCircularDependencies) {\r\n            self.circularDependencies.addNode(name, action);\r\n        }\r\n\r\n        // First clear previous timeout\r\n        clearTimeout(self.batchTimeout);\r\n        var tag = action.tag = Math.guid();\r\n        var singleAction = { action: action, deferred: deferred };\r\n        self.batch[tag] = singleAction;\r\n\r\n        // Start a new timeout\r\n        self.batchTimeout = setTimeout(function () {\r\n            var resolveDependencies = self.circularDependencies.resolve();\r\n\r\n            if (resolveDependencies.error) {\r\n                // Reset Queue\r\n                for (var i in self.batch) {\r\n                    var message = resolveDependencies.error.multiactionError;\r\n                    self.batch[i].deferred.reject(message);\r\n                }\r\n                self.batch = {};\r\n            } else {\r\n                self.fire();\r\n            }\r\n        }, self.batchTimer);\r\n\r\n        return deferred.promise();\r\n    },\r\n    /*\r\n    *   Fires up the multiaction\r\n    */\r\n    fire: function () {\r\n        var self = this;\r\n        var batch = {};\r\n\r\n        // Prepare actions and clone batch manually\r\n        var actions = [];\r\n        $.each(self.batch, function (tag, item) {\r\n            actions.push(item.action);\r\n            batch[tag] = item;\r\n        });\r\n\r\n        // Reset batch\r\n        self.batch = {};\r\n\r\n        // Fire ajax \r\n        $.when(self.execute({ actions: actions, rejectDeferreds: false }))\r\n                .done(function (responses) {\r\n\r\n                    // Process each response\r\n                    $.each(responses, function (i, response) {\r\n                        var tag = response.tag;\r\n                        if (!response.error) {\r\n                            batch[tag].deferred.resolve(response.result);\r\n                        } else {\r\n                            batch[tag].deferred.reject(response.error, response, response.error.message);\r\n                        }\r\n\r\n                        // Remove paired tag from collection\r\n                        delete batch[tag];\r\n                    });\r\n\r\n                    // Check if there are unpaired actions so we need to trigger fail deferred\r\n                    $.each(batch, function (i, item) {\r\n                        item.deferred.reject({ type: \"not-processed\", message: \"Operation didn't executed\" }, '', \"Operation didn't executed\");\r\n                    });\r\n                }).fail(function (xhr, type, error) {\r\n\r\n                    // Check if there are unpaired actions so we need to trigger fail deferred\r\n                    var errorMessage = typeof (error) !== \"undefined\" ? error.message : (error || \"Operation didn't executed\");\r\n                    $.each(batch, function (i, item) {\r\n                        item.deferred.reject({ type: \"not-processed\", message: errorMessage }, '', \"Operation didn't executed\");\r\n                    });\r\n                });\r\n    },\r\n    /*\r\n    *   Sends a multiaction to the server\r\n    */\r\n    execute: function (params) {\r\n        var self = this;\r\n\r\n        // Define data\r\n        var data = {};\r\n        var rejectDeferreds = params.rejectDeferreds !== undefined ? params.rejectDeferreds : true;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"multiaction\";\r\n\r\n        // Check action tag\r\n        $.each(params.actions, function (i, action) {\r\n            action[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"tag\"] = action.tag || i;\r\n            delete action.tag;\r\n        });\r\n\r\n        // Fill optional parameters\r\n        params = params || {};\r\n        if (params.actions) {\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"actions\"] = JSON.encode(params.actions);\r\n        }\r\n\r\n        // Log submit data\r\n        bizagi.debug(\"Performing multi-action\", data);\r\n\r\n        // Call ajax and returns promise\r\n        var deferred = new $.Deferred();\r\n        $.ajax({\r\n            url: self.serviceLocator.getUrl(\"render-multiaction\"),\r\n            data: data,\r\n            type: \"POST\",\r\n            dataType: \"json\",\r\n            serviceType: \"MULTIACTION\",\r\n            beforeSend: function (xhr, status) {\r\n                bizagi.multiactionConnection = bizagi.multiactionConnection || [];\r\n                bizagi.multiactionConnection.push(xhr);\r\n            }\r\n\r\n        }).done(function (responses) {\r\n            for (i in responses) {\r\n                if (typeof responses[i] !== \"function\") {\r\n                    var response = responses[i];\r\n                    if (response.error) {\r\n                        if (rejectDeferreds) {\r\n                            deferred.reject(this, \"servererror\", response);\r\n                            return;\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n            deferred.resolve(responses);\r\n\r\n        }).fail(function (xhr) {\r\n            var response = xhr.responseText || xhr;\r\n            var finalResponse;\r\n            // Try to parse the response\r\n            try {\r\n                finalResponse = JSON.parse(response);\r\n            } catch (e) { }\r\n            deferred.reject(xhr, \"servererror\", finalResponse);\r\n        });\r\n\r\n        return deferred.promise();\r\n    }\r\n});\r\n","/*\r\n *   Name: BizAgi Rendering Services\r\n *   Author: Einer Perez\r\n *   Comments:\r\n *   -   This class will provide a facade to access to multiaction rendering REST services\r\n */\r\nbizagi.render.services.multiactionservice.extend(\"bizagi.render.services.metadatamultiactionservice\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: \"p_\",\r\n    BA_CONTEXT_PARAMETER_PREFIX: \"h_\",\r\n    BA_PAGE_CACHE: \"h_pageCacheId\"\r\n}, {\r\n\r\n    /*\r\n    *   Sends a multiaction to the server\r\n    */\r\n    execute: function (params) {\r\n        var self = this;\r\n\r\n        // Define data\r\n        var data = {};\r\n        var rejectDeferreds = params.rejectDeferreds !== undefined ? params.rejectDeferreds : true;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = \"multiaction\";\r\n\r\n        // Check action tag\r\n        $.each(params.actions, function (i, action) {\r\n            action[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"tag\"] = action.tag || i;\r\n            if (action[self.Class.BA_PAGE_CACHE]) {\r\n                data[self.Class.BA_PAGE_CACHE] = action[self.Class.BA_PAGE_CACHE];\r\n            }\r\n            delete action[self.Class.BA_PAGE_CACHE];\r\n            delete action.tag;\r\n        });\r\n\r\n        // Fill optional parameters\r\n        params = params || {};\r\n        if (params.actions) {\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"actions\"] = JSON.encode(params.actions);\r\n        }\r\n\r\n        // Log submit data\r\n        bizagi.debug(\"Performing multi-action metadata\", data);\r\n\r\n        // Call ajax and returns promise\r\n        var deferred = new $.Deferred();\r\n        $.ajax({\r\n            url: self.serviceLocator.getUrl(\"render-multiaction-metadata\"),\r\n            data: data,\r\n            type: \"POST\",\r\n            dataType: \"json\",\r\n            serviceType: \"MULTIACTION\",\r\n            beforeSend: function (xhr, status) {\r\n                bizagi.multiactionConnection = bizagi.multiactionConnection || [];\r\n                bizagi.multiactionConnection.push(xhr);\r\n            }\r\n\r\n        }).done(function (responses) {\r\n            for (i in responses) {\r\n                if (typeof responses[i] !== \"function\") {\r\n                    var response = responses[i];\r\n                    if (response.error) {\r\n                        if (rejectDeferreds) {\r\n                            deferred.reject(this, \"servererror\", response);\r\n                            return;\r\n                        }\r\n\r\n                    }\r\n                }\r\n            }\r\n            deferred.resolve(responses);\r\n\r\n        }).fail(function (xhr) {\r\n            var response = xhr.responseText || xhr;\r\n            var finalResponse;\r\n            // Try to parse the response\r\n            try {\r\n                finalResponse = JSON.parse(response);\r\n            } catch (e) { }\r\n            deferred.reject(xhr, \"servererror\", finalResponse);\r\n        });\r\n\r\n        return deferred.promise();\r\n    }\r\n});\r\n","/*\r\n *   Name: BizAgi Rendering Command controller \r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define basic stuff for action and validation controllers\r\n */\r\n\r\n$.Class.extend(\"bizagi.command.controllers.controller\", {\r\n    /* \r\n    *   Set to true in order to debug\r\n    */\r\n    THROW_ERROR: true\r\n\r\n}, {\r\n    /*  \r\n    *   Constructor\r\n    */ \r\n    init: function (form) {\r\n        this.form = form;\r\n        this.dateFormat = form.getResource(\"dateFormat\");\r\n    },\r\n    /*\r\n    *   Returns the condition in JS\r\n    */\r\n    buildConditions: function (conditions, bGridDetected, bCheckEditability) {\r\n        var self = this;\r\n        var operator = conditions.expressions && conditions.expressions.length > 1 ? self.buildConditionOperator(conditions.operator) : conditions.operator;\r\n\r\n        // Define if a grid has been detected\r\n        bGridDetected = bGridDetected || false;\r\n        bCheckEditability = bCheckEditability || false;\r\n\r\n        //  Validate trtue and false conditions\r\n        if (operator == \"true\")\r\n            return \"true\";\r\n        if (operator == \"false\")\r\n            return \"false\";\r\n\r\n        var sJsCondition = \"\";\r\n\r\n        for (var i = 0; i < conditions.expressions.length; i++) {\r\n            var expression = conditions.expressions[i];\r\n\r\n            if (expression.simple) {\r\n                var bGDetected = self.searchGridReferenceInCondition(expression.simple);\r\n                sJsCondition += self.buildSimpleCondition(expression.simple, bGDetected, bCheckEditability);\r\n\r\n            } else if (expression.complex) {\r\n                sJsCondition += \"(\" + self.buildConditions(expression.complex, bGridDetected, bCheckEditability) + \") \";\r\n            }\r\n\r\n            // Adds operator\r\n            sJsCondition += (i < conditions.expressions.length - 1 ? operator : \"\");\r\n        }\r\n\r\n        return sJsCondition;\r\n    },\r\n    /*\r\n    *   Builds the condition operator\r\n    */\r\n    buildConditionOperator: function (conditionsOperator) {\r\n        if (conditionsOperator == \"and\")\r\n            return \" && \";\r\n        if (conditionsOperator == \"or\")\r\n            return \" || \";\r\n        return conditionsOperator;\r\n    },\r\n    /*\r\n    *   Builds a simple condition\r\n    */\r\n    buildSimpleCondition: function (condition, bGridDetected, bCheckEditability) {\r\n        var self = this;\r\n        var sXpath;\r\n        var xpath;\r\n        var sArgument = \"\";\r\n        var operator = condition.operator;\r\n        var ensureValueJs = \"\";\r\n        var ensureEditable = \"\";\r\n\r\n        // Define if a grid has been detected\r\n        bGridDetected = bGridDetected || false;\r\n        bCheckEditability = bCheckEditability || false;\r\n\r\n        // List of controls excluded to editability validation\r\n        // Just keep empty the value of element\r\n        var excludeEditabilityRule = { \"boolean\": \"\" };\r\n        var control = condition.xpath || condition.renderId;\r\n\r\n        var detectedArgumentType = self.detectConditionArgumentType(control, condition.argumentType);\r\n\r\n        // Build xpath\r\n        sXpath = self.buildXpath(control, detectedArgumentType, bGridDetected);\r\n        if (detectedArgumentType != \"boolean\") {\r\n            ensureValueJs += \"!bizagi.util.isEmpty(\" + sXpath + \") && \";\r\n        }\r\n\r\n        // Check if the render is editable, only when the parameter is provided\r\n        if (bCheckEditability && control && control.length > 0 && !excludeEditabilityRule.hasOwnProperty(detectedArgumentType)) {\r\n            ensureEditable = \"self.isVisible('\" + control + \"') && self.isEditable('\" + control + \"') && \";\r\n        }\r\n\r\n        // Build argument\r\n        if (!bizagi.util.isEmpty(condition.argument)) {\r\n            sArgument = self.buildArgument(condition.argument, detectedArgumentType, bGridDetected);\r\n\r\n            // If the argument is xpath it must be filled to for some operators\r\n            if (detectedArgumentType == \"xpath\") {\r\n                ensureValueJs += \"!bizagi.util.isEmpty(\" + sArgument + \") && \";\r\n            }\r\n\r\n        } else if (condition.argument === \"\") {\r\n            // Also check the case when the argument is empty\r\n            sArgument = \"\\\"\\\"\";\r\n        }\r\n\r\n        // Build condition\r\n\r\n        if (operator == \"includes\") {\r\n            return ensureEditable + ensureValueJs + \"self.includes(\" + sXpath + \",\" + sArgument + \") \";\r\n        }\r\n        //if (operator == \"changes\") return \"true\";\r\n        if (operator == \"changes\") {\r\n            return \"self.isChanged(\" + sXpath + \", params.changed)\";\r\n        }\r\n        if (operator == \"equals\")\r\n            return ensureEditable + ensureValueJs + sXpath + \" == \" + sArgument;\r\n        if (operator == \"not-equals\")\r\n            return ensureEditable + sXpath + \" != \" + sArgument;\r\n        if (operator == \"less-than\")\r\n            return ensureEditable + ensureValueJs + sXpath + \" < \" + sArgument;\r\n        if (operator == \"less-equals-than\")\r\n            return ensureEditable + ensureValueJs + sXpath + \" <= \" + sArgument;\r\n        if (operator == \"greater-than\")\r\n            return ensureEditable + ensureValueJs + sXpath + \" > \" + sArgument;\r\n        if (operator == \"greater-equals-than\")\r\n            return ensureEditable + ensureValueJs + sXpath + \" >= \" + sArgument;\r\n        if (operator == \"like\")\r\n            return ensureEditable + ensureValueJs + sXpath + \".toString().indexOf(\" + sArgument + \") >= 0 \";\r\n        if (operator == \"is-empty\") {\r\n            if (detectedArgumentType != \"entity\") {\r\n                return ensureEditable + \"bizagi.util.isEmpty(\" + sXpath + \")\";\r\n            } else {\r\n                return ensureEditable + \"(\" + sXpath + \" == 0 || bizagi.util.isEmpty(\" + sXpath + \"))\";\r\n            }\r\n        }\r\n        if (operator == \"is-not-empty\") {\r\n            if (detectedArgumentType != \"entity\") {\r\n                return ensureEditable + \"!bizagi.util.isEmpty(\" + sXpath + \")\";\r\n            } else {\r\n                return ensureEditable + \"(\" + sXpath + \" != 0 && !bizagi.util.isEmpty(\" + sXpath + \"))\";\r\n            }\r\n        }\r\n        if (operator == \"is-true\")\r\n            return ensureEditable + \"( \" + sXpath + \" == true || \" + sXpath + \" == 'true' )\";\r\n        if (operator == \"is-false\")\r\n            return ensureEditable + \"( \" + sXpath + \" == false || \" + sXpath + \" == 'false' || \" + sXpath + \" == 'False' )\";\r\n        if (operator == \"does-not-contain\")\r\n            return ensureEditable + ensureValueJs + sXpath + \".toString().indexOf(\" + sArgument + \") < 0 \";\r\n        if (operator == \"contains\")\r\n            return ensureEditable + ensureValueJs + sXpath + \".toString().indexOf(\" + sArgument + \") >= 0 \";\r\n        if (operator == \"begins-with\")\r\n            return ensureEditable + ensureValueJs + sXpath + \".toString().startsWith(\" + sArgument + \") == true \";\r\n        if (operator == \"does-not-begins-with\")\r\n            return ensureEditable + ensureValueJs + sXpath + \".toString().startsWith(\" + sArgument + \") == false \";\r\n        if (operator == \"file-uploaded\") {\r\n            xpath = control;\r\n            if (bGridDetected && xpath) {\r\n                xpath = xpath.replaceAll(\"[]\", \"[' + i + ']\");\r\n            }\r\n            return ensureEditable + \"self.isFileUploaded('\" + xpath + \"') \";\r\n        }\r\n        if (operator == \"file-not-uploaded\") {\r\n            xpath = control;\r\n            if (bGridDetected && xpath) {\r\n                xpath = xpath.replaceAll(\"[]\", \"[' + i + ']\");\r\n            }\r\n            return ensureEditable + \"!self.isFileUploaded('\" + xpath + \"') \";\r\n        }\r\n        if (operator == \"is-invalid-email\")\r\n            return ensureEditable + \"!self.isValidEmail(\" + sXpath + \") \";\r\n        if (operator == \"letter-edited\")\r\n            return \"false\"; //TODO\r\n        if (operator == \"letter-not-edited\")\r\n            return \"false\"; //TODO\r\n        if (operator == \"cell-change\")\r\n            return \"column == \" + sArgument;\r\n\r\n        if (operator == \"on-press\") {\r\n            if (bGridDetected) {\r\n                var id = self.buildXpath(control, \"id\", bGridDetected);\r\n                return \"self.isGridButtonPressed(\" + id + \", params.pressed)\";\r\n            } else {\r\n                return \"self.isButtonPressed('\" + control + \"', params.pressed)\";\r\n            }\r\n        }\r\n\r\n        // ondelete behavior on grid control  \r\n        if (operator == 'on-deleted-row') {\r\n            xpath = control || \"\";\r\n            return \"self.onDeletedGridRow('\" + xpath + \"', params.rowDeleted)\";\r\n        }\r\n\r\n        // If there is another operator code throw exception\r\n        throw new \"There is no implementation for operator code \" + operator;\r\n    },\r\n    /*\r\n    *   Detects the argument type based on the render\r\n    */\r\n    detectConditionArgumentType: function (control, argumentType) {\r\n        var self = this;\r\n\r\n        if (argumentType === undefined || argumentType == \"const\") {\r\n\r\n            // Search render\r\n            var form = self.form;\r\n            var render = form.getRender(control) || form.getRenderById(control);\r\n\r\n            // Check if exists the render\r\n            if (render == null) {\r\n                throw new Error(\"RenderNotFoundException in method detectConditionArgumentType of bizagi.command.controllers.controller\");\r\n            }\r\n\r\n            // Check if the render is a grid\r\n            if (render.properties.type == \"grid\") {\r\n                var gridXpath = self.processGridXpath(control);\r\n\r\n                if (gridXpath.remainingXpath === \"\") {\r\n                    // The target is the grid\r\n                    return \"xpath\";\r\n                } else {\r\n                    render = render.getColumn(gridXpath.remainingXpath);\r\n                    if (render == null) {\r\n                        throw new Error(\"RenderNotFoundException in method detectConditionArgumentType of bizagi.command.controllers.controller\");\r\n                    }\r\n                }\r\n            }\r\n\r\n            var dataType = render.properties.dataType;\r\n            var renderType = bizagi.util.normalizeType(render.properties.type);\r\n\r\n            if (self.isRelatedEntityRender(renderType)) {\r\n                return 'entity';\r\n            }\r\n\r\n            // Number\r\n            if (dataType == 1 || dataType == 2 || dataType == 3 || dataType == 4 || dataType == 6 || dataType == 7 || dataType == 10 || dataType == 11) {\r\n                return 'number';\r\n            }\r\n\r\n            // Money\r\n            if (dataType == 8) {\r\n                return 'money';\r\n            }\r\n\r\n            // Date\r\n            if (dataType == 12 || dataType == 13) {\r\n                if (render.properties.showTime == true) {\r\n                    return 'datetime';\r\n                } else {\r\n                    return 'date';\r\n                }\r\n            }\r\n\r\n            // Boolean\r\n            if (dataType == 5) {\r\n                return 'boolean';\r\n            }\r\n\r\n            // Button\r\n            if (renderType == \"button\") {\r\n                return \"button\";\r\n            }\r\n\r\n            // Default\r\n            return 'text';\r\n\r\n        } else if (argumentType == \"xpath\" || argumentType == \"function\" || argumentType == \"entity\") {\r\n            return argumentType;\r\n        }\r\n\r\n        // Default return text\r\n        return 'text';\r\n    },\r\n    /*\r\n    *   Detects if a render type must be binded to a xpath with related entity\r\n    */\r\n    isRelatedEntityRender: function (renderType) {\r\n        return [\"combo\", \"list\", \"radio\", \"search\", \"searchCombo\", \"columnCombo\"].includes(renderType) || /^cascadingcombo$/i.test(renderType);\r\n    },\r\n\r\n    buildXpath: function (xpath, argumentType, bGridDetected) {\r\n        var self = this;\r\n\r\n        // Define if a grid has been detected\r\n        bGridDetected = bGridDetected || false;\r\n\r\n        // Process grid xpaths\r\n        if (bGridDetected) {\r\n            xpath = xpath.replaceAll(\"[]\", \"[' + i + ']\");\r\n        }\r\n\r\n        if (argumentType == 'xpath' && !bGridDetected) {\r\n            return \"self.evalXpath('\" + xpath + \"', '\" + self.detectConditionArgumentType(xpath, \"const\") + \"')\";\r\n        } else if (argumentType == 'id') {\r\n            return \"'\" + xpath + \"'\";\r\n        } else if (argumentType == 'function') {\r\n            var xpathArgumentType = self.detectConditionArgumentType(xpath, \"const\");\r\n            return \"self.evalXpath('\" + xpath + \"', '\" + xpathArgumentType + \"')\";\r\n        } else if (bGridDetected){\r\n            return \"self.evalGridXpath(params, '\" + xpath + \"', '\" + argumentType + \"')\";      \r\n        }\r\n\r\n        return \"self.evalXpath('\" + xpath + \"', '\" + argumentType + \"')\";\r\n    },\r\n    buildArgument: function (argument, argumentType, bGridDetected, xpathContext) {\r\n        var self = this;\r\n        var number;\r\n\r\n        // Define if a grid has been detected\r\n        bGridDetected = bGridDetected || false;\r\n\r\n        if (argumentType == 'text') {\r\n            // Text\r\n            argument = (argument == null) ? \"\" : argument;\r\n            argument = (typeof argument != 'string') ? argument.toString() : argument;\r\n            if (argument.indexOf(\"'\") != -1)\r\n                argument = argument.replaceAll(\"'\", \"\\\\'\");\r\n\r\n            // Remove line breaks because they will fail with the eval command\r\n            if (argument.indexOf(\"\\n\") != -1)\r\n                argument = argument.replaceAll(\"\\n\", \"\");\r\n\r\n            return \"'\" + argument.toString() + \"'\";\r\n        }\r\n        if (argumentType == 'boolean') {\r\n            // Boolean\r\n            if (typeof (argument) == \"string\") {\r\n                return (eval(argument.toLowerCase()) == true ? \"true\" : \"false\");\r\n            } else {\r\n                return (eval(argument) == true ? \"true\" : \"false\");\r\n            }\r\n        }\r\n        if (argumentType == 'number') {\r\n            // Number\r\n            number = new Number(argument);\r\n            if (number == NaN)\r\n                return \"-99999999\";\r\n            return number.toString();\r\n        }\r\n        if (argumentType == 'money') {\r\n            // MONEY\r\n            number = new Number(argument);\r\n            if (number == NaN)\r\n                return \"-99999999\";\r\n            return number.toString();\r\n        }\r\n        if (argumentType == 'date') {\r\n            //Date\r\n            var date = bizagi.util.dateFormatter.getDateFromInvariant(argument);\r\n            if (!date || date == 0)\r\n                date = new Date(0);\r\n\r\n            // Remove time\r\n            date.setHours(0, 0, 0, 0);\r\n\r\n            return \"bizagi.util.dateFormatter.getDateFromInvariant('\" + bizagi.util.dateFormatter.formatInvariant(date) + \"').getTime()\";\r\n        }\r\n        if (argumentType == 'datetime') {\r\n            //Date\r\n            var date = bizagi.util.dateFormatter.getDateFromInvariant(argument, true);\r\n            if (!date || date == 0) {\r\n                date = new Date(0);\r\n            }\r\n            \r\n            date.setSeconds(0);\r\n            date.setMilliseconds(0);\r\n\r\n            return \"bizagi.util.dateFormatter.getDateFromInvariant('\" + bizagi.util.dateFormatter.formatInvariant(date, true) + \"', true).getTime()\";\r\n        }\r\n        if (argumentType == 'color') {\r\n            // Color\r\n            return \"'\" + argument.toString() + \"'\";\r\n        }\r\n        if (argumentType == 'entity') {\r\n\r\n            if (bizagi.util.isEmpty(argument)) {\r\n                return null;\r\n            }\r\n            try {\r\n                argument = typeof (argument) != \"object\" ? JSON.parse(argument) : argument;\r\n            } catch (e) {\r\n                argument = argument || {};\r\n            }\r\n\r\n\r\n            // Entity value\r\n            var result = argument.id || argument;\r\n            return JSON.stringify(result);\r\n        }\r\n        if (argumentType == 'xpath') {\r\n            // Xpath value\r\n            var xpath = argument.toString();\r\n\r\n            // Process grid xpaths\r\n            if (bGridDetected) {\r\n                xpath = xpath.replaceAll(\"[]\", \"[' + i + ']\");\r\n            }\r\n\r\n            if (xpathContext) {\r\n                xpath = xpathContext + \".\" + xpath;\r\n            }\r\n\r\n            return self.buildXpath(xpath, argumentType, bGridDetected);\r\n        }\r\n        if (argumentType == 'json') {\r\n            // Xpath value\r\n            return JSON.encode(argument);\r\n        }\r\n        if (argumentType == 'function') {\r\n            if (argument == \"BANow\") {\r\n                return \"self.getCurrentDate()\";\r\n            }\r\n            // If there is another function type code throw exception\r\n            throw \"There is no implementation for function \" + argument;\r\n        }\r\n\r\n        if (argumentType == undefined) {\r\n            return null;\r\n        }\r\n\r\n        // If there is another argument type code throw exception\r\n        throw \"There is no implementation for argument type \" + argumentType;\r\n    },\r\n    /*\r\n    *   Evals if an xpath is editable\r\n    */\r\n    isEditable: function (xpath) {\r\n        var self = this;\r\n        // For the submit action we need only one render to perform the server action\r\n        var render = self.getRender(xpath);\r\n        if (render == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        return render.properties.editable;\r\n    },\r\n\r\n    isVisible: function (xpath) {\r\n        var self = this;\r\n\r\n        var render = self.getRender(xpath);\r\n        if (render == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (render.properties.visible) {\r\n            return self.isParentVisible(render.parent);\r\n        } else {\r\n            var renderType = bizagi.util.normalizeType(render.properties.type);\r\n            if (/^hidden$/i.test(renderType)) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    },\r\n\r\n    isParentVisible: function (render) {\r\n        var self = this;\r\n        if (render.parent) {\r\n            if (render.properties.visible) {\r\n                return self.isParentVisible(render.parent);\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            return render.properties.visible;\r\n        }\r\n    },\r\n\r\n    /* \r\n    *   Evals an xpath to find a render and return its value\r\n    */\r\n    evalGridXpath: function(params, xpath, argumentType) {\r\n        var self = this;\r\n        \r\n        if (params === undefined){\r\n            return this.evalXpath(xpath, argumentType);\r\n        }\r\n\r\n        var grid = params.grid;\r\n\r\n        if (grid === undefined || grid === null){\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return null;    \r\n        }\r\n\r\n        // Grid renders\r\n        var gridXpath = self.processGridXpath(xpath);\r\n\r\n        // Return the value\r\n        var gridColumn = grid.getColumn(gridXpath.remainingXpath);\r\n\r\n        if (!gridColumn) {\r\n            return false;\r\n            //throw \"There is no a valid render for xpath \" + xpath;\r\n        }\r\n\r\n        var cellValue = grid.getCellCurrentValue(gridXpath.index, gridXpath.remainingXpath);\r\n\r\n        if (gridColumn.properties.type == \"columnRadio\") {\r\n            if (cellValue) {\r\n                if (cellValue.length > 0 && cellValue[0].length > 0)\r\n                    cellValue = cellValue[0][0];\r\n                else\r\n                    cellValue = cellValue.id;\r\n            }\r\n            else\r\n                cellValue = 0;\r\n        }\r\n\r\n        if (gridColumn.properties.type == \"columnCombo\") {\r\n            cellValue = (cellValue && cellValue.id) ? cellValue.id : 0;\r\n        }\r\n\r\n        if (gridColumn.properties.type == \"columnSearch\") {\r\n            cellValue = (cellValue && cellValue.id) ? cellValue.id : 0;\r\n        }\r\n\r\n        // Parse empty values\r\n        if (bizagi.util.isEmpty(cellValue)) {\r\n            // If the render is a boolean return false for actions\r\n            if (argumentType == \"boolean\") {\r\n                if (gridColumn.properties.display == \"check\") {\r\n                    return false;\r\n                } else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Parse boolean and non-empty date types\r\n        if ((argumentType == \"boolean\") || (argumentType == \"date\" && !bizagi.util.isEmpty(self.getRender(xpath, argumentType).value))) {\r\n            return eval(self.buildArgument(cellValue, argumentType));\r\n        }\r\n\r\n        if (typeof (gridColumn) != \"undefined\" && typeof (gridColumn.properties) != \"undefined\" && typeof (gridColumn.properties.type) != \"undefined\" && gridColumn.properties.type == \"columnDate\")\r\n            cellValue = bizagi.util.dateFormatter.getDateFromInvariant(cellValue);\r\n\r\n        return cellValue;\r\n    },\r\n\r\n    /* \r\n    *   Evals an xpath to find a render and return its value\r\n    */\r\n    evalXpath: function (xpath, argumentType) {\r\n        var self = this, i, renderToEval;\r\n\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        var rendersToEval = [];\r\n        $.each(renders, function (i, render) {\r\n            if (render.properties.editable) {\r\n                rendersToEval.push(render);\r\n            }\r\n        });\r\n\r\n        // If no render has been found skip editable validation\r\n        if (rendersToEval.length === 0) {\r\n            $.each(renders, function (i, render) {\r\n                rendersToEval.push(render);\r\n            });\r\n        }\r\n\r\n        i = 0;\r\n        while (i < rendersToEval.length) {\r\n            renderToEval = rendersToEval[i++];\r\n            var bIsGrid = (renderToEval.properties.type == 'grid');\r\n            if (!bIsGrid) {\r\n                // Normal renders\r\n                var value = renderToEval.getValue();\r\n                var renderType = bizagi.util.normalizeType(renderToEval.properties.type || \"\");\r\n\r\n                if (argumentType === undefined || argumentType === \"undefined\") {\r\n                    return value;\r\n                }\r\n\r\n                // If the render is a combo and the value is null return 0 for validations and actions\r\n                if ([\"combo\", \"list\", \"search\", \"radio\"].includes(renderType) || /^cascadingcombo$/i.test(renderType)) {\r\n                    if (bizagi.util.isEmpty(value) || value.id == \"\") {\r\n                        value = 0;\r\n                    }\r\n                }\r\n\r\n                if (renderType === \"comboSelected\") {\r\n                    return (typeof value === \"string\") ? JSON.parse(value).value : value;\r\n                }\r\n\r\n                if (bizagi.util.isEmpty(value)) {\r\n                    // If the render is a check and the value is null return false for validations and actions\r\n                    if (renderType === \"boolean\" && renderToEval.properties.display === \"check\") {\r\n                        return false;\r\n                    }\r\n\r\n                    if (bizagi.util.isEmpty(value)) {\r\n                        // If the render is a check and the value is null return false for validations and actions\r\n                        if (renderType === \"boolean\" && renderToEval.properties.display === \"check\") {\r\n                            return false;\r\n                        }\r\n                    }\r\n\r\n                    return value;\r\n                }\r\n\r\n                if (argumentType === \"xpath\") {\r\n                    return eval(self.buildArgument(xpath, argumentType));\r\n                } else {\r\n                    return eval(self.buildArgument(value, argumentType));\r\n                }                \r\n            } else {\r\n\r\n                // Grid renders\r\n                var gridXpath = self.processGridXpath(xpath);\r\n\r\n                // Return the value\r\n                var gridColumn = renderToEval.getColumn(gridXpath.remainingXpath);\r\n\r\n                if (!gridColumn) {\r\n                    continue;\r\n                }\r\n\r\n                var cellValue = renderToEval.getCellCurrentValue(gridXpath.index, gridXpath.remainingXpath);\r\n\r\n                if (gridColumn.properties.type == \"columnRadio\") {\r\n                    if (cellValue) {\r\n                        if (cellValue.length > 0 && cellValue[0].length > 0)\r\n                            cellValue = cellValue[0][0];\r\n                        else\r\n                            cellValue = cellValue.id;\r\n                    }\r\n                    else\r\n                        cellValue = 0;\r\n                }\r\n\r\n                if (gridColumn.properties.type == \"columnCombo\") {\r\n                    cellValue = (cellValue && cellValue.id) ? cellValue.id : 0;\r\n                }\r\n\r\n                if (gridColumn.properties.type == \"columnSearch\") {\r\n                    cellValue = (cellValue && cellValue.id) ? cellValue.id : 0;\r\n                }\r\n\r\n                // Parse empty values\r\n                if (bizagi.util.isEmpty(cellValue)) {\r\n                    // If the render is a boolean return false for actions\r\n                    if (argumentType == \"boolean\") {\r\n                        if (gridColumn.properties.display == \"check\") {\r\n                            return false;\r\n                        } else {\r\n                            return null;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Parse boolean and non-empty date types\r\n                if ((argumentType == \"boolean\") || (argumentType == \"date\" && !bizagi.util.isEmpty(self.getRender(xpath, argumentType).value))) {\r\n                    return eval(self.buildArgument(cellValue, argumentType));\r\n                }\r\n\r\n                if (typeof (gridColumn) != \"undefined\" && typeof (gridColumn.properties) != \"undefined\" && typeof (gridColumn.properties.type) != \"undefined\" && gridColumn.properties.type == \"columnDate\")\r\n                    cellValue = bizagi.util.dateFormatter.getDateFromInvariant(cellValue);\r\n\r\n                return cellValue;\r\n            }\r\n\r\n            throw \"There is no a valid render for xpath \" + xpath;\r\n        }\r\n\r\n\r\n    },\r\n    /*\r\n    *   Check if the upload render has any files uploaded\r\n    */\r\n    isFileUploaded: function (xpath) {\r\n        var self = this;\r\n\r\n        var value = self.evalXpath(xpath);\r\n\r\n        if (value && value.length) {\r\n            if (value.length > 0)\r\n                return true;\r\n        }\r\n\r\n        return false;\r\n    },\r\n    /*\r\n    *   Check if a render has a valid email value\r\n    */\r\n    isValidEmail: function (value) {\r\n        var regex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/gi;\r\n        if (value && value.match(new RegExp(regex))) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    /**\r\n    * Compare two elements, data of html and renderId to action\r\n    */\r\n    isButtonPressed: function (control, pressed) {\r\n        // Check if the control is a button\r\n        var render = this.getRenderById(control);\r\n        var renderType = bizagi.util.normalizeType(render.properties.type);\r\n        if (render === null || !/^button$/i.test(renderType)) return false;\r\n\r\n        return pressed;\r\n    },\r\n    /*\r\n    * Compare two elements, data of html and renderId to action\r\n    */\r\n    isGridButtonPressed: function (control, pressed) {\r\n        // Check if the control is a button\r\n        var arrGridXpath = this.processGridXpath(control);\r\n        var gridXpath = arrGridXpath.gridXpath;\r\n        var render = this.getRender(gridXpath);\r\n        var column = arrGridXpath.remainingXpath || \"\";\r\n\r\n\r\n        if (pressed && render && render.columns) {\r\n            $.each(render.columns, function (key, value) {\r\n                if ((value.properties.xpath === column || value.properties.id === column) && value.properties.type === \"columnButton\") {\r\n                    pressed = true;\r\n                }\r\n            });\r\n        }\r\n        return pressed;\r\n    },\r\n\r\n    /**\r\n    * Check if a control has been changed\r\n    */\r\n    isChanged: function (value, isChanged) {\r\n        if (value === undefined || value === null) {\r\n            return false;\r\n        }\r\n        return isChanged;\r\n    },\r\n\r\n    /**\r\n    * Check if a control has the item\r\n    */\r\n    includes: function (value, argument) {\r\n        if (typeof value == \"undefined\" || value === null) {\r\n            return false;\r\n        }\r\n        if (typeof argument == \"undefined\" || argument === null) {\r\n            return false;\r\n        }\r\n        var inArray = $.grep(value, function (e) {\r\n            return e.id == argument;\r\n        });\r\n        if (inArray.length > 0) {\r\n            return true;\r\n        }\r\n        return false\r\n    },\r\n\r\n    /**\r\n    *  Check if the grid has been deleted a row\r\n    */\r\n    onDeletedGridRow: function (xpath, rowDeleted) {\r\n        var self = this;\r\n        var grid = self.getRender(xpath) || {};\r\n\r\n        if (grid && rowDeleted) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Wrapper for get renders, return null if no renders have been found\r\n    */\r\n    getRenders: function (xpath) {\r\n        var self = this,\r\n            form = self.form,\r\n            regex = /id=([\\w-]+)/gi;\r\n        var renders = null;\r\n\r\n        // Check if the xpath is an id\r\n        var idMatches = regex.exec(xpath);\r\n        if (idMatches && idMatches.length > 1) {\r\n            var render = self.getRenderById(idMatches[1]);\r\n            if (render) {\r\n                if (render.length == 0)\r\n                    return null;\r\n                else {\r\n                    renders = [];\r\n                    renders.push(render);\r\n                    return renders;\r\n                }\r\n            } else {\r\n                return null;\r\n            }\r\n\r\n        }\r\n\r\n        renders = form.getRenders(xpath);\r\n        if (renders.length == 0)\r\n            return null;\r\n        return renders;\r\n    },\r\n    /*\r\n    *   Wrapper for get only one editable render\r\n    */\r\n    getRender: function (xpath) {\r\n        var self = this,\r\n            form = self.form;\r\n\r\n        return form.getRender(xpath);\r\n    },\r\n    /*\r\n    *   Wrapper to get a render by id\r\n    */\r\n    getRenderById: function (id) {\r\n        var self = this,\r\n            form = self.form;\r\n\r\n        return form.getRenderById(id);\r\n    },\r\n    /* \r\n    *   Helper function to detect metadata errors\r\n    */\r\n    showRenderNotFoundError: function (xpath) {\r\n        bizagi.debug(\"Cannot find render in DOM: \" + xpath);\r\n    },\r\n    /* \r\n    *   Helper function to detect metadata errors\r\n    */\r\n    showContainerNotFoundError: function (containerId) {\r\n        bizagi.debug(\"Cannot find container in DOM: \" + containerId);\r\n    },\r\n    /*\r\n    *   Returns the current date\r\n    */\r\n    getCurrentDate: function () {\r\n        var currentDate = new Date();\r\n\r\n        // Remove time\r\n        currentDate.setHours(0, 0, 0, 0);\r\n        return currentDate;\r\n    },\r\n    /*\r\n    *   Return the grid xpath parts\r\n    */\r\n    processGridXpath: function (xpath) {\r\n\r\n        // Eval using regular expressions\r\n        var regex = new RegExp(/([\\w\\.]*)\\[(\\d*)\\]\\.([\\w\\.|\\w-\\.]*)/g);\r\n        var matches = regex.exec(xpath);\r\n        var index, remainingXpath, gridXpath;\r\n        if (matches) {\r\n            gridXpath = matches[1];\r\n            index = matches[2];\r\n            remainingXpath = matches[3];\r\n        } else {\r\n            index = \"\";\r\n            remainingXpath = \"\";\r\n        }\r\n\r\n        return { xpath: xpath, index: index, remainingXpath: remainingXpath, gridXpath: gridXpath };\r\n    },\r\n    /*\r\n    *   Check if an action/validation contains reference to a grid\r\n    */\r\n    searchForGridReference: function (conditions, commands) {\r\n        var self = this;\r\n        var i;\r\n        // Check in conditions\r\n        if (conditions) {\r\n            return self.searchGridReferenceInCondition(conditions);\r\n        }\r\n\r\n        // Check in commands\r\n        if (commands) {\r\n            for (i in commands) {\r\n                var command = commands[i];\r\n                return self.searchForGridReferenceInCommand(command);\r\n            }\r\n        }\r\n\r\n        return null;\r\n    },\r\n    /*\r\n     *   Check if an action/validation contains reference to a grid\r\n     */\r\n    searchForGridReferenceInCommand: function(command){\r\n        if (command.xpath && command.xpath.indexOf(\"[]\") > 0) {\r\n            return command.xpath.substring(0, command.xpath.indexOf(\"[]\"));\r\n        }\r\n\r\n        // Check in argument if argumentType is xpath\r\n        if (command.argumentType == 'xpath') {\r\n            if (command.argument.indexOf(\"[]\") > 0) {\r\n                return command.argument.substring(0, command.argument.indexOf(\"[]\"));\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Check if a condition contains reference to a grid\r\n    */\r\n    searchGridReferenceInCondition: function (condition) {\r\n        var self = this;\r\n        var bGridReferenceFound;\r\n        if (typeof (condition) === \"string\" || typeof (condition) === \"boolean\")\r\n            return null;\r\n        if (condition.expressions) {\r\n            for (i in condition.expressions) {\r\n                if(condition.expressions.hasOwnProperty(i)) {\r\n                    bGridReferenceFound = self.searchGridReferenceInCondition(condition.expressions[i]);\r\n                    if (bGridReferenceFound)\r\n                        return bGridReferenceFound;\r\n                }\r\n            }\r\n\r\n        } else if (condition.simple) {\r\n            return self.searchGridReferenceInCondition(condition.simple);\r\n\r\n        } else if (condition.complex) {\r\n            return self.searchGridReferenceInCondition(condition.complex);\r\n        } else {\r\n            // Looking for grid reference within xpath\r\n            if (condition.xpath || condition.renderId) {\r\n                // Check in condition.xpath\r\n                bGridReferenceFound = self.searchGridReferenceInXpath(condition.xpath) || self.searchGridReferenceInXpath(condition.renderId);\r\n                if (bGridReferenceFound)\r\n                    return bGridReferenceFound;\r\n\r\n                // Check in argument if argumentType is xpath\r\n                if (condition.argumentType == 'xpath') {\r\n                    bGridReferenceFound = self.searchGridReferenceInXpath(condition.argument);\r\n                    if (bGridReferenceFound)\r\n                        return bGridReferenceFound;\r\n\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return null;\r\n    },\r\n    /*\r\n    *   Check if a xpath contains a grid reference\r\n    */\r\n    searchGridReferenceInXpath: function (xpath) {\r\n        // Check in condition.xpath\r\n        if (xpath && xpath.indexOf(\"[]\") > 0) {\r\n            return xpath.substring(0, xpath.indexOf(\"[]\"));\r\n        }\r\n        return null;\r\n    },\r\n    getGridControl: function (xpath, surrogateKey) {\r\n        var self = this;\r\n        var remainingXpath = self.processGridXpath(xpath).remainingXpath;\r\n        var grid = self.getRender(xpath);\r\n        var column = grid.getControlCell(surrogateKey, remainingXpath);\r\n\r\n        return column;\r\n\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Rendering Validation controller\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will parse and execute all the validations defined for the form\r\n */\r\n\r\nbizagi.command.controllers.controller.extend(\"bizagi.command.controllers.validation\", {}, {\r\n\r\n    /* \r\n    *   Constructor\r\n    */\r\n    init: function (form, validations, mainForm) {\r\n        var self = this;\r\n\r\n        // Enable evalValidation function with console log trace\r\n        self.enableDebug = false;\r\n\r\n        // Call base\r\n        this._super(form);\r\n\r\n        var container = mainForm != undefined ? mainForm.container : form.container;\r\n\r\n        var validationBox = $('<div />').appendTo(container);\r\n\r\n        //Notifies that a modal view appear/disappear\r\n        $.widget( \"ui.bizagi_notifications\", $.ui.bizagi_notifications, {\r\n            expand: function() {\r\n                this._super();\r\n                self.form.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n            },\r\n            collapse: function() {\r\n                this._super();\r\n                self.form.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n            },\r\n            hide: function() {\r\n                this._super();\r\n                self.form.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n            }\r\n        });\r\n\r\n        // Apply plugin\r\n        validationBox.bizagi_notifications({\r\n            itemIcon: \"ui-icon-circle-close\",\r\n            minimized: false,\r\n            clearEnabled: false,\r\n            title: form.getResource(\"render-form-validations-header-text\"),\r\n            device: bizagi.util.detectDevice(),\r\n            orientation: form.properties.orientation\r\n\r\n        });\r\n\r\n        // Bind click\r\n        validationBox.bind(\"itemClick\", function (e, ui) {\r\n            self.onNotificationClick(ui.data);\r\n        });\r\n\r\n        // Build validations\r\n        if (validations)\r\n            self.buildValidations(validations);\r\n\r\n        // Keep references\r\n        self.validationBox = validationBox;\r\n        self.validations = validations || [];\r\n    },\r\n\r\n\r\n    /* \r\n    *   Method to incorporate automatic validation rules \r\n    */\r\n    buildValidations: function (validations) {\r\n        var self = this;\r\n        var fnValidations = self.buildAllValidations(validations);\r\n\t\r\n        self.form.bind(\"rendervalidate\", function () {\r\n            return fnValidations(self);\r\n        });\r\n    },\r\n\r\n    /* \r\n    *   Method to add a simple error message in the validation box\r\n    */\r\n    showErrorMessage: function (message) {\r\n        bizagi.showErrorAlertDialog = false;\r\n        this.showValidationMessage(message, null, \"ui-icon-circle-close\", \"ui-state-error\");\r\n    },\r\n\r\n    /* \r\n    *   Method to add a simple alert message in the validation box\r\n    */\r\n    showAlertMessage: function (message) {\r\n        this.showValidationMessage(message, null, \"ui-icon-alert\", \"ui-state-highlight\");\r\n    },\r\n\r\n    /* \r\n    *   Method to add a simple info message in the validation box\r\n    */\r\n    showInfoMessage: function (message) {\r\n        this.showValidationMessage(message, null, \"ui-icon-info\", \"ui-state-highlight\");\r\n    },\r\n\r\n    /* \r\n    *   Method to add a simple validation message in the validation box\r\n    */\r\n    showValidationMessage: function (message, focus, icon, itemAdditionalClass, type, renderId) {\r\n        var self = this;\r\n        var form = self.form;\r\n        var render = null;\r\n\r\n        if (renderId) {\r\n            render = form.getRenderById(renderId) || null;\r\n        } else {\r\n            render = focus ? form.getRender(focus) : null;\r\n        }\r\n\r\n        bizagi.showErrorAlertDialog = false;\r\n\r\n        // Method to perform validations after the render has been changed, or the notifications has been clicked\r\n        var performValidationFn = function () {\r\n            // First hide and clear validation box\r\n            self.clearValidationMessages();\r\n\r\n            // Run validations\r\n            self.validating = true;\r\n            self.performValidations();\r\n            self.validating = false;\r\n\r\n            // Attempt to hide if there are no validations\r\n            if (self.countValidationMessages() == 0) {\r\n                self.hideValidationMessages();\r\n                self.form.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n            } else {\r\n                self.form.triggerGlobalHandler(\"modalViewDidAppear\", {});\r\n            }\r\n\r\n            form.triggerGlobalHandler(\"modalViewDidDisappear\", {});\r\n        };\r\n\r\n        // Add message\r\n        self.validationBox.bizagi_notifications(\"addNotification\", message, focus, icon, itemAdditionalClass, performValidationFn, type, renderId);\r\n\r\n        if (render) {\r\n            // Add error message to render\r\n            render.setValidationMessage(message);\r\n\r\n            if (!bizagi.util.isIE8()) {\r\n\r\n                // Bind event when render change\r\n                if (!self.validating) render.one(\"rendervalidate\", performValidationFn);\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Count the number of validation messages\r\n    */\r\n    countValidationMessages: function () {\r\n        return this.validationBox.bizagi_notifications(\"count\");\r\n    },\r\n\r\n    /*\r\n    *   Remove all the validations\r\n    */\r\n    clearValidationMessages: function (params) {\r\n        var validationsBoxes = $(\".ui-bizagi-notifications-container\", \"body\").not(\".ui-bizagi-log-container\");\r\n\r\n        return validationsBoxes.bizagi_notifications(\"clearAll\", undefined, params);\r\n    },\r\n\r\n    /*\r\n    *   Hide the validation notifications box\r\n    */\r\n    hideValidationMessages: function () {\r\n        return this.validationBox.bizagi_notifications(\"hide\");\r\n    },\r\n\r\n    /*\r\n    *   Show the validation notifications box\r\n    */\r\n    showValidationMessages: function () {\r\n        return this.validationBox.bizagi_notifications(\"show\");\r\n    },\r\n\r\n    /*\r\n    *   Expand the notification box\r\n    */\r\n    expandNotificationBox: function (autofocus) {\r\n        // Select first error and expand notifications\r\n        if (autofocus !== false) this.validationBox.bizagi_notifications(\"autoFocusFirstError\");\r\n        return this.validationBox.bizagi_notifications(\"expand\");\r\n    },\r\n\r\n    isExpandedNotificationBox: function(){        \r\n        return this.validationBox.bizagi_notifications(\"isExpanded\") && this.validationBox.bizagi_notifications(\"isContentVisible\");\r\n    },\r\n\r\n    /*\r\n    *   Run all validation rules in the form container\r\n    */\r\n    performValidations: function (invalidElements) {\r\n        var self = this;\r\n\r\n        // First hide and clear validation box\r\n        self.clearValidationMessages();\r\n        self.validationBox.bizagi_notifications(\"initBatch\");\r\n\r\n        // Run render validations\r\n        var bRendersValid = self.validateRenders(invalidElements);\r\n\r\n        // Run form validations\r\n        var bFormValid = self.validations.length > 0 ? self.form.triggerHandler(\"rendervalidate\") : true;\r\n        self.validationBox.bizagi_notifications(\"endBatch\");\r\n\r\n        // Show validations if invalid\r\n        if (!bFormValid || !bRendersValid) {\r\n            self.validationBox.bizagi_notifications(\"show\");\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /* PRIVATE METHODS */\r\n\r\n    /*  \r\n    *   Construct validations javascript rules\r\n    */\r\n    buildAllValidations: function (validations) {\r\n        var self = this;\r\n        var sJSCode = \"\";\r\n\r\n        for (var i = 0; i < validations.length; i++) {\r\n\r\n            var isEnabled = (validations[i].enabled != undefined ) ? validations[i].enabled : true;\r\n            if (isEnabled)\r\n            {\r\n                // If validation is not \"valid\" we can omit that instruction\r\n                try { sJSCode += self.buildValidation(validations[i].conditions, validations[i].validationCommand); } catch (e) {\r\n                    if (e.message != \"RenderNotFoundException\") {\r\n                        bizagi.logError(\"Validation cannot be parsed: \" + e.message, validations[i]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Build final function\r\n        var sStatement = \"var baTmpFn = function(self, params){\\r\\n var bValid = true;\\r\\n \" + sJSCode + \"\\r\\n return bValid;}; baTmpFn\";\r\n\r\n        // Return interpreted function\r\n        return self.evalValidation(sStatement);\r\n    },\r\n\r\n    /*\r\n    *   Build a single javascript validation rule\r\n    */\r\n    buildValidation: function (conditions, validationCommand) {\r\n        var self = this;\r\n        var sJsCondition = \"\";\r\n        var sJsValidation = \"\";\r\n\r\n        // Detect grid references\r\n        var gridReference = self.searchForGridReference(conditions);\r\n        var bGridDetected = (gridReference != null);\r\n\r\n        // Build Conditions\r\n        sJsCondition += \"( \" + self.buildConditions(conditions, bGridDetected, true) + \" )\";\r\n\r\n        // Fix message for quotes and break lines\r\n        validationCommand.message = validationCommand.message.replace(/'/g, \"\\\\'\");\r\n        validationCommand.message = validationCommand.message.replace(/\\n/g, \" \");\r\n        \r\n        // Build Message\r\n        var focus = validationCommand.focus || \"\";\r\n        if (bGridDetected) focus = gridReference;\r\n        if (validationCommand.tokens)\r\n            sJsValidation += \"self.showValidationMessage(' \" + validationCommand.message + \"', '\" + focus + \"', JSON.parse('\" + JSON.encode(validationCommand.tokens) + \"')); bValid = false;\\r\\n\";\r\n        else\r\n            sJsValidation += \"self.showValidationMessage(' \" + validationCommand.message + \"', '\" + focus + \"'); bValid = false;\\r\\n\";\r\n\r\n        // Build final statement\r\n        if (!bGridDetected) {\r\n\r\n\r\n            return \"if (\" + sJsCondition + \"){\\r\\n \" + sJsValidation + \" \\r\\n}\";\r\n        } else {\r\n            var sGridStatement = \"var grid = self.form.getRender('\" + gridReference + \"');\\r\\n\";\r\n            sGridStatement += \"if(grid === null) return true;\\r\\n\";\r\n            sGridStatement += \"var data = grid.getIndexes();\\r\\n\";\r\n            sGridStatement += \"var bGridValid = true;\\r\\n\";\r\n            sGridStatement += \"$.each(data, function(_, i) {\\r\\n\";\r\n            sGridStatement += \"if (\" + sJsCondition + \"){\\r\\n bGridValid = false; \\r\\n}\";\r\n            sGridStatement += \"});\\r\\n\";\r\n            sGridStatement += \"if (bGridValid == false){\\r\\n \" + sJsValidation + \"\\r\\n}\";\r\n            return sGridStatement;\r\n        }\r\n    },\r\n\r\n    /* \r\n    *   Method triggered when the validation item has been clicked\r\n    */\r\n    onNotificationClick: function (data) {\r\n        var self = this;\r\n        var form = self.form;\r\n        var xpath = data.focus;\r\n        var renderId = data.id;\r\n\r\n        if (xpath) {\r\n            var render = renderId ? form.getRenderById(renderId) : form.getRender(xpath);\r\n\r\n            if (render) {\r\n                render.focus();\r\n            }\r\n        }\r\n    },\r\n\r\n    /* \r\n    *   Method to loop\r\n    */\r\n    validateRenders: function (invalidElements) {\r\n        var self = this;\r\n        invalidElements = invalidElements || [];\r\n\r\n        // Do a check\r\n        var bValid = self.form.isValid(invalidElements);\r\n        if (!bValid) {\r\n            invalidElements.forEach(function(element){\r\n                if( element.id ) {\r\n                    // Parameters: message, xpath, icon, itemAdditionalClass, type, renderId\r\n                    self.showValidationMessageById(element.message, element.xpath, element.id);\r\n                } else if (element.message || element.xpath) {\r\n                    self.showValidationMessage(element.message, element.xpath);\r\n                }\r\n            });            \r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /*\r\n    *\tEval validation string, for debug purposes\r\n    */\r\n    evalValidation: function (command) {\r\n        var self = this;\r\n\r\n        if (self.enableDebug && console != undefined) {\r\n            console.log(command);\r\n        }\r\n\r\n        return eval(command);\r\n    },\r\n\r\n    /**\r\n     * Method to add a simple validation message in the validation box\r\n     * @param message\r\n     * @param xpath\r\n     * @param renderId\r\n     */\r\n    showValidationMessageById: function (message, xpath, renderId) {\r\n        this.showValidationMessage(message, xpath, undefined, false, undefined, renderId);\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: Bizagi Rendering Validation controller\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will parse and execute all the validations defined for the form\r\n */\r\n\r\nbizagi.command.controllers.controller.extend(\"bizagi.command.controllers.action\", {}, {\r\n    /* \r\n    *   Constructor\r\n    */\r\n    init: function (form, actions) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(form);\r\n\r\n        // Set a new hash containing all the dependencies subscribing the events\r\n        self.globalDependencies = {};\r\n        self.initialCallFunctions = {};\r\n        self.initialCallFunctionsDeferred = new $.Deferred();\r\n\r\n        // Build actions\r\n        if (actions)\r\n            self.buildActions(actions);\r\n\r\n        // Keep references\r\n        self.actions = actions;\r\n        self.internalSubmitActions = {};\r\n\r\n        // Set initial timer to trigger initial functions using a setTimeout, and distributing them in differente timespans\r\n        self.initialCallTimeout = 25;\r\n        self.initialCallIncrements = 25;\r\n        self.actionsHistory = {};\r\n        self.period = 50;\r\n    },\r\n    /*\r\n    *   Adds an internal submit action to be executed with all the given rules\r\n    */\r\n    processInternalSubmitAction: function (xpath, action) {\r\n        var self = this;\r\n\r\n        // if the action is registered, don't add it again\r\n        // only one internal submit action is allowed per control\r\n        if (self.internalSubmitActions[xpath])\r\n            return;\r\n\r\n        // Add to hash and build it\r\n        self.internalSubmitActions[xpath] = action;\r\n        self.buildAction(action, true);\r\n    },\r\n\r\n    isSummaryOrGlobalForm: function () {\r\n        var self = this;\r\n        var result = false;\r\n\r\n        if (self.form.properties.typeForm === \"SummaryForm\" || self.form.properties.typeForm === \"GlobalForm\") result = true;\r\n        return result;\r\n    },\r\n\r\n    evalClientAction: function (action) {\r\n        var self = this, i = 0, serverCommand = false, command;\r\n        var commands = [].concat(action.commands, action.elseCommands);\r\n        var length = commands.length;\r\n\r\n        for (; i < length; i++) {\r\n            command = commands[i];\r\n            if (!self.isClientAction(command)) {\r\n                serverCommand = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (serverCommand) {\r\n            action.enabled = false;\r\n        }\r\n    },\r\n\r\n    /* Process all given  actions*/\r\n    buildActions: function (actions, dontExecute) {\r\n        var self = this, i, len;\r\n        var hashes = {};\r\n\r\n        var executeOnlyClientActions = self.isSummaryOrGlobalForm();\r\n\r\n        for (i = 0, len = actions.length; i < len; i++) {\r\n            // If action is not \"valid\" we can omit that instruction\r\n            try {\r\n                var action = actions[i];\r\n                var hash = bizagi.util.md5(JSON.stringify(action.conditions));\r\n                var hashC = bizagi.util.md5(JSON.stringify(action.commands));\r\n                if (hashes[hash]) {\r\n                    if (hashes[hash].indexOf(hashC) === -1) {\r\n                        // si la condicion es igual y los comandos diferentes\r\n                        executeOnlyClientActions && self.evalClientAction(action);\r\n                        self.buildAction(action, dontExecute);\r\n                        hashes[hash].push(hashC);\r\n                    }\r\n                } else {\r\n                    executeOnlyClientActions && self.evalClientAction(action);\r\n                    self.buildAction(action, dontExecute);\r\n                    hashes[hash] = [hashC];\r\n                }\r\n            } catch (e) {\r\n                // Handle the exception\r\n                if (e.message !== \"RenderNotFoundException\") {\r\n                    bizagi.logError(\"Action cannot be parsed: \" + e.message, actions[i]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *   Remove all current handlers\r\n    */\r\n    unbindActions: function () {\r\n        var self = this;\r\n\r\n        // Remove all previous handlers\r\n        $.each(self.globalDependencies, function (i, render) {\r\n            render.unbind(\"renderchange.action\");\r\n        });\r\n\r\n        self.globalDependencies = {};\r\n\r\n        // Reset timers and collections\r\n        $.each(self.initialCallFunctions, function (i, handle) {\r\n            clearTimeout(handle);\r\n        });\r\n        self.initialCallFunctions = {};\r\n    },\r\n    /* \r\n    *   Re-execute actions, cleaning the handlers first\r\n    */\r\n    refreshActions: function (newActions) {\r\n        var self = this;\r\n\r\n        self.initialCallTimeout = 25;\r\n        self.initialCallFunctions = {};\r\n\r\n        newActions = newActions || [];\r\n\r\n        // Build the actions again\r\n        self.actions = self.actions.concat(newActions);\r\n        self.buildActions(self.actions, true);\r\n\r\n        // Build internal actions again\r\n        $.each(self.internalSubmitActions, function (_, action) {\r\n            try {\r\n                self.buildAction(action, false);\r\n            } catch (e) {\r\n                // Handle the exception\r\n                if (e.message !== \"RenderNotFoundException\") {\r\n                    bizagi.logError(\"Action cannot be parsed: \" + e.message, action);\r\n                }\r\n            }\r\n        });\r\n    },\r\n    /* Process a single action*/\r\n    buildAction: function (action, dontExecute) {\r\n        var self = this;\r\n        var form = self.form;\r\n        var dependencies = [];\r\n        var dependenciesId = [];\r\n\r\n        var isEnabled = (action.enabled != undefined) ? action.enabled : true;\r\n\r\n        if (!isEnabled) return;\r\n\r\n        // If the condition operator is true, we gotta dig in the actions to check if it modifies a grid\r\n        // To include an auto-dependency, so each time the grid is changed that condition will be executed\r\n        if (action.conditions && action.conditions.operator == \"true\") {\r\n            if (!action.dependencies)\r\n                action.dependencies = [];\r\n            $.each(action.commands, function (_, command) {\r\n                var gridReference = self.searchGridReferenceInXpath(command.xpath);\r\n                if (gridReference) {\r\n                    var dependencyAlreadyAdded = false, j, len;\r\n                    for (j = 0, len = action.dependencies; j < len; j++) {\r\n                        if (action.dependencies[j] == gridReference)\r\n                            dependencyAlreadyAdded = true;\r\n                    }\r\n                    if (!dependencyAlreadyAdded)\r\n                        action.dependencies.push(gridReference);\r\n                }\r\n            });\r\n        }\r\n\r\n        function isValidDependency(type) {\r\n            var notValid = [\"groupedgrid\", \"collectionnavigator\"];\r\n            if (notValid.indexOf(type) === -1) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n\r\n\r\n        // Find dependencies to attach triggers\r\n        if (action.dependencies) {\r\n            for (var i = 0; i < action.dependencies.length; i++) {\r\n                if (typeof action.dependencies[i] != \"undefined\") {\r\n                    var renders = form.getRenders(action.dependencies[i]);\r\n                    if (renders.length === 0) {\r\n                        var renderById = form.getRenderById(action.dependencies[i]);\r\n                        renders = (renderById) ? [renderById] : null;\r\n                    }\r\n\r\n                    if (renders) {\r\n                        $.each(renders, function (_, render) {\r\n                            if ($.inArray(render.properties.id, dependenciesId) < 0) {\r\n                                if (isValidDependency(render.properties.type)) {\r\n                                    dependenciesId.push(render.properties.id);\r\n                                    dependencies.push(render);\r\n                                }\r\n                            }\r\n                        });\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Build anonymous function\r\n        var fn = self.buildFunction(action.conditions, action.commands, action.elseCommands);\r\n\r\n        // Attach handlers\r\n        $.each(dependencies, function (_, render) {\r\n            render.bind(\"renderchange.action\", function (ev, args) {\r\n                args = args || {};\r\n\r\n                // Default changed argument to true\r\n                args.changed = args.changed !== undefined ? args.changed : true;\r\n\r\n                // If a grid action has been performed, try to filter it by column, to avoid execute all grid actions each time                \r\n                if (args.column) {\r\n                    for (var j = 0; j < action.gridColumns.length; j++) {\r\n                        if (args.column == action.gridColumns[j]) {\r\n                            // Call function\r\n                            fn(self, args);\r\n                            return;\r\n                        }\r\n                    }\r\n                } else {\r\n                    // Call function\r\n                    fn(self, args);\r\n                }\r\n            });\r\n\r\n            // Add to global dependencies hash\r\n            self.globalDependencies[render.properties.id] = render;\r\n\r\n            // If render is a grid ... trigger function at this point\r\n            if (render.properties.type === 'grid') {\r\n                dontExecute = true;\r\n\r\n                // Search column dependencies\r\n                action.gridColumns = [];\r\n                self.searchGridColumns(action.conditions, action.gridColumns);\r\n            }\r\n        });\r\n\r\n        // Check if it has to execute\r\n        if (dontExecute)\r\n            return;\r\n\r\n        // Execute the action because it must execute when the page loads with pre-defined value\r\n        // Create an async function to trigger it later\r\n        var asyncFn = function (self) {\r\n\r\n            var guid = Math.guid();\r\n            // Create the timeout\r\n            var handle = setTimeout(function () {\r\n                try {\r\n                    // TODO: Define render to set parameter to \"fn\" function\r\n                    fn(self);\r\n                    delete self.initialCallFunctions[guid];\r\n                } catch (e) {\r\n                }\r\n            }, self.initialCallTimeout);\r\n\r\n            // Save a reference\r\n            self.initialCallFunctions[guid] = handle;\r\n            self.initialCallTimeout += self.initialCallIncrements;\r\n        };\r\n\r\n        // Run it\r\n        asyncFn(self);\r\n    },\r\n    /*\r\n    * Creates the function to execute based on the action metadata\r\n    */\r\n    buildFunction: function (conditions, commands, elseCommands) {\r\n        var self = this;\r\n\r\n        var gridReference = self.searchForGridReference(conditions, commands);\r\n        var bGridDetected = (gridReference != null) ? gridReference : false;\r\n        var sJsCondition = \"\";\r\n        var sJsAction = \"\";\r\n        var sStatement;\r\n        var sJsElseAction = \"\";\r\n        var bAutomaticRestore = elseCommands ? false : true;\r\n        var bCondition = conditions ? true : false;\r\n        var i;\r\n\r\n        // Build Condition\r\n        if (bCondition) {\r\n            sJsCondition += self.buildConditions(conditions, bGridDetected);\r\n        }\r\n\r\n        // Build and execute actions\r\n        for (i = 0; i < commands.length; i++) {\r\n            // Parse command\r\n            var queueAction = self.isServerCommand(commands[i]) ? \"addParallel\" : \"add\";\r\n            var command = self.buildCommand(commands[i], bGridDetected);\r\n\r\n            // Check if command ending with semicolon and remove it\r\n            command = (command.indexOf(\";\") >= 1) ? command.replace(\";\", \"\") : command;\r\n            sJsAction += \"actionQueue.\" + queueAction + \"(function(){return \" + command + \" ;}); \\r\\n\";\r\n\r\n            if (bAutomaticRestore) {\r\n                sJsElseAction += self.buildRestoreCommand(commands[i], bGridDetected);\r\n            }\r\n        }\r\n\r\n        // Build non-automatic else commands\r\n        if (!bAutomaticRestore) {\r\n            sJsElseAction += \"var actionQueue = new bizagiQueue(); \\r\\n\";\r\n            sJsElseAction += \"if (params.render){params.render.startActionExecution();} \\r\\n\";\r\n            for (i = 0; i < elseCommands.length; i++) {\r\n                var queueAction = self.isServerCommand(elseCommands[i]) ? \"addParallel\" : \"add\";\r\n                var elseCommand = self.buildCommand(elseCommands[i], bGridDetected);\r\n                // Check if command ending with semicolon and remove it\r\n                elseCommand = (elseCommand.indexOf(\";\") >= 1) ? elseCommand.replace(\";\", \"\") : elseCommand;\r\n                sJsElseAction += \"actionQueue.\" + queueAction + \"(function(){return \" + elseCommand + \" ;}); \\r\\n\";\r\n            }\r\n            sJsElseAction += \"var execute = actionQueue.execute().always(function(){ \\r\\n\";\r\n            sJsElseAction += \"if (params.render){ params.render.endActionExecution();} \\r\\n });\\r\\n\";\r\n            sJsElseAction += \"self.form.appendWaitForLoader({ promise: execute, create: true });\\r\\n\";\r\n        }\r\n\r\n        // Build final function\r\n        //sStatement = \"var baTmpFn = function(self, i, column){ \\r\\n\";\r\n        sStatement = \"var baTmpFn = function(self, params){ \\r\\n\";\r\n        sStatement += \"params = params || {};\\r\\n\";\r\n        if (bGridDetected) {\r\n            sStatement += \"var i = params.key;\\r\\n\";\r\n            sStatement += \"var column = params.column;\\r\\n\";\r\n        }\r\n        if (bCondition) {\r\n            sStatement += \"if (\" + sJsCondition + \"){ \\r\\n\";\r\n        }\r\n\r\n        // Creates defferreds\r\n        sStatement += \"var actionQueue = new bizagiQueue(); \\r\\n\";\r\n        sStatement += \"if (params.render){params.render.startActionExecution();} \\r\\n\";\r\n        sStatement += sJsAction;\r\n        sStatement += \"var execute = actionQueue.execute().always(function(){ \\r\\n\";\r\n        sStatement += \"if (params.render){ params.render.endActionExecution();} \\r\\n });\\r\\n\";\r\n        sStatement += \"self.form.appendWaitForLoader({ promise: execute, create: true });\\r\\n\";\r\n\r\n        if (bCondition) {\r\n            sStatement += \"\\r\\n } \";\r\n            if (sJsElseAction.length > 0) {\r\n                sStatement += \"else { \\r\\n\" + sJsElseAction + \" }\\r\\n\";\r\n            }\r\n        }\r\n\r\n        sStatement += \"};\\r\\n\";\r\n\r\n\r\n        if (!bGridDetected) {\r\n            sStatement += \"baTmpFn\";\r\n        } else {\r\n            var sGridStatement = \"var baGridTmpFn = function(self, args){ \\r\\n\";\r\n            sGridStatement += \"args = args || {};\\r\\n\";\r\n            sGridStatement += \"\\t var grid = args.render || self.form.getRender('\" + gridReference + \"') || []; \\r\\n\";\r\n            sGridStatement += \"\\t grid = grid.grid ? grid : (self.form.getRender('\" + gridReference + \"') || []); \\r\\n\";\r\n            sGridStatement += \"\\t args.grid = grid; \\r\\n\";\r\n            sGridStatement += \"if(args.surrogateKey === undefined){\\r\\n\";\r\n            sGridStatement += \"\\t var data = grid.getIndexes();\\r\\n\";\r\n            sGridStatement += \"\\t $.each(data, function(i, index) {\\r\\n\";\r\n            sGridStatement += \"\\t\\t args.key = index; \\r\\n\";\r\n            sGridStatement += \"\\t\\t baTmpFn(self, args);\\r\\n\";\r\n            sGridStatement += \"\\t });\\r\\n\";\r\n            sGridStatement += \"} else {\\r\\n\";\r\n            sGridStatement += \"\\t args.key = args.surrogateKey; \\r\\n\";\r\n            sGridStatement += \"\\t\\t baTmpFn(self, args ); \\r\\n\";\r\n            sGridStatement += \"}\\r\\n\";\r\n            sGridStatement += \"};\\r\\n\";\r\n            sStatement += sGridStatement;\r\n            sStatement += \"baGridTmpFn\";\r\n        }\r\n\r\n        // Return interpreted function\r\n        return eval(sStatement);\r\n    },\r\n\r\n    /*\r\n    *   This method checks if a command must be performed by the client, or by the server\r\n    */\r\n    isServerCommand: function (command) {\r\n        var commandType = command.command;\r\n\r\n        return [\"refresh\", \"submit-data\", \"execute-rule\", \"execute-interface\", \"execute-sap\", \"execute-connector\", \"execute-excel-bot\"].includes(commandType);\r\n    },\r\n\r\n    isClientAction: function (command) {\r\n        var commandType = command.command;\r\n\r\n        return [\"background-color\", \"forecolor\", \"visible\", \"required\", \"collapse\", \"set-active\"].includes(commandType);\r\n    },\r\n\r\n    isRecentAction: function (prefix, command) {\r\n        var self = this;\r\n        var tag = prefix + \"@\" + command;\r\n        if (self.actionsHistory[tag] != null) {\r\n            return true;\r\n        }\r\n        $.when(self.runAction(prefix, command)).done(function () {\r\n            delete self.actionsHistory[tag];\r\n            bizagi.log(\"resolve \" + tag);\r\n        });\r\n        return false;\r\n    },\r\n\r\n    runAction: function (prefix, command) {\r\n        var self = this;\r\n        var tag = prefix + \"@\" + command;\r\n        self.actionsHistory[tag] = new $.Deferred();\r\n        setTimeout(self.actionsHistory[tag].resolve, self.period);\r\n        return self.actionsHistory[tag].promise();\r\n    },\r\n    /*\r\n    *   Builds the action JS\r\n    */\r\n    buildCommand: function (command, bGridDetected) {\r\n        var self = this;\r\n\r\n        // Define if a grid has been detected\r\n        bGridDetected = bGridDetected || false;\r\n\r\n        var gridReference = bGridDetected;\r\n\r\n        // Parse argument\r\n        var commandType = command.command;\r\n        var detectedArgumentType = self.detectCommandArgumentType(command.argumentType, commandType);\r\n        var argument = self.buildArgument(command.argument, detectedArgumentType, bGridDetected, command.xpathContext);\r\n        var xpath = command.xpath;\r\n\r\n\r\n        // If a render id is given, we use it with priority over only xpath\r\n        if (command.renderId) {\r\n            xpath = \"id=\" + command.renderId + \"\";\r\n        }\r\n\r\n        // Process grid xpaths\r\n        if (bGridDetected && xpath) {\r\n            xpath = xpath.replaceAll(\"[]\", \"[' + i + ']\");\r\n        }\r\n\r\n        if ((command.xpath && command.xpath.length > 0) || (command.renderId && command.renderId.length > 0)) {\r\n            // Build render command\r\n            switch (commandType) {\r\n                case 'background-color':\r\n                    if (command.controlType === \"activityFlowButton\") {\r\n                        return \"self.changeButtonBackground('\" + xpath + \"', \" + argument + \");\";\r\n                    } else {\r\n                        return \"self.changeRenderBackground('\" + xpath + \"', \" + argument + \");\";\r\n                    }\r\n                    break;\r\n                case 'forecolor':\r\n                    if (command.controlType === \"activityFlowButton\") {\r\n                        return \"self.changeButtonForeground('\" + xpath + \"', \" + argument + \");\";\r\n                    } else {\r\n                        return \"self.changeRenderForeground('\" + xpath + \"', \" + argument + \");\";\r\n                    }\r\n                    break;\r\n                case 'visible':\r\n                    if (command.controlType === \"activityFlowButton\") {\r\n                        return \"self.changeButtonVisibility('\" + xpath + \"', \" + argument + \");\";\r\n                    } else {\r\n                        return \"self.changeRenderVisibility('\" + xpath + \"', \" + argument + \");\";\r\n                    }\r\n                    break;\r\n                case 'readonly':\r\n                    if (command.controlType === \"activityFlowButton\") {\r\n                        return \"self.changeButtonEditability('\" + xpath + \"', \" + argument + \");\";\r\n                    } else {\r\n                        return \"self.changeRenderEditability('\" + xpath + \"', \" + argument + \");\";\r\n                    }\r\n                    break;\r\n                case 'required':\r\n                    return \"self.changeRenderRequired('\" + xpath + \"', \" + argument + \");\";\r\n                    break;\r\n                case 'set-value':\r\n                    // Check specific argument type\r\n                    if (bGridDetected && command.argumentType === \"xpath\" && !!command.xpathContext) {\r\n                        // When we are going to evaluate a xpath is necessary add a xpathcontext if it exist\r\n                        command.argument = command.xpathContext + \".\" + command.argument;\r\n                        argument = self.buildArgument(command.argument, detectedArgumentType, bGridDetected);\r\n                    }\r\n\r\n                    return \"self.changeRenderValue('\" + xpath + \"', \" + argument + \");\";\r\n                    break;\r\n                case 'set-min':\r\n                    return \"self.changeRenderMinValue('\" + xpath + \"', \" + argument + \");\";\r\n                    break;\r\n                case 'set-max':\r\n                    return \"self.changeRenderMaxValue('\" + xpath + \"', \" + argument + \");\";\r\n                    break;\r\n                case 'calculate':\r\n                    return \"self.executeCalculatedField('\" + xpath + \"');\";\r\n                    break;\r\n                case 'submit-value':\r\n                    return \"self.submitRender('\" + xpath + \"', '\" + argument + \"');\";\r\n                    break;\r\n                case 'clean-data':\r\n                    return \"self.cleanRenderData('\" + xpath + \"');\";\r\n                    break;\r\n\r\n                // New Features                                        \r\n                case 'refresh':\r\n                    var commandGridDetected = self.searchForGridReferenceInCommand(command);\r\n\r\n                    if (commandGridDetected) {\r\n                        return \"self.refreshGridCell('\" + xpath + \"', \" + \"'\" + (command.xpathContext || \"\") + \"'\" + \");\";\r\n                    } else {\r\n                        return \"self.refreshControl('\" + xpath + \"', \" + \"'\" + (command.xpathContext || \"\") + \"','\" + commandType + \"');\";\r\n                    }\r\n                    break;\r\n                case 'trigger-click':\r\n                    return \"self.triggerClick('\" + xpath + \"');\";\r\n                    break;\r\n\r\n            }\r\n        } else {\r\n            // Build container command\r\n            switch (commandType) {\r\n                case 'background-color':\r\n                    return \"self.changeContainerBackground('\" + command.container + \"', \" + argument + \");\";\r\n                    break;\r\n                case 'visible':\r\n                    return \"self.changeContainerVisibility('\" + command.container + \"', \" + argument + \");\";\r\n                    break;\r\n                case 'collapse':\r\n                    return \"self.toogleContainer('\" + command.container + \"', \" + !bizagi.util.parseBoolean(argument) + \");\";\r\n                    break;\r\n                case 'set-active':\r\n                    return \"self.changeActiveItem('\" + command.container + \"');\";\r\n                    break;\r\n                case 'readonly':\r\n                    return \"self.changeContainerEditability('\" + command.container + \"', \" + bizagi.util.parseBoolean(argument) + \");\";\r\n                    break;\r\n\r\n                // New Features                                        \r\n                case 'refresh':\r\n                    // Set prepare parameter to multiaction purposes \r\n                    return \"self.refreshContainer('\" + command.container + \"', \" + \"'\" + (command.xpathContext || \"\") + \"'\" + \");\";\r\n                    break;\r\n            }\r\n        }\r\n\r\n        // Global  actions without specific target\r\n        if (commandType === 'submit-data') {\r\n            return \"self.submitFormData();\";\r\n        }\r\n\r\n        if (commandType === 'execute-rule') {\r\n            var ruleObj = command.argument || {};\r\n            var guidRule = \"\";\r\n            try {\r\n                guidRule = JSON.parse(ruleObj).guid;\r\n            } catch (e) {\r\n            }\r\n\r\n            var xpathContext = command.xpathContext || \"\";\r\n            if (bGridDetected) {\r\n                var xpathContextRow = gridReference + \"[id=%s]\";\r\n                return \"self.executeRule('\" + guidRule + \"', printf('\" + xpathContextRow + \"',i) ,'\" + commandType + \"');\";\r\n            } else {\r\n                return \"self.executeRule('\" + guidRule + \"','\" + xpathContext + \"','\" + commandType + \"');\";\r\n            }\r\n        }\r\n\r\n        if (commandType === 'execute-interface') {\r\n            var interfaceObj = command.argument || {};\r\n            var guidInterface = \"\";\r\n\r\n            try {\r\n                guidInterface = JSON.parse(interfaceObj).guid;\r\n            } catch (e) {\r\n            }\r\n\r\n            xpathContext = command.xpathContext || \"\";\r\n            if (bGridDetected) {\r\n                xpathContextRow = gridReference + \"[id=%s]\";\r\n                return \"self.executeInterface('\" + guidInterface + \"', printf('\" + xpathContextRow + \"',i));\";\r\n            } else {\r\n                return \"self.executeInterface('\" + guidInterface + \"','\" + xpathContext + \"');\";\r\n            }\r\n        }\r\n\r\n        if (commandType === 'execute-sap') {\r\n            var connectorObj = command.argument || {};\r\n            var guidsap = \"\";\r\n\r\n            try {\r\n                guidsap = JSON.parse(connectorObj).guid;\r\n            } catch (e) {\r\n            }\r\n\r\n            xpathContext = command.xpathContext || \"\";\r\n            if (bGridDetected) {\r\n                xpathContextRow = gridReference + \"[id=%s]\";\r\n                return \"self.executeSAPConnector('\" + guidsap + \"', printf('\" + xpathContextRow + \"',i));\";\r\n            } else {\r\n                return \"self.executeSAPConnector('\" + guidsap + \"','\" + xpathContext + \"');\";\r\n            }\r\n        }\r\n\r\n        if (commandType === 'execute-connector' || commandType === 'execute-excel-bot') {\r\n            var connectorObj = command.argument || {};\r\n            var guidConnector = \"\";\r\n\r\n            try {\r\n                guidConnector = JSON.parse(connectorObj).guid;\r\n            } catch (e) {\r\n            }\r\n\r\n            xpathContext = command.xpathContext || \"\";\r\n            if (bGridDetected) {\r\n                xpathContextRow = gridReference + \"[id=%s]\";\r\n                return \"self.executeConnector('\" + guidConnector + \"', printf('\" + xpathContextRow + \"',i));\";\r\n            } else {\r\n                return \"self.executeConnector('\" + guidConnector + \"','\" + xpathContext + \"');\";\r\n            }\r\n        }\r\n\r\n        bizagi.log(\"There is no definition for commandType: \" + commandType);\r\n        return \"\";\r\n    },\r\n    /* \r\n    *   Builds the JS command to restore automatically a command when condition is not met\r\n    */\r\n    buildRestoreCommand: function (command, bGridDetected) {\r\n        var xpath = command.xpath;\r\n        var commandType = command.command;\r\n\r\n        // Define if a grid has been detected\r\n        bGridDetected = bGridDetected || false;\r\n\r\n        // If a render id is given, we use it with priority over only xpath\r\n        if (command.renderId) {\r\n            xpath = \"id=\" + command.renderId + \"\";\r\n        }\r\n\r\n        // Process grid xpaths\r\n        if (bGridDetected) {\r\n            xpath = xpath.replaceAll(\"[]\", \"[' + i + ']\");\r\n        }\r\n\r\n        // Build restore action\r\n        if (xpath && xpath.length > 0) {\r\n            return \"self.restoreRender('\" + xpath + \"', '\" + commandType + \"');\";\r\n        } else {\r\n            return \"self.restoreContainer('\" + command.container + \"', '\" + commandType + \"');\";\r\n        }\r\n    },\r\n    /* \r\n    *   Detect the command argument type based on the command type\r\n    */\r\n    detectCommandArgumentType: function (argumentType, commandType) {\r\n        if (argumentType === undefined) {\r\n            return argumentType;\r\n\r\n        } else if (argumentType == \"const\") {\r\n\r\n            if (commandType == 'background-color')\r\n                return 'color';\r\n            if (commandType == 'forecolor')\r\n                return 'color';\r\n            if (commandType == 'visible')\r\n                return 'boolean';\r\n            if (commandType == 'readonly')\r\n                return 'boolean';\r\n            if (commandType == 'required')\r\n                return 'boolean';\r\n            if (commandType == 'set-value')\r\n                return 'text';\r\n            if (commandType == 'collapse')\r\n                return 'boolean';\r\n            if (commandType == 'set-active')\r\n                return 'number';\r\n            if (commandType == 'set-min')\r\n                return 'text';\r\n            if (commandType == 'set-max')\r\n                return 'text';\r\n            if (commandType == 'calculate')\r\n                return undefined;\r\n            if (commandType == 'refresh')\r\n                return undefined;\r\n            if (commandType == 'submit-value')\r\n                return 'json';\r\n\r\n        } else if (argumentType === \"xpath\" || argumentType === \"entity\") {\r\n            return argumentType;\r\n        }\r\n\r\n        bizagi.log(\"There is no definition for commandType: \" + commandType);\r\n        return null;\r\n    },\r\n    /* \r\n    *   Builds the JS command to restore a render when condition is not met\r\n    */\r\n    restoreRender: function (xpath, commandType) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.each(renders, function (i, render) {\r\n            var properties = render.originalProperties;\r\n            var textFormat = properties.textFormat || {};\r\n            if (commandType == 'background-color')\r\n                self.changeRenderBackground(xpath, textFormat.background || '');\r\n            if (commandType == 'forecolor')\r\n                self.changeRenderForeground(xpath, textFormat.color || 'none');\r\n            if (commandType == 'visible')\r\n                self.changeRenderVisibility(xpath, properties.visible != undefined ? properties.visible : true);\r\n            if (commandType == 'readonly')\r\n                self.changeRenderEditability(xpath, properties.editable != undefined ? properties.editable : true);\r\n            if (commandType == 'required')\r\n                self.changeRenderRequired(xpath, properties.required != undefined ? properties.required : false);\r\n            // NOte: Command 6 does not have restoration\r\n        });\r\n    },\r\n    /* \r\n    *   Builds the JS command to restore a container when condition is not met\r\n    */\r\n    restoreContainer: function (containerId, commandType) {\r\n        var self = this;\r\n        var form = self.form;\r\n        var container = form.getContainer(containerId);\r\n        if (container == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showContainerNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        var properties = container.originalProperties;\r\n        if (commandType == 'background-color')\r\n            self.changeContainerBackground(containerId, properties.backgroundColor || 'none');\r\n        if (commandType == 'visible')\r\n            self.changeContainerVisibility(containerId, properties.visible != undefined ? properties.visible : true);\r\n        if (commandType == 'collapse')\r\n            self.toogleContainer(containerId, true);\r\n        // NOte: Command 8 does not have restoration\r\n        if (commandType == 'readonly')\r\n            self.changeContainerEditability(containerId, properties.editable != undefined ? properties.editable : true);\r\n    },\r\n    /* \r\n    *   Sets a new color for the background of the render\r\n    *   Applies also to grid cells!\r\n    */\r\n    changeRenderBackground: function (xpath, argument) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.each(renders, function (i, render) {\r\n            //Detects if is the grid component, and set the desired properties\r\n            if (!self.isGridComponent(render, xpath)) {\r\n                // Normal renders\r\n                $.when(render.ready()).done(function () {\r\n                    render.changeBackgroundColor(argument);\r\n                });\r\n\r\n            } else {\r\n                // Grid renders\r\n                var gridXpath = self.processGridXpath(xpath);\r\n                $.when(render.ready()).done(function () {\r\n                    if (!bizagi.util.isEmpty(gridXpath.index)) {\r\n                        render.changeCellBackgroundColor(gridXpath.index, gridXpath.remainingXpath, argument);\r\n\r\n                    } else {\r\n                        var indexes = render.getIndexes(), j, lenIndex;\r\n                        for (j = 0, lenIndex = indexes.length; j < lenIndex; j++) {\r\n                            render.changeCellBackgroundColor(indexes[j], gridXpath.remainingXpath, argument);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    },\r\n    /*\r\n     *   Sets a new color for the background of the button\r\n     *   Applies also to grid cells!\r\n     */\r\n    changeButtonBackground: function (xpath, argument) {\r\n        var self = this;\r\n        var guid = xpath.substring(3);\r\n        var element = self.form.getButton(guid);\r\n\r\n        element.css(\"background-image\", \"none\");\r\n        element.addClass(\"ui-fast-transition\");\r\n\r\n        if (typeof (element[0]) !== \"undefined\") {\r\n            element[0].style.setProperty(\"background-color\", argument, \"important\");\r\n        }\r\n    },\r\n\r\n    /* \r\n    *   Sets a new color for the foreground of the render\r\n    */\r\n    changeRenderForeground: function (xpath, argument) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.each(renders, function (i, render) {\r\n            //Detects if is the grid component, and set the desired properties\r\n            if (!self.isGridComponent(render, xpath)) {\r\n                // Normal renders\r\n                $.when(render.ready()).done(function () {\r\n                    render.changeColor(argument);\r\n                });\r\n\r\n            } else {\r\n                // Grid renders\r\n                var gridXpath = self.processGridXpath(xpath);\r\n                $.when(render.ready()).done(function () {\r\n                    if (!bizagi.util.isEmpty(gridXpath.index)) {\r\n                        render.changeCellColor(gridXpath.index, gridXpath.remainingXpath, argument);\r\n\r\n                    } else {\r\n                        var indexes = render.getIndexes(), j, lenIndex;\r\n                        for (j = 0, lenIndex = indexes.length; j < lenIndex; j++) {\r\n                            render.changeCellColor(indexes[j], gridXpath.remainingXpath, argument);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    },\r\n    /*\r\n     *   Sets a new color for the foreground of the render\r\n     */\r\n    changeButtonForeground: function (xpath, argument) {\r\n        var self = this;\r\n        var guid = xpath.substring(3);\r\n        var element = self.form.getButton(guid);\r\n        element.css(\"color\", argument, \"!important\");\r\n    },\r\n    /* \r\n    *   Changes the visibility of the render\r\n    */\r\n    changeRenderVisibility: function (xpath, argument) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.each(renders, function (i, render) {\r\n            //Detects if is the grid component, and set the desired properties\r\n            if (!self.isGridComponent(render, xpath)) {\r\n                // Normal renders\r\n                $.when(render.ready()).done(function () {\r\n                    $.when(render.renderingDeferred).done(function () {\r\n                        render.changeVisibility(argument);\r\n                    });\r\n                });\r\n            } else {\r\n                // Grid renders\r\n                var gridXpath = self.processGridXpath(xpath);\r\n                $.when(render.ready()).done(function () {\r\n                    if (!bizagi.util.isEmpty(gridXpath.index)) {\r\n                        render.changeCellVisibility(gridXpath.index, gridXpath.remainingXpath, argument);\r\n\r\n                    } else {\r\n                        var indexes = render.getIndexes(), j, lenIndex;\r\n                        for (j = 0, lenIndex = indexes.length; j < lenIndex; j++) {\r\n                            render.changeCellVisibility(indexes[j], gridXpath.remainingXpath, argument);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    },\r\n    /*\r\n     *   Changes the visibility of the button\r\n     */\r\n    changeButtonVisibility: function (xpath, argument) {\r\n        var self = this;\r\n        var guid = xpath.substring(3);\r\n        var element = self.form.getButton(guid);\r\n        if (bizagi.util.parseBoolean(argument) == true) {\r\n            element.show();\r\n            element.css(\"display\", \"\");\r\n        } else {\r\n            element.hide();\r\n        }\r\n    },\r\n    /* \r\n    *   Changes the editability of the render\r\n    */\r\n    changeRenderEditability: function (xpath, argument) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.each(renders, function (i, render) {\r\n            // execute commands over valid renders\r\n            if (self.isValidRender(render)) {\r\n                //Detects if is the grid component, and set the desired properties\r\n                if (!self.isGridComponent(render, xpath)) {\r\n                    // Normal renders\r\n                    $.when(render.ready()).done(function () {\r\n                        $.when(render.renderingDeferred).done(function () {\r\n                            render.changeEditability(argument);\r\n                        });\r\n                    });\r\n                } else {\r\n                    // Grid renders\r\n                    var gridXpath = self.processGridXpath(xpath);\r\n                    $.when(render.ready()).done(function () {\r\n                        if (!bizagi.util.isEmpty(gridXpath.index)) {\r\n                            render.changeCellEditability(gridXpath.index, gridXpath.remainingXpath, argument);\r\n\r\n                        } else {\r\n                            var indexes = render.getIndexes(), j, lenIndex;\r\n                            for (j = 0, lenIndex = indexes.length; j < lenIndex; j++) {\r\n                                render.changeCellEditability(indexes[j], gridXpath.remainingXpath, argument);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n    },\r\n    /*\r\n     *   Changes the editability of the button\r\n     */\r\n    changeButtonEditability: function (xpath, argument) {\r\n        var self = this;\r\n        var guid = xpath.substring(3);\r\n        var element = self.form.getButton(guid);\r\n        if (bizagi.util.parseBoolean(argument) == true) {\r\n            element.removeAttr(\"disabled\");\r\n        } else {\r\n            element.attr(\"disabled\", \"disabled\");\r\n        }\r\n    },\r\n    /*\r\n     *  trigger Click button\r\n     */\r\n    triggerClick: function (xpath) {\r\n        var self = this;\r\n        var guid = xpath.substring(3);\r\n        var element = self.form.getButton(guid);\r\n        element.trigger(\"click\");\r\n    },\r\n\r\n    /* \r\n    *   Changes the required value of the render\r\n    */\r\n    changeRenderRequired: function (xpath, argument) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        var rendersToEval = [];\r\n\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.each(renders, function (i, render) {\r\n            if (bizagi.util.parseBoolean(render.properties.editable)) {\r\n                rendersToEval.push(render);\r\n            }\r\n        });\r\n\r\n        if (rendersToEval.length === 0) {\r\n            rendersToEval = renders;\r\n        }\r\n\r\n        $.each(rendersToEval, function (i, render) {\r\n            // execute commands over valid renders\r\n            if (self.isValidRender(render)) {\r\n                //Detects if is the grid component, and set the desired properties\r\n                if (!self.isGridComponent(render, xpath)) {\r\n                    // Normal renders\r\n                    $.when(render.ready()).done(function () {\r\n                        $.when(render.renderingDeferred).done(function () {\r\n                            render.changeRequired(argument);\r\n                        });\r\n                    });\r\n                } else {\r\n                    // Grid renders\r\n                    var gridXpath = self.processGridXpath(xpath);\r\n                    $.when(render.ready()).done(function () {\r\n                        if (!bizagi.util.isEmpty(gridXpath.index)) {\r\n                            render.changeCellRequired(gridXpath.index, gridXpath.remainingXpath, argument);\r\n\r\n                        } else {\r\n                            var indexes = render.getIndexes(), j, lenIndex;\r\n                            for (j = 0, lenIndex = indexes.length; j < lenIndex; j++) {\r\n                                render.changeCellRequired(indexes[j], gridXpath.remainingXpath, argument);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    },\r\n    /* \r\n    *   Changes the render internal value\r\n    */\r\n    changeRenderValue: function (xpath, argument) {\r\n        var self = this;\r\n\r\n        if (argument != null && typeof argument === \"object\" ){\r\n            argument = $.extend(argument, {fromAction: true});\r\n        }\r\n\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Eval only an editable render\r\n        var rendersToEval = [];\r\n        $.each(renders, function (i, render) {\r\n            if (render.properties.editable) {\r\n                rendersToEval.push(render);\r\n            }\r\n        });\r\n\r\n        // If no render has been found skip editable validation\r\n        if (rendersToEval.length == 0) {\r\n            $.each(renders, function (i, render) {\r\n                rendersToEval.push(render);\r\n            });\r\n        }\r\n\r\n        $.each(rendersToEval, function (i, render) {\r\n            //Detects if is the grid component, and set the desired properties\r\n            if (!self.isGridComponent(render, xpath)) {\r\n                // Normal renders\r\n                $.when(render.ready()).done(function () {\r\n                    if (render.asyncRenderDeferred) {\r\n                        $.when(render.asyncRenderDeferred).done(function () {\r\n                            render.setDisplayValue(argument);\r\n                        });\r\n                    } else {\r\n                        render.setDisplayValue(argument);\r\n                    }\r\n                });\r\n            } else {\r\n                // Grid renders\r\n                var gridXpath = self.processGridXpath(xpath);\r\n                $.when(render.ready()).done(function () {\r\n                    if (!bizagi.util.isEmpty(gridXpath.index)) {\r\n                        render.changeCellValue(gridXpath.index, gridXpath.remainingXpath, argument);\r\n\r\n                    } else {\r\n                        var indexes = render.getIndexes(), j, lenIndex;\r\n                        for (j = 0, lenIndex = indexes.length; j < lenIndex; j++) {\r\n                            render.changeCellValue(indexes[j], gridXpath.remainingXpath, argument);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    },\r\n    /* \r\n    *   Changes the render minimum value\r\n    */\r\n    changeRenderMinValue: function (xpath, argument) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.each(renders, function (i, render) {\r\n            //Detects if is the grid component, and set the desired properties\r\n            if (!self.isGridComponent(render, xpath)) {\r\n                // Normal renders\r\n                $.when(render.ready()).done(function () {\r\n                    var renderType = render.properties.type;\r\n                    if (renderType === \"number\" || renderType === \"date\" || renderType === \"money\") {\r\n                        render.changeMinValue(argument);\r\n                    }\r\n                });\r\n\r\n            } else {\r\n                // Grid renders\r\n                var gridXpath = self.processGridXpath(xpath);\r\n                $.when(render.ready()).done(function () {\r\n                    if (!bizagi.util.isEmpty(gridXpath.index)) {\r\n                        render.changeCellMinValue(gridXpath.index, gridXpath.remainingXpath, argument);\r\n\r\n                    } else {\r\n                        var indexes = render.getIndexes(), j, lenIndex;\r\n                        for (j = 0, lenIndex = indexes.length; j < lenIndex; j++) {\r\n                            render.changeCellMinValue(indexes[j], gridXpath.remainingXpath, argument);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    },\r\n    /* \r\n    *   Changes the render max value\r\n    */\r\n    changeRenderMaxValue: function (xpath, argument) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.each(renders, function (i, render) {\r\n            //Detects if is the grid component, and set the desired properties\r\n            if (!self.isGridComponent(render, xpath)) {\r\n                // Normal renders\r\n                $.when(render.ready()).done(function () {\r\n                    render.changeMaxValue(argument);\r\n                });\r\n\r\n            } else {\r\n                // Grid renders\r\n                var gridXpath = self.processGridXpath(xpath);\r\n                $.when(render.ready()).done(function () {\r\n                    if (!bizagi.util.isEmpty(gridXpath.index)) {\r\n                        render.changeCellMaxValue(gridXpath.index, gridXpath.remainingXpath, argument);\r\n\r\n                    } else {\r\n                        var indexes = render.getIndexes(), j, lenIndex;\r\n                        for (j = 0, lenIndex = indexes.length; j < lenIndex; j++) {\r\n                            render.changeCellMaxValue(indexes[j], gridXpath.remainingXpath, argument);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    },\r\n    /* \r\n    *   Changes the render max value\r\n    */\r\n    executeCalculatedField: function (xpath) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.each(renders, function (i, render) {\r\n            $.when(render.ready()).done(function () {\r\n                render.runFormula();\r\n            });\r\n        });\r\n    },\r\n    /* \r\n    *   Refresh the render internal value using ajax\r\n    */\r\n    refreshControl: function (xpath, xpathContext, commandType) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath) || self.form.getContainer(xpath);\r\n        var queue = new bizagiQueue();\r\n\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Process matching renders\r\n        $.each(renders, function (i, render) {\r\n            queue.add(render.ready().pipe(function () {\r\n                return render.refreshControl({xpath: xpath, xpathContext: xpathContext});\r\n            }));\r\n        });\r\n\r\n        // Return queue deferred\r\n        return queue.execute();\r\n    },\r\n    /* \r\n    *   Refresh the render internal value using ajax\r\n    */\r\n    refreshContainer: function (containerId, xpathContext) {\r\n        var self = this;\r\n        var container = self.form.getContainer(containerId);\r\n\r\n        if (container == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(containerId);\r\n            }\r\n            return;\r\n        }\r\n\r\n        return $.when(container.ready())\r\n            .pipe(function () {\r\n                return container.refreshContainer({xpathContext: xpathContext});\r\n            });\r\n    },\r\n    /**\r\n     * Refresh a cell of grid\r\n     */\r\n    refreshGridCell: function (xpath, xpathContext) {\r\n        var self = this;\r\n        var queue = new bizagiQueue();\r\n        var def = new $.Deferred();\r\n        var renders = self.getRenders(xpath) || self.form.getContainer(xpath);\r\n\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return null;\r\n        }\r\n\r\n        // Eval only an editable render\r\n        var rendersToEval = [];\r\n        $.each(renders, function (i, render) {\r\n            if (render.properties.editable) {\r\n                rendersToEval.push(render);\r\n                return false;\r\n            }\r\n        });\r\n\r\n        // If no render has been found skip editable validation\r\n        if (rendersToEval.length == 0) {\r\n            $.each(renders, function (i, render) {\r\n                rendersToEval.push(render);\r\n                return false;\r\n            });\r\n        }\r\n\r\n        if (rendersToEval.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // Check xpathContext of the form (addForm or editForm)\r\n        if (self.form && self.form.properties.xpathContext !== \"\") {\r\n            xpathContext = (xpathContext !== \"\") ? self.form.properties.xpathContext + \".\" + xpathContext : self.form.properties.xpathContext;\r\n        }\r\n\r\n        queue.add(def.promise());\r\n\r\n        $.when.apply($, $.map(rendersToEval, function (grid) {\r\n            grid.ready();\r\n        }))\r\n            .done(function () {\r\n                var len = rendersToEval.length;\r\n                var internalQueue = new bizagiQueue();\r\n                for (var i = 0; i < len; i++) {\r\n                    var grid = rendersToEval[i];\r\n\r\n                    var gridXpath = self.processGridXpath(xpath);\r\n                    if (!bizagi.util.isEmpty(gridXpath.index)) {\r\n                        // Process a specific row\r\n                        internalQueue.add(grid.refreshCell({\r\n                            key: gridXpath.index,\r\n                            column: gridXpath.remainingXpath,\r\n                            xpathContext: xpathContext\r\n                        }));\r\n                    } else {\r\n                        // Process all rows\r\n                        var indexes = grid.getIndexes();\r\n                        var lenIndex = indexes.length;\r\n                        for (var j = 0; j < lenIndex; j++) {\r\n                            internalQueue.addParallel(grid.refreshCell({\r\n                                key: indexes[j],\r\n                                column: gridXpath.remainingXpath,\r\n                                xpathContext: xpathContext\r\n                            }));\r\n                        }\r\n                    }\r\n                }\r\n\r\n                $.when(internalQueue.execute())\r\n                    .done(function () {\r\n                        def.resolve();\r\n                    });\r\n            });\r\n\r\n\r\n        return queue.execute();\r\n    },\r\n    /**\r\n     * This function execute action to save all data of render, but\r\n     * the server service dont execute any rule on the server\r\n     */\r\n    submitFormData: function (params) {\r\n        var self = this;\r\n\r\n        // For the submit action we need only the whole form to perform the server action\r\n        var form = self.form;\r\n\r\n        // Process the action\r\n        return $.when(form.ready())\r\n            .pipe(function () {\r\n                return form.submitData(params);\r\n            });\r\n    },\r\n    /**\r\n     * This function send a request to the server to execute a rule\r\n     */\r\n    executeRule: function (rule, xpathContext, commandType) {\r\n        var self = this;\r\n        // For the execute rule  action we need only the whole form to perform the server action\r\n        var form = self.form;\r\n        var prefix = rule + \".\" + xpathContext;\r\n        if (self.isRecentAction(prefix, commandType)) {\r\n            return;\r\n        } else {\r\n            // Process the action\r\n            return $.when(form.ready())\r\n                .pipe(function () {\r\n                    return form.executeRule({rule: rule, xpathContext: xpathContext});\r\n                });\r\n        }\r\n    },\r\n    executeInterface: function (interface, xpathContext) {\r\n        var self = this;\r\n        // For the execute rule  action we need only the whole form to perform the server action\r\n        var form = self.form;\r\n\r\n        // Process the action\r\n        return $.when(form.ready())\r\n            .pipe(function () {\r\n                return form.executeInterface({interface: interface, xpathContext: xpathContext});\r\n            });\r\n    },\r\n\r\n\r\n    executeSAPConnector: function (guidsap, xpathContext) {\r\n        var self = this;\r\n        var form = self.form;\r\n        return $.when(form.ready).pipe(function () {\r\n            return form.executeSAPConnector({guidsap: guidsap, xpathContext: xpathContext});\r\n        });\r\n    },\r\n\r\n    executeConnector: function (guidConnector, xpathContext) {\r\n        var self = this;\r\n        var form = self.form;\r\n        return $.when(form.ready).pipe(function () {\r\n            return form.executeConnector({guidConnector: guidConnector, xpathContext: xpathContext});\r\n        });\r\n    },\r\n    /*\r\n    *   Submit the given render and refresh dependencies after that\r\n    */\r\n    submitRender: function (xpath, argument) {\r\n        var self = this;\r\n        // For the submit action we need only one render to perform the server action\r\n        var render = self.getRender(xpath);\r\n        if (render == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Process the action in the render\r\n        return $.when(render.ready()).pipe(function () {\r\n            return render.submitOnChange();\r\n        });\r\n    },\r\n    /*\r\n    * Cleans current value\r\n    */\r\n    cleanRenderData: function (xpath) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        if (renders == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showRenderNotFoundError(xpath);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.each(renders, function (i, render) {\r\n            //Detects if is the grid component, and set the desired properties\r\n            if (!self.isGridComponent(render, xpath)) {\r\n                // Normal renders\r\n                $.when(render.ready()).done(function () {\r\n                    $.when(render.renderingDeferred).done(function () {\r\n                        render.cleanData();\r\n                        self.changeRenderRequired(xpath, render.properties.required != undefined ? render.properties.required : false);\r\n                    });\r\n                });\r\n            } else {\r\n                // Grid renders\r\n                var gridXpath = self.processGridXpath(xpath);\r\n                $.when(render.ready()).done(function () {\r\n                    if (!bizagi.util.isEmpty(gridXpath.index)) {\r\n                        render.cleanCellData(gridXpath.index, gridXpath.remainingXpath);\r\n                    } else {\r\n                        var indexes = render.getIndexes(), j, lenIndex;\r\n                        for (j = 0, lenIndex = indexes.length; j < lenIndex; j++) {\r\n                            render.cleanCellData(indexes[j], gridXpath.remainingXpath);\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        });\r\n    },\r\n    /* \r\n    *   Changes container background color\r\n    */\r\n    changeContainerBackground: function (containerId, argument) {\r\n        var self = this;\r\n        var form = self.form;\r\n        var container = form.getContainer(containerId);\r\n        if (container == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showContainerNotFoundError(containerId);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.when(container.ready()).done(function () {\r\n            container.changeBackgroundColor(argument);\r\n        });\r\n    },\r\n    /* \r\n    *   Shows or hides a container\r\n    */\r\n    changeContainerVisibility: function (containerId, argument) {\r\n        var self = this;\r\n        var form = self.form;\r\n        var container = form.getContainer(containerId);\r\n        if (container == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showContainerNotFoundError(containerId);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.when(container.ready(true)).done(function () {\r\n            $.when(container.renderingDeferred).done(function () {\r\n                container.changeVisibility(argument);\r\n            });\r\n        });\r\n    },\r\n    /* \r\n    *   Expand or collapse a group container\r\n    */\r\n    toogleContainer: function (containerId, argument) {\r\n        var self = this;\r\n        var form = self.form;\r\n        var container = form.getContainer(containerId);\r\n        if (container == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showContainerNotFoundError(containerId);\r\n            }\r\n            return;\r\n        }\r\n        if (container.properties.type !== \"group\")\r\n            return;\r\n\r\n        $.when(container.ready()).done(function () {\r\n            container.toogleContainer(argument);\r\n        });\r\n    },\r\n    /* \r\n    *   Select a determinate sub-container in a tab or an accordion\r\n    */\r\n    changeActiveItem: function (containerId) {\r\n        var self = this;\r\n        var form = self.form;\r\n        var container = form.getContainer(containerId);\r\n        if (container == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showContainerNotFoundError(containerId);\r\n            }\r\n            return;\r\n        }\r\n        if (container.properties.type === \"tabItem\" && container.loadingDeferred) {\r\n            container.loadingDeferred.resolve();\r\n        }\r\n        $.when(container.ready()).done(function () {\r\n            container.setAsActiveContainer();\r\n        });\r\n    },\r\n    /* \r\n    *   Changes container editability\r\n    */\r\n    changeContainerEditability: function (containerId, argument) {\r\n        var self = this;\r\n        var form = self.form;\r\n        var container = form.getContainer(containerId);\r\n        if (container == null) {\r\n            if (self.Class.THROW_ERROR) {\r\n                self.showContainerNotFoundError(containerId);\r\n            }\r\n            return;\r\n        }\r\n\r\n        $.when(container.ready()).done(function () {\r\n            container.changeEditability(argument);\r\n        });\r\n    },\r\n    /*\r\n    *   Search for grid columns\r\n    */\r\n    searchGridColumns: function (condition, gridColumns) {\r\n        var self = this;\r\n        var column;\r\n        if (typeof (condition) === \"string\" || typeof (condition) === \"boolean\")\r\n            return null;\r\n        if (condition.expressions) {\r\n            var j, lenIndex;\r\n            for (j = 0, lenIndex = condition.expressions.length; j < lenIndex; j++) {\r\n                self.searchGridColumns(condition.expressions[j], gridColumns);\r\n            }\r\n\r\n        } else if (condition.simple) {\r\n            return self.searchGridColumns(condition.simple, gridColumns);\r\n\r\n        } else if (condition.complex) {\r\n            return self.searchGridColumns(condition.complex, gridColumns);\r\n        } else {\r\n            var xpath = condition.xpath || condition.renderId;\r\n            if (xpath) {\r\n                // Check in condition.xpath\r\n                if (xpath && xpath.indexOf(\"[]\") > 0) {\r\n                    column = xpath.substring(xpath.indexOf(\"[]\") + 3);\r\n                    gridColumns.push(column);\r\n                }\r\n\r\n                // Check in argument if argumentType is xpath\r\n                if (condition.argumentType === 'xpath') {\r\n                    if (condition.argument.indexOf(\"[]\") > 0) {\r\n                        column = condition.argument.substring(condition.argument.indexOf(\"[]\") + 3);\r\n                        gridColumns.push(column);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    },\r\n    /**/\r\n\r\n    isGridComponent: function (render, xpath) {\r\n        var renderType = bizagi.util.normalizeType(render.properties.type);\r\n        return (/^grid$/i.test(renderType) && xpath.indexOf('[') >= 0);\r\n    },\r\n    /**/\r\n\r\n    isValidRender: function (render) {\r\n        var notValid = [\"collectionnavigator\"];\r\n\r\n        return notValid.indexOf(render.properties.type) === -1;\r\n    },\r\n\r\n    /**\r\n     * Helper to override the visibility and editability. TODO: Apply to mobile with formButtons\r\n     * @param {} xpath\r\n     * @param {} status\r\n     * @returns {}\r\n     */\r\n    changeFormButtonVisibility: function(xpath, visible) {\r\n        var self = this;\r\n        var form = self.form;\r\n        var guid = xpath.substring(3);\r\n\r\n        var buttons = form.buttons && form.buttons.length ? form.buttons : form.properties.buttons || [];\r\n        var isVisible = bizagi.util.parseBoolean(visible) !== false;\r\n        var index = buttons.findIndex(function(item) { return item.id === guid; });\r\n        var navigation = form.getNavigation();\r\n\r\n        if (index !== -1)\r\n            buttons[index].visible = isVisible;\r\n\r\n        form.buttons = buttons || [];\r\n        navigation.setNavigationButtons(form);\r\n    }\r\n});","/*\r\n*   Name: BizAgi Element Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a base class with common stuff related to all renders and containers\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.element\", {\r\n    ELEMENT_TYPE_CONTAINER: 1,\r\n    ELEMENT_TYPE_RENDER: 2,\r\n    ELEMENT_TYPE_COLUMN: 3\r\n}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Set render factory\r\n        this.renderFactory = params.renderFactory;\r\n\r\n        // Set data service\r\n        this.dataService = params.dataService;\r\n\r\n        // Set reference to parent\r\n        this.parent = params.parent;\r\n\r\n        // Set l10n service\r\n        this.resources = bizagi.localization;\r\n\r\n        // Set the observable element\r\n        this.observableElement = $(\"<div />\");\r\n\r\n        // Set the dispose flag\r\n        this.disposed = false;\r\n\r\n        // Update data\r\n        this.initializeData(params.data);\r\n\r\n        // Define an object to hold the subscribe collection\r\n        this.subscribers = [];\r\n    },\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Set the internal data\r\n        this.properties = {};\r\n        if (data && data.properties) this.properties = data.properties;\r\n\r\n        // Set xpath context\r\n        this.properties.xpathContext = this.getXpathContext();\r\n\r\n        // Set page cache\r\n        this.properties.idPageCache = this.getPageCache();\r\n    },\r\n\r\n    /*\r\n    *   Returns the xpath context of the element\r\n    */\r\n    getXpathContext: function () {\r\n        // By default return parent's xpath context\r\n        // This method is overriden in form container which contains the real xpath context\r\n\r\n        return (this.parent != undefined && typeof this.parent.getXpathContext == \"function\") ? this.parent.getXpathContext() : \"\";\r\n    },\r\n\r\n    /*\r\n    *   Returns the page cache for the current element\r\n    */\r\n    getPageCache: function () {\r\n        // By default return parent's page cache\r\n        // This method is overriden in form container which contains the real page cache\r\n\r\n        return (this.parent != undefined && typeof this.parent.getPageCache == \"function\") ? this.parent.getPageCache() : \"\";\r\n    },\r\n\r\n    /*\r\n    *   Returns the form containing the element\r\n    */\r\n    getFormContainer: function () {\r\n        // By default return parent's form container\r\n        // This method is overriden in form container which returns itself\r\n        if (typeof (this.parent) != \"undefined\")\r\n        return this.parent.getFormContainer();\r\n    },\r\n\r\n\r\n    /*\r\n    *   Returns the mapped resource\r\n    */\r\n    getResource: function (key) {\r\n        return this.resources.getResource(key);\r\n    },\r\n\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () { },\r\n\r\n    /* \r\n    *   Resizes the element \r\n    */\r\n    resize: function (size) {\r\n\r\n    },\r\n\r\n    /*\r\n    *   Focus on the current element\r\n    */\r\n    focus: function () {\r\n\r\n        if (this.properties.required) {\r\n            var layout = $(\"#ui-bizagi-wp-app-render-form-content\");\r\n            // Check if element is visible into scroll\r\n            if (!bizagi.util.isScrolledIntoView(this.element, layout)) {\r\n                $(this.element).attr('tabindex', -1).focus();\r\n            }\r\n            if (this.element) {\r\n                this.element.effect('highlight', 2000);\r\n            }\r\n        }\r\n\r\n        //Check if the element has parent\r\n        if (this.parent && typeof this.parent.focus == 'function') {\r\n            this.parent.focus();\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Publish a global event that the facade will replicate\r\n    */\r\n    triggerGlobalHandler: function (eventType, data) {\r\n        if (this.disposed) return null;\r\n        if (this.parent) return this.parent.triggerGlobalHandler(eventType, data);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Triggers an event inside the control\r\n    */\r\n    trigger: function (eventType, data) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.trigger(eventType, data);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Triggers an event handler inside the control\r\n    */\r\n    triggerHandler: function (eventType, data) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.triggerHandler(eventType, data);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Binds to an event\r\n    */\r\n    bind: function (eventType, fn) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.bind(eventType, fn);\r\n        this.subscribers.push({ event: eventType });\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Un-binds to an event\r\n    */\r\n    unbind: function (eventType, fn) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.unbind(eventType, fn);\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Binds a one time event\r\n    */\r\n    one: function (eventType, fn) {\r\n        if (this.disposed) return null;\r\n        if (this.observableElement) return this.observableElement.one(eventType, fn);\r\n        this.subscribers.push({ event: eventType });\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Return the rendered element\r\n    */\r\n    getRenderedElement: function () { },\r\n\r\n    /*\r\n    *   Get current rendering mode\r\n    */\r\n    getMode: function () {\r\n        if (this.parent) return this.parent.getMode();\r\n    },\r\n\r\n    /*\r\n    *   Get current rendering params\r\n    */\r\n    getParams: function () {\r\n        if (this.parent) return this.parent.getParams();\r\n    },\r\n\r\n    /*\r\n    * Get current form type (ex. queryform, form)\r\n    */\r\n    getFormType: function () {\r\n        var self = this;\r\n\r\n        var form = self.getFormContainer();\r\n        return form.properties.type || \"form\";\r\n    },\r\n\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () { },\r\n\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready to save\r\n    */\r\n    isReadyToSave: function () { },\r\n\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Dispose the class so we can detect when a class is invalid already\r\n    */\r\n    dispose: function () {\r\n        var self = this;\r\n        self.disposed = true;\r\n\r\n        setTimeout(function () {\r\n            if (self.subscribers != null) {\r\n                // Remove all subcriptions\r\n                $.each(self.subscribers, function (i, item) {\r\n                    self.unbind(item.event);\r\n                });\r\n            }\r\n            delete self.subscribers;\r\n\r\n            if (self.observableElement) self.observableElement.off();\r\n            bizagi.util.dispose(self);\r\n        }, bizagi.override.disposeTime || 50);\r\n    },\r\n\r\n    /*\r\n    *   Check if the current object is disposed\r\n    */\r\n    isDisposed: function () {\r\n        return this.disposed;\r\n    },\r\n\r\n    /*\r\n    *   This method process the error or alert messages coming from the server, and adds them to the validation controller\r\n    */\r\n    processFailMessage: function(message) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\r\n\r\n        if (message.errorType === \"CustomMessageException\") {\r\n            // Clear previous validations\r\n            form.validationController.clearValidationMessages();\r\n            var error = bizagi.localization.getResource(message.message);\r\n            form.validationController.showErrorMessage(error);\r\n        } else if (message.errorType === \"InvalidCaseStateException\") {\r\n            var params = form.getParams()\r\n\r\n            form.validationController.clearValidationMessages();\r\n           \r\n            // Redirection Here\r\n            form.container.trigger(\"routing\", { idCase: params.idCase || bizagi.context.idCase });\r\n        } else {\r\n            var message = message || {};\r\n            message = typeof (message) == \"string\" ? JSON.parse(message) : message;\r\n            var type = message.type || \"error\";\r\n            var code = message.code || \"code\";\r\n            message = message.responseText || (message.message || message);\r\n\r\n            // Omit processing when the ajax didn't process\r\n            if (type === \"not-processed\") return;\r\n            if (type === \"not-shown\") return;\r\n            if (isOfflineForm && code === \"AUTH_ERROR\") return;\r\n\r\n            // Clear previous validations\r\n            form.validationController.clearValidationMessages();\r\n            if (type == \"alert\") {\r\n                form.validationController.showAlertMessage(message);\r\n            } else {\r\n                form.validationController.showErrorMessage(message);\r\n            }\r\n        }\r\n\r\n        return message;\r\n    },\r\n\r\n    /*\r\n    *   Sets a waiting overlay above the current element\r\n    */\r\n    startLoading: function () {  /* Override in implementations */ },\r\n\r\n    /*\r\n    *   Removes the waiting overlay\r\n    */\r\n    endLoading: function () { /* Override in implementations */ },\r\n\r\n    /**\r\n    *   Prepare control to remove it from the render, that allows to\r\n    *   clean all elements of the control or to do any stuff before to remove\r\n    */\r\n    beforeToRefresh: function () { /* Implement in each render and container if you need */ },\r\n\r\n    /**\r\n    *   Run before that the control has been refreshed\r\n    */\r\n    afterToRefresh: function () { /* Implement in each render and container if you need */ }\r\n});\r\n\r\n","/*\r\n *   Name: BizAgi Container Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define a base container class with common stuff related to all containers\r\n */\r\n\r\nbizagi.rendering.element.extend(\"bizagi.rendering.container\", {\r\n    TYPE_QUERY_FORM: \"queryForm\"\r\n}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Set defaults\r\n        var properties = self.properties;\r\n        properties.uniqueId = Math.ceil(Math.random() * 1000000);\r\n        properties.editable = (typeof properties.editable != \"undefined\") ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.visible = (typeof properties.visible != \"undefined\") ? bizagi.util.parseBoolean(properties.visible) : true;\r\n\r\n        // Override orientation from parent if not set\r\n        properties.orientation = properties.orientation || \"auto\";\r\n\r\n        // Save original properties\r\n        this.originalProperties = JSON.parse(JSON.encode(properties));\r\n\r\n        // Create children\r\n        this.children = [];\r\n        this.childrenHash = {};\r\n\r\n        if (data.elements) {\r\n            $.each(data.elements, function(i, element) {\r\n                if (element.render) {\r\n                    self.createRenderElement(element);\r\n                } else if (element.container) {\r\n                    self.createContainerElement(element);\r\n                } else if (element.form) {\r\n                    self.createFormElement(element);\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Creates a render element\r\n    */\r\n    createRenderElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var originalElement;\r\n\r\n        // Replicate editable property when container is not editable\r\n        if (properties.editable == false) {\r\n            element.render.properties.editable = properties.editable;\r\n            if (element.render.properties.type == \"grid\")\r\n                element.render.properties.inlineEdit = false;\r\n        }\r\n\r\n        // Replicate required property when container is not required\r\n        if (properties.required === false) {\r\n            element.render.properties.required = properties.required;\r\n        }\r\n\r\n        //clone originalElement to apply duplicate render properties correctly\r\n        if (element.render.properties.retype == \"duplicate\") {\r\n            originalElement = bizagi.clone(element);\r\n        }\r\n\r\n        var render = self.renderFactory.getRender({\r\n            type: element.render.properties.type,\r\n            data: element.render,\r\n            dataService: self.dataService,\r\n            parent: self,\r\n            mode: self.getMode()\r\n        });\r\n\r\n        // Add to children\r\n        self.children.push(render);\r\n\r\n        // Check for duplicate\r\n        if (element.render.properties.retype == \"duplicate\") {\r\n            self.processDuplicateRender(render, originalElement);\r\n        }\r\n\r\n        //TODO: at this point not posible add the retype double at this point not exist input\r\n\r\n        // Register in form container\r\n        self.getFormContainer().registerRender(render);\r\n    },\r\n    /*\r\n    *   Creates a container element\r\n    */\r\n    createContainerElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Replicate editable property when container is not editable\r\n        if (properties.editable == false) {\r\n            element.container.properties.editable = properties.editable;\r\n        }\r\n\r\n        // Replicate required property when container is not required\r\n        if (properties.required === false) {\r\n            element.container.properties.required = properties.required;\r\n        }\r\n\r\n        var container = self.renderFactory.getContainer({\r\n            type: element.container.properties.type,\r\n            data: element.container,\r\n            parent: self,\r\n            dataService: self.dataService,\r\n            mode: self.getMode(),\r\n            isDesign: self.getMode() === \"design\"\r\n        });\r\n\r\n        self.children.push(container);\r\n\r\n        // Register in form container\r\n        self.getFormContainer().registerRender(container);\r\n    },\r\n    /*\r\n    *   Creates a form element\r\n    */\r\n    createFormElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Replicate editable property when container is not editable\r\n        if (properties.editable == false) {\r\n            element.container.properties.editable = properties.editable;\r\n        }\r\n\r\n        var form = self.renderFactory.getContainer({\r\n            type: (element.form.properties.type || \"form\"),\r\n            data: element.form,\r\n            parent: self,\r\n            dataService: self.dataService,\r\n            mode: self.getMode()\r\n        });\r\n        self.children.push(form);\r\n    },\r\n    /* \r\n    *   Gets the current container \r\n    */\r\n    getElement: function () {\r\n        var self = this;\r\n        return self.container;\r\n    },\r\n    /* \r\n    *   Gets a collection for all elements matching a type \r\n    */\r\n    getElementsByType: function (type, elements) {\r\n        elements = elements || [];\r\n        var self = this;\r\n\r\n        // Iterate through elements\r\n        $.each(self.children, function (i, child) {\r\n            if (child.properties.type == type) {\r\n                elements.push(child);\r\n            }\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.getElementsByType(type, elements);\r\n            }\r\n        });\r\n\r\n        return elements;\r\n    },\r\n    /*\r\n    *   Process renders with duplicate property\r\n    */\r\n    processDuplicateRender: function (render, element) {\r\n        var self = this;\r\n        var clonedElement = JSON.parse(JSON.encode(element.render));\r\n\r\n        // Changes properties\r\n        clonedElement.properties.displayName = clonedElement.properties.displayName + \" \" + self.getResource(\"render-text-duplicate-label-sufix\");\r\n        clonedElement.properties.xpath = clonedElement.properties.xpath + \".clone\";\r\n        clonedElement.properties.isClone = true;\r\n\r\n        // Creates clone\r\n        var clone = self.renderFactory.getRender({\r\n            type: clonedElement.properties.type,\r\n            data: clonedElement,\r\n            parent: self,\r\n            mode: self.getMode()\r\n        });\r\n\r\n        // Associates with main render\r\n        render.cloneRender = clone;\r\n\r\n        // Add to collection\r\n        self.children.push(clone);\r\n    },\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () {\r\n        return bizagi.rendering.element.ELEMENT_TYPE_CONTAINER;\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    */\r\n    render: function () {\r\n        var self = this,\r\n            mode = self.getMode(),\r\n            result;\r\n\r\n        // Render container\r\n        result = self.internalRender();\r\n\r\n        // Apply container defaults\r\n        self.applyContainerDefaults();\r\n\r\n        // Add container id\r\n        result.attr(\"data-container-id\", self.properties.id);\r\n\r\n        //Add container tag property\r\n        if (self.properties.tag) {\r\n            result.attr(\"data-tag\", self.properties.tag);\r\n        }\r\n\r\n        //Add class to the requested form, to specify if is add form, edit form, or detail form\r\n        if (self.params)\r\n            if (self.params.requestedForm)\r\n                result.addClass(self.params.requestedForm);\r\n\r\n        return result;\r\n    },\r\n    /*\r\n    *   Internal  rendering\r\n    */\r\n    internalRender: function () {\r\n        var self = this;\r\n\r\n        // Render the container\r\n        var html = self.renderContainerHtml();\r\n\r\n        // Convert html string to jquery object\r\n        var container = self.container = $(html);\r\n\r\n        // Post-render\r\n        self.postRenderContainer(container);\r\n\r\n        return self.container;\r\n    },\r\n    /*\r\n    *   Renders container html\r\n    */\r\n    renderContainerHtml: function () {\r\n        var self = this;\r\n        // Start rendering deferred\r\n        self.renderingDeferred = self.renderingDeferred || new $.Deferred();\r\n\r\n        return this.renderContainer();\r\n    },\r\n    /*\r\n    *   Check if the jquery element is ready or not\r\n    */\r\n    isRendered: function () {\r\n        var self = this;\r\n        if (!self.renderingDeferred)\r\n            return false;\r\n        return self.renderingDeferred.promise();\r\n    },\r\n    /*\r\n    *   Return the rendered element\r\n    */\r\n    getRenderedElement: function () {\r\n        if (bizagi.util.isEmpty(this.container))\r\n            alert(\"container hasn't been rendered!\");\r\n\r\n        return this.container;\r\n    },\r\n    /* \r\n    *   Set container defaults\r\n    */\r\n    applyContainerDefaults: function () {\r\n        var self = this,\r\n                properties = self.properties;\r\n\r\n        // Set customizations\r\n        if (properties.backgroundColor)\r\n            self.changeBackgroundColor(properties.backgroundColor);\r\n\r\n        // Set editability and visiblity\r\n        if (!properties.visible)\r\n            self.changeVisibility(properties.visible);\r\n    },\r\n    /* \r\n    *  Changes background color \r\n    */\r\n    changeBackgroundColor: function (color) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        properties.backgroundColor = color;\r\n\r\n        // Iterate through elements\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.changeBackgroundColor(color);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                child.changeBackgroundColor(color);\r\n            }\r\n        });\r\n    },\r\n    /* \r\n    *   Hides / Show container \r\n    */\r\n    changeVisibility: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Store in properties\r\n        properties.visible = bizagi.util.parseBoolean(argument);\r\n\r\n        // Hide - show the render\r\n        if (properties.visible) {\r\n            self.container.show();\r\n\r\n        } else {\r\n            self.container.hide();\r\n        }\r\n    },\r\n    /* Changes editability */\r\n    changeEditability: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Store in properties\r\n        properties.editable = bizagi.util.parseBoolean(argument);\r\n\r\n        // Iterate through elements\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.changeEditability(argument);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                child.changeEditability(argument);\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Replaces a <x/> tag in the container for the specified \"replace\" element\r\n    */\r\n    replaceTag: function (container, tag, replace) {\r\n        bizagi.util.replaceSelector(container, tag, replace);\r\n    },\r\n    /*\r\n    *   Replaces a <children/> tag in the container for the specified \"replace\" element\r\n    */\r\n    replaceChildrenTag: function (container, replace) {\r\n        this.replaceTag(container, \".children\", replace);\r\n    },\r\n    /*\r\n    *   Replaces a {{children}} string in the specified element\r\n    */\r\n    replaceChildrenHtml: function (html, replace) {\r\n        return html.replace(\"{{children}}\", replace);\r\n    },\r\n    /*\r\n    *   Template method to render the container layout, returns a string with all the builded html,\r\n    *   must be overriden in all children\r\n    */\r\n    renderContainer: function () {\r\n    },\r\n    /*\r\n    *   Template method to process each jquery object\r\n    *   must be overriden in each container\r\n    */\r\n    postRenderContainer: function (container) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n\r\n        // Resolve rendering deferred\r\n        if (self.renderingDeferred)\r\n            self.renderingDeferred.resolve();\r\n\r\n        // Process children elements\r\n        self.container = container;\r\n        self.executeChildrenPostRender(container);\r\n\r\n        if (mode == \"execution\") {\r\n            // Apply handlers\r\n            self.configureHandlers();\r\n            self.applyPlaceHolderPolyfill();\r\n\r\n        }\r\n        if (mode == \"design\") {\r\n            // Configure view\r\n            self.configureDesignView();\r\n        }\r\n        if (mode == \"layout\") {\r\n            // Configure view\r\n            self.configureDesignView();\r\n            self.configureLayoutView();\r\n        }\r\n    },\r\n\r\n    applyPlaceHolderPolyfill: function () {\r\n        var self = this;\r\n        var config = window.placeHolderConfig || {};\r\n        if (('placeholder' in $('<input>')[0] || 'placeHolder' in $('<input>')[0]) && !config.forceApply) {\r\n            // don't run the polyfill when the browser has native support\r\n            return;\r\n        }\r\n        Placeholders.enable();\r\n    },\r\n    /*\r\n    *   Process container children\r\n    */\r\n    executeChildrenPostRender: function (container) {\r\n        var self = this;\r\n        var childrenElements = container.children();\r\n\r\n        $.each(childrenElements, function (i, childElement) {\r\n            childElement = $(childElement);\r\n            var id = Number(childElement.data(\"unique-id\"));\r\n            if (id) {\r\n                var child = self.childrenHash[id];\r\n                if (child) {\r\n                    var type = child.getElementType();\r\n                    if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER)\r\n                        child.postRenderElement(childElement);\r\n                    if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER)\r\n                        child.postRenderContainer(childElement);\r\n                }\r\n            } else {\r\n                self.executeChildrenPostRender(childElement);\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the container's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour when rendering in design mode\r\n    */\r\n    configureDesignView: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the container's behaviour to show layout\r\n    */\r\n    configureLayoutView: function () {\r\n\r\n    },\r\n    /**\r\n    *   Renders all children html\r\n    */\r\n    renderChildrenHtml: function () {\r\n        var self = this;\r\n        var temp = \"\";\r\n\r\n        $.each(self.children, function (i, child) {\r\n            var type = child.getElementType();\r\n            if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER)\r\n                temp += child.renderElement();\r\n            if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER)\r\n                temp += child.renderContainerHtml();\r\n            self.childrenHash[child.properties.uniqueId] = child;\r\n        });\r\n\r\n        return temp;\r\n    },\r\n    /*\r\n    *   Iterate through all the renders in the container and fills the hashtable\r\n    */\r\n    collectRenderValues: function (renderValues) {\r\n        var self = this;\r\n        if (self.children) {\r\n            $.each(self.children, function (i, child) {\r\n                if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                    // Go though container\r\n                    child.collectRenderValues(renderValues);\r\n\r\n                } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                    // Check if the render can be sent to the server\r\n                    if (child.canBeSent()) {\r\n                        child.collectData(renderValues);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Iterate through all the renders and check if has changed\r\n    */\r\n    hasChanged: function (result) {\r\n        var self = this;\r\n        result = result || [];\r\n\r\n        if (!result.length) {\r\n            if(self.children){\r\n                $.each(self.children, function (i, child) {\r\n                    if (result.length || child.hasChanged(result)) {\r\n                        return false;\r\n                    }\r\n                });\r\n            }\r\n        } else {\r\n            return result;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *    Creates a json array parameters to search result\r\n    */\r\n    collectRenderValuesQueryForm: function (renderValues) {\r\n        var self = this;\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                // Go though container\r\n                child.collectRenderValuesQueryForm(renderValues);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                // Check if the render can be sent to the server\r\n                if (child.canBeSentQueryForm()) {\r\n                    child.collectDataQueryForm(renderValues);\r\n                }\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Gets the first child\r\n    */\r\n    firstChild: function () {\r\n        return this.children[0];\r\n    },\r\n    /*\r\n    *   Method to find all the renders matching an xpath inside the container\r\n    */\r\n    getRenders: function (xpath, renders) {\r\n        var self = this;\r\n\r\n        renders = renders || [];\r\n\r\n        // Remove [] filters for grid columns xpaths to fully identify the grid as the xpath target\r\n        if (xpath.indexOf(\"[\") > 0) {\r\n            xpath = xpath.substring(0, xpath.indexOf(\"[\"));\r\n        }\r\n\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                // Go though container\r\n                child.getRenders(xpath, renders);\r\n\r\n            } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                if (xpath == child.properties.xpath) {\r\n                    renders.push(child);\r\n                }\r\n            }\r\n        });\r\n\r\n        return renders;\r\n    },\r\n    /* \r\n    *   Gets the first editable render \r\n    */\r\n    getRender: function (xpath) {\r\n        var self = this;\r\n        var renders = self.getRenders(xpath);\r\n        var result = null;\r\n        $.each(renders, function (i, render) {\r\n            if (render.properties.editable) {\r\n                if (result == null)\r\n                    result = render;\r\n            }\r\n        });\r\n\r\n        // if no render has been found, skip editable condition\r\n        if (result == null) {\r\n            $.each(renders, function (i, render) {\r\n                result = render;\r\n            });\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n     *   Gets all renders by xpath\r\n     */\r\n    getRendersByXpath: function (xpath) {\r\n        var self = this;\r\n        return self.getRenders(xpath);\r\n    },\r\n\r\n    /* \r\n    *   Gets a container by the id\r\n    */\r\n    getContainer: function (id) {\r\n        var self = this;\r\n\r\n        if (self.properties.id == id)\r\n            return this;\r\n\r\n        var result;\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                // Go though container\r\n                var o = child.getContainer(id);\r\n                if (o != null) {\r\n                    result = o;\r\n                    return false;\r\n                }\r\n            }\r\n        });\r\n\r\n        return result;\r\n    },\r\n    /* \r\n    *   Validate all renders in the container \r\n    */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n\r\n        $.each(self.children, function (i, child) {\r\n            if (child.properties.visible) {\r\n                if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                    // Go though container\r\n                    child.isValid(invalidElements);\r\n\r\n                } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                    // Go to the render\r\n                    child.isValid(invalidElements);\r\n                }\r\n            }\r\n        });\r\n\r\n        return invalidElements.length == 0;\r\n    },\r\n\r\n        /*\r\n       *   Validate all grids in the container\r\n       */\r\n    hasValidGrids: function (invalidElements) {\r\n        var self = this;\r\n\r\n        $.each(self.children, function (i, child) {\r\n            if (child.properties.visible) {\r\n                if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                    // Go though container\r\n                    child.hasValidGrids(invalidElements);\r\n\r\n                } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER && typeof (child.grid) != \"undefined\") {\r\n                    // Go to the render\r\n                    child.isValid(invalidElements);\r\n                }\r\n            }\r\n        });\r\n\r\n        return invalidElements.length == 0;\r\n    },\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n        return $.when(self.parent.ready(), self.isRendered());\r\n    },\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready to save\r\n    */\r\n    isReadyToSave: function () {\r\n        var self = this;\r\n        var childrenPromises = $.map(self.children, function (child) {\r\n            return child.isReadyToSave();\r\n        });\r\n        return $.when.apply($, childrenPromises);\r\n    },\r\n    /*  \r\n    *   Return the current focuses container\r\n    */\r\n    getFocus: function () {\r\n        var self = this;\r\n        var focus;\r\n        $.each(self.children, function (i, child) {\r\n            if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                var result = child.getFocus();\r\n                if (!bizagi.util.isEmpty(result)) {\r\n                    focus = result;\r\n                }\r\n            }\r\n        });\r\n\r\n        return focus;\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n\r\n        if (form) {\r\n            return form.getCustomHandlers();\r\n        }\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandler: function (key) {\r\n        var self = this;\r\n        var customHandlers = self.getCustomHandlers();\r\n\r\n        if (customHandlers) {\r\n            return customHandlers[key];\r\n        }\r\n    },\r\n    /*\r\n    *   Dispose the class so we can detect when a class is invalid already\r\n    */\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        // Iterate through elements\r\n        setTimeout(function () {\r\n            if (self.children) {\r\n                $.each(self.children, function (i, child) {\r\n                    child.dispose();\r\n                });\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    },\r\n\r\n    /*\r\n    *   Refresh the current container\r\n    */\r\n    refreshContainer: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Start waiting\r\n        self.startLoading();\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh();\r\n\r\n        // Call the service\r\n        return $.when(self.dataService.multiaction().refreshControl({\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: (properties.xpathContext || args.xpathContext),\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (data) {\r\n\r\n            if (!self.isDisposed()) {\r\n\r\n                // Unregister children of container to replace in hash self.rendersById and self.rendersByXpath\r\n                self.unregisterChildren();\r\n                delete self.children;\r\n                delete self.childrenHash;\r\n\r\n                self.getFormContainer().removeActions();\r\n\r\n                // update editable\r\n                if (self.properties.editable === false) {\r\n                    data.container && data.container.properties ? (data.container.properties.editable = false) : \"\";\r\n                }\r\n\r\n                // Update the data\r\n                self.initializeData(data.container);\r\n\r\n                // Render the container again\r\n                var currentContainer = self.container;\r\n                var result = self.render();\r\n\r\n                if (self.properties.type == \"tabItem\") {\r\n                    $(result).addClass(\"childrenActive\");\r\n                }\r\n\r\n                currentContainer.replaceWith(result);\r\n\r\n                // Rebind the actions\r\n                var actions = data.container && data.container.actions ? data.container.actions : [];\r\n                self.getFormContainer().refreshActions(actions);\r\n\r\n                self.triggerChildrenActions();\r\n\r\n                // Execute personalized stuff after to refresh it\r\n                self.afterToRefresh();\r\n\r\n            }\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n\r\n        }).always(function () {\r\n            self.endLoading();\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Refresh the current container\r\n     */\r\n    refreshDesignContainer: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh(data);\r\n        //self.setActiveTab(data.elements);\r\n\r\n        $.extend(data.properties, {\r\n            editable: properties.editable,\r\n            contexttype: (properties.contexttype || \"\"),\r\n            idPageCache: properties.idPageCache,\r\n            idRender: properties.id,\r\n            messageValidation: properties.messageValidation,\r\n            uniqueId: properties.uniqueId,\r\n            visible:properties.visible,\r\n            xpath: properties.xpath,\r\n            mode: \"design\",\r\n            xpathContext: properties.xpathContext || \"\"\r\n        });\r\n\r\n\r\n        if (!self.isDisposed()) {\r\n            // Unregister children of container to replace in hash self.rendersById and self.rendersByXpath\r\n            self.unregisterChildren();\r\n            delete self.children;\r\n            delete self.childrenHash;\r\n\r\n            // update editable\r\n            if (self.properties.editable === false) {\r\n                data.container && data.container.properties ? (data.container.properties.editable = false) : \"\";\r\n            }\r\n\r\n            // Update the data\r\n            self.initializeData(data.container);\r\n\r\n            // Render the container again\r\n            var currentContainer = self.container;\r\n            var result = self.render();\r\n\r\n            if (self.properties.type == \"tabItem\") {\r\n                $(result).addClass(\"childrenActive\");\r\n            }\r\n\r\n            currentContainer && currentContainer.replaceWith(result);\r\n\r\n            // Execute personalized stuff after to refresh it\r\n            self.afterToRefresh();\r\n        }\r\n    },\r\n\r\n    beforeToRefresh: function () {\r\n        var self = this;\r\n\r\n        // Call beforeToRefresh of each children\r\n        for (var i = 0; i < self.children.length; i++) {\r\n            self.children[i].beforeToRefresh();\r\n        }\r\n    },\r\n\r\n    afterToRefresh: function () {\r\n        var self = this;\r\n\r\n        // Call beforeToRefresh of each children\r\n        for (var i = 0; i < self.children.length; i++) {\r\n            self.children[i].afterToRefresh();\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Re-execute children actions\r\n    */\r\n    triggerChildrenActions: function () {\r\n        var self = this;\r\n\r\n        var form = self.getFormContainer();\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n            var type = child.getElementType();\r\n\r\n            if (type === bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.triggerChildrenActions();\r\n            }\r\n            else if (type === bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                child.triggerRenderChange({ changed: false });\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /*\r\n    * register actions container\r\n    */\r\n    registerActions: function (actions) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n\r\n        if (actions) {\r\n            form.actionController.buildActions(actions);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * unregister children container\r\n    */\r\n    unregisterChildren: function () {\r\n        var self = this;\r\n\r\n        var form = self.getFormContainer();\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n            var type = child.getElementType();\r\n\r\n            if (type === bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                child.unregisterChildren();\r\n            }\r\n            else if (type === bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                form.unregisterRender(child);\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    * Replace child\r\n    */\r\n    replaceChild: function (element) {\r\n        var self = this;\r\n\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n\r\n            if (child.properties.uniqueId == element.properties.uniqueId) {\r\n                children.splice(i, 1);\r\n                children.splice(i, 0, element);\r\n                break;\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    * Gets child\r\n    */\r\n    getChildById: function (id) {\r\n\r\n        var self = this;\r\n\r\n        var children = self.children;\r\n\r\n        for (var i = 0, l = children.length; i < l; i++) {\r\n            var child = children[i];\r\n\r\n            if (child.properties.id == id) {\r\n                return child;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Form Container Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a form container class that defines basic stuff regarding the device\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.form\", {}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n        var data = params.data;\r\n        var device = bizagi.util.detectDevice();\r\n\r\n        // Creates a hashtable to maintain references by id\r\n        self.rendersById = {};\r\n        self.rendersByXpath = {};\r\n        self.rendersByType = {};\r\n\r\n        // Set page cache id\r\n        self.idPageCache = data.pageCacheId;\r\n\r\n        // Set default mode\r\n        self.mode = params.mode || \"execution\";\r\n        self.focus = params.focus;\r\n\r\n        // Set rendering params\r\n        self.params = params;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Define confirmation message \r\n        var message = \"\";\r\n\r\n        if (device !== \"desktop\") {\r\n            message = this.getResource(\"render-form-user-confirmation-message\").replace(/<br(\\/| \\/)>/g, \"\\n\");\r\n        } else {\r\n            message = this.getResource(\"render-form-user-confirmation-message\");\r\n        }\r\n\r\n        // Default properties\r\n        var properties = self.properties;\r\n        properties.sessionId = data.sessionId;\r\n        properties.displayAsReadOnly = bizagi.util.parseBoolean(data.displayAsReadOnly) || false;\r\n        properties.userConfirmationMessage = properties.userConfirmationMessage || message;\r\n        properties.orientation = properties.orientation || \"ltr\";\r\n        properties.hasRule = bizagi.util.parseBoolean(properties.hasRule) || false;\r\n        properties.contexttype = params.contexttype || \"\";\r\n        properties.paramsRender = params.paramsRender || {};\r\n        properties.processPath = params.data.processPath ? params.data.processPath.replaceAll(\"|/|\", \"  &rsaquo;  \") : \"\";\r\n        properties.breadCrumb = params.data.processPath ? params.data.processPath.split(\"|/|\") : [];\r\n\r\n        // Set validations & actions\r\n        this.validations = data.validations;\r\n        this.actions = data.actions;\r\n\r\n        // Enable the \"Validate and Save\" action for Form Buttons\r\n        self.allowValidateAndSaveAction = bizagi.override && bizagi.override.enableActionValidateAndSave === true;\r\n\r\n        // Initialize buttons\r\n        self.initializeButtons(data);\r\n\r\n        // Define transitions to Complex Gateway\r\n        if (data.transitions) {\r\n            self.transitions = data.transitions;\r\n        }\r\n\r\n        this.originalProcessButton = this.processButton;\r\n\r\n        //Custom behaviour for application parent activated.\r\n        self.isRoutingDisabled = false;\r\n        if (params.applicationParent) {\r\n            switch (params.applicationParent) {\r\n                case 'NEWWORKPORTAL':\r\n                    self.isRoutingDisabled = true;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        self.isOfflineFormsV2Supported =  bizagi.util.isMobileDevice() && bizagi.util.isOfflineFormsV2Supported();\r\n\r\n    },\r\n    /*\r\n    *   Initializes button metadata\r\n    */\r\n    initializeButtons: function (data) {\r\n        var self = this;\r\n\r\n        self.buttons = [];\r\n\r\n        // Process buttons\r\n        if (data.buttons) {\r\n            $.each(data.buttons, function (i, item) {\r\n                var button = item.button.properties;\r\n\r\n                // Process caption\r\n                button.caption = !bizagi.util.isEmpty(button.caption) && self.getResource(button.caption) != button.caption ? self.getResource(button.caption) : button.caption;\r\n\r\n                // Process actions\r\n                if (button.actions) {\r\n                    $.each(button.actions, function (i, action) {\r\n                        button[action] = true;\r\n                    });\r\n                }\r\n\r\n                // Add other properties\r\n                button.ordinal = i;\r\n                button.action = button.next ? \"next\" :\r\n                    button.nextWithoutValidations ? \"nextWithoutValidations\" :\r\n                        button.submitData ? \"save\" :\r\n                            button.cancel ? \"cancel\" :\r\n                                button.back ? \"back\" :\r\n                                    button.createnewcase ? \"createnewcase\" :\r\n                                        button.validate ? \"validate\" : \"\";\r\n\r\n                // Explicit add save operation\r\n                button.save = (button.action === \"save\");\r\n\r\n                // Add inherent behaviours\r\n                if (button.next || button.back || button.nextWithoutValidations) {\r\n                    button.routing = true;\r\n                }\r\n\r\n                if (button.hasRule) {\r\n                    button.executeRule = true;\r\n                }\r\n\r\n                if (self.allowValidateAndSaveAction && button.validate) {\r\n                    button.submitData = true;\r\n                    button.refresh = true;\r\n                    button.save = true;\r\n                    if (button.action === \"next\" || button.action === \"createnewcase\") {\r\n                        button.refresh = false;\r\n                    }\r\n                }\r\n\r\n                // Prepare button style\r\n                button.style = self.buildButtonStyle(button);\r\n\r\n                // Add to button array\r\n                if (self.properties.orientation === \"rtl\" && !self.properties.useCustomButtons) {\r\n                    self.buttons.unshift(button);\r\n                } else {\r\n                    self.buttons.push(button);\r\n                }\r\n\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Get the original params used to fetch the form\r\n    */\r\n    getParams: function () {\r\n        return this.params;\r\n    },\r\n\r\n    setParam: function (property, value) {\r\n        if (this.params) {\r\n            this.params[property] = value;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Get current rendering mode\r\n    */\r\n    getMode: function () {\r\n        return this.mode;\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        var self = this;\r\n        if (self.params) {\r\n            return self.params.customHandlers;\r\n        }\r\n    },\r\n    /*\r\n    * Method to index renders\r\n    */\r\n    registerRender: function (render) {\r\n        var self = this;\r\n\r\n        self.rendersById[render.properties.id] = render;\r\n        if (render.properties.xpath) {\r\n            if (!self.rendersByXpath[render.properties.xpath]) {\r\n                self.rendersByXpath[render.properties.xpath] = [];\r\n            }\r\n            self.rendersByXpath[render.properties.xpath].push(render);\r\n        }\r\n\r\n        if (!self.rendersByType[render.properties.type]) {\r\n            self.rendersByType[render.properties.type] = [];\r\n        }\r\n        self.rendersByType[render.properties.type].push(render);\r\n    },\r\n    /*\r\n    * Method to unregister render\r\n    */\r\n    unregisterRender: function (render) {\r\n        var self = this;\r\n\r\n        if (self.rendersById[render.properties.id]) {\r\n            delete self.rendersById[render.properties.id];\r\n        }\r\n\r\n        if (render.properties.xpath) {\r\n            if ($.isArray(self.rendersByXpath[render.properties.xpath])\r\n                && self.rendersByXpath[render.properties.xpath].length > 1) {\r\n                for (var i = 0, l = self.rendersByXpath[render.properties.xpath].length; i < l; i++) {\r\n                    var element = self.rendersByXpath[render.properties.xpath][i];\r\n                    if (element.properties.id === render.properties.id) {\r\n                        self.rendersByXpath[render.properties.xpath].splice(i, 1);\r\n                        break;\r\n                    }\r\n                }\r\n            } else {\r\n                delete self.rendersByXpath[render.properties.xpath];\r\n            }\r\n        }\r\n\r\n        // Unregister from renders by type\r\n        if (render.properties.type) {\r\n            var listRendesByType = self.getRenderByType(render.properties.type);\r\n            var listRendesByTypeLength = listRendesByType.length;\r\n            var renderKey = render.properties.id || render.properties.xpath;\r\n\r\n            for (var i = 0; i < listRendesByTypeLength; i++) {\r\n                var listRender = listRendesByType[i];\r\n                if ((typeof listRender.properties.id != \"undefined\" && listRender.properties.id == renderKey) ||\r\n                    (typeof listRender.properties.xpath != \"undefined\" && listRender.properties.xpath == renderKey)) {\r\n                    // Unregister element\r\n                    self.rendersByType[render.properties.type].splice(i, 1);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    * Method to access a render by id\r\n    */\r\n    getRenderById: function (id) {\r\n        var self = this;\r\n\r\n        return self.rendersById[id];\r\n    },\r\n\r\n    getGridByColumn: function (id) {\r\n        var self = this;\r\n        var grids = self.getRenderByType('grid');\r\n        var i = 0, columnIndex;\r\n\r\n        for (; i < grids.length; i++) {\r\n            columnIndex = grids[i].columnsIds.indexOf(id);\r\n            if (columnIndex != -1) {\r\n                return grids[i];\r\n            }\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    /*\r\n    *   Method to find all the renders matching an xpath inside the container\r\n    */\r\n    getRenders: function (xpath) {\r\n        var self = this;\r\n\r\n        // Remove [] filters for grid columns xpaths to fully identify the grid as the xpath target\r\n        if (xpath && xpath.indexOf)\r\n            if (xpath.indexOf(\"[\") > 0) {\r\n                xpath = xpath.substring(0, xpath.indexOf(\"[\"));\r\n            }\r\n\r\n        return self.rendersByXpath[xpath] ? self.rendersByXpath[xpath] : [];\r\n    },\r\n    /**\r\n     * Get all render with the same type\r\n     */\r\n    getRenderByType: function (type) {\r\n        var self = this;\r\n\r\n        // Check that type is defined\r\n        if (typeof type == \"string\" && type.length > 0) {\r\n            // Search controls by type\r\n            return (self.rendersByType[type]) ? self.rendersByType[type] : [];\r\n        }\r\n        return [];\r\n    },\r\n\r\n    /*\r\n    *   Build the container html\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"form\");\r\n        var idCase = \"\";\r\n\r\n        // Render the form\r\n        var html = $.fasttmpl(template, {\r\n            buttons: self.buttons,\r\n            transitions: self.transitions,\r\n            uniqueId: properties.uniqueId,\r\n            helptext: properties.helpText,\r\n            mode: self.getMode(),\r\n            queryForm: self.getFormType() == \"queryForm\",\r\n            summaryForm: self.params.summaryForm || false,\r\n            globalForm: self.properties.displayAsReadOnly || false,\r\n            idCase: idCase,\r\n            displayName: self.params.displayName || idCase,\r\n            processPath: properties.processPath,\r\n            breadCrumb: properties.breadCrumb,\r\n            orientation: properties.orientation\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n    /*\r\n    *   Process the html rendering object\r\n    */\r\n    postRenderContainer: function (form) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        // Add a mode class\r\n        form.addClass(\"ui-bizagi-rendering-mode-\" + mode);\r\n\r\n        // Call base\r\n        this._super(form);\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the container's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var complexGatewayContainer;\r\n        var form = self.container;\r\n\r\n        if (form.length > 1) {\r\n            $(form).each(function () {\r\n                if ($(this).hasClass('ui-bizagi-container-complexgateway')) {\r\n                    complexGatewayContainer = this;\r\n                }\r\n            });\r\n        } else {\r\n            complexGatewayContainer = $(\".ui-bizagi-container-complexgateway\", form);\r\n        }\r\n\r\n        // activeTransitions is used to store ids of activities in Complex Gateway\r\n        self.activeTransitions = {};\r\n\r\n        // Process buttons\r\n        self.processButtons(form);\r\n\r\n        // Check for dom included event\r\n        self.bind(\"ondomincluded\", function (e, mainForm) {\r\n            // Creates validation controller after the form is ready\r\n            self.validationController = new bizagi.command.controllers.validation(self, self.validations, mainForm);\r\n            // Creates action controller after the form is ready\r\n            self.actionController = new bizagi.command.controllers.action(self, self.actions);\r\n\r\n            // Resolve this deferred to start executing DOM dependant plugins\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n        // Set events for complex gateway interface\r\n        $(complexGatewayContainer).find(\".ui-checkbox\").bind(\"click\", function () {\r\n            var checkboxLabel = $(\"label\", this);\r\n\r\n            var transitionId = checkboxLabel.data(\"value\") || \"\";\r\n            if (typeof self.activeTransitions[transitionId] == \"undefined\") {\r\n                self.activeTransitions[transitionId] = false;\r\n            }\r\n\r\n            if (bizagi.util.parseBoolean(checkboxLabel.data(\"checked\"))) {\r\n                // Uncheck element\r\n                checkboxLabel.removeClass(\"ui-checkbox-state-checked\");\r\n                checkboxLabel.removeClass(\"bz-check\").addClass(\"bz-full-ball\");\r\n                checkboxLabel.data(\"checked\", false);\r\n                self.activeTransitions[transitionId] = false;\r\n            } else {\r\n                // Check element\r\n                checkboxLabel.addClass(\"ui-checkbox-state-checked\");\r\n                checkboxLabel.addClass(\"bz-mo-icon\").addClass(\"bz-check\").removeClass(\"bz-full-ball\");\r\n                checkboxLabel.data(\"checked\", true);\r\n                self.activeTransitions[transitionId] = true;\r\n            }\r\n        });\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour when rendering in design mode\r\n    */\r\n    configureDesignView: function () {\r\n        var self = this;\r\n\r\n\r\n        // Check for dom included event\r\n        self.bind(\"ondomincluded\", function () {\r\n            // Resolve this deferred to start executing DOM dependant plugins\r\n            self.readyDeferred.resolve();\r\n        });\r\n    },\r\n    /*\r\n    *   Format form buttons to allow further customization\r\n    */\r\n    buildButtonStyle: function (button) {\r\n\r\n        var style = {};\r\n        if (button.format) {\r\n            if (button.format.size) {\r\n                if (button.format.size != \"0\") {\r\n                    var newFontSize = (100 + Number(button.format.size) * 10) + \"%\";\r\n                    style[\"font-size\"] = newFontSize + \" !important\";\r\n                }\r\n            }\r\n            if (button.format.bold) {\r\n                style[\"font-weight\"] = \"bold !important\";\r\n                if (bizagi.util.isIE()) {\r\n                    style[\"font-family\"] = \"'Open Sans', 'Helvetica Neue', Arial, Helvetica, sans-serif !important\";\r\n                }\r\n            }\r\n            if (button.format.italic) {\r\n                style[\"font-style\"] = \"italic !important\";\r\n            }\r\n            if (button.format.underline || button.format.strikethru) {\r\n                var strikethru = bizagi.util.parseBoolean(button.format.strikethru) ? \"line-through \" : \"\";\r\n                var underline = bizagi.util.parseBoolean(button.format.underline) ? \"underline \" : \"\";\r\n                style[\"text-decoration\"] = strikethru + underline + \" !important\";\r\n            }\r\n            if (button.format.background) {\r\n                style[\"background-color\"] = button.format.background + \" !important\";\r\n                style[\"background-image\"] = \"none !important\";\r\n            }\r\n            if (button.format.color) {\r\n                style[\"color\"] = button.format.color + \" !important\";\r\n            }\r\n        }\r\n\r\n        var strStyle = \"\";\r\n        for (key in style) {\r\n            strStyle += key + \":\" + style[key] + \";\";\r\n        }\r\n        return strStyle;\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    *   Returns a promise\r\n    */\r\n    render: function () {\r\n        var self = this;\r\n\r\n        // Creates a deferred, so we can check when form has been included in dom\r\n        if (!self.readyDeferred)\r\n            self.readyDeferred = new $.Deferred();\r\n\r\n        // Call base\r\n        var result = this._super();\r\n\r\n        return result;\r\n    },\r\n    /*\r\n    *   Sets a promise that the form will be included in the DOM\r\n    *   so we can apply some tedious plugins that require that\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n\r\n        return self.readyDeferred.promise();\r\n    },\r\n    /*\r\n    *   Returns the xpath context of the element\r\n    */\r\n    getXpathContext: function () {\r\n        return this.properties.xpathContext || \"\";\r\n    },\r\n    /*\r\n    *  Return context type, when the parent form is entity\r\n    */\r\n    getContextType: function () {\r\n        return this.properties.contexttype || \"\";\r\n    },\r\n\r\n    /*\r\n    * Return the endpoint action, when the form will be refresh\r\n    */\r\n    getEndPointAction: function () {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        if (properties.formtype == \"startform\")\r\n            return \"LOADSTARTFORM\";\r\n\r\n        return undefined;\r\n\r\n    },\r\n\r\n    /*\r\n    *   Returns the page cache id for the element\r\n    */\r\n    getPageCache: function () {\r\n        return this.idPageCache;\r\n    },\r\n    /*\r\n    *   Returns the form containing the element\r\n    */\r\n    getFormContainer: function () {\r\n        return this;\r\n    },\r\n    /*\r\n    *   Method to process button actions in the form\r\n    */\r\n    processButtons: function () {\r\n        var self = this;\r\n        var buttons = self.getButtons();\r\n\r\n        // Don't process buttons if they are undefined in the template\r\n        if (!buttons || buttons.length == 0) {\r\n            return;\r\n        }\r\n\r\n        // Attach a handler for each button\r\n        buttons.on(\"click\", function (e) {\r\n            e.preventDefault();\r\n            e.stopImmediatePropagation();\r\n\r\n            self.startLoading();\r\n\r\n            var button = $(this);\r\n            var ordinal = button.attr(\"ordinal\");\r\n            var buttonProperties = self.buttons[ordinal];\r\n\r\n            self.lastActionButton = buttonProperties;\r\n            if (buttonProperties.action === \"next\") {\r\n                buttonProperties.routingDisabled = self.isRoutingDisabled;\r\n            }\r\n\r\n            button.prop(\"disabled\", true); //disable button to prevent multiple click actions\r\n\r\n            if(button.hasOwnProperty('disabled')) {\r\n                button.button(\"disable\"); //Setting styles\r\n            }\r\n\r\n            // External Events\r\n            self.propagateExternalEvents(e);\r\n\r\n            // Execute button\r\n            //QAF-1418 - add setTimeout\r\n            setTimeout(function () {\r\n                $.when(self.processButton(buttonProperties)).always(function () {\r\n                    self.processDefer = undefined;\r\n                    self.endLoading();\r\n                    if ($.contains(document.documentElement, button.get(0))) { //check if button is still in DOM\r\n                        button.prop(\"disabled\", false);  //enable button\r\n\r\n                        if(button.hasOwnProperty('enable')) {\r\n                            button.button(\"enable\"); //Setting styles\r\n                        }\r\n                    }\r\n                });\r\n            }, 100);\r\n        });\r\n    },\r\n    /*\r\n    * Execute codes just before sending information to server\r\n    */\r\n    preProcessButton: function (buttonProperties) {\r\n        return true;\r\n    },\r\n    /*\r\n    * Execute codes just after sending information to server\r\n    */\r\n    postProcessButton: function (responses, buttonProperties) {\r\n        return true; // true means continue\r\n    },\r\n\r\n    setLoaderDeferred: function() {\r\n        var self = this;\r\n\r\n        self.loaderDeferred = $.Deferred().resolve();\r\n    },\r\n\r\n    deleteLoaderDeferred: function () {\r\n        var self = this;\r\n\r\n        if (self.isLoaderDeferredSet()) {\r\n            $.when(self.loaderDeferred.promise()).done(function() {\r\n                delete self.loaderDeferred;\r\n            });\r\n        }\r\n    },\r\n\r\n    useOrSetLoaderDeferred: function () {\r\n        var self = this;\r\n\r\n        if (!self.isLoaderDeferredSet()) {\r\n            self.setLoaderDeferred();\r\n        }\r\n    },\r\n\r\n    getLoaderPromise: function () {\r\n        var self = this;\r\n\r\n        if (self.isLoaderDeferredSet()) {\r\n            return self.loaderDeferred.promise();\r\n        } else {\r\n            return;\r\n        }\r\n    },\r\n\r\n    isLoaderDeferredSet: function () {\r\n        var self = this;\r\n\r\n        if (self.loaderDeferred) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    appendWaitForLoader: function (params) {\r\n        var self = this;\r\n        var promise = params.promise;\r\n        var create = params.create || false;\r\n\r\n        if (!self.isLoaderDeferredSet()) {\r\n            if (create) {\r\n                self.setLoaderDeferred();\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n\r\n        self.loaderDeferred = self.loaderDeferred.then(function () {\r\n            return (function () {\r\n                return promise;\r\n            })();\r\n        });\r\n    },\r\n\r\n\r\n    /*\r\n    *   Executes a single button action\r\n    */\r\n    processButton: function (buttonProperties) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n        var properties = self.properties;\r\n        if (!buttonProperties.routing) {\r\n            bizagi.chrono.initAndStart(\"submitForm\");\r\n        }\r\n        bizagi.chrono.init(\"waiting\");\r\n\r\n        // First hide and clear validation box\r\n        self.validationController.clearValidationMessages();\r\n\r\n        // Resolve asynchronous tabItems\r\n        var form = self.getFormContainer();\r\n        var getAllTabs = form.getRenderByType(\"tabItem\");\r\n        var getAllTabsLength = getAllTabs.length;\r\n\r\n        form.innerTabsLoading = true;\r\n\r\n\r\n        self.useOrSetLoaderDeferred();\r\n\r\n        // Check\r\n        for (var i = 0; i < getAllTabsLength; i++) {\r\n            var render = getAllTabs[i];\r\n            // Resolve internal deferred\r\n            if (render.loadingDeferred && render.parent.container) {\r\n                render.loadingDeferred.resolve();\r\n            }\r\n        }\r\n\r\n        delete form.innerTabsLoading;\r\n\r\n        $.when(self.ready(), self.getLoaderPromise()).done(function () {\r\n            self.deleteLoaderDeferred();\r\n            // Validate the form\r\n            var valid = bizagi.util.parseBoolean(buttonProperties.validate) ? self.validationController.performValidations() : true;\r\n            if (valid) {\r\n\r\n                if ([\"save\", \"next\", \"back\", \"createnewcase\", \"nextWithoutValidations\"].includes(buttonProperties.action)) {\r\n                    $(document).data('auto-save', '');\r\n                }\r\n\r\n                // Check for user confirmation if configured and the button is configured to enroute\r\n                if (bizagi.util.parseBoolean(self.properties.needsUserConfirmation) && bizagi.util.parseBoolean(buttonProperties.routing)) {\r\n                    self.endLoading();\r\n                    $.when(bizagi.showConfirmationBox(properties.userConfirmationMessage, null, false)).done(function () {\r\n                        // Submits the form\r\n                        if (self.preProcessButton(buttonProperties)) {\r\n                            //Trigger the event after ProcessButton\r\n                            self.triggerGlobalHandler(\"renderActionButton\", buttonProperties);\r\n                            $.when(self.submitForm(buttonProperties)).done(function () {\r\n                                defer.resolve();\r\n                            }).fail(function() {\r\n                                defer.reject(arguments);\r\n                            });\r\n                        }\r\n                    }).fail(function () {\r\n                        defer.reject();\r\n                    });\r\n\r\n                } else {\r\n                    if (self.preProcessButton(buttonProperties)) {\r\n                        //Trigger the event after ProcessButton\r\n                        self.triggerGlobalHandler(\"renderActionButton\", buttonProperties);\r\n                        $.when(self.submitForm(buttonProperties)).done(function () {\r\n                            $(document).trigger(\"FORMACTION\", buttonProperties);\r\n                            defer.resolve();\r\n                        }).fail(function () {\r\n                            defer.reject(arguments);\r\n                        });\r\n                    }\r\n                }\r\n\r\n            } else {\r\n\r\n                self.endLoading();\r\n                if (buttonProperties.submitData) {\r\n                    $.when(self.submitData()).done(function () {\r\n                        defer.reject();\r\n                    });\r\n                }\r\n                else {\r\n                    defer.reject();\r\n                }\r\n\r\n                self.validationController.expandNotificationBox();\r\n            }\r\n\r\n            var customHandler = self.getCustomHandler(\"afterFormButtonClick\");\r\n            if (customHandler) {\r\n                customHandler(buttonProperties);\r\n            }\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n    /*\r\n    *   Public method to perform validations externally\r\n    */\r\n    validateForm: function () {\r\n        var self = this;\r\n\r\n        // First hide and clear validation box\r\n        self.validationController.clearValidationMessages();\r\n\r\n        // Validate the form\r\n        return self.validationController.performValidations();\r\n    },\r\n    /*\r\n    *   Submits all the form to the server and returns a deferred to check when the process finishes\r\n    */\r\n    saveForm: function () {\r\n        var self = this;\r\n\r\n        // Check is offline form        \r\n        var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\r\n\r\n        // Collect data\r\n        var data = self.collectRenderValuesForSubmit();\r\n\r\n        // Check if there are deferreds to wait\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        // Wait for deferreds\r\n        return $.when(deferredsToWait).pipe(function () {\r\n            self.startLoading();\r\n\r\n            // Submit the form\r\n            return $.when(self.dataService.submitData({\r\n                action: \"SAVE\",\r\n                data: data,\r\n                idCase: self.params.idCase,\r\n                idWorkitem: self.params.idWorkitem,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                isOfflineForm: isOfflineForm || false\r\n            })).always(function () {\r\n                self.endLoading();\r\n            });\r\n        });\r\n    },\r\n    /*\r\n    *   Creates a json array with key values to send to the server\r\n    */\r\n    submitForm: function (buttonProperties) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n\r\n        // Check is offline form                \r\n        var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\r\n\r\n        $.when(self.isReadyToSave())\r\n            .done(function () {\r\n                if (isOfflineForm) {\r\n                    self.internalSubmitFormOffline(buttonProperties);\r\n                    return;\r\n                }\r\n                $.when(self.internalSubmitForm(buttonProperties)).done(function () {\r\n                    defer.resolve();\r\n                }).fail(function () {\r\n                    defer.reject(arguments);\r\n                });\r\n\r\n            }).fail(function () {\r\n            self.endLoading();\r\n            bizagi.log(\"The form is not saved, no changes were found\");\r\n            defer.reject();\r\n        });\r\n        return defer.promise();\r\n    },\r\n    checkWidgetsData: function () {\r\n        //\r\n    },\r\n    isComplexGatewayPainted: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Get last action button\r\n     * @returns {*}\r\n     */\r\n    getLastActionButton: function () {\r\n        var self = this;\r\n        return self.lastActionButton;\r\n    },\r\n\r\n    /**\r\n     * Internal - Creates a json array with key values to send to the database\r\n     * @param {} buttonProperties\r\n     * @returns {}\r\n     */\r\n    internalSubmitFormOffline: function (buttonProperties) {\r\n        var self = this;\r\n        var message = \"\";\r\n        var data;\r\n\r\n        // Check is offline form                \r\n        var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\r\n\r\n        if (isOfflineForm && (self.properties && !self.properties.idPageCache)) {\r\n            self.properties.idPageCache = \"\";\r\n        }\r\n\r\n        // Fill data hash\r\n        if (buttonProperties.submitData || buttonProperties.executeRule) {\r\n            // Collect data\r\n            data = self.collectRenderValuesForSubmit();\r\n        }\r\n\r\n        if (self.transitions) {\r\n            var transitions = [];\r\n            $.each(this.activeTransitions, function (key, value) {\r\n                (value) ? transitions.push(key) : \"\";\r\n            });\r\n\r\n            if (bizagi.util.countProps(transitions) == 0) {\r\n                bizagi.showMessageBox(\r\n                    bizagi.localization.getResource(\"render-widget-complexgateway-path\"),\r\n                    bizagi.localization.getResource(\"render-widget-complexgateway-error\"), \"info\", false\r\n                );\r\n                self.endLoading();\r\n                return \"\";\r\n            }\r\n        }\r\n\r\n        $.when(self.dataService.submitData({\r\n            action: buttonProperties.action,\r\n            data: data,\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache,\r\n            idForm: self.properties.id,\r\n            prepare: true,\r\n            transitions: transitions || \"\",\r\n            idCase: self.params.idCase,\r\n            idWorkitem: self.params.idWorkitem,\r\n            isOfflineForm: isOfflineForm || false,\r\n            offlineType: self.params.offlineType || \"\"\r\n        })).done(function (responses) {\r\n\r\n            if (!self.postProcessButton(responses, buttonProperties)) {\r\n                return;\r\n            }\r\n\r\n            if (buttonProperties.routing) {\r\n                var waitForOnlineResponse = false;\r\n                if(isOfflineForm && self.isOfflineFormsV2Supported && self.params.online) {\r\n                    waitForOnlineResponse = true;\r\n                    var tryPushResponsePromise = new $.Deferred();\r\n                    self.params.responsePromise = tryPushResponsePromise;\r\n                    $(document).trigger(\"tryPushCase.offline\", self.params);\r\n                }\r\n                else if( isOfflineForm && !self.isOfflineFormsV2Supported){\r\n                    $(document).trigger(\"tryPushData.offline\");\r\n                }\r\n\r\n                if(!waitForOnlineResponse){\r\n                    self.triggerHandler(\"routing\", {\r\n                        offlineAction: buttonProperties.action,\r\n                        idCase: self.params.idCase,\r\n                        idWorkitem: self.params.idWorkitem\r\n                    });\r\n                }\r\n                else {\r\n                    $.when(tryPushResponsePromise)\r\n                    .then( function(result){\r\n                        self.triggerHandler(\"routing\", {\r\n                            idCase: result.IdCase,\r\n                            caseNumber: result.CaseNumber\r\n                        });\r\n                    })\r\n                    .fail( function(error){\r\n                        self.failHandler(error);\r\n                    });\r\n                }\r\n\r\n            } else {\r\n                message = bizagi.util.isValidResource(\"workportal-mobile-offline-form-successful\")\r\n                    ? bizagi.localization.getResource(\"workportal-mobile-offline-form-successful\")\r\n                    : \"Saved\";\r\n\r\n                bizagi.util.showNotification({ text: message, type: \"success\" });\r\n            }\r\n\r\n        }).fail(function (error) {\r\n            message = bizagi.util.isValidResource(\"workportal-mobile-offline-successful-fail\")\r\n                ? bizagi.localization.getResource(\"workportal-mobile-offline-successful-fail\")\r\n                : \"Not saved\";\r\n\r\n            bizagi.util.showNotification({ text: message, type: \"error\" });\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Internal - Creates a json array with key values to send to the server\r\n    */\r\n    internalSubmitForm: function (buttonProperties) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n        var data;\r\n\r\n        // Fill data hash\r\n        if (buttonProperties.submitData || buttonProperties.executeRule || buttonProperties.createnewcase) {\r\n            // Collect data\r\n            data = self.collectRenderValuesForSubmit();\r\n        }\r\n\r\n        // Start asynchronous operation\r\n        $.when(self.startLoading()).done(function () {\r\n            $('html, body').animate({ scrollTop: $('.ui-bizagi-loading-icon') }, 'slow');\r\n        });\r\n\r\n        var submitDataAction = null;\r\n        var executeButtonAction = null;\r\n        var performAction = null;\r\n        var checkpointAction = null;\r\n        var commitAction = null;\r\n        var waitingDeferreds = [];\r\n        var deferredsToWait = null;\r\n\r\n        // Prepare actions\r\n        if (buttonProperties.executeRule) {  // When the button has to execute any rule (MUST SUBMIT DATA BEFORE ALWAYS)\r\n\r\n            if (data.deferreds) {\r\n                deferredsToWait = $.when.apply($, data.deferreds);\r\n                waitingDeferreds.push(deferredsToWait);\r\n                delete data.deferreds;\r\n            }\r\n\r\n            submitDataAction = self.dataService.submitData({\r\n                action: \"SUBMITDATA\",\r\n                data: data,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true\r\n            });\r\n            submitDataAction.tag = \"submitData\";\r\n\r\n            checkpointAction = self.prepareCheckpointAction(buttonProperties.id);\r\n\r\n            // Reset data because when an execute rule operation has been performed, it saved already all the data\r\n            data = {};\r\n            executeButtonAction = self.dataService.executeButton({\r\n                idRender: buttonProperties.id,\r\n                xpathContext: self.properties.xpathContext || \"\",\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true\r\n            });\r\n            executeButtonAction.tag = \"executeRule\";\r\n\r\n            commitAction = self.prepareCommitAction(buttonProperties.id);\r\n        }\r\n\r\n        if (buttonProperties.next || buttonProperties.back || buttonProperties.save || buttonProperties.createnewcase || buttonProperties.nextWithoutValidations) {\r\n            // Verify transitions\r\n            if (self.transitions) {\r\n                var transitions = [];\r\n                $.each(this.activeTransitions, function (key, value) {\r\n                    (value) ? transitions.push(key) : \"\";\r\n                });\r\n\r\n                if (bizagi.util.countProps(transitions) == 0) {\r\n                    bizagi.showMessageBox(bizagi.localization.getResource(\"render-widget-complexgateway-path\"), bizagi\r\n                        .localization.getResource(\"render-widget-complexgateway-error\"), \"info\", false);\r\n                    self.endLoading();\r\n                    defer.reject();\r\n                    return defer.promise();\r\n                }\r\n            }\r\n\r\n            if (data.deferreds) {\r\n                deferredsToWait = $.when.apply($, data.deferreds);\r\n                waitingDeferreds.push(deferredsToWait);\r\n                delete data.deferreds;\r\n            }\r\n\r\n\r\n            performAction = self.dataService.submitData({\r\n                action: self.getButtonAction(buttonProperties.action),\r\n                forcePlanCompletion: buttonProperties.forcePlanCompletion,\r\n                data: data,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: self.properties.idPageCache,\r\n                prepare: true,\r\n                transitions: transitions || \"\",\r\n                contexttype: self.properties.contextType,\r\n                surrogatekey: self.properties.surrogateKey\r\n            });\r\n            performAction.tag = \"performAction\";\r\n        }\r\n\r\n        // Assemble the actions\r\n        var actions = [];\r\n\r\n        if (executeButtonAction) {\r\n            actions.push(submitDataAction);\r\n            actions.push(checkpointAction);\r\n            actions.push(executeButtonAction);\r\n            actions.push(commitAction);\r\n        }\r\n\r\n        if (performAction) {\r\n            actions.push(performAction);\r\n        }\r\n\r\n        // Execute the batch\r\n        bizagi.chrono.initAndStart(\"submitForm-ajax\");\r\n\r\n\r\n        //Evaluate if there are deferreds to evaluate, like inline add in grid, that must send a ADDRELATIONWITHDATA before to savedata\r\n        var flowControlDeferred = new $.Deferred();\r\n        if (data && data.deferreds) {\r\n            $.when.apply(this, data.deferreds)\r\n                .done(function (response) {\r\n                    flowControlDeferred.resolve(response);\r\n                })\r\n                .fail(function () {\r\n                    flowControlDeferred.reject();\r\n                    console.log(\"Error: It was not possible resolve async actions on form \")\r\n                })\r\n        } else {\r\n            flowControlDeferred.resolve();\r\n        }\r\n\r\n        waitingDeferreds.push(flowControlDeferred);\r\n\r\n        $.when.apply($, waitingDeferreds).done(function() {\r\n            $.when(self.dataService.multiaction().execute({ actions: actions })).done(function (responses) {\r\n                bizagi.chrono.stop(\"submitForm-ajax\");\r\n                // End asynchronous operation\r\n                self.endLoading();\r\n                // Find validations\r\n                var bHasValidations;\r\n                var alertMessage = \"\";\r\n                $.each(responses, function (i, response) {\r\n\r\n                    var propertiesToDisplayMessages = self.validationToDisplayMessages(bHasValidations, response.result.type, response.result.messages, alertMessage);\r\n                    bHasValidations = propertiesToDisplayMessages.bHasValidations;\r\n                    alertMessage = propertiesToDisplayMessages.alertMessage;\r\n\r\n                });\r\n\r\n                if (!bHasValidations) {\r\n                    // Everything went ok .. succesfully response from the server\r\n                    if (!self.postProcessButton(responses, buttonProperties)) {\r\n                        return;\r\n                    }\r\n\r\n                    // After successfully response refresh the form\r\n                    if (buttonProperties.refresh) {\r\n                        self.refreshForm();\r\n                    }\r\n\r\n                    // If needs routing publish an event\r\n                    if (buttonProperties.routing) {\r\n                        bizagi.jqxhrList.abortAll(\"rendering_\" + self.dataService.guid);\r\n                        self.triggerHandler(\"routing\", {\r\n                            idCase: self.params.idCase,\r\n                            routingDisabled: buttonProperties.routingDisabled\r\n                        });\r\n                    }\r\n\r\n                    // Create case\r\n                    if (buttonProperties.createnewcase) {\r\n                        if (responses.length > 0) {\r\n                            bizagi.jqxhrList.abortAll(\"rendering_\" + self.dataService.guid);\r\n                            self.triggerHandler(\"routing\", {\r\n                                idCase: responses[0].result.IdCase,\r\n                                caseNumber: responses[0].result.CaseNumber\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if(alertMessage !== \"\"){ /*If there is an alertMessage show in a modal error*/\r\n                        bizagi.modalError.show(alertMessage, 'workportal-general-word-information', false);\r\n                    }\r\n                    if (buttonProperties.executeRule) {\r\n                        self.sendRollbackAction(buttonProperties.id);\r\n                    }\r\n                }\r\n\r\n                defer.resolve();\r\n            }).fail(function (_, _, response) {\r\n                if (buttonProperties.executeRule) {\r\n                    self.sendRollbackAction(buttonProperties.id);\r\n                }\r\n\r\n                if (response && response.error && (response.error.errorType === \"WaitForCompletionPlanException\" ||\r\n                    response.error.errorType === \"InvalidPlanStateException\" || response.error.errorType === \"CustomMessageException\")) {\r\n                    self.endLoading();\r\n                    $.when(bizagi.showConfirmationBox(bizagi.localization.getResource(response.error.message), null, false)).then(function () {\r\n                        return $.when(self.internalSubmitForm($.extend({}, buttonProperties, { forcePlanCompletion: true })));\r\n                    }).done(function () {\r\n                        defer.resolve();\r\n                    }).fail(function () {\r\n                        defer.reject();\r\n                    });\r\n                } else {\r\n                    self.failHandler(response);\r\n                    defer.reject(response);\r\n                }\r\n            });\r\n        });\r\n        return defer.promise();\r\n    },\r\n    validationToDisplayMessages: function(bHasValidations, messageType, message, alertMessage){\r\n        var self = this;\r\n\r\n        if (messageType == \"validationMessages\") {\r\n            // Something went wrong, we gotta display messages in notifications grid\r\n            self.addValidationMessage(message);\r\n            bHasValidations = true;\r\n        }\r\n        if(bizagi.detectDevice() == \"desktop\" && messageType == \"alertMessages\"){\r\n            // Something went wrong, we gotta display alert message\r\n            if(alertMessage === \"\"){\r\n                alertMessage = message;\r\n            }else{\r\n                alertMessage = alertMessage + \"\\n\\n\" + message;\r\n            }\r\n\r\n            bHasValidations = true;\r\n        }\r\n\r\n        return {\"bHasValidations\": bHasValidations, \"alertMessage\": alertMessage};\r\n    },\r\n\r\n    /*\r\n    *   Add a validation message to the form\r\n    */\r\n    addValidationMessage: function (validationMessage, focus, icon, itemAdditionalClass, autofocus, type) {\r\n        var self = this;\r\n\r\n        if (!self.validationController) {\r\n            self.validationController = new bizagi.command.controllers.validation(self);\r\n        }\r\n\r\n        if (typeof (validationMessage) == \"string\") {\r\n            self.validationController.showValidationMessage(validationMessage, focus, icon, itemAdditionalClass, type);\r\n        } else {\r\n            $.each(validationMessage, function (i, message) {\r\n                self.validationController.showValidationMessage(message, focus, icon, itemAdditionalClass, type);\r\n            });\r\n        }\r\n        self.validationController.expandNotificationBox(autofocus);\r\n    },\r\n    /*\r\n    *   Public method to perform validations externally\r\n    */\r\n    clearValidationMessages: function (params) {\r\n        var self = this;\r\n\r\n        // First hide and clear validation box\r\n        if (self.validationController) {\r\n            self.validationController.clearValidationMessages(params);\r\n        }\r\n\r\n    },\r\n    /*\r\n    *   Add an error message to the form\r\n    */\r\n    addErrorMessage: function (errorMessage) {\r\n        var self = this;\r\n\r\n        self.validationController.showErrorMessage(errorMessage);\r\n        self.validationController.expandNotificationBox();\r\n    },\r\n    /*\r\n    *   Refresh the current form\r\n    */\r\n    refreshForm: function (focus) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var deferred = $.Deferred();\r\n\r\n        focus = focus || self.getFocus();\r\n\r\n        // Normalize new focus structure if not present\r\n        if (focus && !focus.id) {\r\n            focus = {\r\n                id: focus\r\n            };\r\n        }\r\n\r\n        var options = {\r\n            idCase: self.params.idCase || \"\",\r\n            idWorkitem: self.params.idWorkitem || \"\",\r\n            idTask: self.params.idTask || \"\",\r\n            focus: focus,\r\n            selectedTabs: self.getSelectedTabs(),\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            isRefresh: true,\r\n            contextType: self.getContextType() || \"\",\r\n            action: self.getEndPointAction(),\r\n            idStartScope: self.properties.idStartScope || \"\"\r\n        };\r\n\r\n        // Notify the refresh event so the consumer takes the decision about what to do\r\n        self.startLoading();\r\n        $.when(self.triggerHandler(\"refresh\", options)).done(function () {\r\n            self.endLoading();\r\n            deferred.resolve();\r\n        }).fail(function () {\r\n            self.endLoading();\r\n            deferred.reject();\r\n        });\r\n        return deferred.promise();\r\n    },\r\n    /*\r\n    *   Get opened tabs configuration\r\n    */\r\n    getSelectedTabs: function () {\r\n        var self = this;\r\n        var tabContainers = self.getElementsByType(\"tab\");\r\n        var tabs = $.map(tabContainers, function (tabContainer) {\r\n            return { tab: tabContainer.properties.id, selected: tabContainer.activeTab };\r\n        });\r\n        var selectedTabs = {};\r\n        for (var i = 0, length = tabs.length; i < length; i++) {\r\n            selectedTabs[tabs[i].tab] = tabs[i].selected;\r\n        }\r\n        return selectedTabs;\r\n    },\r\n    /*\r\n    *   Template method to get the buttons objects\r\n    */\r\n    getButtons: function () {\r\n    },\r\n    /*\r\n    *   Adds an action on the fly to process the submit on change\r\n    */\r\n    addSubmitAction: function (xpath, action) {\r\n        var self = this;\r\n        self.actionController.processInternalSubmitAction(xpath, action);\r\n    },\r\n    /**\r\n     *   Adds an overlay to the form, and sets a waiting message\r\n     *\r\n     *   @argument {bool} delay Apply delay\r\n     */\r\n    startLoading: function () {\r\n        var self = this;\r\n        var waitingTemplate = self.renderFactory.getTemplate(\"form-waiting\");\r\n\r\n        if (self.waitingOverlay && self.waitingMessage)\r\n            return;\r\n\r\n        // This hack is only for desktop\r\n        if (!bizagi.util.isTabletDevice()) {\r\n            // Detect canvas parent with scroll\r\n            var isSharePoint = self.params.context === \"sharepoint\";\r\n            var canvas = self.params.canvas;\r\n            if (isSharePoint) {\r\n                canvas = bizagi.util.scrollTop(canvas);\r\n\r\n                if (!!!canvas.context) {\r\n                    canvas = $(\"body\", $(document));\r\n                }\r\n            } else {\r\n                canvas = $(\"body\", $(document));\r\n            }\r\n\r\n            // Configures overlay\r\n            var size = this.getSize();\r\n            var position = this.getOffset();\r\n            if (size.height == $(window).height()) {\r\n                position.top = 0;\r\n            }\r\n            self.waitingOverlay = $('<div class=\"ui-widget-overlay\" />').appendTo(canvas);\r\n            self.waitingMessage = $.tmpl(waitingTemplate).appendTo(canvas);\r\n            self.waitingOverlay.css({\r\n                \"height\": \"100%\",\r\n                \"width\": \"100%\",\r\n                \"min-height\": size.height,\r\n                \"min-width\": size.width\r\n            });\r\n            self.waitingMessage.css({\r\n                \"top\": (position.top + Math.ceil((size.height - self.waitingMessage.outerHeight()) / 2)) + \"px\",\r\n                \"left\": (Math.ceil((size.width - self.waitingMessage.outerWidth()) / 2)) + \"px\"\r\n            });\r\n            canvas.css(\"position\", \"relative\");\r\n\r\n        } else {\r\n            // Configures overlay\r\n            self.waitingOverlay = $('<div class=\"ui-widget-overlay\" />').appendTo(\"body\", $(document));\r\n            self.waitingMessage = $.tmpl(waitingTemplate).appendTo(\"body\", $(document));\r\n        }\r\n    },\r\n    /*\r\n    *   Removes the overlay and restores the form edition\r\n    */\r\n    endLoading: function () {\r\n        var self = this;\r\n        if (self.waitingOverlay && self.waitingMessage) {\r\n            self.waitingOverlay.remove();\r\n            self.waitingMessage.remove();\r\n            self.waitingOverlay = null;\r\n            self.waitingMessage = null;\r\n\r\n            var canvas = self.params.canvas;\r\n\r\n            if (canvas != undefined)\r\n                canvas.css(\"position\", \"\");\r\n        }\r\n    },\r\n    /*\r\n    *   Get the focused render in the current request\r\n    */\r\n    getFocusedElement: function () {\r\n        var self = this;\r\n        return self.focus;\r\n    },\r\n    /*\r\n    *   Set the focused render in the current request\r\n    */\r\n    setFocusedElement: function (focus) {\r\n        var self = this;\r\n        self.focus = focus;\r\n    },\r\n    /*\r\n    *   Publish a global event that the facade will replicate\r\n    */\r\n    triggerGlobalHandler: function (eventType, data) {\r\n        return this.triggerHandler(\"globalHandler\", { eventType: eventType, data: data });\r\n    },\r\n    /*\r\n    *   Generic handler to attach fail workflow for some operations\r\n    */\r\n    failHandler: function (error) {\r\n        var self = this;\r\n\r\n        // Check if the error is in multiaction format\r\n        try {\r\n            error = JSON.parse(error);\r\n        } catch (e) {\r\n        }\r\n\r\n        //This double validation has the purpose to get the real error object from two different levels ( error.error or error.error.error )\r\n        if (error & error.length && error.length > 1) error = error[0];\r\n        if (error.error) error = error.error;\r\n        if (error.error) error = error.error;\r\n\r\n        // Handle normal messages\r\n        if (typeof error == \"object\" && error.message) {\r\n            if (error.errorType === \"WaitForCompletionPlanException\" || error.errorType === \"InvalidPlanStateException\" || error.errorType === \"CustomMessageException\") {\r\n                error = bizagi.localization.getResource(error.message);\r\n            }\r\n            else {\r\n                error = error.message;\r\n            }\r\n\r\n        } else if (typeof error == \"string\") {\r\n            // Parse to json\r\n            try {\r\n                var errorJson = JSON.parse(error);\r\n                if (errorJson.errorType === \"WaitForCompletionPlanException\" || errorJson.errorType === \"InvalidPlanStateException\" || error.errorType === \"CustomMessageException\") {\r\n                    errorJson.message = bizagi.localization.getResource(errorJson.message);\r\n                }\r\n                error = errorJson.message;\r\n            } catch (e) {\r\n            }\r\n        }\r\n\r\n        // Workflow engine error, we gotta show it with error\r\n        self.addErrorMessage(error);\r\n        self.endLoading();\r\n    },\r\n    /* \r\n    *   Resizes the element\r\n    */\r\n    resize: function (size) {\r\n        // Just save the size, for reference\r\n        this.setSize(size);\r\n    },\r\n    /*\r\n    *   Sets the internal size for the form\r\n    */\r\n    setSize: function (size) {\r\n        this.size = size;\r\n    },\r\n    /*\r\n    *   Gets the internal size for the form\r\n    */\r\n    getSize: function () {\r\n        if (this.size) {\r\n            return this.size;\r\n        }\r\n        var canvas = (this.params.canvas) ? this.params.canvas : this.getFormContainer().container;\r\n\r\n        var canvasWidth = canvas.width();\r\n        var canvasHeight = canvas.height();\r\n\r\n        return {\r\n            width: canvasWidth,\r\n            height: canvasHeight\r\n        };\r\n    },\r\n    getOffset: function () {\r\n        var canvas = this.getFormContainer().container;\r\n\r\n        return canvas.offset();\r\n    },\r\n    /**\r\n     * This function execute action to save all data of render, but\r\n     * the server service dont execute any rule on the server\r\n     */\r\n    submitData: function (args) {\r\n        var self = this;\r\n\r\n        // Collect data\r\n        var data = self.collectRenderValuesForSubmit();\r\n\r\n        // Check is offline form        \r\n        var isOfflineForm = bizagi.util.isOfflineForm({ context: self });\r\n\r\n        if (isOfflineForm && (self.properties && !self.properties.idPageCache)) {\r\n            self.properties.idPageCache = \"\";\r\n        }\r\n\r\n        // Mark data collected as original values\r\n        $.each(data, function (key, value) {\r\n            var renders = self.getRenders(key);\r\n            $.each(renders, function (i, render) {\r\n                render.updateOriginalValue();\r\n            });\r\n        });\r\n\r\n        // Don't do anything if there is no data\r\n        if ($.isEmptyObject(data)) {\r\n            return;\r\n        }\r\n\r\n        // Call the service\r\n        return $.when(self.dataService.multiaction().submitData({\r\n            action: \"SUBMITDATA\",\r\n            data: data,\r\n            idPageCache: self.properties.idPageCache,\r\n            xpathContext: self.properties.xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n    },\r\n    /**\r\n     * This function send a request to the server to execute a rule\r\n     */\r\n    executeRule: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties.xpathContext;\r\n        }\r\n\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeRule({\r\n            idPageCache: properties.idPageCache,\r\n            rule: args.rule,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages({ clearOnlyServer: true });\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage.apply(self, [message.messages, undefined, undefined, undefined, false, \"serverMessage\"]);\r\n            }\r\n            if(bizagi.detectDevice() == \"desktop\" && message.type == \"alertMessages\"){\r\n                bizagi.modalError.show(message.messages.join(\"\\n\\n\"), 'workportal-general-word-information', false);\r\n            }\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n    },\r\n    /**\r\n     * This function send a request to the server to execute an interface\r\n     */\r\n    executeInterface: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties.xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeInterface({\r\n            idPageCache: properties.idPageCache,\r\n            interface: args.interface,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages();\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage(message.messages);\r\n            }\r\n\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n    },\r\n    executeSAPConnector: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties.xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeSAPConnector({\r\n            idPageCache: properties.idPageCache,\r\n            guidsap: args.guidsap,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages();\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage(message.messages);\r\n            }\r\n\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n\r\n    },\r\n\r\n    executeConnector: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = args.xpathContext;\r\n\r\n        if (properties.xpathContext != \"\") {\r\n            // Concat inheritance context\r\n            xpathContext = (xpathContext != \"\") ? properties.xpathContext + \".\" + xpathContext : properties\r\n                .xpathContext;\r\n        }\r\n\r\n        // Perform the service\r\n        return $.when(self.dataService.multiaction().executeConnector({\r\n            idPageCache: properties.idPageCache,\r\n            guidConnector: args.guidConnector,\r\n            xpathContext: xpathContext,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        })).done(function (message) {\r\n            // Check for validation messages\r\n            self.getFormContainer().clearValidationMessages();\r\n            if (message && message.type == \"validationMessages\") {\r\n                self.getFormContainer().addValidationMessage(message.messages);\r\n            }\r\n\r\n        }).fail(function (message) {\r\n            message = self.processFailMessage(message);\r\n        });\r\n\r\n    },\r\n\r\n    /*\r\n    *   Re-binds pending actions that could not be set because the renders did not exist when the form loaded\r\n    */\r\n    refreshActions: function (actions) {\r\n        var self = this;\r\n        self.actionController.refreshActions(actions);\r\n    },\r\n    /*\r\n    *   Re-binds pending actions that could not be set because the renders did not exist when the form loaded\r\n    */\r\n    removeActions: function () {\r\n        var self = this;\r\n        self.actionController.unbindActions();\r\n    },\r\n    /*\r\n    *   Iterate through all renders and collect the data to send, then update original values for each render\r\n    */\r\n    collectRenderValuesForSubmit: function (data) {\r\n        var self = this;\r\n        data = data || {};\r\n\r\n        // Collect data\r\n        self.collectRenderValues(data);\r\n\r\n        // Mark data collected as original values\r\n        $.each(data, function (key, value) {\r\n            var renders = self.getRenders(key);\r\n            $.each(renders, function (i, render) {\r\n                render.updateOriginalValue();\r\n            });\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param params {data, bRefreshForm,properties}\r\n     * @returns {*}\r\n     */\r\n    internalSubmitOnChange: function (params) {\r\n        params = params || {};\r\n        var self = this, idCase;\r\n        var properties = params.properties;\r\n        // var form = self.getFormContainer();\r\n        var defer = new $.Deferred();\r\n        var data = params.data || {};\r\n        var bRefreshForm = typeof (params.bRefreshForm) != \"undefined\" ? params.bRefreshForm : true;\r\n        var notCollect = params.notCollect ? params.notCollect : undefined;\r\n\r\n        // Collect data\r\n        if (!(notCollect && !$.isEmptyObject(data))) {\r\n            self.collectRenderValuesForSubmit(data);\r\n        }\r\n        self.startLoading();\r\n\r\n        //idCase = self.getCacheIdCase();\r\n\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        $.when(deferredsToWait).then(function () {\r\n            // Submit the form\r\n            self.dataService.submitData({\r\n                action: \"SUBMITONCHANGE\",\r\n                data: data,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: self.properties.xpathContext,\r\n                idPageCache: properties.idPageCache,\r\n                contexttype: properties.contexttype\r\n            }).done(function (response) {\r\n                // Cancel previous multiactions and process property value\r\n                self.cancelPreviousRequest();\r\n                // After successfully response refresh the form\r\n                self.endLoading();\r\n                // If response message has error in validation, do not refresh the form\r\n                // and show validation message\r\n                if (response && response.type == \"validationMessages\") {\r\n                    if (typeof self.clearValidationMessages == \"function\") {\r\n                        self.clearValidationMessages();\r\n                    }\r\n\r\n                    self.addValidationMessage(response.messages);\r\n                    defer.resolve();\r\n                } else if (bRefreshForm) {\r\n                    var focusIdentifier = {\r\n                        id: properties.id,\r\n                        xpath: properties.xpath\r\n                    };\r\n                    if (properties.idCase !== undefined) {\r\n                        $.extend(focusIdentifier, {\r\n                            idCaseObject: bizagi.cache.idCaseObject\r\n                        });\r\n                    }\r\n                    if (response.IdScope) {\r\n                        self.properties.idStartScope = response.IdScope;\r\n                    }\r\n                    $.when(self.refreshForm(focusIdentifier)).done(function () {\r\n                        defer.resolve();\r\n                    }).fail(function () {\r\n                        defer.resolve();\r\n                    });\r\n                } else {\r\n                    defer.resolve();\r\n                }\r\n            }).fail(function (message) {\r\n                self.endLoading();\r\n                var objMessage = JSON.parse((typeof message == 'object' && message.responseText) ? message.responseText : {}) || {};\r\n                var strMessage = objMessage.message || message;\r\n                // Clear previous validations\r\n                self.validationController.clearValidationMessages();\r\n                if (objMessage.type == \"alert\") {\r\n                    self.validationController.showAlertMessage(strMessage);\r\n                } else {\r\n                    self.validationController.showErrorMessage(strMessage);\r\n                }\r\n                defer.resolve();\r\n            });\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    cancelPreviousRequest: function () {\r\n        if (bizagi.multiactionConnection && bizagi.multiactionConnection.length) {\r\n            var length = bizagi.multiactionConnection.length;\r\n            var i = 0, connection;\r\n            for (; i < length; i++) {\r\n                connection = bizagi.multiactionConnection.pop();\r\n                if (connection && connection.abort) {\r\n                    bizagi.showErrorAlertDialog = false;\r\n                    connection.abort();\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    prepareCheckpointAction: function (buttonId) {\r\n        var self = this;\r\n\r\n        var checkpointAction = self.dataService.sendCheckpoint({\r\n            url: self.properties.checkpointUrl,\r\n            idRender: buttonId,\r\n            xpath: \"\",\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache,\r\n            prepare: true\r\n        });\r\n\r\n        checkpointAction.tag = \"checkpoint\";\r\n\r\n        return checkpointAction;\r\n    },\r\n\r\n    prepareCommitAction: function (buttonId) {\r\n        var self = this;\r\n\r\n        var commitAction = self.dataService.commitLinkForm({\r\n            url: self.properties.commitUrl,\r\n            idRender: buttonId,\r\n            xpath: \"\",\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache,\r\n            prepare: true\r\n        });\r\n\r\n        commitAction.tag = \"commit\";\r\n\r\n        return commitAction;\r\n    },\r\n\r\n    sendRollbackAction: function (buttonId) {\r\n        var self = this;\r\n\r\n        self.dataService.rollbackLinkForm({\r\n            url: self.properties.rollbackUrl,\r\n            idRender: buttonId,\r\n            xpath: \"\",\r\n            xpathContext: self.properties.xpathContext,\r\n            idPageCache: self.properties.idPageCache\r\n        });\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n        self.endLoading();\r\n\r\n        setTimeout(function () {\r\n            if (self.params) {\r\n                delete self.params.canvas;\r\n            }\r\n            delete self.params;\r\n            delete self.control;\r\n            if (self.validationController) {\r\n                self.unbind(\"rendervalidate\");\r\n                delete self.validationController;\r\n            }\r\n\r\n            if (self.actionController) {\r\n                self.actionController.unbindActions();\r\n                delete self.actionController;\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    },\r\n    getButton: function (guid) {\r\n        return $(\".ui-bizagi-button[data-id='\" + guid + \"']\", this.container);\r\n    },\r\n\r\n    getFloatingButton: function (guid) {\r\n        return $(\"li[data-id='\" + guid + \"']\", this.container);\r\n    },\r\n\r\n    propagateExternalEvents: function (evt) {\r\n        // Menu-Overflow\r\n        var $menuOverflow = $(\".bz-overflow-menu\");\r\n        if ($menuOverflow)\r\n            $(document).trigger('click.overflow');\r\n\r\n        // ECM with preview image\r\n        var zoomIsOpen = $(\".jquery-image-zoom\") && $(\".jquery-image-zoom\").css(\"display\") == \"block\";\r\n\r\n        if (zoomIsOpen)\r\n            $(\"div.jquery-image-zoom a\").click();\r\n    },\r\n\r\n    getButtonAction: function (action) {\r\n        return this.allowValidateAndSaveAction && action === \"validate\" ? \"save\" : action;\r\n    }\r\n\r\n});\r\n","/**\r\n * Render a new type of form called template\r\n *\r\n * @author Edward Morales\r\n */\r\n$.Class.extend(\"bizagi.rendering.formTemplate\", {\r\n\r\n    /**\r\n     *   Constructor\r\n     */\r\n    init: function (params) {\r\n        this._super(params);\r\n        if(params.paramsRender && params.paramsRender.contextEvent){\r\n            self.contextEvent = params.paramsRender.contextEvent;\r\n        }\r\n    },\r\n\r\n\t/**\r\n\t * Process controls on template\r\n\t * @param template\r\n\t * @param controls\r\n\t * @return {*}\r\n\t */\r\n\tprocessTemplate: function(template, controls) {\r\n\t    var regexControl = /\\{\\{([\\w:]*)\\s*(\\{[\"':,-\\[\\]\\w\\s]*\\})\\}\\}/g;\r\n\t\tvar regexRepeater = /\\{\\{(((repeater)\\s*(\\{[\"':,-\\[\\]\\w\\s]*\\}))|([\\/repeater]+:item)|(\\/repeater)|(repeater)|(separator))\\}\\}/g;\r\n\r\n\t\t// Remove all repeaters key words\r\n\t\tvar processedTemplate = template.replace(regexRepeater, \"\");\r\n\r\n\t\t// replace controls\r\n\t\tprocessedTemplate = processedTemplate.replace(regexControl, function(match, g1, g2, offset, string) {\r\n\t\t    var parameters = JSON.parse(g2);\r\n            \r\n\t\t\treturn controls[parameters.id] || '';\r\n\t\t});\r\n\r\n\t    processedTemplate = processedTemplate.replace(/{{([\\w:]*)\\s*}}/g, function() {\r\n\t        return '';\r\n\t    });\r\n\r\n\r\n\t\treturn processedTemplate;\r\n\t},\r\n\r\n\t/**\r\n\t * Render layout container\r\n\t * @return {*}\r\n\t */\r\n\trenderContainer: function() {\r\n\t\tvar self = this;\r\n\t\tvar layoutCollection = self.getRenderByType(\"layout\");\r\n\t\tvar layout = (layoutCollection.length > 0) ? layoutCollection[0] : {};\r\n\t\tvar template = (typeof layout.getTemplate == \"function\") ? layout.getTemplate() : \"\";\r\n\t\tvar css = (typeof layout.getCss == \"function\") ? layout.getCss() : \"\";\r\n\t\tvar mode = self.getMode();\r\n\t\tvar layoutGuid = self.properties.layoutguid || Math.guid();\r\n\r\n\t\tvar controls = {};\r\n\r\n\t\t/**\r\n\t\t * Render all elements within first layout container\r\n\t\t */\r\n\t\tif(layout.children) {\r\n\t\t\t$.each(layout.children, function(i, child) {\r\n\t\t\t    // ignore layoutPlaceholder control in execution\r\n\t\t\t    if (!(mode == 'execution' && child.properties.type == 'layoutPlaceholder')) {\r\n\r\n\t\t\t        var type = child.getElementType();\r\n\t\t\t        if (type == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n\t\t\t            controls[child.properties.id] = child.renderElement();\r\n\t\t\t        }\r\n\t\t\t        if (type == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n\t\t\t            controls[child.properties.id] = child.renderContainerHtml();\r\n\t\t\t        }\r\n\t\t\t        self.childrenHash[child.properties.uniqueId] = child;\r\n\t\t\t    }\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\t// Load css\r\n\t\tbizagi.util.loadStyle(css, layoutGuid);\r\n\r\n\t\treturn self.processTemplate(template, controls);\r\n\t},\r\n\r\n    /**\r\n     * Get the context in which loads the formTemplate\r\n     *\r\n     */\r\n    getContextEvent: function(){\r\n        return self.contextEvent;\r\n    }\r\n});\r\n","$.Class.extend(\"bizagi.rendering.layout\", {}, {\r\n\r\n\t/**\r\n\t * Get html template\r\n\t * @return {*}\r\n\t */\r\n\tgetTemplate: function() {\r\n\t    var self = this;\r\n\t    var mode = self.getMode();\r\n\t    var html = self.properties.html || \"\";\r\n\r\n        // Add a container, this is important in design to calculate the scroll \r\n\t    if (mode == 'design' && html) {\r\n            html = \"<div class='bz-design-template'>\" + html + \"</div>\"\r\n\t    }\r\n\t\t\r\n\t\treturn bizagi.util.stripslashes(html);\r\n\t},\r\n\r\n\t/**\r\n\t * Get string css of layout container\r\n\t * @return {*}\r\n\t */\r\n\tgetCss: function() {\r\n\t    var self = this;\r\n\t\tvar css = self.properties.css || \"\";\r\n\r\n\t\tvar mode = self.getMode();\r\n\t\tif (mode == \"design\") {\r\n\t\t    css = css && css.desktop;\r\n\t\t}\r\n\r\n\t\treturn bizagi.util.stripslashes(css);\r\n\t},\r\n\r\n\r\n\t/*\r\n\t *   Template method to process each jquery object\r\n\t *   must be overriden in each container\r\n\t */\r\n\tpostRenderContainer: function(container) {\r\n\t\tvar self = this;\r\n\t\tvar mode = self.getMode();\r\n\r\n\t\t// Resolve rendering deferred\r\n\t\tif(self.renderingDeferred)\r\n\t\t\tself.renderingDeferred.resolve();\r\n\r\n\t\t// Process children elements\r\n\t\tself.container = container;\r\n\t\tself.executeChildrenPostRender(container);\r\n\r\n\t\tif(mode == \"execution\") {\r\n\t\t\t// Apply handlers\r\n\t\t\tself.configureHandlers();\r\n\t\t}\r\n\t\tif(mode == \"design\") {\r\n\t\t\t// Configure view\r\n\t\t\tself.configureDesignView();\r\n\t\t}\r\n\t\tif(mode == \"layout\") {\r\n\t\t\t// Configure view\r\n\t\t\tself.configureDesignView();\r\n\t\t\tself.configureLayoutView();\r\n\t\t}\r\n\t}\r\n});","/*\r\n*   Name: BizAgi Accordion Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a accordion container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.accordion\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Enumerate the children appending a property\r\n        $.each(self.children, function (i, child) {\r\n            child.properties.ordinal = i;\r\n        });\r\n    },\r\n\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"accordion\");\r\n\r\n        // Render the accordion\r\n        var html = $.fasttmpl(template, {\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Accordion Item Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a accordion item class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.accordionItem\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"accordionItem\");\r\n\r\n        // Render the accordionItem\r\n        var html = $.fasttmpl(template, {\r\n            id: properties.id,\r\n            ordinal: properties.ordinal,\r\n            displayName: properties.displayName,\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Fires when the accordionItem is selected \r\n    */\r\n    activate: function () {\r\n        var self = this;\r\n        self.active = true;\r\n    },\r\n\r\n    /*  \r\n    *   Return the current focuses container\r\n    */\r\n    getFocus: function () {\r\n        var self = this;\r\n        var focus = self._super();\r\n        if (bizagi.util.isEmpty(focus) && self.active) {\r\n            focus = self.properties.id;\r\n        }\r\n\r\n        return focus;\r\n    }\r\n\r\n\r\n});\r\n\r\n","/*\r\n*   Name: Bizagi Group Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a group container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.group\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Default properties\r\n        var properties = self.properties;\r\n\r\n        properties.helpText = properties.helpText || properties.displayName;\r\n\r\n        // Extend css property \r\n        properties.cssclass = properties.cssclass || \"cssClassContainer\";\r\n\r\n        properties.collapse = (typeof properties.collapse != \"undefined\" && bizagi.util.parseBoolean(properties.collapse)) ? true : false;\r\n    },\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"group\");\r\n\r\n        // Define icons\r\n        self.expandedIcon = self.getExpandedIcon();\r\n        self.collapsedIcon = self.getCollapsedIcon();\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            expandedClassIcon: self.expandedIcon,\r\n            displayName: properties.displayName,\r\n            editable: properties.editable,\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            collapse: properties.collapse,\r\n            isDesign: (self.getMode() !== \"execution\"),            \r\n            messageValidation: properties.messageValidation,\r\n            cssclass: properties.cssclass,\r\n            guid: properties.guid\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Returns the expanded icon\r\n    */\r\n    getExpandedIcon: function () { },\r\n\r\n    /*\r\n    *   Returns the collapsed icon\r\n    */\r\n    getCollapsedIcon: function () { },\r\n\r\n    /* \r\n    *   Expands or collapse the container \r\n    */\r\n    toogleContainer: function (argument, bImmediate) { }\r\n\r\n});","/*\r\n*   Name: BizAgi Horizontal Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a tab item class for all devices\r\n*/\r\n\r\n\r\n$.Class.extend(\"bizagi.rendering.horizontal\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"horizontal\");\r\n\r\n        // Render the container\r\n        var html = $.fasttmpl(template, {\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi Panel Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a panel container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.panel\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function(params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Override properties\r\n        var properties = self.properties;\r\n        properties.displayName = properties.displayName || \"\";\r\n    },\r\n\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function() {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"panel\");\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            displayName: properties.displayName,\r\n            loading: properties.loading,\r\n            message: properties.message,\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            cssClass: properties.cssclass\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Process the html rendering object\r\n    */\r\n    postRenderContainer: function(panel) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set height\r\n        if (properties.height) {\r\n            panel.height(properties.height);\r\n        }\r\n\r\n        // Call base\r\n        self._super(panel);\r\n    }\r\n\r\n});","/*\r\n*   Name: Bizagi Panel Container Class\r\n*   Author: David Romero\r\n*   Comments:\r\n*   -   This script will define a panel container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.contentPanel\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Override properties\r\n        var properties = self.properties;\r\n        properties.displayName = properties.displayName || \"\";\r\n    },\r\n\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"contentPanel\");\r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            displayName: properties.displayName,\r\n            mode: self.getMode(),\r\n            uniqueId: properties.uniqueId,\r\n            isDesign: self.getMode() === \"design\",\r\n            messageValidation: properties.messageValidation,\r\n            cssClass: properties.cssclass,\r\n            guid: properties.guid\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Process the html rendering object\r\n    */\r\n    postRenderContainer: function (panel) {\r\n        // Call base\r\n        this._super(panel);\r\n    }\r\n\r\n});","/*\r\n*   Name: BizAgi Panel Container Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define a panel container class for all devices\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.searchForm\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"searchForm\");\r\n\r\n\r\n        if (properties.contexttype != \"entity\" && self.parent) {\r\n            properties.contexttype = (typeof self.parent.getContextType == 'function') ? self.parent.getContextType() : \"\";\r\n        } \r\n\r\n        // Render the panel\r\n        var html = $.fasttmpl(template, {\r\n            displayName: properties.displayName,\r\n            uniqueId: properties.uniqueId\r\n        });\r\n\r\n        // Render children\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n\r\n        // Render result\r\n        html = html.replace(\"{{result}}\", self.renderResult());\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Perform a search and render the results\r\n    */\r\n    performSearch: function (searchParams) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set parameter to search\r\n        properties.searchParams = searchParams;\r\n\r\n        // Submit the search to the server\r\n        self.submitSearch();\r\n    },\r\n\r\n    /*\r\n    *   Submits the query to the server\r\n    */\r\n    submitSearch: function () {\r\n        var self = this;\r\n\r\n        // Makes the results to update its contents\r\n        self.refreshResults();\r\n    },\r\n\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n        return self.parent.ready();\r\n    },\r\n\r\n    /*\r\n    *   Method to fill the result data\r\n    *   (THIS IS CALLED WITHIN GRID RENDER SCOPE)\r\n    */\r\n    getRemoteData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n\r\n        // Collect data\r\n        var data = self.collectSearchValues();\r\n\r\n        if (bizagi.util.isMapEmpty(data)) {\r\n            bizagi.showMessageBox(this.getResource(\"render-search-advanced-no-filters\"), this.getResource(\"render-form-dialog-box-search\"), \"error\");\r\n            return null;\r\n        }\r\n\r\n        params.rows = (properties.searchParams && properties.searchParams.maxRecords && properties.searchParams.maxRecords > 0) ? properties.searchParams.maxRecords : params.rows;\r\n\r\n        // The Grid only support one row per page in smartphone (DRAGON-41733 / QAF-3916)         \r\n        if (properties.searchParams && typeof(properties.searchParams.maxRows) !== \"undefined\") {\r\n            params.rows = properties.searchParams.maxRows || params.rows;\r\n        }\r\n\r\n        // Resolve with remote data\r\n        self.dataService.submitSearch($.extend(params, {\r\n            url: properties.dataUrl,\r\n            idRender: properties.idRender,\r\n            idPageCache: properties.idPageCache,\r\n            idSearchForm: properties.id,\r\n            allowFullSearch: (properties.searchParams.allowFullSearch ? properties.searchParams.allowFullSearch : null),\r\n            maxRecords: (properties.searchParams.maxRecords > 0 ? properties.searchParams.maxRecords : null),\r\n            criteria: data\r\n\r\n        })).done(function (response) {\r\n\r\n            // Resolve with fetched data    \r\n            properties.page = response.page;\r\n            properties.records = response.records;\r\n            properties.totalPages = response.totalPages || 0;\r\n\r\n            //In tablets are allowed about 10000 records as maximum\r\n            if (response.records > 10000) {\r\n                properties.deviceMaxRecordsExceeded = true;\r\n                response.deviceMaxRecordsExceeded = true;\r\n            } else {\r\n                delete properties.deviceMaxRecordsExceeded;\r\n            }\r\n            \r\n            defer.resolve(response);\r\n\r\n            // Call virtual method\r\n            self.onSearchFinished();\r\n        }).fail(function (errorObject) {\r\n            bizagi.showErrorAlertDialog = false;\r\n            if (errorObject.responseText) {\r\n                try {\r\n                    var message = JSON.parse(errorObject.responseText).message;\r\n                    bizagi.showMessageBox(message, \"\", \"error\");\r\n                } catch (e) { }\r\n            }\r\n            defer.reject();\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Iterate through all the renders in the container and fills the hashtable\r\n    *   - Overriden because server needs this in array\r\n    */\r\n    collectSearchValues: function () {\r\n        var self = this;\r\n\r\n        // Collect data\r\n        var data = {};\r\n        this.collectRenderValues(data);\r\n\r\n        // Changes to array\r\n        var submitArray = [];\r\n        for (key in data) {\r\n            var xpath = key;\r\n            var value = data[key];\r\n            var operation = self.getCriteriaOperation(self.getRender(xpath));\r\n            var criteriaData = {};\r\n            if (!bizagi.util.isEmpty(value)) {\r\n                criteriaData[\"xpath\"] = xpath;\r\n                criteriaData[\"value\"] = value;\r\n                criteriaData[\"operation\"] = operation;\r\n                submitArray.push(criteriaData);\r\n            }\r\n        }\r\n\r\n        return submitArray;\r\n    },\r\n\r\n    /*\r\n    *   This method find out the criterial operation to be executed according to\r\n    *   data type. Text renders use LIKE operation, but other data types such like\r\n    *   numerics use exact match operatiors\r\n    */\r\n    getCriteriaOperation: function (render) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var operation = \"EQUALS\";\r\n        if (render.properties.dataType == \"15\") {\r\n            if (typeof render.properties.typeSearch === \"undefined\" || render.properties.typeSearch === \"approx\"){\r\n                if (properties.allowFullSearch) {\r\n                    operation = \"FULLLIKE\";\r\n                }\r\n                else {\r\n                    operation = \"LIKE\";\r\n                }\r\n            }\r\n        }\r\n        return operation;\r\n    },\r\n\r\n    /*\r\n    *   Render the result controls for the query\r\n    *   Resolved in each device\r\n    */\r\n    renderResult: function () { },\r\n\r\n    /*\r\n    *   Refresh the result panel, making it to query data with current criteria\r\n    */\r\n    refreshResults: function () { },\r\n\r\n    /*\r\n    *   Function to parse the dataType\r\n    */\r\n    parseAdditionalProperties: function (dataType) {\r\n\r\n        // Number\r\n        if (dataType == 1 || dataType == 2 || dataType == 3 ||\r\n            dataType == 4 || dataType == 6 || dataType == 7 ||\r\n            dataType == 10 || dataType == 11 ) {\r\n\r\n            return { type: \"columnNumber\" };\r\n        }\r\n\r\n\r\n        // Oracle Number\r\n        if (dataType == 29) {\r\n\r\n            return { type: \"columnNumberScientificNotation\" };\r\n        }\r\n\r\n        // Money\r\n        if (dataType == 8) {\r\n\r\n            return { type: \"columnMoney\" };\r\n        }\r\n\r\n        // Date\r\n        if (dataType == 12 || dataType == 13) {\r\n\r\n            return { type: \"columnDate\" };\r\n        }\r\n\r\n        // Boolean\r\n        if (dataType == 5) {\r\n\r\n            return { type: \"columnBoolean\" };\r\n        }\r\n\r\n        // Text\r\n        return { type: \"columnText\" };\r\n    },\r\n\r\n    /*\r\n    *\r\n    */\r\n    onSearchFinished: function () {\r\n        // Empty function, overrided for Tablet version for now\r\n    }\r\n\r\n\r\n});\r\n\r\n","/*\r\n *   Name: BizAgi Tab Container Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define a tab container class for all devices\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.tab\", {}, {\r\n\r\n    /*\r\n     *   Constructor\r\n     */\r\n    initializeData: function(params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Default properties\r\n        var properties = self.properties;\r\n        properties.helpText = properties.helpText || properties.displayName;\r\n\r\n        // Extend css property\r\n        properties.cssclass = properties.cssclass || \"\";\r\n    },\r\n\r\n    /*\r\n     *   Render the container layout\r\n     */\r\n    renderContainer: function() {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var tabItems = $.map(self.children, function(child, key) {\r\n            child.properties.counter = key;\r\n            child.properties.tooltip =  child.properties.tooltip || child.properties.displayName || \"\";\r\n            return child.properties;\r\n        });\r\n        var template = self.renderFactory.getTemplate(\"tab\");\r\n        var mode = self.getMode();\r\n\r\n        // Render the tab\r\n        var html = $.fasttmpl(template, {\r\n            id: properties.id,\r\n            tabs: tabItems,\r\n            mode: mode,\r\n            isDesign: (self.getMode() !== \"execution\"),\r\n            editable: properties.editable,\r\n            tabOrientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            cssclass: properties.cssclass\r\n        });\r\n\r\n        // Get active container based on focus\r\n        var activeTab = self.activeTab = self.getActiveTab();\r\n\r\n        // Render children\r\n        for (var i = 0, length = self.children.length; i < length; i++) {\r\n            // Load on demand other tabs besides the first one\r\n            self.children[i].properties.loadOnDemand = (i != activeTab);\r\n        }\r\n        html = self.replaceChildrenHtml(html, self.renderChildrenHtml());\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     *   Return the active tab containing the focus, or the first tab\r\n     */\r\n    getActiveTab: function() {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var formParams = this.getFormContainer().getParams();\r\n        var mode = self.getMode();\r\n\r\n        if (mode === \"execution\") {\r\n            if (!formParams.isRefresh && properties.activeTab) {\r\n                self.getFormContainer().setFocusedElement(properties.activeTab);\r\n            }\r\n        }\r\n\r\n        var selectedTabs = formParams && formParams.selectedTabs ? formParams.selectedTabs : {};\r\n\r\n        // Fetch from selected tabs collection\r\n        if (selectedTabs[self.properties.id] >= 0) {\r\n            return selectedTabs[self.properties.id];\r\n        }\r\n\r\n        // Check for focused elements\r\n        for (var i = 0, length = self.children.length; i < length; i++) {\r\n            // Load on demand other tabs besides the first one\r\n            if (self.children[i].containsFocusedElement()) return i;\r\n        }\r\n        return 0;\r\n    },\r\n\r\n    /**\r\n     * Update position of tab\r\n     * @param index\r\n     */\r\n    setActiveTab: function (index) {\r\n        var self = this;\r\n\r\n        self.triggerHandler(\"selected\", { index: index, tab: self.children[index] });\r\n\r\n        if (self.children[index]) {\r\n            var form = self.getFormContainer();\r\n\r\n            self.children[index].activate();\r\n            self.activeTab = index;\r\n\r\n            var selectedTab = {};\r\n            selectedTab[self.children[index].parent.properties.id] = index;\r\n            form.setParam(\"selectedTabs\", selectedTab);\r\n        }\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Tab Item Container Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a tab item class for all devices\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.tabItem\", {}, {\r\n\r\n    /*\r\n    *   Render the container layout\r\n    */\r\n    renderContainer: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var template = self.renderFactory.getTemplate(\"tabItem\");\r\n\r\n        // Render the tabItem\r\n        var html = $.fasttmpl(template, {\r\n            id: properties.id,\r\n            uniqueId: properties.uniqueId,\r\n            counter: properties.counter,\r\n            isDesign: (self.getMode() !== \"execution\")\r\n        });\r\n\r\n        // Render content\r\n        html = self.renderTabContent(html);\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    * Renders the tab content\r\n    */\r\n    renderTabContent: function (html) {\r\n        // Render children\r\n        return this.replaceChildrenHtml(html, this.renderChildrenHtml());\r\n    },\r\n\r\n    /*\r\n    *   Fires when the tab is selected \r\n    */\r\n    activate: function () {\r\n        this.active = true;\r\n    },\r\n\r\n    /*  \r\n    *   Return the current focuses container\r\n    */\r\n    getFocus: function () {\r\n        var self = this;\r\n        var focus = self._super();\r\n        if (bizagi.util.isEmpty(focus) && self.active) {\r\n            focus = self.properties.id;\r\n        }\r\n\r\n        return focus;\r\n    },\r\n\r\n    /*\r\n    *   Return true if this tab contains the active focused element\r\n    */\r\n    containsFocusedElement: function () {\r\n        var self = this;\r\n        var focus = self.getFormContainer().getFocusedElement();\r\n\r\n        if (focus) {\r\n\r\n            // Locate element\r\n            if (focus.xpath) {\r\n                // Search by xpath and id\r\n                var elements = self.getFormContainer().getRenders(focus.xpath);\r\n                var element;\r\n\r\n                $.each(elements, function (i, item) {\r\n                    // Just select editable control\r\n                    if (item.properties.id == focus.id && item.properties.editable) {\r\n                        element = item;\r\n                    }\r\n                });\r\n            } else {\r\n                // Search just using id\r\n                var element = self.getFormContainer().getContainer(focus) || self.getFormContainer().getRenderById(focus);\r\n            }\r\n\r\n            // Search element parent\r\n            if (element) {\r\n                while (element.parent) {\r\n                    if (element.properties.id == self.properties.id || element.parent.properties.id == self.properties.id) return true;\r\n                    element = element.parent;\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n});\r\n\r\n","/*\r\n *   Name: Bizagi Render Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a base render class with common stuff related to all renders\r\n */\r\n\r\nbizagi.rendering.element.extend(\"bizagi.rendering.render\", {\r\n    postRenderTimeout: 0,\r\n    maxRendersPerScreen: 50,\r\n    rendersExecuted: 0,\r\n    renderOptimization: false,\r\n    TYPE_QUERY_FORM: \"queryForm\",\r\n    startOptimization: function () {\r\n        bizagi.rendering.render.postRenderTimeout = 500;\r\n        bizagi.rendering.render.rendersExecuted = 0;\r\n        // Cancelled optimization temporally, because its on experimental stage\r\n        bizagi.rendering.render.renderOptimization = false;\r\n    },\r\n    stopOptimization: function () {\r\n        bizagi.rendering.render.postRenderTimeout = 0;\r\n        bizagi.rendering.render.rendersExecuted = 0;\r\n        bizagi.rendering.render.renderOptimization = false;\r\n    }\r\n}, {\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        var form = self.getFormContainer();\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n\r\n        properties.included = (typeof properties.included != \"undefined\") ? bizagi.util.parseBoolean(properties.included) : false;\r\n        properties.uniqueId = Math.ceil(Math.random() * 1000000);\r\n        properties.displayName = properties.displayName || \"\";\r\n        properties.editable = (typeof properties.editable != \"undefined\") ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.visible = (typeof properties.visible != \"undefined\") ? bizagi.util.parseBoolean(properties.visible) : true;\r\n        properties.includedInResult = (typeof properties.includedInResult != \"undefined\") ? bizagi.util.parseBoolean(properties.includedInResult) : false;\r\n\r\n        var renderType = bizagi.util.normalizeType(properties.type);\r\n        if (/^hidden$/i.test(renderType)) {\r\n            properties.visible = false;\r\n        }\r\n\r\n        properties.required = (typeof properties.required != \"undefined\") ? bizagi.util.parseBoolean(properties.required) : false;\r\n        properties.submitOnChange = (typeof properties.submitOnChange != \"undefined\") ? bizagi.util.parseBoolean(properties.submitOnChange) : false;\r\n        properties.maxLength = properties.maxLength || 0;\r\n        properties.helpText = bizagi.util.trim(properties.helpText) || \"\";\r\n        properties.textFormat = properties.textFormat || {};\r\n        properties.valueFormat = properties.valueFormat || {};\r\n        properties.isHidden = (typeof properties.isHidden != \"undefined\") ? bizagi.util.parseBoolean(properties.isHidden) : false;\r\n        properties.visible = (properties.isHidden) ? false : properties.visible;\r\n\r\n        // Old color and background color\r\n        if (properties.color) {\r\n            properties.textFormat.color = properties.color;\r\n        }\r\n\r\n        if (properties.backgroundColor) {\r\n            properties.textFormat.backgroundColor = properties.backgroundColor;\r\n        }\r\n\r\n        // Non-editable fields cannot be required\r\n        properties.required = properties.editable ? properties.required : false;\r\n\r\n        // Override orientation from parent if not set\r\n        properties.orientation = properties.orientation || \"auto\";\r\n\r\n        // Check contexttype\r\n        properties.contexttype = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : \"\";\r\n\r\n        // Save original properties\r\n        self.originalProperties = {\r\n            textFormat: {\r\n                color: properties.textFormat.color,\r\n                backgroundColor: properties.textFormat.backgroundColor\r\n            },\r\n            valueFormat: {\r\n                color: properties.textFormat.color,\r\n                backgroundColor: properties.textFormat.backgroundColor\r\n            },\r\n            visible: properties.visible,\r\n            editable: properties.editable,\r\n            required: properties.required,\r\n            labelAlign: properties.labelAlign,\r\n            valueAlign: properties.valueAlign\r\n        };\r\n\r\n        // Create value property\r\n        self.value = typeof (properties.value) !== \"undefined\" ? properties.value : null;\r\n\r\n        // Register original value property\r\n        self.properties.originalValue = self.value;\r\n        self.properties.previousValue = self.value;\r\n\r\n        // Calculate layout properties\r\n        self.calculateInitialLayoutProperties();\r\n    },\r\n    /*\r\n    *   Calculate aligns, display types, rtl and widths\r\n    */\r\n    calculateInitialLayoutProperties: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set visual defaults\r\n        properties.displayType = properties.displayType || \"normal\";\r\n        properties.labelAlign = properties.labelAlign || self.getDefaultLabelAlign(properties.displayType);\r\n        properties.valueAlign = properties.valueAlign || self.getDefaultValueAlign(properties.displayType);\r\n\r\n        // Check rtl orientation\r\n        if (properties.orientation === \"rtl\") {\r\n            properties.labelAlign = self.getRTLAlign(properties.labelAlign);\r\n            properties.valueAlign = self.getRTLAlign(properties.valueAlign);\r\n        }\r\n\r\n        // Calculate render with\r\n        var renderWidth = self.calculateRenderWidth(properties.labelWidth, properties.valueWidth, properties.displayType);\r\n        properties.labelWidth = renderWidth.label;\r\n        properties.valueWidth = renderWidth.control;\r\n\r\n        if (properties.layoutType === \"percentage\") {\r\n            properties.valueWidth = renderWidth.control;\r\n        }\r\n\r\n        if (properties.labelWidth == 0) {\r\n            properties.displayType = \"value\";\r\n            properties.valueWidth = renderWidth.control;\r\n        }\r\n\r\n        if (properties.valueWidth == 0) {\r\n            properties.displayType = \"label\";\r\n        }\r\n\r\n        if (properties.type === \"userfield\") {\r\n            if (properties.displayType === \"both\") {\r\n                properties.valueWidth = properties.valueWidth || 50;\r\n                properties.labelWidth = properties.labelWidth || 50;\r\n            } else if (properties.displayType === \"vertical\") {\r\n                properties.valueWidth = 100;\r\n                properties.labelWidth = 100;\r\n            } else {\r\n                properties.valueWidth = 100;\r\n                properties.labelWidth = 0;\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () {\r\n        return bizagi.rendering.element.ELEMENT_TYPE_RENDER;\r\n    },\r\n    /*\r\n    *   Returns the html templated element\r\n    */\r\n    render: function (renderTemplateName) {\r\n        return this.renderElement(renderTemplateName);\r\n    },\r\n    /*\r\n    *   Returns the html templated element\r\n    */\r\n    renderElement: function (renderTemplateName) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        // Start rendering deferred\r\n        self.renderingDeferred = new $.Deferred();\r\n\r\n        // Set render template\r\n        renderTemplateName = renderTemplateName || \"render\";\r\n        var renderTemplate = self.renderFactory.getTemplate(renderTemplateName);\r\n\r\n        // Resolve render label\r\n        var label = properties.displayName;\r\n        if (typeof label == \"string\") {\r\n            label = label.replaceAll(\"&\", \"&amp;\");\r\n            label = label.replaceAll(\"$\", \"&#36;\");\r\n            label = label.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\r\n            label = label.replaceAll(\"\\\"\", \"&#34;\").replaceAll(\"'\", \"&#39;\").replaceAll(\"/\", \"&#47;\");\r\n            label = label.replaceAll(\"\\\\n\", \"<br/>\");\r\n            label = label.replaceAll(\"\\n\", \"<br/>\");\r\n        }\r\n\r\n        var isFullRender = bizagi.util.detectDevice() !== \"desktop\" && (properties.type === \"association\" || properties.type === \"uploadecm\" || ((properties.type === \"actionLauncher\" || properties.type === \"polymorphicLauncher\") && bizagi.util.isTabletDevice()) || (properties.type === \"grid\" && !bizagi.util.isTabletDevice()));\r\n        var labelWidth = parseFloat(properties.labelWidth);\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(renderTemplate, {\r\n            label: label, helpText: properties.helpText,\r\n            editable: properties.editable,\r\n            isExtendedText: (properties.type == \"text\" && properties.isExtended),\r\n            orientation: properties.orientation,\r\n            uniqueId: properties.uniqueId,\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            tag: properties.tag,\r\n            displayType: properties.displayType,\r\n            displayOptionClass: self.getDisplayOptionClass(properties.displayType),\r\n            labelAlignClass: self.getAlignClass(properties.labelAlign),\r\n            valueAlignClass: self.getAlignClass(properties.valueAlign),\r\n            labelWidth: labelWidth,\r\n            stringLabelWidth: labelWidth + (properties.layoutType == 'pixels' ? 'px' : '%'),\r\n            valueWidth: parseFloat(properties.valueWidth),\r\n            stringValueWidth: parseFloat(properties.valueWidth) + (properties.layoutType == 'pixels' ? 'px' : '%'),\r\n            layoutType: properties.layoutType,\r\n            isDesign: self.getMode() === \"design\",\r\n            messageValidation: properties.messageValidation,\r\n            printVersion: form.params.printversion,\r\n            cssClass: properties.cssclass || \"\",\r\n            includedInResult: properties.includedInResult,\r\n            included: properties.included,\r\n            type: properties.type,\r\n            showFullRender: isFullRender,\r\n            required: properties.required,\r\n            helpText: properties.helpText\r\n        });\r\n\r\n        // Render internal control html\r\n        var result = self.internalRenderControl();\r\n        if (!result) {\r\n            result = \"\";\r\n        }\r\n\r\n        // Check if this is an async element or not\r\n        var async = typeof (result) === \"object\" && result.done;\r\n        if (!async) {\r\n            html = self.replaceControlHtml(html, result);\r\n\r\n        } else {\r\n            if (result.state() === \"resolved\") {\r\n                // Fetch resolved result\r\n                html = self.replaceControlHtml(html, self.resolveResult(result));\r\n                self.asyncRenderDeferred = null;\r\n            } else {\r\n                // Wait for result\r\n                self.asyncRenderDeferred = result;\r\n                html = self.replaceControlHtml(html, \"\");\r\n            }\r\n        }\r\n\r\n        return html;\r\n    },\r\n    /*\r\n    *   Returns the resolved result from a promise when the promise has been executed already\r\n    */\r\n    resolveResult: function (promise) {\r\n        return bizagi.resolveResult(promise);\r\n    },\r\n    /*\r\n    *   Check if the jquery element is ready or not\r\n    */\r\n    isRendered: function () {\r\n        var self = this;\r\n        if (!self.renderingDeferred) {\r\n            return false;\r\n        }\r\n        return self.renderingDeferred.promise();\r\n    },\r\n    /*\r\n    *   Renders the control html\r\n    */\r\n    internalRenderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        self.control = null;\r\n\r\n        if (self.renderFactory.printVersion) {\r\n            properties.editable = false;\r\n            return self.renderControl();\r\n        } else if (properties.editable) {\r\n            return self.renderControl();\r\n        }\r\n\r\n        return self.renderReadOnly();\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    postRenderElement: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set element variable\r\n        self.element = element;\r\n\r\n        if (properties.submitOnChange)\r\n            self.configureSubmitOnChange();\r\n\r\n        // Process internal layout\r\n        isLabelFormat = true;\r\n\r\n        var executePostRender = function (_element) {\r\n            if (bizagi.rendering.render.renderOptimization &&\r\n                bizagi.rendering.render.rendersExecuted > bizagi.rendering.render.maxRendersPerScreen) {\r\n\r\n                // Execute post-render control\r\n                setTimeout(function () {\r\n                    self.internalPostRender(_element);\r\n                    bizagi.rendering.render.postRenderTimeout += 50;\r\n                }, bizagi.rendering.render.postRenderTimeout);\r\n\r\n            } else {\r\n                self.internalPostRender(_element);\r\n            }\r\n            bizagi.rendering.render.rendersExecuted++;\r\n        };\r\n\r\n        if (self.asyncRenderDeferred) {\r\n            // Wait for async result\r\n            $.when(self.asyncRenderDeferred)\r\n                .done(function (html) {\r\n                    var control = self.getControl();\r\n                    if (typeof self.emptyControlByAsyncRenderDeferred == \"function\") {\r\n                        self.emptyControlByAsyncRenderDeferred();\r\n                    }\r\n                    control.append(html);\r\n\r\n                    // Execute post-render control\r\n                    executePostRender(element);\r\n                    self.processLayout(!isLabelFormat, self.properties.valueFormat || {});\r\n                });\r\n        } else {\r\n            // Execute post-render control\r\n            executePostRender(element);\r\n        }\r\n    },\r\n    /*\r\n    *   Executes the post render handlers\r\n    */\r\n    internalPostRender: function (element) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n\r\n        self.control = self.getControl();\r\n\r\n        // Resolve rendering deferred\r\n        if (self.renderingDeferred) {\r\n            self.renderingDeferred.resolve();\r\n        }\r\n\r\n        // Execute post-renders\r\n        if (properties.editable) {\r\n            // Post-render editable version\r\n            if (self.renderFactory.printVersion && self.postRenderPrintVersion) {\r\n                self.postRenderPrintVersion();\r\n            } else {\r\n                self.postRender();\r\n            }\r\n\r\n        } else {\r\n            // Post-render readonly version\r\n            self.postRenderReadOnly(element);\r\n        }\r\n\r\n        // Perform execution mode methods\r\n        if (mode == \"execution\") {\r\n            self.performExecutionModeMethods();\r\n        } else {\r\n            self.performDesignModeMethods();\r\n        }\r\n\r\n        self.processLayout(isLabelFormat, self.properties.textFormat || {});\r\n        self.processLayout(!isLabelFormat, self.properties.valueFormat || {});\r\n    },\r\n    /*\r\n    *   Execute runtime only methods\r\n    */\r\n    performExecutionModeMethods: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (self.getFormType() == self.Class.TYPE_QUERY_FORM) {\r\n            self.configureHandlersQueryForm();\r\n        }\r\n\r\n        // Apply handlers\r\n        if (properties.editable) {\r\n            self.configureHandlers();\r\n        } else {\r\n            self.configureHandlersReadOnly();\r\n        }\r\n\r\n        // Set initial value\r\n        self.internalSetInitialValue();\r\n    },\r\n    /**\r\n     * Execute design only methods\r\n     */\r\n    performDesignModeMethods: function () {\r\n        var self = this;\r\n\r\n        // Execute custom code for each render\r\n        self.configureDesignView();\r\n\r\n        // Set initial value\r\n        self.internalSetInitialValue();\r\n    },\r\n    /*\r\n    *   Replaces a {{control}} string in the specified element\r\n    */\r\n    replaceControlHtml: function (html, replace) {\r\n        html = html || \"\";\r\n        replace = replace || \"\";\r\n        return html.replace(\"{{control}}\", replace);\r\n    },\r\n    /*\r\n    *   Return the rendered element\r\n    */\r\n    getRenderedElement: function () {\r\n        if (bizagi.util.isEmpty(this.element)) {\r\n            bizagi.log(\" render hasn't been rendered!\", this, \"error\");\r\n        }\r\n\r\n        return this.element;\r\n    },\r\n    /*\r\n    *   Sets the initial value for the renders\r\n    */\r\n    internalSetInitialValue: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        self.internalSetInitialValueFlag = true;\r\n\r\n        // Set the initial value\r\n        if (properties.editable) {\r\n            if (!bizagi.util.isEmpty(self.value)) {\r\n                self.setDisplayValue(self.value);\r\n            }\r\n        } else {\r\n            if (!bizagi.util.isEmpty(self.value)) {\r\n                self.setDisplayValue(self.value);\r\n            }\r\n        }\r\n        self.internalSetInitialValueFlag = false;\r\n    },\r\n    /*\r\n    * Public method to determine if a value is valid or not\r\n    */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n        var inlineAdd = self.grid && self.grid.properties && self.grid.properties.inlineAdd;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) === false) {\r\n            return true;\r\n        }\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) === false && !inlineAdd) {\r\n            return true;\r\n        }\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (bizagi.util.parseBoolean(properties.required)) {\r\n            var form = self.getFormContainer();\r\n            var hasValue = false;\r\n            var renders = self.grid ? [self] : form.getRenders(properties.xpath);\r\n            var isQueryForm = /^query/i.test(properties.type);\r\n\t               \r\n            renders.filter(function (render) {\r\n                return render.properties.id == properties.id;\r\n            }).forEach(function (render) {\r\n                if (render.hasValue() && (render.properties.editable || inlineAdd)) {\r\n                    hasValue = true;\r\n                    return false;\r\n                }\r\n            });\r\n\r\n            if (!hasValue && !self.properties.isClone) {\r\n                message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                var messageData = {xpath: properties.xpath, message: message};\r\n\r\n                if (isQueryForm) {\r\n                    messageData = $.extend({}, messageData, {\r\n                        id: properties.id,\r\n                        isQuery: isQueryForm\r\n                    });\r\n                }\r\n\r\n                invalidElements.push(messageData);\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // Check retypes\r\n        if (properties.retype == \"duplicate\") {\r\n            // Don't process cloned renders, just originals\r\n            if (self.cloneRender) {\r\n                if (self.cloneRender.getValue() != self.getValue()) {\r\n                    message = self.getResource(\"render-text-retype-error\");\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    return false;\r\n                }\r\n            }\r\n        } else if (properties.retype == \"double\") {\r\n            var control = $(\"input\", self.element);\r\n\r\n            //Waits until the control has the second value written\r\n            if (control && control.data(\"oldValue\")) {\r\n                if (control.val() === \"\") {\r\n\r\n                    message = self.getResource(\"render-text-retype-error\");\r\n                    invalidElements.push({\r\n                        xpath: properties.xpath,\r\n                        message: message\r\n                    });\r\n\r\n                    return false;\r\n                } else if (control.val() != control.data(\"oldValue\")) {\r\n                    message = self.getResource(\"render-text-retype-error\");\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Check maxlength\r\n        var columnEditable = self.grid && self.grid.getColumn ? self.grid.getColumn(self.properties.xpath).properties.editable : true;\r\n        if (properties.type !== \"userPassword\" && properties.maxLength !== undefined && properties.maxLength > 0 && bizagi.util.isNumeric(properties.maxLength)) {\r\n            if (columnEditable || (!columnEditable && self.controlValueIsChanged())) {\r\n                var maxLength = new Number(properties.maxLength);\r\n                var value = self.getValue();\r\n\r\n                if (value && value.toString().length > maxLength) {\r\n                    message = self.getResource(\"render-text-maxLength-error\").replaceAll(\"#maxLength#\", maxLength);\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Check if a render has no value for required validation\r\n    */\r\n    hasValue: function () {\r\n        var self = this;\r\n        // Next line decides if only spaces are accepted as valid texts or not. Anyway the spaces are still saved as self.value has not changed\r\n        var value = self.getValue();\r\n        value = (value && self.properties.type === \"text\") ? value.trim() : value;\r\n        return !bizagi.util.isEmpty(value);\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed\r\n    */\r\n    postRender: function () {       \r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed in read-only mode\r\n    */\r\n    postRenderReadOnly: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers when the control is readonly\r\n    */\r\n    configureHandlersReadOnly: function () {\r\n    },\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour when rendering in design mode\r\n    */\r\n    configureDesignView: function () {\r\n    },\r\n    /*\r\n    *   Method to process the render the layout\r\n    */\r\n    processLayout: function (isLabelFormat, format) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (self.getControl() == null) return;\r\n\r\n        // Set customizations\r\n        format = format || {};\r\n\r\n        if (format.color) {\r\n            self.changeColor(format.color, isLabelFormat);\r\n        }\r\n        if (format.background) {\r\n            self.changeBackgroundColor(format.background);\r\n        }\r\n        //if bold is true in modeler, we receive nothing in execution (!formal.bold)\r\n        if (format.bold || !format.bold || !isLabelFormat) {\r\n            self.changeFontBold(format.bold, isLabelFormat);\r\n        }\r\n        if (format.italic) {\r\n            self.changeFontItalic(format.italic, isLabelFormat);\r\n        }\r\n        if (format.underline) {\r\n            self.changeFontUnderline(format.underline, isLabelFormat);\r\n        }\r\n        if (format.strikethru) {\r\n            self.changeFontStrikethru(format.strikethru, isLabelFormat);\r\n        }\r\n        if (format.size) {\r\n            self.changeFontSize(format.size, isLabelFormat);\r\n        }\r\n\r\n        // Set required and visiblity\r\n        properties.required = properties.required != undefined ? bizagi.util.parseBoolean(properties.required) : false;\r\n        var visible = properties.visible != undefined ? bizagi.util.parseBoolean(properties.visible) : true;\r\n        if (properties.required) {\r\n            self.changeRequired(properties.required);\r\n        }\r\n        if (!visible) {\r\n            self.changeVisibility(visible);\r\n        }\r\n    },\r\n    /*\r\n    *   Sets the internal value\r\n    */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n        triggerEvents = triggerEvents !== undefined ? triggerEvents : true;\r\n\r\n        if (!(bizagi.util.identicalObjects(value, self.value))) {\r\n            // set previous value\r\n            self.properties.previousValue = self.properties.originalValue = self.value;\r\n\r\n            // Change internal value\r\n            self.value = self.properties.value = value;\r\n            if (self.properties.required && self.getMode() == \"execution\") {\r\n\r\n                if (self.checkRequired([])) {\r\n                    self.changeRequiredLabel(false);\r\n                } else {\r\n                    self.changeRequiredLabel(true);\r\n                }\r\n            }\r\n\r\n            // Trigger events\r\n            if (triggerEvents && !self.internalSetInitialValueFlag) {\r\n                self.triggerRenderChange();\r\n                self.triggerRenderValidate();\r\n            }\r\n        }\r\n    },\r\n\r\n    checkRequired: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (bizagi.util.parseBoolean(properties.required)) {\r\n            if (!self.hasValue()) {\r\n                message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                invalidElements.push({\r\n                    xpath: properties.xpath,\r\n                    message: message\r\n                });\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n\r\n    validateInputRetype: function () {\r\n        var self = this;\r\n        if (self.properties.retype && self.cloneRender) {\r\n            return self.getValue() == self.cloneRender.getValue();\r\n        }\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Triggers the render change event\r\n    */\r\n    triggerRenderChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        params.changed = params.changed !== undefined ? params.changed : true;\r\n        self.triggerHandler(\"renderchange\", {render: self, changed: params.changed});\r\n    },\r\n    /*\r\n    *   Triggers the render validate event\r\n    */\r\n    triggerRenderValidate: function () {\r\n        var self = this;\r\n        self.triggerHandler(\"rendervalidate\", {render: self});\r\n    },\r\n    /*\r\n    *   Sets the value in the rendered control\r\n    */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n\r\n        if (!self.properties.editable && (self.properties.display !== \"check\" || (self.properties.display === \"check\" && bizagi.override.enableCheck === true))) {\r\n            // Render as simple value\r\n            var displayValue = self.getDisplayValue(value);\r\n            if (typeof (displayValue) == \"string\" || typeof (displayValue) == \"number\") {\r\n                displayValue = bizagi.util.sanitizeHTML(displayValue);\r\n                $(control).html(\"<label class='readonly-control'>\" + displayValue + \"</label>\");\r\n            }\r\n        }\r\n    },\r\n    /*\r\n    *   Returns the internal value\r\n    */\r\n    getValue: function () {\r\n        return this.value;\r\n    },\r\n    /*\r\n    *   Returns the value to display, ex. non-editable renders\r\n    */\r\n    getDisplayValue: function () {\r\n        return this.getValue();\r\n    },\r\n    /*\r\n    *   Template method to get the label element\r\n    */\r\n    getLabel: function () {\r\n        bizagi.util.mustImplement(\"getLabel\");\r\n    },\r\n    /*\r\n    *   Template method to get the control element\r\n    */\r\n    getControl: function () {\r\n        bizagi.util.mustImplement(\"getControl\");\r\n    },\r\n    /*\r\n    *   Template method to get the control filler element\r\n    */\r\n    getControlFiller: function () {\r\n        bizagi.util.mustImplement(\"getControlFiller\");\r\n    },\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n    },\r\n    /*\r\n    *   Adds a validation message to the render\r\n    */\r\n    setValidationMessage: function (message) {\r\n        this.validationMessage = message;\r\n    },\r\n    /*\r\n    *   Method to render non editable values\r\n    */\r\n    renderReadOnly: function () {\r\n        var result = this.getValue();\r\n        var readOnlyValue = \"\";\r\n\r\n        if (bizagi.util.isObject(result) && typeof (result.value) !== \"undefined\") {\r\n            readOnlyValue = bizagi.util.sanitizeHTML(result.value);\r\n        } else if (!bizagi.util.isEmpty(result)) {\r\n            if (bizagi.util.isString(result)) {\r\n                readOnlyValue = bizagi.util.decodedDisplayValue(result);\r\n            } else {\r\n                readOnlyValue = result;\r\n            }\r\n        }\r\n\r\n        return readOnlyValue;\r\n    },\r\n\r\n    /*\r\n    *  Method to render print version\r\n    */\r\n    postRenderPrintVersion: function () {\r\n    },\r\n\r\n    /*\r\n    *   Customizes render display type with custom css classes\r\n    */\r\n    changeDisplayOption: function (displayType) {\r\n        this.properties.displayType = displayType;\r\n    },\r\n\r\n    /*\r\n    *   Return the right display option class\r\n    */\r\n    getDisplayOptionClass: function (displayType) {\r\n        return \"\";\r\n    },\r\n\r\n    /*\r\n    *   Customizes render label align\r\n    */\r\n    changeLabelAlign: function (alignType) {\r\n        this.properties.labelAlign = alignType;\r\n    },\r\n\r\n    /*\r\n    *   Customizes render value align\r\n    */\r\n    changeValueAlign: function (alignType) {\r\n        this.properties.valueAlign = alignType;\r\n    },\r\n\r\n    /*\r\n    *   Return the right align class\r\n    */\r\n    getAlignClass: function (alignType) {\r\n        return \"\";\r\n    },\r\n\r\n    /*\r\n    *   Customizes render label and value width\r\n    */\r\n    customizeRenderWidth: function () {\r\n    },\r\n\r\n    /* Customizes render color*/\r\n    changeColor: function (color, isLabelFormat) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var label = self.getLabel();\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        if (control && label) {\r\n            if (color != 'none') {\r\n                // Hide - show the render\r\n                if (self.properties.displayType === \"value\" || !isLabelFormat) {\r\n                    self.getElementsToStylize(self.getControl()).css(\"color\", color, \"!important\");\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"color\", color, \"!important\");\r\n                    });\r\n                } else {\r\n                    self.element.each(function () {\r\n                        this.style.setProperty('color', color, 'important');\r\n                    });\r\n\r\n                    if (self.properties.type == \"grid\") {\r\n                        self.getControl().find(\".bz-mobile-grid__header-title\").each(function () {\r\n                            this.style.setProperty('color', color, 'important');\r\n                        });\r\n                    }\r\n\r\n                    self.getLabel().find(\"label\").css(\"color\", color, \"!important\");\r\n                    if (self.properties.editable === false) {\r\n                        self.getElementsToStylize(self.getControl()).css(\"color\", color, \"!important\");\r\n                        self.getElementsToStylize($(\"label\", self.getControl()).css(\"color\", color, \"!important\"));\r\n                    }\r\n                }\r\n            } else {\r\n                self.element.css(\"color\", \"\");\r\n                self.getLabel().find(\"label\").css(\"color\", \"\");\r\n                self.getControl().css(\"color\", \"\");\r\n\r\n                self.getControl().find(\"input, textarea\").each(function (i, element) {\r\n                    var originalColor = $(element).data(\"originalColor\") || \"\";\r\n                    self.getElementsToStylize(element).css(\"color\", originalColor);\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes render background color*/\r\n    changeBackgroundColor: function (color) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var label = self.getLabel();\r\n\r\n        if (control && label) {\r\n            if (color != 'none') {\r\n                self.element.each(function () {\r\n                    this.style.setProperty('background-color', color, 'important');\r\n                });\r\n\r\n                if (typeof (label.find('label').style) !== \"undefined\") {\r\n                    self.getLabel().find(\"label\").style(\"background-color\", color, \"important\");\r\n                } else {\r\n                    self.getLabel().find(\"label\").css(\"background-color\", color, \"!important\");\r\n                }\r\n\r\n                var currentStyle = self.getLabel().attr(\"style\");\r\n                currentStyle += \"; background-color:\" + color + \"!important\";\r\n                self.getLabel().attr(\"style\", currentStyle);\r\n            } else {\r\n                self.element.css(\"background-color\", \"\");\r\n                self.getLabel().find(\"label\").css(\"background-color\", \"\");\r\n                self.getControl().css(\"background-color\", \"\");\r\n                self.getControl().find(\"input, textarea\").each(function (i, element) {\r\n                    var originalColor = $(element).data(\"originalColor\") || \"\";\r\n                    $(element).css(\"background-color\", originalColor);\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Returns the formatting label to be used for bold, italic, underline, strikethrough and size*/\r\n    getFormattingLabel: function () {\r\n        var self = this;\r\n        return self.getLabel().find(\"label\");\r\n    },\r\n\r\n    /* Customizes the font weight */\r\n    changeFontBold: function (bold, isLabelFormat) {\r\n        var self = this;\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(bold) != false && isLabelFormat) {\r\n            self.getFormattingLabel().css(\"font-weight\", \"bold\", \"!important\");\r\n            self.getControl().each(function (i, element) {\r\n                $(element).css(\"font-weight\", \"bold\", \"!important\");\r\n            });\r\n\r\n        } else {\r\n            if (isLabelFormat)\r\n                self.getFormattingLabel().css(\"font-weight\", \"normal\", \"!important\");\r\n        }\r\n        if (!isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(bold) == true) {\r\n                self.getControl().find(\"*\").each(function (i, element) {\r\n                    $(element).css(\"font-weight\", \"bold\", \"!important\");\r\n                });\r\n            } else {\r\n                self.getControl().find(\"*\").each(function (i, element) {\r\n                    $(element).css(\"font-weight\", \"normal\", \"!important\");\r\n                });\r\n                self.getControl().css(\"font-weight\", \"normal\", \"!important\");\r\n            }\r\n        }\r\n    },\r\n\r\n    controlValueIsChanged: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var value = self.getValue();\r\n        var compareValue = properties.originalValue;\r\n        var baseValue = properties.defaultValue;\r\n        var result = true;\r\n        var renderType = bizagi.util.normalizeType(properties.type);\r\n\r\n        // Flag to force to collect data\r\n        if ($.forceCollectData) {\r\n            return true;\r\n        }\r\n\r\n        // Verify if control has been ready\r\n        if (renderType === \"grid\" && self.ready().state() === \"pending\") {\r\n            return false;\r\n        }\r\n\r\n        if ([\"combo\", \"queryCombo\", \"list\", \"queryList\",\"radio\", \"queryRadio\"].includes(renderType) || /^cascadingcombo$/i.test(renderType)) {\r\n            if (value && value.length !== undefined) {\r\n                value = value[0];\r\n            }\r\n            if (compareValue && compareValue.length !== undefined) {\r\n                compareValue = compareValue[0];\r\n            }\r\n            if (baseValue && baseValue.length !== undefined) {\r\n                baseValue = baseValue[0];\r\n            }\r\n            value = value && value.id ? value.id : value;\r\n            compareValue = compareValue && compareValue.id ? compareValue.id : compareValue;\r\n            baseValue = baseValue && baseValue.id ? baseValue.id : baseValue;\r\n            if (typeof baseValue != \"undefined\" && baseValue != null) {\r\n                result = (compareValue == value) && (compareValue != baseValue) ? false : true;\r\n            } else {\r\n                result = (compareValue == value) ? false : true;\r\n            }\r\n        } else if (renderType === \"boolean\" || renderType === \"queryBoolean\" || renderType === \"queryCheck\") {\r\n            result = (bizagi.util.parseBoolean(compareValue) == bizagi.util.parseBoolean(value)) ? false : true;\r\n        } else if (renderType === \"searchNumber\") {\r\n            result = !!(value);\r\n        } else if (renderType === \"number\") {\r\n            if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue === value) ? false : true;\r\n            }\r\n        } else if (renderType === \"text\") {\r\n            if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue === value) ? false : true;\r\n            }\r\n        } else if (renderType === \"date\") {\r\n            if (!compareValue && !value) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue == value) ? false : true;\r\n            }\r\n        } else if (renderType === \"actionLauncher\") {\r\n            //Object must be an array\r\n            result = false;\r\n            var compareValueObj = [];\r\n            try {\r\n                if (typeof compareValue === \"string\") {\r\n                    compareValueObj = JSON.parse(compareValue);\r\n                } else {\r\n                    compareValueObj = compareValue;\r\n                }\r\n            } catch (e) {\r\n            }\r\n\r\n            var _findAction = function (guid, targetObj) {\r\n                guid = guid || \"\";\r\n                targetObj = targetObj || [];\r\n                var result = false;\r\n                for (var i = 0, l = targetObj.length; i < l; i++) {\r\n                    if (targetObj[i].guidAction == guid) {\r\n                        result = true;\r\n                        break;\r\n                    }\r\n                }\r\n                return result;\r\n            };\r\n\r\n            if (compareValueObj.length == value.length) {\r\n                for (var i = 0, l = compareValueObj.length; i < l; i++) {\r\n                    if (!_findAction(compareValueObj[i].guidAction, value)) {\r\n                        result = true;\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                result = true;\r\n            }\r\n        } else if (renderType === \"polymorphicLauncher\" || renderType === \"entityTemplate\") {\r\n            //Object must be an array\r\n            if (compareValue.length != value.length) {\r\n                result = true;\r\n            } else {\r\n                result = (JSON.encode(value) == JSON.encode(compareValue)) ? false : true;\r\n            }\r\n        } else if (renderType === \"image\") {\r\n            if (compareValue == null && value.indexOf(true) < 0) {\r\n                result = false;\r\n            } else {\r\n                result = true;\r\n            }\r\n        } else if (renderType === \"searchList\") {\r\n            var objectValue = {};\r\n            try {\r\n                objectValue = JSON.parse(value);\r\n            } catch (e) {\r\n                console.log(\"Error when detect change value on searchList control\")\r\n            }\r\n            result = (JSON.encode(compareValue) == JSON.encode(objectValue.value)) ? false : true;\r\n        } else {\r\n            result = (compareValue === value) ? false : true;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /* Customizes the font italic style */\r\n    changeFontItalic: function (italic, isLabelFormat) {\r\n        var self = this;\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(italic) == true) {\r\n                if (isLabelFormat)\r\n                    self.getFormattingLabel().css(\"font-style\", \"italic\", \"!important\");\r\n\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"font-style\", \"italic\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"font-style\", \"italic\", \"!important\");\r\n                }\r\n            } else {\r\n                if (isLabelFormat)\r\n                    self.getFormattingLabel().css(\"font-style\", \"normal\", \"!important\");\r\n\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"font-style\", \"normal\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"font-style\", \"normal\", \"!important\");\r\n                }\r\n            }\r\n        } else {\r\n            if (bizagi.util.parseBoolean(italic) == true) {\r\n                self.getFormattingLabel().css(\"font-style\", \"italic\", \"!important\");\r\n            } else {\r\n                self.getFormattingLabel().css(\"font-style\", \"normal\", \"!important\");\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes the font underline */\r\n    changeFontUnderline: function (underline, isLabelFormat) {\r\n        var self = this;\r\n        var textFormat = self.properties.textFormat || {};\r\n        var valueFormat = self.properties.valueFormat || {};\r\n        var strikethru = bizagi.util.parseBoolean(textFormat.strikethru) ? \"line-through \" : \"\";\r\n        var valuestrikethru = bizagi.util.parseBoolean(valueFormat.strikethru) ? \"line-through \" : \"\";\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(underline) == true && isLabelFormat) {\r\n            self.getFormattingLabel().css(\"text-decoration\", strikethru + \"underline\", \"!important\");\r\n            self.getControl().each(function (i, element) {\r\n                self.getElementsToStylize(element).css(\"text-decoration\", strikethru + \"underline\");\r\n            });\r\n        } else {\r\n            if (isLabelFormat)\r\n                self.getFormattingLabel().css(\"text-decoration\", strikethru, \"!important\");\r\n        }\r\n        if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(underline) == true) {\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"text-decoration\", valuestrikethru + \"underline\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"text-decoration\", valuestrikethru + \"underline\", \"!important\");\r\n                }\r\n            } else {\r\n                self.getControl().find(\"*\").each(function (i, element) {\r\n                    self.getElementsToStylize(element).css(\"text-decoration\", valuestrikethru, \"!important\");\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes the font Strikethrough property */\r\n    changeFontStrikethru: function (strikethru, isLabelFormat) {\r\n        var self = this;\r\n        var textFormat = self.properties.textFormat || {};\r\n        var valueFormat = self.properties.valueFormat || {};\r\n        var underline = bizagi.util.parseBoolean(textFormat.underline) ? \"underline \" : \"\";\r\n        var valueunderline = bizagi.util.parseBoolean(valueFormat.underline) ? \"underline \" : \"\";\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(strikethru) == true && isLabelFormat) {\r\n            self.getFormattingLabel().css(\"text-decoration\", underline + \"line-through\", \"!important\");\r\n        } else {\r\n            if (isLabelFormat)\r\n                self.getFormattingLabel().css(\"text-decoration\", underline, \"!important\");\r\n        }\r\n\r\n        if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n            if (bizagi.util.parseBoolean(strikethru) == true) {\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"text-decoration\", valueunderline + \"line-through\", \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"text-decoration\", valueunderline + \"line-through\", \"!important\");\r\n                }\r\n            } else {\r\n                if (self.properties.editable) {\r\n                    self.getControl().find(\"*\").each(function (i, element) {\r\n                        self.getElementsToStylize(element).css(\"text-decoration\", valueunderline, \"!important\");\r\n                    });\r\n                } else {\r\n                    self.getElementsToStylize(self.getControl()).css(\"text-decoration\", valueunderline, \"!important\");\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /* Customizes the font size property */\r\n    changeFontSize: function (size, isLabelFormat) {\r\n        var self = this;\r\n        var isLabelFormat = (typeof isLabelFormat != \"undefined\" || isLabelFormat != null) ? isLabelFormat : true;\r\n\r\n        // Hide - show the render\r\n        if (size != \"0\") {\r\n            var label = self.getFormattingLabel();\r\n            var newFontSize = (100 + Number(size) * 10) + \"%\";\r\n            if (isLabelFormat) {\r\n                label.css(\"font-size\", newFontSize, \"!important\");\r\n            }\r\n            if (self.properties.displayType == \"value\" || !isLabelFormat) {\r\n                var control = self.getControl();\r\n                if (typeof control.children() == \"object\" && control.children().length > 0) {\r\n                    self.getElementsToStylize(control.children()).css(\"font-size\", newFontSize, \"!important\");\r\n                } else {\r\n                    self.getElementsToStylize(control).css(\"font-size\", newFontSize, \"!important\");\r\n                    // Next line applies to Cascading combo and combo in order to increase the control space with large value fonts\r\n                    if (self.properties.type.indexOf(\"ombo\") != -1 && size > 4) (\".ui-selectmenu\", control).children(0).height(2 * size + 20);\r\n                }\r\n\r\n                self.getElementsToStylize(control.find(\".ui-bizagi-render-date\")).css(\"line-height\", \"normal\");\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * in mobiles, don't apply styles to icon's elements\r\n     */\r\n    getElementsToStylize: function (context) {\r\n        return $(context);\r\n    },\r\n\r\n    /* Changes the render visibility*/\r\n    changeVisibility: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Hide - show the render\r\n        if (bizagi.util.parseBoolean(argument) == true) {\r\n            if (properties.type !== \"hidden\") {\r\n                self.element.show();\r\n                self.element.css(\"display\", \"\");\r\n\r\n                if (properties.required) {\r\n                    if (!self.hasValue()) {\r\n                        self.changeRequiredLabel(true);\r\n                    }\r\n                }\r\n            }\r\n        } else if (self.element) {\r\n            self.element.hide();\r\n        }\r\n\r\n        // Update properties\r\n        properties.visible = argument;\r\n    },\r\n    /* Changes the render editability*/\r\n    changeEditability: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        // Renders again\r\n        properties.editable = bizagi.util.parseBoolean(argument);\r\n\r\n        // Clears control\r\n        control.empty();\r\n\r\n        if (typeof self.internalRenderControl == \"function\") {\r\n            $.when(self.internalRenderControl()).done(function (html) {\r\n                if (typeof self.emptyControlByChangeEditability == \"function\")\r\n                    self.emptyControlByChangeEditability();\r\n                if (!self.asyncRenderDeferred)\r\n                    control.append(html);\r\n                self.postRenderElement(self.element);\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    * change cell editability and attach bindings\r\n    */\r\n    changeEditabilityCellControl: function (argument, key, xpath) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        var renderColumn = self.grid.getColumn(xpath);\r\n        var decorated = renderColumn.getDecorated(key);\r\n\r\n        // Renders again\r\n        properties.editable = bizagi.util.parseBoolean(argument);\r\n\r\n        // Clears control\r\n        control.empty();\r\n        if (typeof self.internalRenderControl == \"function\") {\r\n            $.when(self.internalRenderControl()).done(function (html) {\r\n                if (!self.asyncRenderDeferred) {\r\n                    control.append(html);\r\n                }\r\n\r\n                self.postRenderElement(self.element);\r\n\r\n                if (properties.editable) {\r\n\r\n                    renderColumn.bind(\"rendered\", function () {\r\n                        renderColumn.readyDeferred.resolve();\r\n                    });\r\n\r\n                    decorated.unbind(\"renderchange\");\r\n\r\n                    // If the render changes set the flag on\r\n                    decorated.bind(\"renderchange\", function (render, args) {\r\n                        renderColumn.changed = true;\r\n                        self.grid.onCellChange(renderColumn, null, key, args);\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    changeRequired: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var label = properties.displayName || \"\";\r\n        var labelElement = $(\"label\", self.getLabel());\r\n        var controlElement = self.getControl();\r\n\r\n        // Update properties\r\n        properties.required = argument;\r\n\r\n        // Changes label\r\n        if (self.getMode() == \"execution\" && self.checkRequired([])) {\r\n            self.changeRequiredLabel(false);\r\n        } else if (bizagi.util.parseBoolean(argument) == true && properties.editable) {\r\n            if (self.properties.orientation == \"rtl\") {\r\n                controlElement.prepend('<div class=\"ui-bizagi-render-control-required-rtl\"></div>');\r\n            } else {\r\n                controlElement.addClass('control-required');\r\n                controlElement.prepend('<div class=\"ui-bizagi-render-control-required\"></div>');\r\n            }\r\n        } else {\r\n            // if element has required label and through action change it, remove element.\r\n            if (self.properties.orientation == \"rtl\") {\r\n                $(\".ui-bizagi-render-control-required-rtl\", controlElement).remove();\r\n            } else {\r\n                controlElement.removeClass('control-required');\r\n                $(\".ui-bizagi-render-control-required\", controlElement).remove();\r\n            }\r\n        }\r\n\r\n        // Set text, HTML is more suitable for the content\r\n        labelElement.html(label);\r\n\r\n        // Perform validations again to check if the form is valid after this change\r\n        self.triggerRenderValidate();\r\n    },\r\n    /**\r\n     * This method just make a toggle of red label indicator\r\n     * Does't change internal value of control, if you need it\r\n     * please use changeRequired method\r\n     *\r\n     * @argument {boolean} argument\r\n     */\r\n    changeRequiredLabel: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var label = properties.displayName || \"\";\r\n        var labelElement = $(\"label\", self.getLabel());\r\n        var controlElement = self.getControl();\r\n\r\n        // Changes label\r\n        if (bizagi.util.parseBoolean(argument) == true && properties.editable) {\r\n            if (self.properties.orientation == \"rtl\") {\r\n                controlElement.prepend('<div class=\"ui-bizagi-render-control-required-rtl\"></div>');\r\n            } else {\r\n                controlElement.addClass('control-required');\r\n                controlElement.append('<div class=\"ui-bizagi-render-control-required\"></div>');\r\n            }\r\n        } else {\r\n            // if element has required label and through action change it, remove element.\r\n            if (self.properties.orientation == \"rtl\") {\r\n                $(\".ui-bizagi-render-control-required-rtl\", controlElement).remove();\r\n            } else {\r\n                controlElement.removeClass('control-required');\r\n                $(\".ui-bizagi-render-control-required\", controlElement).remove();\r\n            }\r\n        }\r\n\r\n        // Set text, HTML is more suitable for the content\r\n        labelElement.html(label);\r\n\r\n        // Perform validations again to check if the form is valid after this change\r\n        self.triggerRenderValidate();\r\n    },\r\n    /*\r\n    *   Refresh the control with a new data\r\n    */\r\n    refreshControl: function (args) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var originalValue = self.value;\r\n        var form = self.getFormContainer();\r\n        var idForm = form.properties.id || \"\";\r\n\r\n        args = args || {};\r\n\r\n        // Start waiting\r\n        self.startLoading();\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh();\r\n\r\n        // Call the ajax service\r\n        return $.when(self.dataService.multiaction().refreshControl({\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: (properties.xpathContext || args.xpathContext),\r\n            idForm: idForm\r\n        })).pipe(function (data) {\r\n            // Clear variables\r\n            self.control = self.controlFiller = self.label = null;\r\n\r\n            // Update properties data\r\n            var currentElement = self.element;\r\n            self.initializeData(data.render);\r\n\r\n            // Render the control again\r\n            return $.when(self.render()).pipe(function (html) {\r\n                var result = $(html);\r\n                //Dont remove unused rendered var\r\n                var rendered = self.postRenderElement(result);\r\n                self.properties.originalValue = self.value;\r\n                return result;\r\n            }).pipe(function (result) {\r\n                // When the content has been post-renderized, replace it\r\n                currentElement.replaceWith(result);\r\n\r\n                // Prevent multiple refresh on grid\r\n                if (!self.grid) {\r\n                    self.triggerRenderChange({changed: false});\r\n                }\r\n\r\n                // Execute personalized stuff before to refresh it\r\n                self.afterToRefresh();\r\n            });\r\n\r\n        }).fail(function (message) {\r\n            var message = self.processFailMessage(message);\r\n\r\n        }).always(function () {\r\n            self.endLoading();\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Refresh the control with a new data\r\n     */\r\n    refreshDesignControl: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        self.beforeToRefresh();\r\n\r\n        // Clear variables\r\n        self.control = self.controlFiller = self.label = null;\r\n\r\n        $.extend(data.render.properties, {\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: (properties.xpathContext || \"form\"),\r\n            idPageCache: properties.idPageCache\r\n        });\r\n\r\n        // Update properties data\r\n        var currentElement = self.element;\r\n        self.initializeData(data.render);\r\n\r\n        // Render the control again\r\n        return $.when(self.render()).pipe(function (html) {\r\n            var result = $(html);\r\n            //Dont remove unused rendered var\r\n            var rendered = self.postRenderElement(result);\r\n            self.properties.originalValue = self.value;\r\n            return result;\r\n        }).pipe(function (result) {\r\n            // When the content has been post-renderized, replace it\r\n            currentElement.replaceWith(result);\r\n            self.triggerRenderChange();\r\n\r\n            // Execute personalized stuff before to refresh it\r\n            self.beforeToRefresh();\r\n        });\r\n    },\r\n\r\n    /*\r\n    * Cleans current value\r\n    */\r\n    cleanData: function () {\r\n        var self = this;\r\n\r\n        self.setValue(\"\");\r\n        self.clearDisplayValue();\r\n    },\r\n\r\n    /*\r\n     *   Sets the value in the rendered control\r\n     */\r\n    clearDisplayValue: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var input = control.find(\"input\");\r\n\r\n        if (input.length > 0) {\r\n            input.val(self.getValue());\r\n        } else if (self.properties.editable === false) {\r\n            $(control).html(\"<label class='readonly-control'></label>\");\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Updates original value for some comparisons\r\n    */\r\n    updateOriginalValue: function () {\r\n        var self = this;\r\n        self.properties.originalValue = self.value;\r\n    },\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Add the render value\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            if (!bizagi.util.isEmpty(xpath)) {\r\n                if (!bizagi.util.isEmpty(value)) {\r\n                    renderValues[properties.xpath] = value;\r\n                } else if (value === \"\" || value === null) {\r\n                    renderValues[properties.xpath] = \"\";\r\n                }\r\n            }\r\n        }\r\n\r\n        //Validate if the input has a retype configured and check that both values matches, otherwise delete the original value\r\n        if (!self.validateInputRetype()) {\r\n            renderValues[properties.xpath] = \"\";\r\n        }\r\n    },\r\n\r\n    hasChanged: function (result) {\r\n        var self = this;\r\n        if (self.controlValueIsChanged()) {\r\n            result.push(true);\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *  Configure aditional Handlers for queryForm type\r\n    */\r\n    configureHandlersQueryForm: function () {\r\n        var self = this;\r\n        var checkIncluded = self.element.find(\".ui-bizagi-render-control-included\");\r\n        checkIncluded.change(function () {\r\n            self.properties.included = $(this).is(\":checked\");\r\n        });\r\n    },\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectDataQueryForm: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n        var queryValue = null;\r\n        if (!bizagi.util.isEmpty(xpath)) {\r\n            if (value !== null && typeof (value) !== \"undefined\") {\r\n                var isObject = typeof (value.id) !== \"undefined\";\r\n                if (isObject) {\r\n                    queryValue = (!bizagi.util.isEmpty(value.id)) ? [value] : null;\r\n                } else {\r\n                    queryValue = (value !== \"\") ? value : null;\r\n                }\r\n            }\r\n            if (queryValue !== null || properties.included) {\r\n\r\n                if (!(properties.display == \"check\" && properties.value == false)) {\r\n\r\n                    var searchType = self.properties.typeSearch || self.properties.rangeQuery || \"NONE\";\r\n                    searchType = searchType.toUpperCase();\r\n                    var newParameter = {\r\n                        \"value\": queryValue,\r\n                        \"included\": self.properties.included,\r\n                        \"xpath\": properties.xpath,\r\n                        \"searchType\": searchType,\r\n                        \"orderType\": \"NONE\"\r\n                    };\r\n                    if (typeof properties.displayXpath !== \"undefined\" && properties.displayXpath !== \"\") {\r\n                        //newParameter.displayXpath= properties.xpath+\".\"+properties.displayXpath;\r\n                        newParameter.displayXpath = properties.displayXpath;\r\n                    }\r\n                    renderValues.push(newParameter);\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    *  Method to determine if the render value can be sent to the server or not\r\n    */\r\n    canBeSent: function () {\r\n        var self = this, force;\r\n        var properties = self.properties;\r\n        var displayOnly = bizagi.util.parseBoolean(properties.displayOnly) || false;\r\n        var editable = properties.editable;\r\n\r\n        // The render can be sent if it is editable and is not \"display only\"\r\n        if (!displayOnly && editable) {\r\n            return true;\r\n        }\r\n\r\n        // Don't send the clones\r\n        if (properties.isClone) {\r\n            return false;\r\n        }\r\n\r\n        if (properties.xpath) {\r\n            var form = self.getFormContainer();\r\n            if (form.getRenders(properties.xpath).length == 1) {\r\n                force = $.forceCollectData ? $.forceCollectData.toString() : false;\r\n                $.forceCollectData = force ? undefined : $.forceCollectData;\r\n                if (self.controlValueIsChanged()) {\r\n                    $.forceCollectData = force ? bizagi.util.parseBoolean(force) : $.forceCollectData;\r\n                    return true;\r\n                }\r\n                $.forceCollectData = force ? bizagi.util.parseBoolean(force) : $.forceCollectData;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n    /*\r\n    *  Method to determine if the render value can be sent to search\r\n    */\r\n    canBeSentQueryForm: function () {\r\n        var self = this, force;\r\n        var properties = self.properties;\r\n        // Don't send the clones\r\n        if (properties.isClone) {\r\n            return false;\r\n        }\r\n        return true;\r\n    },\r\n    /*\r\n    *   Focus on the current element\r\n    */\r\n    focus: function (time) {\r\n        var self = this;\r\n\r\n        // Focus is only allowed when the render is visible\r\n        if (!self.properties.visible) return;\r\n\r\n        // Call base\r\n        this._super();\r\n        var layout = $(\"#ui-bizagi-wp-app-render-form-content\");\r\n\r\n        // Configures effect\r\n        var effect = function () {\r\n            var control = self.getControl();\r\n            var defaultControl = (self.properties.type != \"grid\") ? $(\"input, select, option, textarea\", control) : $(\"input, select, option, textarea\", control).first();\r\n            if (defaultControl.length > 0) {\r\n\r\n                // Focus control\r\n                $.each(defaultControl, function (i) {\r\n                    var innerControl = defaultControl[i];\r\n                    if ($(innerControl).attr(\"type\") != \"hidden\" && $(innerControl).css(\"display\") != \"none\" && $(innerControl).css(\"visibility\") != \"hidden\") {\r\n\r\n                        try {\r\n                            if (!bizagi.util.isIE()) {\r\n                                bizagi.util.autoScrollBottom(layout);\r\n                            }\r\n                            innerControl.focus();\r\n                        } catch (e) {\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n        };\r\n\r\n        // Wait until the render is ready to apply the focus effect\r\n        $.when(self.ready())\r\n            .done(function () {\r\n                // Run effect\r\n                if (time > 0) {\r\n                    setTimeout(effect, time);\r\n                } else {\r\n                    effect();\r\n                }\r\n            });\r\n    },\r\n\r\n    /*\r\n    *   Resolves default align for each display type\r\n    */\r\n    getDefaultLabelAlign: function (displayType) {\r\n        return \"default\";\r\n    },\r\n\r\n    /*\r\n    *   Resolves default value align for each display type\r\n    */\r\n    getDefaultValueAlign: function (displayType) {\r\n        return \"default\";\r\n    },\r\n    /*\r\n    *   Transform the align type when using RTL orientation\r\n    */\r\n    getRTLAlign: function (align) {\r\n        /* if (align === \"default\"){ \r\n            return \"right\";\r\n        } */\r\n        return align;\r\n    },\r\n\r\n    /*\r\n    *   Enables submit on change feature for the current render\r\n    */\r\n    configureSubmitOnChange: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = \"\";\r\n\r\n        if (!properties.editable) return;\r\n\r\n        // Build action\r\n        properties.dependencies = properties.dependencies || 'all';\r\n\r\n        if (properties.xpath) {\r\n            if (properties.submitOnChangexpathContext) {\r\n                xpath = properties.submitOnChangexpathContext + \".\" + properties.xpath;\r\n            } else {\r\n                xpath = properties.xpath;\r\n            }\r\n        } else {\r\n            if (properties.submitOnChangexpathContext) {\r\n                xpath = properties.submitOnChangexpathContext + \".\" + properties.id;\r\n            } else {\r\n                xpath = properties.id;\r\n            }\r\n        }\r\n\r\n        var action = {\r\n            \"conditions\": {\r\n                \"expressions\": [\r\n                    {\r\n                        \"simple\": {\r\n                            \"xpath\": xpath,\r\n                            \"operator\": \"changes\",\r\n                            \"argumentType\": \"const\"\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            \"commands\": [\r\n                {\r\n                    \"xpath\": xpath,\r\n                    \"command\": 'submit-value',\r\n                    \"argument\": properties.dependencies\r\n                }\r\n            ],\r\n            \"dependencies\": [xpath],\r\n            \"elseCommands\": []\r\n        };\r\n\r\n        // Add action when form ends its rendering\r\n        $.when(self.ready()).done(function () {\r\n            var form = self.getFormContainer();\r\n            form.addSubmitAction(xpath, action);\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Sends all the info to the server then refreshes the form\r\n    *   Returns a deferred\r\n    */\r\n    submitOnChange: function (data, bRefreshForm, notCollect) {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n\r\n        // Add context parameter\r\n        if (self.properties.contexttype != \"\" && data) {\r\n            data[self.dataService.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = self.properties.contexttype;\r\n        }\r\n\r\n        $.when(self.isReadyToSave()).done(function () {\r\n            self.internalSubmitOnChange(data, bRefreshForm, notCollect).done(function () {\r\n                defer.resolve();\r\n            }).fail(function () {\r\n                defer.reject();\r\n            });\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    getCacheIdCase: function () {\r\n        var self = this;\r\n        var idCase = self.getParams().idCase;\r\n\r\n        if (bizagi.cache === undefined) {\r\n            bizagi.cache = {};\r\n            bizagi.cache.idCaseObject = {\r\n                idCase: idCase !== undefined ? idCase : (bizagi.cache.idCase !== undefined ? bizagi.cache.idCase : undefined)\r\n            };\r\n        } else {\r\n            if (idCase !== undefined && bizagi.cache.idCaseObject !== undefined) {\r\n                bizagi.cache.idCaseObject.idCase = idCase;\r\n            } else {\r\n                if (idCase !== undefined && bizagi.cache.idCaseObject === undefined) {\r\n                    bizagi.cache.idCaseObject = {};\r\n                    bizagi.cache.idCaseObject.idCase = idCase;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (idCase === undefined) {\r\n            if (bizagi.cache.idCaseObject === undefined) {\r\n                idCase = undefined;\r\n            } else {\r\n                idCase = bizagi.cache.idCaseObject.idCase;\r\n            }\r\n        } else {\r\n            idCase = idCase;\r\n        }\r\n\r\n        return idCase;\r\n    },\r\n    /*\r\n    *   Internal method\r\n    *   Sends all the info to the server then refreshes the form\r\n    *   Returns a deferred\r\n    */\r\n    internalSubmitOnChange: function (data, bRefreshForm, notCollect) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n        var parameters = {\r\n            data: data,\r\n            bRefreshForm: bRefreshForm,\r\n            notCollect: notCollect,\r\n            properties: {\r\n                idCase: self.getCacheIdCase(),\r\n                id: properties.id,\r\n                xpath: properties.xpath,\r\n                idPageCache: properties.idPageCache,\r\n                contexttype: properties.contexttype\r\n            }\r\n        }\r\n\r\n        return form.internalSubmitOnChange(parameters);\r\n    },\r\n    /*\r\n    *   Returns a promise that will resolve when the element is ready\r\n    */\r\n    ready: function () {\r\n        var self = this;\r\n        return $.when(self.parent.ready(), self.isRendered());\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandlers: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n\r\n        if (form) {\r\n            return form.getCustomHandlers();\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n    *   Get the custom handlers set for this execution\r\n    */\r\n    getCustomHandler: function (key) {\r\n        var self = this;\r\n        var customHandlers = self.getCustomHandlers();\r\n\r\n        if (customHandlers) {\r\n            return customHandlers[key];\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n    *   Calculates render label and value width\r\n    */\r\n    calculateRenderWidth: function (labelWidth, valueWidth, displayType) {\r\n        var self = this;\r\n        // Read values\r\n        // If the label width or the value width are 0, the BAS means that no value is used, so we need to adjust them to 50%\r\n        if (valueWidth == \"100\" && typeof labelWidth === \"undefined\") {\r\n            labelWidth = \"0\";\r\n        } else {\r\n            labelWidth = labelWidth ? (labelWidth != \"0\" ? labelWidth : \"50\") : \"50%\";\r\n        }\r\n        valueWidth = valueWidth ? (valueWidth != \"0\" ? valueWidth : \"50\") : \"50%\";\r\n\r\n        if (displayType == \"normal\" || displayType == \"both\" || displayType == \"reversed\") {\r\n\r\n            // Special case with lower values, so they want both fields in \"auto\" width\r\n            if (labelWidth && bizagi.util.percent2Number(labelWidth) < 5 &&\r\n                valueWidth && bizagi.util.percent2Number(valueWidth) < 5) {\r\n                return {label: 0, control: 100};\r\n            }\r\n            // Normalize percentages\r\n            if (labelWidth && !valueWidth) {\r\n                labelWidth = bizagi.util.percent2Number(labelWidth);\r\n                valueWidth = 100 - labelWidth;\r\n\r\n            } else if (!labelWidth && valueWidth) {\r\n                valueWidth = bizagi.util.percent2Number(valueWidth);\r\n                labelWidth = 100 - valueWidth;\r\n            } else {\r\n                labelWidth = bizagi.util.percent2Number(labelWidth);\r\n                valueWidth = bizagi.util.percent2Number(valueWidth);\r\n\r\n                // Check 100% percentage\r\n                if ((labelWidth + valueWidth) != 100 && typeof (self.properties) != \"undefined\" && self.properties.layoutType != \"pixels\") {\r\n                    valueWidth = 100 - labelWidth;\r\n                }\r\n            }\r\n        } else {\r\n            labelWidth = 100;\r\n            valueWidth = 100;\r\n        }\r\n\r\n        return {label: labelWidth, control: valueWidth};\r\n    },\r\n    /*\r\n    *   Get param value idCase\r\n    */\r\n    getIdCase: function () {\r\n        var self = this;\r\n        return self.getFormContainer().params.idCase || bizagi.context.idCase;\r\n    },\r\n    /*\r\n    *   Get param value idWorkitem\r\n    */\r\n    getIdWorkitem: function () {\r\n        var self = this;\r\n        return self.getFormContainer().params.idWorkitem || bizagi.context.idWorkitem;\r\n    },\r\n    /*\r\n    *   Get param value idTask\r\n    */\r\n    getidTask: function () {\r\n        var self = this;\r\n        return self.getFormContainer().params.idTask || bizagi.context.idTask;\r\n    },\r\n    /*\r\n    *   Get param value sessionId\r\n    */\r\n    getSessionId: function () {\r\n        var self = this;\r\n        return self.getFormContainer().properties.sessionId;\r\n    },\r\n\r\n    /*\r\n    *   CELL STUFF\r\n    *   TODO: Move to other place\r\n    */\r\n\r\n    /* Customizes cell color*/\r\n    changeCellColor: function (color) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        if (control) {\r\n            if (color != 'none') {\r\n                control.css(\"color\", color);\r\n                control.find(\"input, textarea, label\").each(function (i, element) {\r\n                    $(element).css(\"color\", color);\r\n                });\r\n            } else {\r\n                control.css(\"color\", \"\");\r\n                control.find(\"input, textarea, label\").each(function (i, element) {\r\n                    $(element).css(\"color\", \"\");\r\n                });\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Customizes cell background color\r\n     * @param color\r\n     */\r\n    changeCellBackgroundColor: function (color) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var backgroundColor = \"\";\r\n        var backgroundImage = \"\";\r\n\r\n        if (control) {\r\n            if (color != 'none') {\r\n                backgroundColor = color;\r\n                backgroundImage = \"none\";\r\n            }\r\n\r\n            if (self.properties.editable) {\r\n                var needBGPaint = false;\r\n\r\n                control.find(\"input, textarea, .ui-selectmenu\").each(function (i, element) {\r\n\r\n                    if (((element.type == \"text\") || (element.type == \"textarea\")) && !($(element).hasClass('ui-select-data')))\r\n                        needBGPaint = true;\r\n\r\n                    $(element).css({\r\n                        \"background-color\": backgroundColor,\r\n                        \"background-image\": backgroundImage\r\n                    });\r\n                });\r\n\r\n                if (!needBGPaint) {\r\n                    control.closest(\"td\").each(function (i, element) {\r\n                        $(element).css({\r\n                            \"background-color\": backgroundColor,\r\n                            \"background-image\": backgroundImage\r\n                        });\r\n                    });\r\n                }\r\n\r\n            } else {\r\n                control.each(function (i, element) {\r\n                    //TODO: Validar si se aplican los estilos en tablet aun sin esta linea, cuidado con desktop\r\n                    var item = ($(element).hasClass(\"ui-bizagi-cell-readonly\")) ? control.closest(\"td\") : $(element);\r\n                    item.css({\r\n                        \"background-color\": backgroundColor,\r\n                        \"background-image\": backgroundImage\r\n                    });\r\n                });\r\n            }\r\n        }\r\n\r\n\r\n    },\r\n\r\n    /**\r\n     * Changes the cell visibility\r\n     * @param argument\r\n     */\r\n    changeCellVisibility: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        if (control) {\r\n            // Hide - show the render\r\n            if (bizagi.util.parseBoolean(argument) == true) {\r\n                //control.show();\r\n                control.css(\"visibility\", \"visible\");\r\n                control.css(\"display\", \"\");\r\n\r\n                self.element && self.element.show();\r\n            } else {\r\n                //control.hide();\r\n                control.css(\"visibility\", \"hidden\");\r\n            }\r\n        }\r\n\r\n        // Update properties\r\n        properties.visible = argument;\r\n    },\r\n\r\n    /**\r\n     * Changes the cell required\r\n     * @param argument\r\n     */\r\n    changeCellRequired: function (argument) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        if (control) {\r\n            // Check if argument is true and control donot have any value\r\n            if (bizagi.util.parseBoolean(argument) == true && bizagi.util.isEmpty(self.value)) {\r\n                control.addClass('control-required');\r\n                control.append('<div class=\"ui-bizagi-render-control-required\"></div>');\r\n            } else {\r\n                control.removeClass('control-required');\r\n                $(\".ui-bizagi-render-control-required\", control).remove();\r\n            }\r\n            // Update properties\r\n            properties.required = argument;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to create deferred at the moment to start multiaction\r\n     */\r\n    startActionExecution: function () {\r\n        var self = this;\r\n        self.startLoading();\r\n        self.actionExecutionDeferred = new $.Deferred();\r\n    },\r\n\r\n    /**\r\n     * method to resolve the deferred when multiaction finish\r\n     */\r\n    endActionExecution: function () {\r\n        var self = this;\r\n        self.endLoading();\r\n        if (self.actionExecutionDeferred) self.actionExecutionDeferred.resolve();\r\n        delete self.actionExecutionDeferred;\r\n    },\r\n\r\n    /**\r\n     * Method to return the promise to anyone that needs to know if multiaction ended\r\n     * @returns {*}\r\n     */\r\n    readyActionExecution: function () {\r\n        var self = this;\r\n        if (!self.actionExecutionDeferred) return $.when(true);\r\n        return self.actionExecutionDeferred.promise();\r\n    },\r\n\r\n    /**\r\n     * Verifies is the elements was inside a new row in a grid\r\n     * @returns {boolean}\r\n     */\r\n    isFromCreatedRow: function () {\r\n        var self = this;\r\n\r\n        if (self.grid) {\r\n            var i = self.grid.columns.length;\r\n\r\n            while (i-- > 0) {\r\n                if (self.grid.columns[i].properties.xpath == self.properties.xpath) {\r\n                    if (self.grid.columns[i].isNewRow == true) {\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    /**\r\n     * Submits a invalidate page cache request\r\n     * @param params\r\n     */\r\n    submitInvalidatePageCacheRequest: function (params) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var pageCacheToInvalidate = params ? params.idPageCache : properties.idPageCache;\r\n\r\n\r\n        self.dataService.invalidatePageCache({idPageCache: pageCacheToInvalidate});\r\n    },\r\n\r\n    /**\r\n     * Check is design mode\r\n     */\r\n    isDesignMode: function () {\r\n        return this.getMode() === \"design\";\r\n    },\r\n\r\n    /**\r\n     * Check is design mode\r\n     */\r\n    isExecutionMode: function () {\r\n        return this.getMode() === \"execution\";\r\n    },\r\n\r\n    /***/\r\n    preventDefaultForAnchorTag: function(){        \r\n        if (bizagi.util.isSharepointContext()){\r\n            $(\"a\", this.getControl()).click(function(ev){\r\n                ev.preventDefault();          \r\n            });\r\n        }    \r\n    }\r\n});","/*\r\n *   Name: Bizagi Render Base Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define a base render class with common stuff related to all renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.render.base\", {}, {\r\n\r\n    /**\r\n     * Method to process the render the layout\r\n     * @param {boolean} isLabelFormat\r\n     * @param {string} format\r\n     */\r\n    processLayout: function (isLabelFormat, format) {\r\n        var properties = this.properties;\r\n\r\n        if (typeof isLabelFormat !== \"boolean\") {\r\n            console.warm(\"error calling processLayout, 'isLabelFormat' is not boolean\");\r\n            return;\r\n        }\r\n\r\n        if (isLabelFormat) {\r\n            this.processLabelLayout(format);\r\n        } else {\r\n            this.processControlLayout(format);\r\n\r\n            // Set required and visiblity\r\n            properties.required = typeof (properties.required) !== \"undefined\" ? bizagi.util.parseBoolean(properties.required) : false;\r\n            var visible = typeof (properties.visible) !== \"undefined\" ? bizagi.util.parseBoolean(properties.visible) : true;\r\n\r\n            if (properties.required) {\r\n                this.changeRequired(properties.required);\r\n            }\r\n\r\n            if (!visible) {\r\n                this.changeVisibility(visible);\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to process the label in the layout\r\n     * @param {} format\r\n     * @returns {}\r\n     */\r\n    processLabelLayout: function (format) {\r\n        var $label = this.getLabel();\r\n        if ($label == null) return;\r\n\r\n        // Set customizations\r\n        format = format || {};\r\n        if (typeof format.bold === \"undefined\") {\r\n            format.bold = true; // Default value\r\n        }\r\n\r\n        this.changeBackgroundColor(format.background)\r\n            .changeFontColor($label, format.color)\r\n            .changeFontBold($label, format.bold)\r\n            .changeFontSize($label, format.size)\r\n            .changeFontItalic($label, format.italic)\r\n            .changeTextDecoration($label, (format.underline ? \"underline\" : \"\") + (format.strikethru ? \" line-through\" : \"\"));\r\n    },\r\n\r\n    /**\r\n     * Method to process the control in the layout\r\n     * @param {} format\r\n     * @returns {}\r\n     */\r\n    processControlLayout: function (format) {\r\n        var $control = this.getControl();\r\n        var $elements = this.getElementsToStylize($control);\r\n\r\n        // Set customizations\r\n        format = format || {};\r\n\r\n        this.changeFontColor($elements, format.color)\r\n            .changeFontBold($elements, format.bold)\r\n            .changeFontItalic($elements, format.italic)\r\n            .changeFontSize($elements, format.size)\r\n            .changeTextDecoration($elements, (format.underline ? \"underline\" : \"\") + (format.strikethru ? \" line-through\" : \"\"));\r\n    },\r\n\r\n    /**\r\n     * Customizes render color\r\n     * @param {} color\r\n     * @returns {}\r\n     */\r\n    changeColor: function (color) {\r\n        var $label = this.getLabel();\r\n        var $control = this.getControl();\r\n        var $elements = this.getElementsToStylize($control);\r\n\r\n        return this\r\n            .changeFontColor($label, color)\r\n            .changeFontColor($elements, color);\r\n    },\r\n\r\n    /**\r\n     * Customizes render color\r\n     * @param {} $element\r\n     * @param {} color\r\n     * @returns {}\r\n     */\r\n    changeFontColor: function ($element, color) {\r\n        if ($element === undefined) return this;\r\n        if (color === undefined) return this;\r\n\r\n        var style = color !== \"none\" ? color : \"\";\r\n        $element.css(\"color\", style);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font size property\r\n     * @param {} $element\r\n     * @param {} size\r\n     * @returns {}\r\n     */\r\n    changeFontSize: function ($element, size) {\r\n        if (size === undefined) return this;\r\n        if ($element === undefined) return this;\r\n\r\n        if (size !== \"0\") {\r\n            var newFontSize = 100 + Number(size) * 10 + \"%\";\r\n            $element.css(\"font-size\", newFontSize);\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font Strikethrough or underline property\r\n     * @param {} $element\r\n     * @param {} textDecoration\r\n     * @returns {}\r\n     */\r\n    changeTextDecoration: function ($element, textDecoration) {\r\n        if (textDecoration === undefined) return this;\r\n        if ($element === undefined) return this;\r\n\r\n        textDecoration && $element.css(\"text-decoration\", textDecoration);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font italic style\r\n     * @param {} $element\r\n     * @param {} italic\r\n     * @returns {}\r\n     */\r\n    changeFontItalic: function ($element, italic) {\r\n        var style = bizagi.util.parseBoolean(italic) ? \"italic\" : \"normal\";\r\n\r\n        $element.css(\"font-style\", style);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes the font weight\r\n     * @param {} $label\r\n     * @param {} bold\r\n     * @returns {}\r\n     */\r\n    changeFontBold: function ($label, bold) {\r\n        var style = bizagi.util.parseBoolean(bold) ? \"bold\" : \"normal\";\r\n\r\n        $label.css(\"font-weight\", style);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Customizes render background color\r\n     * @param {} color\r\n     * @returns {}\r\n     */\r\n    changeBackgroundColor: function (color) {\r\n        if (typeof color === \"undefined\") return this;\r\n\r\n        if (color !== \"none\") {\r\n            this.element.css(\"background-color\", color);\r\n        } else {\r\n            this.element.css(\"background-color\", \"\");\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * This method just make a toggle of red label indicator\r\n     * @argument {boolean} argument\r\n     */\r\n    changeRequiredLabel: function () {\r\n    },\r\n\r\n    /**\r\n     * Change cell required and attach bindings\r\n     * @param argument\r\n     */\r\n    changeCellRequired: function (argument) {\r\n        this.changeRequired(argument);\r\n    },\r\n\r\n    /**\r\n     * \r\n     */\r\n    getRTLAlign: function (align) {\r\n        if (typeof align == \"undefined\" || align == \"\") {\r\n            return \"default\";\r\n        }\r\n        return align;\r\n    },\r\n\r\n    /**\r\n     * TODO: This override should be removed after genome, just because the align shoudnt be depend of the display type\r\n     */\r\n    getDefaultLabelAlign: function(){\r\n        return \"default\";\r\n    },\r\n\r\n    /**\r\n     * TODO: This override should be removed after genome, just because the align shoudnt be depend of the display type\r\n     */\r\n    getDefaultValueAlign: function(){\r\n        return \"default\";\r\n    }\r\n});","/**\r\n *   Name: Bizagi Render Combo Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for combo renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.combo\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        properties.hasLocalData = properties.data || false;\r\n        // TODO: Review additional value in radio control\r\n        properties.value = properties.value && properties.value.length > 0 ? properties.value[0] : (properties.defaultValue && properties.defaultValue.length > 0 ? properties.defaultValue[0] : null);\r\n\r\n        if (typeof (properties.enableTyping) === \"undefined\") properties.enableTyping = true;\r\n        if (properties.value && properties.value.id === undefined) properties.value = null;\r\n        this.value = properties.value;\r\n\r\n        // Add empty node if configured\r\n        if (properties.hasLocalData) {\r\n            properties.data = this.complementData(properties.data);\r\n        }\r\n\r\n        // This line is to set a flag to fetch the data when rendering, or on demand, by default is false, overriding it on desktop implementation\r\n        properties.loadOnDemand = false;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var params = {};\r\n        var renderType = bizagi.util.normalizeType(self.properties.type);\r\n\r\n        if (self.isDependant && self.properties && /^cascadingcombo$/i.test(renderType) && self.getParentCombo) {\r\n            var valueControl = self.getParentCombo().getValue();\r\n            if (valueControl && valueControl.id) {\r\n                params[self.Class.BA_ACTION_PARAMETER_PREFIX + \"parent\"] = valueControl.id;\r\n            }\r\n        }\r\n\r\n        return self.renderCombo(params);\r\n    },\r\n\r\n    /*\r\n    *   Renders the combo\r\n    */\r\n    renderCombo: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (properties.loadOnDemand) {\r\n            // Render the combo without data\r\n            var html = self.renderComboTemplate();\r\n            return html;\r\n        } else {\r\n\r\n            // Set data promise \r\n            var defer = new $.Deferred();\r\n            var dataPromise = self.getData(params);\r\n\r\n            // Attach callback \r\n            $.when(dataPromise).done(function (data) {\r\n                // Render combo\r\n                var html = self.renderComboTemplate(data);\r\n                self.properties.data = data;\r\n                defer.resolve(html);\r\n\r\n            }).fail(function (data) {\r\n                var html = self.renderComboTemplate({});\r\n                defer.resolve(html);\r\n            });\r\n\r\n            // Returns a promise so we can hold post-render method until this is done\r\n            return defer.promise();\r\n        }\r\n    },\r\n\r\n    renderComboTemplate: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(self.getTemplateName());\r\n        var emptyValue = bizagi.override.emptyLabelForCombo || self.getResource(\"render-combo-empty-selection\");\r\n        var value = properties.value ? \"\" : emptyValue;\r\n        data = data || self.properties.data || {};\r\n\r\n        if (self.properties.type === \"columnCombo\" && value === \"\" && typeof properties.value === \"object\" && properties.value.id === \"\" && (properties.value.value === \"\" || properties.value.value === self.getResource(\"render-combo-empty-value\"))) {\r\n            value = self.getResource(\"render-combo-empty-selection\");\r\n        }\r\n\r\n        var html = $.fasttmpl(template, $.extend(self.getTemplateParams(), {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            unique: bizagi.util.randomNumber(10000, 1000000),\r\n            idPageCache: properties.idPageCache,\r\n            items: data,\r\n            align: properties.valueAlign,\r\n            value: value,\r\n            editable: properties.editable\r\n        }));\r\n\r\n\r\n        return html;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize each render after processed in read-only mode\r\n    */\r\n    postRenderReadOnly: function () {\r\n        var self = this;\r\n        self._super();\r\n        var item = self.getValue();\r\n        var control = self.getControl();\r\n\r\n        if (self.control && self.control.parent()) {\r\n            self.control.parent().addClass(\"ui-bizagi-noneditable-\" + self.properties.displayType);\r\n        }\r\n        if (item) {\r\n\r\n            if (item.value != null && typeof (item.value) === \"boolean\") {\r\n                if (bizagi.util.parseBoolean(item.value) === true) {\r\n                    item.value = this.getResource(\"render-boolean-yes\");\r\n\r\n                } else if (bizagi.util.parseBoolean(item.value) == false) {\r\n                    item.value = this.getResource(\"render-boolean-no\");\r\n                }\r\n            }\r\n\r\n            // Returns the cached value from the properties to avoid server side fetching\r\n            if (self.getResource(\"render-combo-empty-value\") === item.value || self.getResource(\"render-combo-empty-selection\") === item.value) {\r\n                control.text(\"\");\r\n            } else {\r\n                control.html(\"<label class='readonly-control'>\" + self.formatItem(item.value) + \"</label>\");\r\n            }\r\n        } else {\r\n            // Render empty \r\n            control.text(\"\");\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Gets the template used by the combo render\r\n    *   can be overriden in subclasses to reuse logic and just change the template\r\n    */\r\n    getTemplateName: function () {\r\n        return \"combo\";\r\n    },\r\n\r\n    /*\r\n    *   Determines if we need to show the empty node or not\r\n    *   Can be overriden to change behaviour\r\n    */\r\n    showEmpty: function () {\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Determines if we need to show the current data regardless if it belongs to data or not\r\n    *   Can be overriden to change behaviour\r\n    */\r\n    showCurrentData: function () {\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Fetch the data into a deferred\r\n    */\r\n    getData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n        var mode = self.getMode();\r\n\r\n        // Just execute ajax calls when rendering in execution mode\r\n        if (mode !== \"execution\") return self.getDummyData();\r\n\r\n        if (properties.hasLocalData) {\r\n\r\n            // Resolve with local data    \r\n            defer.resolve(properties.data);\r\n\r\n        } else {\r\n            var renderType = bizagi.util.normalizeType(properties.type);\r\n\r\n            // Check if the data has been cached\r\n            if (properties.remoteDataLoaded && !(/^cascadingcombo$/i.test(renderType))) {\r\n                defer.resolve(properties.data);\r\n            } else {\r\n                // Go to server\r\n                self.dataService.multiaction().getData({\r\n                    url: properties.dataUrl,\r\n                    xpath: properties.xpath,\r\n                    idRender: properties.id,\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache,\r\n                    extra: params,\r\n                    contexttype: self.properties.contexttype || null\r\n                }).done(function (data) {\r\n\r\n                    // Resolve the data\r\n                    if (!properties.recalculate) {\r\n                        properties.remoteDataLoaded = true;\r\n                    }\r\n                    properties.data = self.complementData(data);\r\n                    defer.resolve(properties.data);\r\n\r\n                }).fail(function (data) {\r\n\r\n                    if (data.type === \"not-processed\")\r\n                        return;\r\n\r\n                    // Show error from server\r\n                    var form = self.getFormContainer();\r\n                    var msgObj = self.properties.displayName + \": \";\r\n\r\n                    if (typeof data === \"string\") {\r\n                        var auxMsg = JSON && JSON.parse(data) || $.parseJSON(data);\r\n                    } else {\r\n                        var auxMsg = data;\r\n                    }\r\n\r\n                    msgObj += auxMsg.message;\r\n\r\n                    form.addValidationMessage(msgObj);\r\n\r\n                    defer.reject(data);\r\n                });\r\n            }\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Creates a set of dummy data in order to display it when rendering in design or layout mode\r\n    */\r\n    getDummyData: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (properties.data) {\r\n            return properties.data;\r\n\r\n        } else {\r\n            properties.data = [];\r\n            properties.data = self.complementData(properties.data);\r\n\r\n            // Add another data\r\n            properties.data.push({id: \"\", value: \"Item 1\"});\r\n            properties.data.push({id: \"\", value: \"Item 2\"});\r\n\r\n            return properties.data;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Resets the data in order to fetch it again when needed\r\n    */\r\n    resetData: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        properties.hasLocalData = false;\r\n        properties.data = null;\r\n        properties.remoteDataLoaded = false;\r\n    },\r\n\r\n    /* \r\n    *   Gets the display value of the render\r\n    */\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n\r\n        if (self.combo && self.combo.length > 0) {\r\n            // When there is a combo painted, we fetch the selected value from it\r\n            return self.getSelectedValue();\r\n        } else {\r\n            var displayValue = \"\";\r\n            var item = self.getValue();\r\n\r\n            if (item) {\r\n                // Check on cached propert from server first if the key exists\r\n                displayValue = self.formatItem(item.value);\r\n            }\r\n\r\n            return displayValue;\r\n        }\r\n    },\r\n\r\n\r\n    /*\r\n    *   Returns the selected value in the template\r\n    */\r\n    getSelectedValue: function () {\r\n    },\r\n\r\n    /*\r\n    *   Adds custom parameters to process the template\r\n    */\r\n    getTemplateParams: function () {\r\n        return {};\r\n    },\r\n\r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n\r\n        if (value !== undefined && value !== null) {\r\n            if ($.isArray(value)) {\r\n\r\n                for (var i = 0, length = value.length; i < length; i++) {\r\n                    if (value[i] != null && typeof (value[i]) === \"boolean\") {\r\n                        if (bizagi.util.parseBoolean(value[i]) === true) {\r\n                            value[i] = this.getResource(\"render-boolean-yes\");\r\n                        } else if (bizagi.util.parseBoolean(value[i]) === false) {\r\n                            value[i] = this.getResource(\"render-boolean-no\");\r\n                        }\r\n                    }\r\n                }\r\n                return value.join(\" - \");\r\n            } else {\r\n                return value;\r\n            }\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Add the render value\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            // Remove empty validation for value for combos        \r\n            if (!bizagi.util.isEmpty(xpath) && value !== null && typeof (value) !== \"undefined\") {\r\n                // Add a validation because sometimes value contains an empty not null object\r\n                if (typeof (value) === \"object\" && (value.id === undefined || value.id === \"\")) {\r\n                    renderValues[properties.xpath] = \"\";\r\n                } else {\r\n                    // Add the value to the server\r\n                    renderValues[properties.xpath] = typeof (value.id) !== \"undefined\" ? value.id : \"\";\r\n                }\r\n            }\r\n        }\r\n    },\r\n\r\n    controlValueIsChanged: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var currentValue = self.getValue();\r\n        var originalValue = properties.originalValue;\r\n        var defaultValue = properties.defaultValue;\r\n\r\n        var result = true;\r\n\r\n        if ($.forceCollectData) {\r\n            return result;\r\n        }\r\n\r\n        currentValue = currentValue && currentValue.length !== undefined ? currentValue[0] : currentValue;\r\n        originalValue = originalValue && originalValue.length !== undefined ? originalValue[0] : originalValue;\r\n        defaultValue = defaultValue && defaultValue.length !== undefined ? defaultValue[0] : defaultValue;\r\n\r\n        currentValue = currentValue && currentValue.id !== undefined ? currentValue.id : currentValue;\r\n        originalValue = originalValue && originalValue.id !== undefined ? originalValue.id : originalValue;\r\n        defaultValue = defaultValue && defaultValue.id !== undefined ? defaultValue.id : defaultValue;\r\n\r\n        if (defaultValue !== undefined) {\r\n            if (defaultValue != originalValue || defaultValue != currentValue) {\r\n                result = true;\r\n            } else {\r\n                result = false;\r\n            }\r\n        } else {\r\n            result = currentValue != originalValue ? true : false;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    * Parses additional values info in order to format them correctly\r\n    */\r\n    parseAdditionalValues: function (data) {\r\n        var self = this;\r\n\r\n        return $.map(data, function (item) {\r\n            var value = item.value ? self.formatItem(item.value) : item;\r\n            var newItem = {id: item.id, value: value};\r\n\r\n            if (item.hidden) newItem.hidden = true;\r\n            return item;\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Complement data from server before control implementation\r\n    */\r\n    complementData: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var bCurrentDataFound = false;\r\n        $.each(data, function (i, item) {\r\n\r\n            if (item.value !== undefined && item.value !== null) {\r\n                item.value = self.formatItem(item.value);\r\n                if (properties.value) {\r\n                    if (item.id == properties.value.id) {\r\n                        bCurrentDataFound = true;\r\n                    }\r\n                }\r\n            } else {\r\n                item.value = \"\";\r\n            }\r\n        });\r\n\r\n        // Add empty node if configured\r\n        if (self.showEmpty()) {\r\n            var emptyFound = false;\r\n            for (var i = 0, length = data.length; i < length; i++) {\r\n                if (data[i].id === \"\") {\r\n                    emptyFound = true;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!emptyFound) {\r\n                var dataValue = bizagi.override.emptyLabelForCombo || bizagi.localization.getResource(\"render-combo-empty-value\")\r\n                data.unshift({id: \"\", value: dataValue});\r\n            }\r\n        }\r\n\r\n        if (properties.value) {\r\n            if (!bCurrentDataFound && self.showCurrentData()) {\r\n                data.unshift({id: properties.value.id, value: properties.value.value, hidden: true});\r\n            }\r\n        }\r\n\r\n        // Add additional value\r\n        return self.parseAdditionalValues(data);\r\n    },\r\n\r\n    /*\r\n    *   Check if a render has no value for required validation\r\n    */\r\n    hasValue: function () {\r\n        var self = this;\r\n        var currentValue = self.getValue();\r\n\r\n        if (bizagi.util.isEmpty(currentValue)) return false;\r\n        if (Object.prototype.toString.apply(currentValue) === \"[object Object]\" && (bizagi.util.isEmpty(currentValue.id) || currentValue.id == 0)) return false;\r\n\r\n        // Else\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    * Cleans current data\r\n    */\r\n    cleanData: function () {\r\n        var self = this;\r\n        var value = {id: \"\", label: \"\"};\r\n\r\n        self.setDisplayValue(value);\r\n        self.setValue(value, false);\r\n    },\r\n\r\n    beforeToRefresh: function () {\r\n        this.column && !this.column.comboData && this.getData();\r\n    },\r\n\r\n    isExtraItem: function () {\r\n        var self = this;\r\n        var data = self.value || {};\r\n        var value = data.value || \"\";\r\n\r\n        return value === \"\" || value === self.getResource(\"render-combo-empty-selection\") || value === self.getResource(\"render-combo-empty-value\");\r\n    },\r\n\r\n    escapeValue: function (value) {\r\n        if (bizagi.util.isString(value)) {\r\n            var valueToReturn = value.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\r\n            return valueToReturn;\r\n        } else {\r\n            return value;\r\n        }\r\n    },\r\n\r\n    /**\r\n     *  Maps the value, when this one comes from actions\r\n     * @param value\r\n     * @returns {*}\r\n     */\r\n    mapValue: function (value) {\r\n        if (value && value.fromAction) {\r\n            return {\r\n                id: value.value,\r\n                value: value.label,\r\n                label: value.label\r\n            }\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    validateValue: function (value) {\r\n        if ((value.id != undefined) && ((typeof value.id === \"number\" && value.id !== null) || (typeof value.id === \"string\" && value.id.length > 0))) {\r\n            if (value.value !== null && typeof value.value === \"boolean\") {\r\n                translated = true;\r\n                if (bizagi.util.parseBoolean(value.value) === true) {\r\n                    value.value = bizagi.localization.getResource(\"render-boolean-yes\");\r\n                } else if (bizagi.util.parseBoolean(value.value) === false) {\r\n                    value.value = bizagi.localization.getResource(\"render-boolean-no\");\r\n                }\r\n            } else if (value.value != null && typeof value.value === \"object\") {\r\n                for (var i = 0, length = value.value.length; i < length; i++) {\r\n                    if (value.value[i] != null && typeof (value.value[i]) === \"boolean\") {\r\n                        if (bizagi.util.parseBoolean(value.value[i]) === true) {\r\n                            value.value[i] = bizagi.localization.getResource(\"render-boolean-yes\");\r\n                        } else if (bizagi.util.parseBoolean(value.value[i]) === false) {\r\n                            value.value[i] = bizagi.localization.getResource(\"render-boolean-no\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    /**\r\n     * Finds an element in the combo data values by id\r\n     * @param {int} id\r\n     * @returns {Object}\r\n     */\r\n    findDataValueById: function (id) {\r\n        return (this.properties.data || []).find(function (e) {\r\n            return e.id == id;\r\n        });\r\n    }\r\n\r\n});","/*\r\n*   Name: Bizagi Render CollectionNavigator\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define basic stuff for collection navigator renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.collectionnavigator\", {}, {\r\n\r\n    initializeData: function (params) {\r\n        var self = this;\r\n\r\n        self._super(params);\r\n\r\n        var properties = self.properties;\r\n        properties.allowAdd = (typeof properties.allowAdd != \"undefined\") ? bizagi.util.parseBoolean(properties.allowAdd) : true;\r\n        properties.withAddForm = properties.withAddForm && properties.allowAdd;\r\n        properties.allowEdit = (typeof properties.allowEdit != \"undefined\") ? bizagi.util.parseBoolean(properties.allowEdit) : true;\r\n        properties.withEditForm = properties.withEditForm && properties.allowEdit;\r\n        properties.allowDetail = (typeof properties.allowDetail != \"undefined\") ? bizagi.util.parseBoolean(properties.allowDetail) : false;\r\n        properties.inlineAdd = (typeof properties.inlineAdd != \"undefined\") ? bizagi.util.parseBoolean(properties.inlineAdd) : true;\r\n        properties.inlineAdd = properties.inlineAdd && properties.allowAdd;\r\n        properties.inlineEdit = (typeof properties.inlineEdit != \"undefined\") ? bizagi.util.parseBoolean(properties.inlineEdit) : true;\r\n        properties.inlineEdit = properties.inlineEdit && properties.allowEdit;\r\n        properties.allowDelete = (typeof properties.allowDelete != \"undefined\") ? bizagi.util.parseBoolean(properties.allowDelete) : true;\r\n\r\n        self.orientation = self.properties.orientation || \"ltr\",\r\n        self.data = self.properties.data;\r\n        self.keys = self.data ? self.getKeys(self.data.rows) : [];\r\n        self.pointer = 0;\r\n        self.totalRows = 0;\r\n        self.inlineAddRecords = [];\r\n\r\n        if (self.data) {\r\n            self.totalRows = self.data.rows.length;\r\n        }\r\n    },\r\n    /*\r\n    * Normalize keys\r\n    */\r\n    getKeys: function (rows) {\r\n        rows = rows || [];\r\n        var keys = [];\r\n\r\n        for (var i = 0, l = rows.length; i < l; i++) {\r\n            var row = rows[i];\r\n            keys.push(row[0]);\r\n        }\r\n        return keys;\r\n    },\r\n\r\n    /*\r\n    *   Render the control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var templateItem = \"collectionnavigator\";\r\n        var template = self.renderFactory.getTemplate(templateItem);\r\n        var mode = self.getMode();\r\n\r\n        // Render the container\r\n        var html = $.fasttmpl(template, {\r\n            uniqueId: properties.uniqueId,\r\n            displayName: properties.displayName ? properties.displayName : \"\",\r\n            id: properties.id,\r\n            guid: properties.guid,\r\n            showPreview: self.showPreview(),\r\n            mode: mode,\r\n            orientation: self.getFormContainer().properties.orientation\r\n        });\r\n\r\n        html = self.drawControls(html);\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    * Render version readonly of control\r\n    */\r\n    renderReadOnly: function () {        \r\n        return this.renderControl();\r\n    },\r\n\r\n    /*\r\n    * Draw navigation controls\r\n    */\r\n    drawControls: function (html) {\r\n\r\n    },\r\n\r\n    /*\r\n    *  render several actions in the navigation palete\r\n    *  ex. save, cancel \r\n    */\r\n    drawActions: function (controls) {\r\n\r\n    },\r\n\r\n    /*\r\n    * Render navigation controls (next, previous, last, first. etc )\r\n    */\r\n    drawControl: function (controls) {\r\n\r\n    },\r\n\r\n    /*\r\n    * Draw forms options (add form, edit form, navigation form)\r\n    */\r\n    drawForms: function (controls) {\r\n\r\n    },\r\n\r\n    /*\r\n    * Draw a preview views, it will be show when the collection hasn't records\r\n    */\r\n    drawPreview: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var templateItem = (mode === \"execution\") ? \"collectionnavigator-execution\" : \"collectionnavigator-preview\";\r\n        var template = self.renderFactory.getTemplate(templateItem);\r\n        var html = $.tmpl(template);\r\n\r\n        self.canvas.append(html);\r\n\r\n    },\r\n\r\n    /*\r\n    * Returns true if the collection has data\r\n    */\r\n    hasData: function () {        \r\n        return this.getTotalRows() > 0;\r\n    },\r\n\r\n    /*\r\n    * Returns the key of current row\r\n    */\r\n    getRow: function () {        \r\n        return this.keys[this.pointer];\r\n    },\r\n\r\n    /*\r\n    * Returns the key of next row\r\n    */\r\n    getNextRow: function () {\r\n        var self = this;\r\n\r\n        if (self.getTotalRows() > (self.pointer + 1))\r\n            self.pointer += 1;\r\n\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the key of previous row\r\n    */\r\n    getPreviousRow: function() {\r\n        var self = this;\r\n\r\n        if (self.pointer > 0)\r\n            self.pointer -= 1;\r\n\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the key of first row\r\n    */\r\n    getFirstRow: function () {\r\n        var self = this;\r\n\r\n        self.pointer = 0;\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the key of last row\r\n    */\r\n    getLastRow: function () {\r\n        var self = this;\r\n\r\n        self.pointer = self.keys.length - 1;\r\n        return self.getRow();\r\n    },\r\n\r\n    /*\r\n    * Returns the total numbers of rows in collection\r\n    */\r\n    getTotalRows: function () {        \r\n        return this.keys.length;\r\n    },\r\n\r\n    getIndexes: function () {        \r\n        return this.properties.data.rows;\r\n    },\r\n\r\n    /*\r\n    * Sets the pointer to a specific position\r\n    */\r\n    setPointer: function (index) {        \r\n        this.pointer = index - 1;\r\n    },\r\n\r\n    /*\r\n    * Returns true is there is a inline row pending to save\r\n    */\r\n    isTherePendingInlineRow: function() {\r\n        return this.inlineAddRecords.length > 0;\r\n    },\r\n\r\n    /*\r\n    * Adds new row to collection\r\n    */\r\n    addKey: function (newId) {        \r\n        this.keys.push(newId);\r\n    },\r\n\r\n    /*\r\n    * Removes row in collection\r\n    */\r\n    removeKey: function () {\r\n        var self = this;\r\n        var index = self.pointer;\r\n\r\n        if (index >= 0) {\r\n            self.keys.splice(index, 1);\r\n\r\n            var totalRows = self.getTotalRows();\r\n            if (totalRows > 0 && index >= totalRows) {\r\n                self.setPointer(totalRows);\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Returns true if the control should show the preview view\r\n    * ex. if the collection is empty \r\n    */\r\n    showPreview: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var properties = self.properties;\r\n\r\n        if (mode == \"execution\") {\r\n            return !self.hasData();\r\n        } else {\r\n            return !bizagi.util.parseBoolean(properties.navigationform);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Returns the parameters needed for the request\r\n    */\r\n    getParameters: function (params) {\r\n        var self = this;\r\n\r\n        var parameters = {};\r\n        var properties = self.properties;\r\n        var recordXpath = properties.xpath + \"[id=\" + params.id + \"]\";\r\n\r\n        parameters.idRender = properties.id;\r\n        parameters.recordXPath = recordXpath;\r\n        parameters.xpathContext = properties.xpathContext;\r\n        parameters.idPageCache = properties.idPageCache;\r\n        parameters.requestedForm = params.requestedForm;\r\n        parameters.contextType = properties.contextType || properties.contexttype;\r\n        parameters.url = params.url;\r\n        parameters.editable = params.editable;\r\n        orientation: properties.orientation || \"ltr\";\r\n\r\n\r\n        return parameters;\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection navigator add record request\r\n    *   Returns a deferred when done, the server returns an id for the new record\r\n    */\r\n    submitAddRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var request = self.dataService.addGridRecord({\r\n            url: properties.addUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType || properties.contexttype,\r\n            idPageCache: properties.idPageCache,\r\n            orientation: properties.orientation || \"ltr\"\r\n        });\r\n\r\n        var filterResponse = request.pipe(function (data) {\r\n            // Parses response\r\n            return data.idEntity;\r\n        });\r\n\r\n        return filterResponse.promise();\r\n    },\r\n\r\n    /*\r\n    *   Submits a edit record request for the given id \r\n    *   Returns a deferred\r\n    */\r\n    submitEditRequest: function (id) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n        return self.dataService.editGridRecord({\r\n            url: properties.editUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType || properties.contexttype || '',\r\n            orientation: properties.orientation || \"ltr\"\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection delete record request for the given id \r\n    *   Returns a deferred\r\n    */\r\n    submitDeleteRequest: function (id) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n        return self.dataService.deleteGridRecord({\r\n            url: properties.deleteUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType || properties.contexttype\r\n        }).pipe(function (data) {\r\n            if (data.type == \"validationMessages\") {\r\n                var form = self.getFormContainer();\r\n                var message = data.messages.join(\" \");\r\n                form.failHandler({ message: message });\r\n            }\r\n\r\n            return data;\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection navigator edit record request for the given id \r\n    *   Returns a deferred\r\n    */\r\n    submitSaveRequest: function (id, data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = $.Deferred();\r\n\r\n        // Calculate xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + properties.xpath + \"[id=\" + id + \"]\" : properties.xpath + \"[id=\" + id + \"]\";\r\n\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        $.when(deferredsToWait).then(function() {\r\n\r\n            self.dataService.saveGridRecord({\r\n                url: properties.saveUrl,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: xpathContext,\r\n                contexttype: properties.contextType || properties.contexttype || \"\",\r\n                submitData: data\r\n            }).done(function(response) {\r\n                defer.resolve(response);\r\n            }).fail(function (dataFail) {\r\n                var form = self.getFormContainer();\r\n                var message = (dataFail.responseText) ? dataFail.responseText : ((typeof dataFail == \"string\") ? dataFail : dataFail.toString());\r\n                //Convert String to object\r\n                if (typeof message == \"string\") {\r\n                    try {\r\n                        message = JSON.parse(message).message;\r\n                    } catch (e) {\r\n                        message = message.match(/\"message\":(.*)\",/)[0];\r\n                        message = message.substr(11, message.length - 13);\r\n                    }\r\n    \r\n                } else if (!message.message) {\r\n                    message = dataFail;\r\n                }\r\n                form.validateForm();\r\n                form.clearValidationMessages();\r\n                form.addValidationMessage(message);\r\n            });\r\n\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Submits a collection navigator rollback request\r\n    *   Returns a deferred when done\r\n    */\r\n    submitRollbackRequest: function (error) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.rollbackGridAction({\r\n            url: properties.rollbackUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: error.idPageCache,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        });\r\n    },\r\n    /*\r\n    *   Fetch the data into a deferred\r\n    */\r\n    getRemoteData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set params\r\n        params = params || {};\r\n        $.extend(params, {\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType || properties.contexttype,\r\n            idPageCache: properties.idPageCache\r\n\r\n        });\r\n\r\n        return self.dataService.getData(params);\r\n    },\r\n\r\n    isValid: function (invalidElements) {\r\n        var form = this.form;\r\n\r\n        if (typeof (form) !== \"undefined\") {\r\n            (form.children || []).forEach(function (child) {\r\n                if (child.properties.visible) {\r\n                    if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_CONTAINER) {\r\n                        // Go though container\r\n                        child.isValid(invalidElements);\r\n\r\n                    } else if (child.getElementType() == bizagi.rendering.element.ELEMENT_TYPE_RENDER) {\r\n                        // Go to the render\r\n                        if (!child.isValid(invalidElements)) {\r\n                            var content = invalidElements[invalidElements.length - 1];\r\n                            invalidElements[invalidElements.length - 1] = $.extend(content, {\r\n                                id: child.properties.id\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n\r\n        return invalidElements.length === 0;\r\n    },\r\n\r\n    validateControls: function(invalidElements) {\r\n        if (!this.form) return false;\r\n        return this.form.validationController.performValidations(invalidElements);\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Render Check Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for check renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.check\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.value = typeof (properties.value) != \"undefined\" ? bizagi.util.parseBoolean(properties.value) : null;\r\n\r\n        properties.showLetters = (bizagi.override && bizagi.override.enableCheck === true) && !properties.editable;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"check\");\r\n        var randomId = bizagi.util.randomNumber(100, 10000000);\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            id: randomId,\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n    },\r\n\r\n    /**\r\n     * Gets the display value of the render\r\n     */\r\n    getDisplayValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.parseBoolean(value) === true) {\r\n            return this.getResource(\"render-boolean-yes\");\r\n        } else if (bizagi.util.parseBoolean(value) === false) {\r\n            return this.getResource(\"render-boolean-no\");\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if a render has no value for required validation\r\n     */\r\n    hasValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.isEmpty(value)) return false;\r\n\r\n        var booleanValue = bizagi.util.parseBoolean(value);\r\n\r\n        return !(booleanValue === false && this.properties.required);\r\n    }\r\n\r\n});","/*\r\n*   Name: Bizagi Render Number Class\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define basic stuff for numbers\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.number\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var format = this.getResource(\"numericFormat\");\r\n\r\n        properties.allowDecimals = (typeof (properties.allowDecimals) !== \"undefined\") ? bizagi.util.parseBoolean(properties.allowDecimals) : this.getDefaultAllowDecimals(properties.dataType);\r\n        properties.numDecimals = properties.allowDecimals ? (properties.numDecimals ? properties.numDecimals : (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalDigits : 2)) : 0;\r\n        properties.symbol = '';\r\n        properties.positiveFormat = format.positiveFormat;\r\n        properties.negativeFormat = format.negativeFormat;\r\n        properties.decimalSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator : format.decimalSymbol;\r\n        properties.digitGroupSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.groupSeparator : format.digitGroupSymbol;\r\n        properties.groupDigits = this.setGroupDigits();\r\n        properties.colorize = properties.colorizeOnNegative || false;\r\n        properties.dataTypeMinValue = this.calculateMinValue(properties.dataType);\r\n        properties.dataTypeMaxValue = this.calculateMaxValue(properties.dataType);\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"number\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            editable: self.properties.editable,\r\n            value: bizagi.isMobile() ? self.getDisplayValue() : \"\", // Only apply to mobile because in the template value is required (Bug: 11624)\r\n            type: bizagi.util.isAndroidDevice() ? \"tel\" : \"text\", // Change type control for android device\r\n            isDesign: self.getMode() !== \"execution\"\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n\r\n        self._super();\r\n\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n\r\n        self.numericInput = control.find(\"input\");\r\n\r\n        // Add numeric plugin to avoid invalid keystrokes\r\n        self.numericInput.numeric(self.properties.decimalSymbol);\r\n\r\n        // Attach event for retype double\r\n        if (properties.retype === \"double\") {\r\n            self.attachRetypeDouble();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Method to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        // Attach Format Currency Plugin to format the input\r\n        this.attachFormatCurrency();\r\n    },\r\n\r\n    /**\r\n     * Removes Validation Messages\r\n     */\r\n    removeValidations: function () {\r\n        var form = this.getFormContainer().parent || this.getFormContainer();\r\n\r\n        form.clearValidationMessages();\r\n    },\r\n\r\n    /**\r\n     * Function virtual implements on children (desktop,smartphone...).\r\n     * @returns {}\r\n     */\r\n    attachRetypeDouble: function () {\r\n    },\r\n\r\n    /**\r\n     * Adds the format currency plugin\r\n     * @returns {}\r\n     */\r\n    attachFormatCurrency: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message = bizagi.localization.getResource(\"render-number-retype-fail\");\r\n        self.isValidRender = self.isValidRender || true;\r\n\r\n        // Extend formatCurrency language\r\n        if ($.formatCurrency.regions[bizagi.language] == null)\r\n            $.formatCurrency.regions[bizagi.language] = this.getResource(\"numericFormat\");\r\n\r\n        // Attach events\r\n        self.numericInput.blur(function () {\r\n            if (typeof (self.getFormContainer().validationController) == \"undefined\") self.getFormContainer().validationController = new bizagi.command.controllers.validation(self.getFormContainer(), self.validations);\r\n            var validationController = self.getFormContainer().validationController || self.getFormContainer().parent.validationController;\r\n            var decimalSeparator = \".\";\r\n            var digitGroupSeparator = \",\";\r\n            if (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) == \"undefined\") {\r\n                decimalSeparator = self.getResource(\"numericFormat\").decimalSymbol || \".\";\r\n                digitGroupSeparator = self.getResource(\"numericFormat\").digitGroupSymbol || \",\";\r\n            }\r\n            else {\r\n                decimalSeparator = BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator;\r\n                digitGroupSeparator = BIZAGI_DEFAULT_CURRENCY_INFO.groupSeparator;\r\n            }\r\n\r\n            var minValue = self.getMinValue();\r\n            var maxValue = self.getMaxValue();\r\n\r\n            if(properties.percentage)self.numericInput.val(self.numericInput.val().replace(\"%\", \"\"));\r\n            var inputValue = self.numericInput.val();\r\n            inputValue = (decimalSeparator == \",\") ? inputValue.replace(/\\,0+$/, '') : inputValue.replace(/\\.0+$/, '');\r\n            inputValue = inputValue.replace(properties.symbol, \"\");\r\n            //Replace all the ocurrences of the digitGroupSeparator\r\n            inputValue = bizagi.util.replaceAll(inputValue, digitGroupSeparator, \"\");\r\n            if (inputValue.toString().indexOf(decimalSeparator) != -1) {\r\n                if (decimalSeparator == \",\") inputValue = inputValue.replace(/([0-9]+(\\,[0-9]+[1-9])?)(\\,?0+$)/, '$1');\r\n                if (decimalSeparator == \".\") inputValue = inputValue.replace(/([0-9]+(\\.[0-9]+[1-9])?)(\\.?0+$)/, '$1');\r\n            }\r\n\r\n            if (inputValue != undefined && inputValue.length > 0) self.numericInput.val(inputValue);\r\n\r\n            if (/(.+)-$/.test(inputValue)) {\r\n                inputValue = inputValue.replace(/(.+)-$/, '-$1');\r\n                self.numericInput.val(inputValue);\r\n            }\r\n\r\n            var inputLength = inputValue.replace(/[^0-9]+/g, \"\").length;\r\n            var xPath = self.properties.xpath;\r\n            var oldVal = self.numericInput.val();\r\n\r\n\r\n            if ((self.isInvalidFormat != null && self.isInvalidFormat == true)\r\n                || (inputValue != \"\" && [\"$\", \"£\", \"€\", \"¥\", properties.symbol].indexOf(inputValue) != -1)) {\r\n                self.setValue(\"\");\r\n                self.getControl().find(\"input\").val(\"\");\r\n                self.numericInput.val(\"\");\r\n                return;\r\n            }\r\n\r\n            if (bizagi.util.trim(inputValue) == \"\") {\r\n                self.setValue(\"\");\r\n                return;\r\n            }\r\n\r\n            //The \",\" is changed to \".\" For the correct operation of \"parseFloat ()\"\r\n            var tempValue = parseFloat(inputValue.replace(\",\", \".\"));\r\n            if (isNaN(tempValue)) {\r\n                tempValue = self.numericInput.asNumber();\r\n            }\r\n\r\n            if (minValue !== undefined && minValue != null && tempValue < minValue) {\r\n                message = bizagi.localization.getResource(\"render-numeric-minimum-validation\")\r\n                    .replaceAll(\"#label#\", properties.displayName + \" (\" + oldVal + \")\")\r\n                    .replaceAll(\"#minValue#\", minValue.toString());\r\n            }\r\n            else if (maxValue !== undefined && maxValue !== null && tempValue > maxValue) {\r\n                message = bizagi.localization.getResource(\"render-numeric-maximum-validation\")\r\n                    .replaceAll(\"#label#\", properties.displayName + \" (\" + oldVal + \")\")\r\n                    .replaceAll(\"#maxValue#\", maxValue.toString());\r\n            } else\r\n                message = message + \" \" + oldVal + \"\";\r\n\r\n\r\n            // Do datatype validations\r\n            if (\r\n                (minValue !== undefined && minValue !== null && tempValue < minValue)\r\n                || (maxValue !== undefined && maxValue !== null && tempValue > maxValue)\r\n                || (self.properties.dataType == 10 && inputLength > 15)\r\n                || (self.properties.dataType == 1 && inputLength > 19)\r\n                || (self.properties.dataType == 11 && inputLength > 7)\r\n                || (self.properties.dataType == 11 && inputLength > 7)\r\n                || (oldVal.match(/[^$£€¥,-.()\\d]/))\r\n            ) {\r\n                if (typeof validationController != \"undefined\" && validationController != null) {\r\n                    self.removeValidations();\r\n\r\n                    var messageToShow = message;\r\n                    if(messageToShow.indexOf(oldVal) === -1){\r\n                        messageToShow = message + \" \" + oldVal + \"\";\r\n                    }\r\n\r\n                    validationController.showValidationMessage(messageToShow, xPath);\r\n                    self.isValidRender = false;\r\n                    self.isValidRenderMessage = messageToShow;\r\n                }\r\n                message = message.replace(oldVal, \"\");\r\n                return;\r\n            }\r\n            else {\r\n                self.isValidRender = true;\r\n                self.isValidRenderMessage = \"\";\r\n            }\r\n\r\n            // Fix decimals specially when it starts with 0 (0000234 -> 234, 00000 -> 0)\r\n            if (this.value.toString().length > 0 && !properties.allowDecimals && !properties.groupDigits) {\r\n                this.value = this.value.toString().replace(/^0+/, '');\r\n                if (properties.symbol.length > 0) this.value = this.value.toString().replace(properties.symbol + \"0\", properties.symbol);\r\n                this.value = this.value.toString().replace(/^0+/, '');\r\n                if (this.value.replaceAll('0', '').length == 0)\r\n                    this.value = properties.symbol + \"0\";\r\n                else if (this.value.toString() == parseInt(this.value)) this.value = properties.symbol + this.value;\r\n            } else {\r\n                //Fix type money when number start with 0 (0000234 -> 234, 00000 -> 0)\r\n                if(self.properties.type === \"money\" || self.properties.type === \"number\" || self.properties.type === \"columnMoney\" || self.properties.type === \"columnNumber\"){\r\n                    this.value = this.value.toString().replace(/^0+/, '');\r\n                    if(this.value === \"\"){\r\n                        this.value = 0;\r\n                    }\r\n                }\r\n            }\r\n            self.executeFormatCurrencyPlugin();\r\n\r\n            // Updates internal value\r\n            self.setValue(self.numericInput.asNumber({\r\n                symbol: properties.symbol,\r\n                positiveFormat: properties.positiveFormat,\r\n                negativeFormat: properties.negativeFormat,\r\n                decimalSymbol: properties.decimalSymbol,\r\n                digitGroupSymbol: properties.digitGroupSymbol,\r\n                groupDigits: properties.groupDigits\r\n            }));\r\n\r\n            if (properties.percentage) {\r\n                if (self.numericInput && self.numericInput.val().indexOf(\"%\") == -1)\r\n                    self.numericInput.val(self.numericInput.val() + '%');\r\n            }\r\n            message = message.replace(oldVal, \"\");\r\n        })\r\n\r\n        // Avoiding pasting invalid characters\r\n            .bind('paste', function (e) {\r\n                try {\r\n                    var tmpData = (bizagi.util.isIE() || bizagi.util.isIE11()) ? window.clipboardData.getData(\"text\") : e.originalEvent.clipboardData.getData(\"Text\");\r\n\r\n\r\n\r\n                    // Next lines checks if there is something different to numbers symbol, decimalSymbol and digitGroupSybol\r\n                    var totalVal = \"/[^0-9\";\r\n                    if (properties.decimalSymbol.length > 0) {\r\n                        totalVal += properties.decimalSymbol;\r\n                    }\r\n                    // Next lines only for currency type\r\n                    if (properties.dataType == 8) {\r\n                        if (properties.symbol.length > 0) {\r\n                            totalVal += properties.symbol;\r\n                        }\r\n                        if (properties.digitGroupSymbol.length > 0) {\r\n                            totalVal += properties.digitGroupSymbol;\r\n                        }\r\n                    }\r\n                    totalVal += \"\\\\-\\\\s]/gi\";\r\n                    try {\r\n                        if (tmpData.replace(eval(totalVal), '').length != tmpData.length)\r\n                            e.preventDefault();\r\n                    }\r\n                    catch (e) {\r\n                    }\r\n                }\r\n                catch (e) {\r\n                    bizagi.log(\"Error to pasting content\");\r\n                    self.isInvalidFormat = true;\r\n                }\r\n            })\r\n            // Now we implement keydown instead of keyup in order to include preventDefault\r\n            .keydown(function (e) {\r\n                self.previousValue = this.value;\r\n                e = (window.event && window.event.preventDefault) ? window.event : e;\r\n                var keyUnicode = e.charCode || e.keyCode;\r\n                // Validation for currency info\r\n                if (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) != \"undefined\")\r\n                    if (BIZAGI_DEFAULT_CURRENCY_INFO.decimalDigits == 0) properties.allowDecimals = false;\r\n                if (properties.dataType < 5 || (properties.dataType == 8 && properties.allowDecimals == false))\r\n                    if (keyUnicode == 188 || keyUnicode == 190 || keyUnicode == 110)\r\n                        e.preventDefault();\r\n                if (this.value)\r\n                    if (e !== undefined && this.value.length > 0 && (properties.dataType == 8 || properties.dataType == 10)) {\r\n                        // Just numbers\r\n                        if (keyUnicode > 47 && keyUnicode < 58) {\r\n                            if (self.formatTimeout) {\r\n                                clearTimeout(self.formatTimeout);\r\n                            }\r\n\r\n                            var floatPart = this.value + \"\";\r\n                            //var  floatPart = stringPart.replaceAll(properties.digitGroupSymbol, \"\").replaceAll(properties.symbol,\"\").trim().replaceAll(properties.decimalSymbol,\".\");\r\n                            if (properties.digitGroupSymbol && properties.digitGroupSymbol.length > 0) {\r\n                                floatPart = floatPart.replaceAll(properties.digitGroupSymbol, \"\");\r\n                            }\r\n                            if (properties.symbol.length > 0) {\r\n                                floatPart = floatPart.replaceAll(properties.symbol, \"\");\r\n                            }\r\n\r\n                            floatPart = $.trim(floatPart);\r\n                            if (properties.decimalSymbol && properties.decimalSymbol.length > 0) {\r\n                                floatPart = floatPart.replaceAll(properties.decimalSymbol, \".\");\r\n                            }\r\n                            // If increasing one digit (x10) will overtake the maxValue\r\n                            if (floatPart * 10 > properties.dataTypeMaxValue) {\r\n                                e.preventDefault();\r\n                            }\r\n                        }                  \r\n                        else if (keyUnicode == 109 || keyUnicode == 189) {\r\n                            if (this.selectionStart != 0 || this.selectionEnd != this.value.length) {\r\n                                var currentPosition = this.selectionEnd;\r\n                                this.value = properties.symbol + \"-\" + this.value.replace(properties.symbol, \"\");\r\n                                this.selectionStart = this.selectionEnd = currentPosition + 1;\r\n                            } else if (this.selectionStart == 0 && this.selectionEnd == this.value.length) {\r\n                                this.value = \"-\";\r\n                                this.selectionStart = this.selectionEnd = this.value.length;\r\n                            }\r\n                        }\r\n                    }                    \r\n            })\r\n\r\n            .keyup(function (e) {\r\n                e = window.event || e;\r\n                var keyUnicode = e.charCode || e.keyCode;\r\n                if (e !== undefined) {\r\n                    switch (keyUnicode) {\r\n                        case 16:\r\n                            break; // Shift\r\n                        case 17:\r\n                            break; // Ctrl\r\n                        case 13:\r\n                            break; // Intro\r\n                        case 18:\r\n                            break; // Alt\r\n                        case 27:\r\n                            this.value = '';\r\n                            break; // Esc: clear entry\r\n                        case 35:\r\n                            break; // End\r\n                        case 36:\r\n                            break; // Home\r\n                        case 37:\r\n                            break; // cursor left\r\n                        case 38:\r\n                            break; // cursor up\r\n                        case 39:\r\n                            break; // cursor right\r\n                        case 40:\r\n                            break; // cursor down\r\n                        case 78:\r\n                            break; // N (Opera 9.63+ maps the \".\" from the number key section to the \"N\" key too!) (See: http://unixpapa.com/js/key.html search for \". Del\")\r\n                        case 110:\r\n                            break; // . number block (Opera 9.63+ maps the \".\" from the number block to the \"N\" key (78) !!!)\r\n                        case 188:\r\n                            break; // , comma\r\n                        case 190:\r\n                            break; // .\r\n                        default:\r\n                        {\r\n\r\n                        }\r\n                    }\r\n                }                \r\n            }).keypress(function (e) {\r\n            e = (window.event && window.event.preventDefault) ? window.event : e;\r\n            var keyUnicode = e.charCode || e.keyCode;\r\n            if (typeof (e) !== \"undefined\") {\r\n                if (keyUnicode == 35 || keyUnicode == 37 || keyUnicode == 39) {\r\n                    e.preventDefault();\r\n                } else if (properties.dataType != 8 && keyUnicode == 36) {\r\n                    e.preventDefault();\r\n                }\r\n\r\n                // When no decimals are permited\r\n                var character = String.fromCharCode(keyUnicode);\r\n                if (properties.allowDecimals === false && properties.numDecimals === 0 && character === properties.decimalSymbol)\r\n                    e.preventDefault();\r\n            }\r\n        });\r\n\r\n    },\r\n\r\n    executeFormatCurrencyPlugin: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (self.numericInput) {\r\n            self.numericInput.formatCurrency({\r\n                symbol: properties.symbol,\r\n                positiveFormat: properties.positiveFormat,\r\n                negativeFormat: properties.negativeFormat,\r\n                decimalSymbol: properties.decimalSymbol,\r\n                digitGroupSymbol: properties.digitGroupSymbol,\r\n                groupDigits: properties.groupDigits,\r\n                roundToDecimalPlace: properties.numDecimals,\r\n                colorize: properties.colorize\r\n            });\r\n        }\r\n\r\n        if (properties.dataType !== 8 && bizagi.override.removeTrailingZeros === true) {\r\n            var value = self.numericInput.val();\r\n            var positive = true;\r\n\r\n            if (value.indexOf(\")\") !== -1) {\r\n                positive = false;\r\n                value = value.replace(\"(\", \"\").replace(\")\", \"\")\r\n            }\r\n\r\n            var regExp = new RegExp(\"(\" + properties.decimalSymbol + \"\\\\d*?[1-9])0+$\", \"g\");\r\n            value = value.replace(regExp, \"$1\")\r\n\r\n            regExp = new RegExp(\"\\\\\" + properties.decimalSymbol + \"0+$\", \"g\");\r\n            value = value.replace(regExp, \"\");\r\n            self.numericInput.val(value);\r\n\r\n            if (!positive) self.numericInput.val(\"(\" + value + \")\");\r\n        }\r\n\r\n        if (properties.percentage)\r\n            self.numericInput.val(self.numericInput.val() + '%');\r\n    },\r\n\r\n    /**\r\n     * Returns the display value of the render\r\n     * @returns {*}\r\n     */\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n        var value = self.getValue() !== undefined ? self.getValue() : $(\"input\", control).val() || \"\";\r\n\r\n        // Workaround to get the display value by the format currency plugin, because it requires a control\r\n        var label = $('<label/>').html(value);\r\n\r\n        label.formatCurrency({\r\n            symbol: properties.symbol,\r\n            positiveFormat: properties.positiveFormat,\r\n            negativeFormat: properties.negativeFormat,\r\n            decimalSymbol: properties.decimalSymbol,\r\n            digitGroupSymbol: properties.digitGroupSymbol,\r\n            groupDigits: properties.groupDigits,\r\n            roundToDecimalPlace: properties.numDecimals,\r\n            colorize: properties.colorize\r\n        });\r\n\r\n        if (properties.percentage)\r\n            label = $('<label/>').html(label.text() + '%');\r\n\r\n        // Removing unrequired zeros as requested by BA26331\r\n        if (!properties.editable && properties.dataType !== 8 && bizagi.override.removeTrailingZeros === true) {\r\n            value = label.text();\r\n            var positive = true;\r\n\r\n            if (value.toString().indexOf(\")\") !== -1) {\r\n                positive = false;\r\n                value = value.replace(\"(\", \"\").replace(\")\", \"\");\r\n            }\r\n\r\n            var re = new RegExp(\"(\" + properties.decimalSymbol + \"\\\\d*?[1-9])0+$\", \"g\");\r\n            value = value.replace(re, \"$1\");\r\n\r\n            re = new RegExp(\"\\\\\" + properties.decimalSymbol + \"0+$\", \"g\");\r\n            value = value.replace(re, \"\");\r\n\r\n            if (!positive) value = \"(\" + value + \")\";\r\n            return value;\r\n        }\r\n\r\n        return label.text();\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @returns {*}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        var message;\r\n        var minValue = self.getMinValue();\r\n        var maxValue = self.getMaxValue();\r\n\r\n        if (typeof (value) == \"string\" && value != \"\") {\r\n            value = Number(value);\r\n        }\r\n\r\n        // Check min value\r\n        if (self.hasValue()) {\r\n            if (!bizagi.util.isEmpty(minValue)) {\r\n                if (value < minValue) {\r\n                    message = this.getResource(\"render-numeric-minimum-validation\").replaceAll(\"#label#\", properties.displayName.toString() + \" (\" + value + \")\").replaceAll(\"#minValue#\", minValue.toString());\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n            // Check max value\r\n            if (!bizagi.util.isEmpty(maxValue)) {\r\n                if (value > maxValue) {\r\n                    message = this.getResource(\"render-numeric-maximum-validation\").replaceAll(\"#label#\", properties.displayName.toString() + \" (\" + value + \")\").replaceAll(\"#maxValue#\", maxValue.toString());\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n\r\n        }\r\n\r\n        if (self.isValidRender === false && !(bValid && bizagi.util.isMobileDevice())) {\r\n            bValid = false;\r\n            var validMessage = self.isValidRenderMessage ? self.isValidRenderMessage : \"error\";\r\n            invalidElements.push({xpath: properties.xpath, message: validMessage});\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Get minimum value\r\n     * @returns {*}\r\n     */\r\n    getMinValue: function () {\r\n        var minValue = this.properties.minValue;\r\n\r\n        if (minValue !== undefined && minValue !== null)\r\n            return minValue;\r\n\r\n        return this.properties.dataTypeMinValue;\r\n    },\r\n\r\n    /**\r\n     * Get maximum value\r\n     * @returns {*}\r\n     */\r\n    getMaxValue: function () {\r\n        var maxValue = this.properties.maxValue;\r\n\r\n        if (maxValue !== undefined && maxValue !== null)\r\n            return maxValue;\r\n\r\n        return this.properties.dataTypeMaxValue;\r\n    },\r\n\r\n    /**\r\n     * Return the allow decimals default property based on the datatype\r\n     * @param dataType\r\n     * @returns {boolean}\r\n     */\r\n    getDefaultAllowDecimals: function (dataType) {\r\n        if (dataType) {\r\n            // Integer data types\r\n            if (dataType === 1 || dataType === 2 || dataType === 3 || dataType === 4 || dataType === 7) {\r\n                return false;\r\n            }\r\n            // Decimal and money data types\r\n            if (dataType === 6 || dataType === 8 || dataType === 10 || dataType === 11) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    /**\r\n     * Return the group digits default property based on the datatype\r\n     * @param dataType\r\n     * @returns {boolean}\r\n     */\r\n    getDefaultGroupDigits: function (dataType) {\r\n        if (dataType) {\r\n            // Integer data types\r\n            if (dataType === 1 || dataType === 2 || dataType === 3 || dataType === 4 || dataType === 7) {\r\n                return false;\r\n            }\r\n\r\n            // Decimal data types\r\n            if (dataType === 6 || dataType === 8 || dataType === 10 || dataType === 11) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Return the group digits default property based on digitGroupSymbol\r\n     * @returns {*}\r\n     */\r\n    setGroupDigits: function () {\r\n        var self = this;\r\n        if (typeof (self.properties.thousands) !== \"undefined\") {\r\n            if (self.properties.digitGroupSymbol) { //some cultures\r\n                return bizagi.util.parseBoolean(self.properties.thousands);\r\n            } else {\r\n                return false;\r\n            }\r\n        } else if (self.properties.digitGroupSymbol) { //some cultures\r\n            return this.getDefaultGroupDigits(self.properties.dataType);\r\n        } else {\r\n            return false;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Calculate Minimum Value\r\n     * @param dataType\r\n     * @returns {*}\r\n     */\r\n    calculateMinValue: function (dataType) {\r\n        if (dataType === 8 || dataType === 10) {\r\n            return -922337203685477; // Money\r\n        }\r\n        if (dataType === 4) {\r\n            return 0; // tinyint\r\n        }\r\n        if (dataType === 3) {\r\n            return -32768; // smallint\r\n        }\r\n        if (dataType === 2) {\r\n            return -2147483648; // int\r\n        }\r\n        if (dataType === 1) {\r\n            return -999999999999999; // bigint\r\n        }\r\n        return null;\r\n    },\r\n\r\n    /**\r\n     * Calculate Maximum Value\r\n     * @param dataType\r\n     * @returns {*}\r\n     */\r\n    calculateMaxValue: function (dataType) {\r\n        if (dataType === 8 || dataType === 10) {\r\n            return 922337203685477; // Money\r\n        }\r\n        if (dataType === 4) {\r\n            return 255; // tinyint\r\n        }\r\n        if (dataType === 3) {\r\n            return 32767; // smallint\r\n        }\r\n        if (dataType === 2) {\r\n            return 2147483647; // int\r\n        }\r\n        if (dataType === 1) {\r\n            return 999999999999999; // bigint\r\n        }\r\n        return null;\r\n    },\r\n\r\n    changeMinValue: function (value) {\r\n        var self = this;\r\n        var newValue = Number(value);\r\n\r\n        self.properties.minValue = self.properties.dataTypeMinValue = Number.isNaN(newValue) ? self.calculateMinValue(self.properties.dataType) : newValue;\r\n    },\r\n\r\n    changeMaxValue: function (value) {\r\n        var newValue = Number(value);\r\n\r\n        this.properties.maxValue = this.properties.dataTypeMaxValue = Number.isNaN(newValue) ? this.calculateMaxValue(this.properties.dataType) : newValue;\r\n    },\r\n\r\n    createTooltip: function (control, currentValue, currentTitle) {\r\n        control.data(\"oldValue\", currentValue);\r\n        control.val(\"\");\r\n\r\n        try {\r\n            // Destroy tooltips\r\n            control.tooltip(\"destroy\");\r\n        } catch (e) {\r\n        }\r\n\r\n        control.attr(\"title\", currentTitle);\r\n        control.tooltip();\r\n\r\n        var toolTipZindex = $.getMaxZindex();\r\n        control.tooltip().on(\"tooltipopen\", function (event, ui) {\r\n            ui.tooltip.zIndex(toolTipZindex);\r\n        });\r\n\r\n        // Create new tooltip\r\n        control.tooltip(\"open\");\r\n\r\n        setTimeout(function () {\r\n            control.focus();\r\n        }, 100);\r\n    }\r\n});\r\n\r\n","\r\n/*\r\n*   Name: Bizagi Render Number Scientific notation Class\r\n*   Author: Laura Ariza\r\n*   Comments:\r\n*   -   This script will define basic stuff for scientific notation numbers\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.numberScientificNotation\", {\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n\r\n        properties.decimalSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\"\r\n            ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator : format.decimalSymbol;\r\n    },\r\n\r\n    renderControl: function() {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"numberScientificNotation\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {});\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function() {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        self.numericInput = control.find(\"input\");\r\n        // Add numeric plugin to avoid invalid keystrokes\r\n        self.numericInput.numericSN(self.properties.decimalSymbol);\r\n\r\n    },\r\n\r\n    getDisplayValue: function() {\r\n        var self = this;\r\n        return self.getValue().replace('.', self.properties.decimalSymbol);\r\n    },\r\n\r\n    setValue: function(value) {\r\n        var self = this;\r\n        value = (value || '').toString().replace(self.properties.decimalSymbol, '.');\r\n        self._super(value);\r\n    },\r\n    controlValueIsChanged: function() {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var value = self.getValue() || \"\";\r\n        var compareValue = properties.originalValue || \"\";\r\n        var result = true;\r\n\r\n        // Flag to force to collect data\r\n        if ($.forceCollectData) {\r\n            return true;\r\n        }\r\n        result = (compareValue.toLowerCase() == value.toLowerCase()) ? false : true;\r\n        return result;\r\n    }\r\n\r\n});","/*\r\n*   Name: BizAgi Render Date Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for date renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.date\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var dateFormat = this.getResource(\"dateFormat\");\r\n        var timeFormat = this.getResource(\"timeFormat\");\r\n\r\n        // We will hold here the value to display\r\n        properties.displayValue = \"\";\r\n        properties.showTime = properties.showTime !== undefined ? bizagi.util.parseBoolean(properties.showTime) : false;\r\n        properties.dateFormat = properties.dateFormat || dateFormat;\r\n        properties.timeFormat = properties.timeFormat || timeFormat;\r\n        properties.fullFormat = properties.dateFormat;\r\n\r\n        // Check if it has the showtime property\r\n        if (properties.showTime) {\r\n            if (properties.fullFormat.search(/[h|H]+/ig) === -1) {\r\n                properties.fullFormat = properties.fullFormat + ' ' + properties.timeFormat;\r\n            }\r\n        }\r\n\r\n        // Read always parameter from server in invariant format\r\n        if (properties.value) {\r\n\r\n            var date = bizagi.util.dateFormatter.getDateFromInvariant(properties.value, properties.showTime);\r\n            // Format date to current format\r\n            if (date != 0) {\r\n                // Value must always hold the value with invariant format\r\n                self.value = properties.value;\r\n                var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n                properties.displayValue = bizagi.util.dateFormatter.formatDate(date, properties.fullFormat, datePickerRegional);\r\n            } else {\r\n                self.value = null;\r\n            }\r\n        }\r\n    },\r\n    \r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"date\");\r\n        var indexDateTimeSeparation = properties.dateFormat.substring(0, properties.dateFormat.indexOf(\":\")).lastIndexOf(\" \");\r\n        var dateFormat = (indexDateTimeSeparation > 0) ? properties.dateFormat.substring(0, indexDateTimeSeparation) : properties.dateFormat;\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            showTime: properties.showTime,\r\n            value: properties.value,\r\n            editable: properties.editable,\r\n            dateFormat: bizagi.override && bizagi.override.uppercaseDatePlaceholder === true ? dateFormat.toUpperCase() : dateFormat,\r\n            timeFormat: (properties.showTime && indexDateTimeSeparation > 0) ? properties.dateFormat.substring(indexDateTimeSeparation) : \"\",\r\n            rtl: (properties.orientation == \"rtl\")\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n    */\r\n    configureHandlers: function (intHandler, isNow) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set control references\r\n        var dateControl = self.getDateControl();\r\n        var timeControl = self.getTimeControl();\r\n\r\n        // Set mask\r\n        if (properties.mask) {\r\n            dateControl.mask({\r\n                mask: properties.mask\r\n            });\r\n        }\r\n\r\n        // Attach change event\r\n        dateControl.bind(\"change\", function () {\r\n            self.onChangeHandler();\r\n        });\r\n        if (properties.showTime) {\r\n            timeControl.bind(\"change\", function (e, isNow) {\r\n                if (self.updatingTime) {\r\n                    delete self.updatingTime;\r\n                    return;\r\n                }\r\n                self.onChangeHandler(isNow);\r\n            });\r\n        }\r\n    },\r\n\r\n    /* \r\n    *   Formats the date time value to the hidden control\r\n    */\r\n    onChangeHandler: function () {\r\n    },\r\n\r\n    getDisplayValue: function (value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var displayValue;\r\n\r\n        if (!properties.displayValue && value) {\r\n            var date = bizagi.util.dateFormatter.getDateFromInvariant(value, properties.showTime);\r\n            var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n            displayValue = bizagi.util.dateFormatter.formatDate(date, properties.fullFormat, datePickerRegional);\r\n        } else {\r\n            displayValue = \"\";\r\n        }\r\n\r\n        // We can return the display value isntance\r\n        return properties.displayValue || displayValue || \"\";\r\n    },\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n    */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Add the render value\r\n        var xpath = properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            if (!bizagi.util.isEmpty(xpath)) {\r\n                if (!bizagi.util.isEmpty(value)) {\r\n                    // Formats the value in full invariant (with time) in order to send to the server\r\n                    var date = bizagi.util.dateFormatter.getDateFromInvariant(value, properties.showTime);\r\n                    if (typeof (date) != \"undefined\")\r\n                        if (date !== 0) {\r\n                            if (!properties.showTime) {\r\n                                date.setHours(0, 0, 0, 0);\r\n                            }\r\n                            renderValues[properties.xpath] = bizagi.util.dateFormatter.formatInvariant(date, true);\r\n                        }\r\n                } else if (value === \"\") {\r\n                    renderValues[properties.xpath] = \"\";\r\n                }\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Gets the date control\r\n    */\r\n    getDateControl: function () { },\r\n\r\n    /*\r\n    *   Gets the time control\r\n    */\r\n    getTimeControl: function () { },\r\n\r\n    /* \r\n    * Public method to determine if a value is valid or not\r\n    */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n        properties = self.properties;\r\n\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        if (value) {\r\n            if (bizagi.util.parseBoolean(properties.editable) === true) {\r\n                value = bizagi.util.dateFormatter.getDateFromInvariant(value, properties.showTime);\r\n                var message;\r\n\r\n                // Check that we have a valid data\r\n                if (value != 0) {\r\n                    // Clear seconds and milliseconds for validations\r\n                    value.setSeconds(0);\r\n                    value.setMilliseconds(0);\r\n\r\n                    // Check min value\r\n                    if (properties.minValue && (typeof properties.minValue === 'string' || typeof properties.minValue == 'number')) {\r\n                        var minValue = typeof properties.minValue == 'string' ? bizagi.util.dateFormatter.getDateFromInvariant(properties.minValue, properties.showTime) : new Date(properties.minValue);\r\n                        minValue.setSeconds(0);\r\n                        minValue.setMilliseconds(0);\r\n\r\n                        if (value < minValue) {\r\n                            message = this.getResource(\"render-date-minimum-validation\").replaceAll(\"#label#\", properties.displayName).replaceAll(\"#minValue#\", bizagi.util.dateFormatter.formatDate(minValue, properties.fullFormat));\r\n                            invalidElements.push({\r\n                                xpath: properties.xpath,\r\n                                message: message\r\n                            });\r\n                            bValid = false;\r\n                        }\r\n                    }\r\n\r\n                    // Check max value\r\n                    if (properties.maxValue && (typeof properties.maxValue == 'string' || typeof properties.maxValue == 'number')) {\r\n                        var maxValue = typeof properties.maxValue == 'string' ? bizagi.util.dateFormatter.getDateFromInvariant(properties.maxValue, properties.showTime) : new Date(properties.maxValue);\r\n                        maxValue.setSeconds(0);\r\n                        maxValue.setMilliseconds(0);\r\n\r\n                        if (value > maxValue) {\r\n                            message = this.getResource(\"render-date-maximum-validation\").replaceAll(\"#label#\", properties.displayName).replaceAll(\"#maxValue#\", bizagi.util.dateFormatter.formatDate(maxValue, properties.fullFormat));\r\n                            invalidElements.push({\r\n                                xpath: properties.xpath,\r\n                                message: message\r\n                            });\r\n                            bValid = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Check that both controls (data and time) are filled out\r\n        if (properties.showTime) {\r\n            if (bizagi.util.parseBoolean(properties.editable) === true) {\r\n                // Check required\r\n                if (properties.required && self.hasValue()) {\r\n\r\n                    // Check both controls\r\n                    var dateControl = self.getDateControl();\r\n                    var timeControl = self.getTimeControl();\r\n\r\n                    // If date is filled but time is not ... show validation\r\n                    if (dateControl.length > 0 && timeControl.length > 0) {\r\n                        if (dateControl.val().length > 0 && timeControl.val().length == 0) {\r\n                            message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                            invalidElements.push({\r\n                                xpath: properties.xpath,\r\n                                message: message\r\n                            });\r\n                            return false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Text Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for text renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.extendedText\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Check if offline forms is supported\r\n        this.isOfflineForm = bizagi.util.isOfflineForm({context: self});\r\n        this.hasMaxLines = this.properties.maxLines ? true : false;\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        // Fill default properties\r\n        properties.maxLines = this.properties.maxLines || 6;\r\n\r\n        if (properties.regularExpressionExpression) {\r\n            var message = properties.regularExpressionMessage || self.getResource(\"render-text-regular-expression-default-message\");\r\n\r\n            properties.regularExpression = {\"expression\": properties.regularExpressionExpression, \"message\": message};\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"extendedText\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            isEmptyField: typeof (this.properties.value) === \"undefined\",\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        self._super();\r\n\r\n        var control = self.getControl();\r\n        self.textarea = control.find(\"textarea\");\r\n\r\n        // If is textarea, then enable resize element.\r\n        if (self.textarea) {\r\n            self.textarea.css({resize: \"both\"});\r\n        } else {\r\n            self.textarea.css({resize: \"none\"});\r\n        }\r\n\r\n        // Attach event for retype double\r\n        if (self.properties.retype === \"double\")\r\n            self.attachRetypeDouble();\r\n    },\r\n\r\n    /**\r\n     * Function virtual implements on children (desktop,samrtphone...).\r\n     */\r\n    attachRetypeDouble: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set the default maxlength for the input if is 0 or undefined set to infinity\r\n        // this resolve issue with scope strings that don't have maxlength\r\n        if (properties.maxLength)\r\n            self.textarea.prop('maxlength', properties.maxLength);\r\n\r\n        if (properties.maxLines) {\r\n            self.textarea.prop('rows', properties.maxLines)\r\n        } else {\r\n            self.textarea.prop('rows', 6);\r\n        }\r\n\r\n        // Attach change event\r\n        self.textarea.bind(\"change\", function () {\r\n\r\n            // Updates internal value\r\n            self.setValue(self.textarea.val());\r\n\r\n            // Check that the value is valid\r\n            var validationMessages = [];\r\n            if (properties.retype !== \"duplicate\") {\r\n                if (self.isValid(validationMessages) || typeof (properties.regularExpression) === \"undefined\") {\r\n                    // Update value again triggering handlers\r\n                    self.setValue(self.textarea.val(), true);\r\n                } else {\r\n                    // Set error message\r\n                    var message = validationMessages[0].message;\r\n                    bizagi.showMessageBox(message, \"Bizagi\", \"error\");\r\n                }\r\n            }\r\n        });\r\n\r\n        // Attach blur event\r\n        self.textarea.bind(\"blur\", function () {\r\n            // Updates internal value\r\n            self.setValue(self.textarea.val());\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param {} invalidElements\r\n     * @returns {}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        var regEx = new RegExp(\".*?(<|\\\\u003C)(.+?)(>|\\\\u003E)(.?)|eval\\\\(|eval\\\\u0028\", \"g\");\r\n\r\n        // Offline capability\r\n        if (this.isOfflineForm && bizagi.util.isMobileDevice()) {\r\n            value = value && typeof (value) === \"object\" && value.value ? value.value : value;\r\n        }\r\n\r\n        // Check regular expression\r\n        if (properties.regularExpression) {\r\n\r\n            if (value && ((value.match(regEx)) || (!value.match(new RegExp(properties.regularExpression.expression)) && (self.properties && self.properties.xpath === \"userName\")))) {\r\n                message = properties.regularExpression.message;\r\n                invalidElements.push({xpath: properties.xpath, message: message});\r\n                bValid = false;\r\n            } else {\r\n                if (value && ((value.match(regEx)) || (!value.match(new RegExp(properties.regularExpression.expression))))) {\r\n                    message = properties.regularExpression.message;\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n        } else {\r\n            if (value && (value.match(new RegExp(\".*?eval\\\\(\", \"g\"))) && (value.match(new RegExp(\".*?eval\\\\u0028\", \"g\")))) {\r\n                if (properties.editable) {\r\n                    message = this.getResource(\"render-text-regular-expression-default-message\");\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n\r\n        if (self.properties.editable == false) {\r\n            // Render as simple value\r\n            if (typeof (value) == \"string\") {\r\n\r\n                // Replace line breaks for html line breaks\r\n                var valueToDisplay = bizagi.util.decodedDisplayValue(self.getDisplayValue());\r\n\r\n                control.html(valueToDisplay);\r\n            }\r\n        }\r\n\r\n        // Set internal value\r\n        self.setValue(decodedValue, false);\r\n    },\r\n\r\n    /**\r\n     * Add the render data to the given collection in order to send data to the server\r\n     * @param {} renderValues\r\n     * @returns {}\r\n     */\r\n    collectData: function (renderValues) {\r\n        // Call base\r\n        this._super(renderValues);\r\n    },\r\n\r\n    /**\r\n     * Extend setValue to fix all encode data from database\r\n     * More information SUITE-9407\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setValue: function (value) {\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n\r\n        this._super(decodedValue);\r\n    },\r\n\r\n    /**\r\n     * Helptext tooltip\r\n     * @param {} control\r\n     * @param {} currentValue\r\n     * @param {} currentTitle\r\n     */\r\n    createTooltip: function (control, currentValue, currentTitle) {\r\n        control.data(\"oldValue\", currentValue);\r\n        control.val(\"\");\r\n\r\n        try {\r\n            // Destroy tooltips\r\n            control.tooltip(\"destroy\");\r\n        } catch (e) {\r\n        }\r\n\r\n        control.attr(\"title\", currentTitle);\r\n        control.tooltip();\r\n\r\n        var toolTipZindex = $.getMaxZindex();\r\n        control.tooltip().on(\"tooltipopen\", function (event, ui) {\r\n            ui.tooltip.zIndex(toolTipZindex);\r\n        });\r\n\r\n        // Create new tooltip\r\n        control.tooltip(\"open\");\r\n\r\n        setTimeout(function () {\r\n            control.focus();\r\n        }, 100);\r\n    },\r\n\r\n    //#region No side effects funtions    \r\n    /**\r\n     * Gets the string with the correct size\r\n     * @param {string} value String value to validate\r\n     * @param {Int} maxLength Maximum size of the string\r\n     * @returns {string} String value validated\r\n     */\r\n    validateValue: function (value, maxLength) {\r\n        if(maxLength<1 || value.length<=maxLength)return value;\r\n        return value.substr(0, maxLength)\r\n    }\r\n    //#endregion No side effects funtions\r\n});\r\n","/*\r\n *   Name: Bizagi Render Grid Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for grids\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.grid\", {}, {\r\n\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        self.originalData = bizagi.clone(data.properties);\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        self.initProperties();\r\n\r\n        // Set columns\r\n        var areThereEditableColumns;\r\n        var areThereTotalizedColumns;\r\n        self.columns = [];\r\n        self.columnsIds = [];\r\n        self.enabledChecks = {};\r\n        self.exclusiveChanges = {};\r\n        self.originalEnabledChecks = [];\r\n        $.each(data.elements, function (i, column) {\r\n            var columnProperties = column.render.properties;\r\n\r\n            // the groupby property is taken of column\r\n            if (columnProperties.groupBy) {\r\n                properties.groupBy = columnProperties.xpath || \"\";\r\n                properties.allowGrouping = !bizagi.util.isEmpty(properties.groupBy) ? true : false;\r\n            }\r\n            if (columnProperties.type === \"columnLabel\") {\r\n                self.spliceRowData(data.properties.data, i + 1);\r\n            }\r\n\r\n            if (columnProperties.type === \"columnBoolean\" && columnProperties.isExclusive) {\r\n                var params = {\r\n                    xpath: columnProperties.xpath\r\n                };\r\n                if (data.properties.data) {\r\n                    self.enabledChecks[columnProperties.xpath] = [];\r\n                    for (var j = 0; j < data.properties.data.rows.length; j++) {\r\n                        var row = data.properties.data.rows[j];\r\n                        var item = row[i + 1];\r\n                        if (item) {\r\n                            self.originalEnabledChecks.push(row[0]);\r\n                            self.enabledChecks[columnProperties.xpath].push([row[0], item]);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // If inlineEdit is false then all columns must be read only\r\n            if (!self.properties.inlineEdit) {\r\n                column.render.properties.editable = false;\r\n            }\r\n\r\n            // Create renderColumns\r\n            var columnRender = self.renderFactory.getColumn({\r\n                type: columnProperties.type,\r\n                data: column.render,\r\n                parent: self,\r\n                singleInstance: properties.singleInstance\r\n            });\r\n\r\n            self.columns.push(columnRender);\r\n            self.columnsIds.push(column.render.properties.id);\r\n\r\n            if (columnProperties.editable) {\r\n                areThereEditableColumns = true;\r\n            }\r\n\r\n            if (columnProperties.totalize && columnProperties.totalize.operation) {\r\n                areThereTotalizedColumns = true;\r\n\r\n                // Default summary format\r\n                columnProperties.totalize.format = columnProperties.totalize.format || {};\r\n                columnProperties.totalize.format.bold = columnProperties.totalize.format.bold !== undefined ? columnProperties.totalize.format.bold : true;\r\n            }\r\n        });\r\n\r\n        // Reverse columns when using right to left orientation\r\n        if (properties.orientation === \"rtl\")\r\n            self.columns = self.columns.reverse();\r\n\r\n        // Turn off inline edit if there are any editable columns        \r\n        if (properties.inlineEdit && !areThereEditableColumns) {\r\n            properties.inlineEdit = false;\r\n            properties.allowEdit = false;\r\n        }\r\n\r\n        // Check if the grid has totalizers\r\n        if (areThereTotalizedColumns) {\r\n            properties.showSummary = true;\r\n            properties.rowsPerPage = 0;\r\n        }\r\n    },\r\n\r\n    initProperties: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        /** Edit properties\r\n         * @default editable true\r\n         */\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) || false;\r\n        properties.allowEdit = bizagi.util.parseBoolean(properties.allowEdit) != null ? bizagi.util.parseBoolean(properties.allowEdit) : true;\r\n        properties.inlineEdit = bizagi.util.parseBoolean(properties.inlineEdit) != null ? bizagi.util.parseBoolean(properties.inlineEdit) : true;\r\n        properties.withEditForm = bizagi.util.parseBoolean(properties.withEditForm) != null ? bizagi.util.parseBoolean(properties.withEditForm) : false;\r\n\r\n        /** Add properties\r\n         * @default  allowAdd true\r\n         */\r\n        properties.allowAdd = bizagi.util.parseBoolean(properties.allowAdd) != null ? bizagi.util.parseBoolean(properties.allowAdd) : true;\r\n        properties.inlineAdd = (properties.allowAdd) ? (bizagi.util.parseBoolean(properties.inlineAdd) != null) ? bizagi.util.parseBoolean(properties.inlineAdd) : true : false;\r\n\r\n        /* Define Delete properties */\r\n        properties.allowDelete = bizagi.util.parseBoolean(properties.allowDelete) != null ? bizagi.util.parseBoolean(properties.allowDelete) : true;\r\n\r\n        /* Define details properties*/\r\n        properties.allowDetail = bizagi.util.parseBoolean(properties.allowDetail) != null ? bizagi.util.parseBoolean(properties.allowDetail) : false;\r\n\r\n        /* Define general properties */\r\n        properties.keyColumn = \"\";\r\n        properties.data = properties.data || null;\r\n        properties.displayType = \"value\";\r\n        properties.skipInitialLoad = properties.skipInitialLoad || false;\r\n        properties.allowMore = bizagi.util.parseBoolean(properties.allowMore) || false;\r\n        properties.allowFilter = bizagi.util.parseBoolean(properties.allowFilter) || false;\r\n        properties.allowGrouping = false;\r\n        properties.groupBy = \"\";\r\n        properties.groupSummary = properties.groupSummary || null;\r\n        properties.groupText = this.getResource(\"render-grid-group-text\");\r\n        properties.groupCollapsed = bizagi.util.parseBoolean(properties.groupCollapsed) || false;\r\n        properties.groupOrder = properties.groupOrder || \"asc\";\r\n        properties.formShowMode = bizagi.util.parseBoolean(properties.formShowMode) || \"popup\";\r\n        properties.floatingHeader = bizagi.util.parseBoolean(properties.floatingHeader) || false;\r\n\r\n        properties.sortBy = properties.sortBy ? properties.sortBy : properties.data && properties.data.sort ? properties.data.sort : properties.keyColumn;\r\n        properties.sortOrder = properties.sortOrder !== undefined && properties.sortOrder !== null ? (properties.sortOrder === \"True\" ? \"asc\" : \"desc\") : properties.data && properties.data.order ? properties.data.order : \"asc\";\r\n        properties.sort = properties.sortBy + \" \" + properties.sortOrder;\r\n\r\n        properties.rowsPerPage = properties.allowGrouping ? 1000 : (properties.rowsPerPage || 20);\r\n        properties.page = 1;\r\n        properties.records = 0;\r\n        properties.totalPages = 0;\r\n\r\n        properties.addLabel = properties.addLabel || this.getResource(\"render-grid-add-label\") + properties.displayName;\r\n        properties.editLabel = properties.editLabel || $.trim(this.getResource(\"render-grid-edit-label\")) + \" \" + properties.displayName;\r\n        properties.deleteLabel = properties.deleteLabel || this.getResource(\"render-ecm-confirm-bt-delete\") + \" \" + properties.displayName;\r\n        properties.exportOptionsLabel = properties.exportOptionsLabel || this.getResource(\"render-grid-export-options-label\") + properties.displayName;\r\n        properties.detailLabel = properties.detailLabel || this.getResource(\"render-collection-navigator-details-form\");\r\n\r\n\r\n        // Apply style to entire table\r\n        properties.tableCssClass = properties.cssClass || \"\";\r\n\r\n        properties.alreadySaved = false;\r\n\r\n        // When grid open in modal window and the parent is entity\r\n        if (properties.contexttype != \"entity\") {\r\n            properties.contexttype = (typeof self.parent.getContextType == 'function') ? self.parent.getContextType() : \"\";\r\n        }\r\n\r\n        // Define if it is editable or not        \r\n        /* This part change all cells in the table to no editable,\r\n         * you must use it when the parent container has noeditable property,\r\n         * so this table is noeditable too.\r\n         */\r\n        try {\r\n            if ((self.parent && typeof self.parent.properties.editable == \"boolean\" && !self.parent.properties.editable) || !properties.editable) {\r\n                properties.allowAdd = false;\r\n                properties.allowEdit = false;\r\n                properties.allowDelete = false;\r\n                properties.inlineEdit = false;\r\n                properties.inlineAdd = false;\r\n                properties.editable = false;\r\n            }\r\n        } catch (e) {\r\n        }\r\n\r\n\r\n        // If grid has not allowEdit property in true, all fields within the grid\r\n        // must be no editables, so these lines changes this behavior\r\n        if (!properties.allowEdit || (!properties.inlineEdit && !properties.withEditForm)) {\r\n            properties.editable = false;\r\n        }\r\n\r\n        // Calculate render width\r\n        properties.labelWidth = 0;\r\n        properties.valueWidth = \"100%\";\r\n\r\n        // This property will be used to make custom grids with another data source\r\n        properties.overrideGetRemoteData = properties.overrideGetRemoteData || undefined;\r\n        //this property use to create a single decorated or a array of decorated\r\n        properties.singleInstance = bizagi.util.isEmpty(properties.singleInstance) ? true : properties.singleInstance;\r\n\r\n        // Check if the grid its opened whitin dialog form and has contextType\r\n        properties.contextType = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : null;\r\n\r\n        // Create a collection to collect changes\r\n        self.changes = {};\r\n\r\n        // Create a collection to override properties per cell\r\n        self.cellOverrides = {};\r\n\r\n\r\n        // Check orientation and change order of data if its necesary (rtl)\r\n        if (self.isRTL() && properties.data != null) {\r\n            properties.data.rows = self.changeOrderData(properties.data.rows);\r\n        }\r\n    },\r\n\r\n    /*\r\n   *   Check if a render has no value for required validation\r\n   */\r\n    hasValue: function () {\r\n        return this.properties.data && this.properties.data.rows.length > 0;\r\n    },\r\n\r\n    isRTL: function () {\r\n        var properties = this.properties;\r\n        if (!properties) return true;\r\n        return (typeof properties.orientation == \"string\" && properties.orientation.toUpperCase() == \"RTL\") ? true : false;\r\n    },\r\n    changeOrderData: function (data) {\r\n        var reverseDataRows = [];\r\n        var rows = data || [];\r\n        var rowKey;\r\n\r\n        $.each(rows, function (key, value) {\r\n            // Extract row key\r\n            rowKey = value.shift();\r\n            reverseDataRows = value.reverse();\r\n            // add element in the start\r\n            reverseDataRows.unshift(rowKey);\r\n\r\n            rows[key] = reverseDataRows;\r\n        });\r\n\r\n        return rows;\r\n    },\r\n\r\n    /**\r\n     * Specific fix RTL with localizated\r\n     * @param data\r\n     * @returns {*|Array}\r\n     */\r\n    removeRemainingColumns: function (data, numColumns) {\r\n        var rows = data || [];\r\n        var remainingColumns = 0;\r\n        if (rows.length > 0) {\r\n            // \"- 1\" because the first column represent id row\r\n            remainingColumns = rows[0].length - numColumns - 1;\r\n        }\r\n        if (remainingColumns > 0) {\r\n            $.each(rows, function (key, value) {\r\n                // Remove remaining columns\r\n                for (var i = 0; i < remainingColumns; i++) {\r\n                    value.pop();\r\n                }\r\n            });\r\n        }\r\n        return rows;\r\n    },\r\n\r\n    /* \r\n     *   Gets a column definition by xpath\r\n     */\r\n    getColumn: function (xpath) {\r\n        var self = this;\r\n        var result = null;\r\n        $.each(self.columns, function (i, column) {\r\n            if (column.properties.xpath == xpath || column.properties.id == xpath) {\r\n                result = column;\r\n            }\r\n        });\r\n\r\n        return result;\r\n    },\r\n\r\n    getColumnType: function (id) {\r\n        var self = this;\r\n        var columnIndex = self.columnsIds.indexOf(id);\r\n\r\n        if (columnIndex != -1) {\r\n            return self.columns[columnIndex].properties.type;\r\n        }\r\n\r\n        return null;\r\n    },\r\n\r\n    /*\r\n     *   Template method to implement in each children to customize each control\r\n     *   Returns a promise that will be resolved when all the columns has been loaded\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = this.properties;\r\n        var defer = new $.Deferred();\r\n\r\n        // Set dummy data when not in execution mode\r\n        var mode = self.getMode();\r\n        if (mode !== \"execution\") {\r\n            properties.data = self.getDummyData();\r\n        }\r\n\r\n        var template = self.getGridTemplate();\r\n\r\n        // Render template\r\n        var html = self.applyTemplate(template);\r\n\r\n        // Initialize columns\r\n        var columnInitializers = [];\r\n        $.each(self.columns, function (i, column) {\r\n\r\n            // Add to column initializer array so we can synch out the promises\r\n            var result = column.initialize();\r\n            if (result)\r\n                columnInitializers.push(result);\r\n        });\r\n\r\n        // Resolve when all columns has been loaded\r\n        $.when.apply($, columnInitializers).done(function () {\r\n            defer.resolve(html);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n    /*\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Call base\r\n        this._super();\r\n\r\n        // Make control to behave as a block container\r\n        // TODO: Move to instances. This does not apply to mobiles\r\n        control.addClass(\"ui-bizagi-render-grid-container\")\r\n            .addClass(\"ui-bizagi-render-display-block\");\r\n    },\r\n\r\n    /*\r\n     *   Returns the grid template to be used\r\n     */\r\n    getGridTemplate: function () {\r\n        return this.renderFactory.getTemplate(\"grid\");\r\n    },\r\n\r\n    /*\r\n     *   Applies the template to the render and returns the resolved element\r\n     */\r\n    applyTemplate: function (template) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        orientation = self.properties.orientation;\r\n\r\n        return $.fasttmpl(template, {\r\n            id: bizagi.util.encodeXpath(properties.xpath),\r\n            displayName: bizagi.util.encodeXpath(properties.displayName),\r\n            allowAdd: properties.allowAdd,\r\n            addLabel: properties.addLabel\r\n        });\r\n    },\r\n    /*\r\n     *   Method to render non editable values\r\n     *   Returns a promise that will be resolved when all the columns has been loaded\r\n     */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n\r\n        // Override read-only presets\r\n        //  properties.allowAdd = false;\r\n        // Render the same, just change some presets\r\n        return self.renderControl();\r\n    },\r\n    /*\r\n     *   Fetch the data into a deferred\r\n     */\r\n    getRemoteData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Set params\r\n        params = params || {};\r\n        $.extend(params, {\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType,\r\n            idPageCache: properties.idPageCache,\r\n            sort: properties.sortBy,\r\n            order: properties.sortType,\r\n            page: properties.page,\r\n            rows: properties.rowsPerPage,\r\n            searchFilter: properties.searchFilter,\r\n            orientation: properties.orientation || \"ltr\"\r\n        });\r\n\r\n        // Check if a custom method has been given\r\n        if (properties.overrideGetRemoteData) {\r\n            return properties.overrideGetRemoteData(params);\r\n        } else {\r\n            // Resolve with remote data\r\n            return self.dataService.multiaction().getGridData(params).then(function (data) {\r\n                self.originalData = self.originalData || {};\r\n                self.originalData.data = bizagi.clone(data);\r\n\r\n                // Resolve with fetched data\r\n                properties.page = data.page;\r\n                properties.records = data.records;\r\n                properties.totalPages = data.totalPages;\r\n\r\n                return data;\r\n            });\r\n        }\r\n    },\r\n    /*\r\n     insert a blank item in the selected column in the data matrix\r\n     */\r\n    spliceRowData: function (data, index) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        if (mode === \"execution\" && (data && data.rows)) {\r\n            $.each(data.rows, function (key, value) {\r\n                var spliceIndex = index || data.rows[key].length;\r\n                data.rows[key].splice(spliceIndex, 0, \"\");\r\n            });\r\n        }\r\n    },\r\n\r\n    spliceRowDataVisible: function(data, index) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        if (mode === \"execution\" && (data && data.visible)) {\r\n            $.each(data.visible, function (key, value) {\r\n                var spliceIndex = index || data.visible[key].length;\r\n                data.visible[key].splice(spliceIndex, 0, true);\r\n            });\r\n        }\r\n    },\r\n\r\n    spliceRowDataEditable: function(data, index) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        if (mode === \"execution\" && (data && data.editable)) {\r\n            $.each(data.editable, function (key, value) {\r\n                var spliceIndex = index || data.editable[key].length;\r\n                data.editable[key].splice(spliceIndex, 0, true);\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n     *   Creates a set of dummy data in order to display it when rendering in design or layout mode\r\n     */\r\n    getDummyData: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (properties.data) {\r\n            return properties.data;\r\n\r\n        } else {\r\n            var rowTemplate = [\"1\"];\r\n\r\n            // Add a value for each column\r\n            for (var i = 0; i < self.columns.length; i++) {\r\n                rowTemplate.push(\"\");\r\n            }\r\n\r\n            var data = {\r\n                \"page\": 1,\r\n                \"total\": 1,\r\n                \"records\": 1,\r\n                \"rows\": [rowTemplate]\r\n            };\r\n\r\n            return data;\r\n        }\r\n    },\r\n    /*\r\n     *   Submits a grid edit record request for the given id\r\n     *   Returns a deferred\r\n     */\r\n    submitEditRequest: function (id) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var xpath = properties.xpath + self.buildCellXpathFilter(id);\r\n\r\n        return self.dataService.editGridRecord({\r\n            url: properties.editUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType\r\n        });\r\n    },\r\n    /*\r\n     *   Submits a grid edit record request for the given id\r\n     *   Returns a deferred\r\n     */\r\n    submitSaveRequest: function (id, data) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        // Check if there are deferreds to wait\r\n        var deferredsToWait = null;\r\n        if (data.deferreds) {\r\n            deferredsToWait = $.when.apply($, data.deferreds);\r\n            delete data.deferreds;\r\n        }\r\n\r\n        // Calculate xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + properties.xpath + self.buildCellXpathFilter(id) : properties.xpath + self.buildCellXpathFilter(id);\r\n\r\n        return $.when(deferredsToWait).pipe(function () {\r\n            self.startLoading();\r\n            return self.dataService.saveGridRecord({\r\n                url: properties.saveUrl,\r\n                idRender: properties.id,\r\n                xpath: properties.xpath,\r\n                xpathContext: xpathContext,\r\n                submitData: data,\r\n                contexttype: properties.contextType,\r\n                disableServerGridValidations: data.disableServerGridValidations || false\r\n            }).pipe(function (dataResp) {\r\n                self.endLoading();\r\n                return dataResp;\r\n            }).fail(function (dataFail) {\r\n                var form = self.getFormContainer();\r\n                var message = (dataFail.responseText) ? dataFail.responseText : ((typeof dataFail == \"string\") ? dataFail : dataFail.toString());\r\n                //Convert String to object\r\n                if (typeof message == \"string\") {\r\n                    try {\r\n                        message = JSON.parse(message).message;\r\n                    } catch (e) {\r\n                        message = message.match(/\"message\":(.*)\",/)[0];\r\n                        message = message.substr(11, message.length - 13);\r\n                    }\r\n\r\n                } else if (!message.message) {\r\n                    message = dataFail;\r\n                }\r\n                form.validateForm();\r\n                form.clearValidationMessages();\r\n                form.addValidationMessage(message);\r\n            });\r\n        });\r\n    },\r\n    /*\r\n     *   Submits a grid delete record request for the given id\r\n     *   Returns a deferred\r\n     */\r\n    submitDeleteRequest: function (id) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var xpath = properties.xpath + self.buildCellXpathFilter(id);\r\n\r\n        return self.dataService.deleteGridRecord({\r\n            url: properties.deleteUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contextType\r\n        }).pipe(function (data) {\r\n            if (data.type == \"validationMessages\") {\r\n                var form = self.getFormContainer();\r\n                var message = data.messages.join(\" \");\r\n                form.failHandler({message: message});\r\n            }\r\n\r\n            return data;\r\n        });\r\n    },\r\n    /*\r\n     *   Submits a grid add record request\r\n     *   Returns a deferred when done, the server returns an id for the new record\r\n     */\r\n    submitAddRequest: function () {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        var request = self.dataService.addGridRecord({\r\n            url: properties.addUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType,\r\n            idPageCache: properties.idPageCache\r\n        });\r\n\r\n        var filterResponse = request.pipe(function (data) {\r\n            // Parses response\r\n            return data.idEntity;\r\n        });\r\n\r\n        return filterResponse.promise();\r\n    },\r\n    /*\r\n     *   Submits a grid rollback request\r\n     *   Returns a deferred when done\r\n     */\r\n    submitRollbackRequest: function (params) {\r\n        var self = this,\r\n            properties = self.properties;\r\n\r\n        return self.dataService.rollbackGridAction({\r\n            url: properties.rollbackUrl,\r\n            idRender: properties.id,\r\n            xpath: properties.xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: params ? params.idPageCache : properties.idPageCache,\r\n            contexttype: self.properties.contexttype || \"\"\r\n        });\r\n    },\r\n    /*\r\n     *   Collect a single cell change made in the grid to send the data when the user saves the form\r\n     */\r\n    collectGridChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        var id = params.id;\r\n        var xpath = params.xpath;\r\n        var value = params.value;\r\n        var trigger = typeof (params.trigger) !== \"undefined\" ? params.trigger : true;\r\n        var isPressed = params.pressed || false;\r\n\r\n        self.changes[id] = self.changes[id] || {};\r\n        self.changes[id][xpath] = value;\r\n\r\n        if (trigger)\r\n            self.triggerRenderChange({key: id, column: xpath, pressed: isPressed});\r\n    },\r\n    /*\r\n     *   Configures a column to perform a submit on change when the user changes a cell\r\n     */\r\n    configureColumnSubmitOnChange: function (xpath) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Build action\r\n        var action = {\r\n            commands: [{\r\n                xpath: properties.xpath,\r\n                command: 'submit-value',\r\n                argument: 'all'\r\n            }],\r\n            conditions: {\r\n                operator: 'and',\r\n                expressions: [\r\n                    {\r\n                        simple: {\r\n                            operator: 'cell-change',\r\n                            xpath: properties.xpath + '[].' + xpath,\r\n                            argumentType: 'text',\r\n                            argument: xpath\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            dependencies: [properties.xpath]\r\n        };\r\n\r\n        // Add action when form ends its rendering\r\n        $.when(self.ready())\r\n            .done(function () {\r\n                var form = self.getFormContainer();\r\n                form.addSubmitAction(xpath, action);\r\n            });\r\n    },\r\n    /*\r\n     *   Add the render data to the given collection in order to send data to the server\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var keysToDelete = [];\r\n\r\n        for (var id in self.changes) {\r\n            // Dont collect data from totalizers \r\n            if (id != \"summary\") {\r\n                for (var columnXpath in self.changes[id]) {\r\n                    // Check if the render can submit data\r\n                    if (self.canColumnBeSent(id, columnXpath)) {\r\n                        var xpath = properties.xpath + self.buildCellXpathFilter(id) + \".\" + columnXpath;\r\n                        var columnSimpleXpath = properties.xpath + self.buildCellXpathFilter(id) + \".\" + (columnXpath.substr(columnXpath.lastIndexOf('.') + 1, columnXpath.length) || columnXpath);\r\n                        var value = self.changes[id][columnXpath];\r\n\r\n                        renderValues[xpath] = value;\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Clean changes \r\n            keysToDelete.push(id);\r\n\r\n        }\r\n\r\n        if (self.exclusiveChanges) {\r\n            for (var id in self.exclusiveChanges) {\r\n\r\n                var columnExclusiveChanges = self.exclusiveChanges[id];\r\n                var columnEnabledChecks = self.enabledChecks[id];\r\n                var lengthEnabledChecks = columnEnabledChecks.length;\r\n                if (columnExclusiveChanges && columnEnabledChecks) {\r\n                    for (var i = 0; i < lengthEnabledChecks; i++) {\r\n                        var columnSimpleXpathEnabled = properties.xpath + self.buildCellXpathFilter(self.enabledChecks[id].shift()[0]) + \".\" + id;\r\n                        renderValues[columnSimpleXpathEnabled] = false;\r\n                    }\r\n\r\n                    var columnSimpleXpath = properties.xpath + self.buildCellXpathFilter(columnExclusiveChanges.key) + \".\" + columnExclusiveChanges.xpath;\r\n                    renderValues[columnSimpleXpath] = columnExclusiveChanges.value;\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        // Clean changes array in order to prevent duplicate data\r\n        // when execute SUBMITDATA in multiaction, that make and error\r\n        // in circular dependencies, specially when we add inline record\r\n        $.each(keysToDelete, function (key, v) {\r\n            delete self.changes[v];\r\n        });\r\n    },\r\n\r\n    hasChanged: function (result) {\r\n        var self = this;\r\n        if (!$.isEmptyObject(self.changes)) {\r\n            result.push(true);\r\n            return true;\r\n        } else {\r\n            if (!$.isEmptyObject(self.exclusiveChanges)) {\r\n                result.push(true);\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    },\r\n\r\n    /*\r\n     *   Check if a column data can be sent to the server\r\n     */\r\n    canColumnBeSent: function (id, columnXpath) {\r\n        var self = this, i, j, xpath;\r\n        for (i in self.columns) {\r\n            if (self.columns.hasOwnProperty(i)) {\r\n                var column = self.columns[i];\r\n                if (column.properties.type !== \"columnUserfield\") {\r\n                    if (column.properties.xpath == columnXpath) {\r\n                        var cellOverride = self.getCellOverride(id, column.columnIndex - 1);\r\n                        return column.canBeSent(id, cellOverride);\r\n                    }\r\n                } else {\r\n                    for (j in column.properties) {\r\n                        if (column.properties.hasOwnProperty(j)) {\r\n                            if (Object.prototype.toString.apply(column.properties[j]) === \"[object String]\") {\r\n                                xpath = column.properties[j].substr(column.properties[j].lastIndexOf(\".\") + 1);\r\n                                if (xpath === columnXpath) {\r\n                                    return true;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n    /* \r\n     *  Method to determine if the render value can be sent to the server or not\r\n     */\r\n    canBeSent: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var displayOnly = bizagi.util.parseBoolean(properties.displayOnly) || false;\r\n\r\n        // The render can be sent if it is \"display only\" and inline Edit is available\r\n        if (!displayOnly && (properties.inlineEdit || properties.inlineAdd || !$.isEmptyObject(self.changes))) {\r\n            return true;\r\n        }\r\n        return false;\r\n    },\r\n    /*\r\n     *   Return the value for a requested cell\r\n     */\r\n    getCellValue: function (key, xpath) {\r\n        var self = this;\r\n        var data = self.properties.data.rows;\r\n        for (var i = 0; i < data.length; i++) {\r\n            if (data[i][0] == key) {\r\n                for (var j = 0; j < self.columns.length; j++) {\r\n                    if (self.columns[j].properties.xpath == xpath) {\r\n                        var result = data[i][j + 1];\r\n                        return result;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n     *\r\n     */\r\n    getCellCurrentValue: function (key, xpath) {\r\n        var self = this;\r\n\r\n        var control = self.getControlCell(key, xpath);\r\n        if (control && typeof control.getValue === \"function\") {\r\n            return control.getValue();\r\n        }\r\n        return null;\r\n    },\r\n    /*\r\n     *   Gets control\r\n     */\r\n    getControlCell: function (key, xpath) {\r\n        var self = this;\r\n        var control = null;\r\n        if (typeof (self.columns) != \"undefined\")\r\n            for (var j = 0; j < self.columns.length; j++) {\r\n                if (self.columns[j].properties.xpath == xpath || self.columns[j].properties.id == xpath) {\r\n                    control = self.columns[j].getDecorated(key);\r\n                    break;\r\n                }\r\n            }\r\n\r\n\r\n        return control;\r\n    },\r\n\r\n    changeRequired: function (argument) {\r\n        this.properties.required = argument;\r\n        this.changeRequiredLabel(argument);\r\n    },\r\n\r\n    changeRequiredLabel: function (argument) {\r\n        var control = this.getControl();\r\n\r\n        if (control.length > 0) {\r\n            if (this.getMode() !== \"execution\") {\r\n                if (bizagi.util.parseBoolean(argument) == true && this.properties.editable) {\r\n                    control.addClass(\"grid-control-required\");\r\n                } else {\r\n                    control.removeClass(\"grid-control-required\");\r\n                }\r\n            } else {\r\n                if (bizagi.util.parseBoolean(argument) == true && !this.hasValue() && this.properties.editable) {\r\n                    control.addClass(\"grid-control-required\");\r\n                } else {\r\n                    control.removeClass(\"grid-control-required\");\r\n                }\r\n            }\r\n        }\r\n\r\n        this.triggerRenderValidate();\r\n    },\r\n\r\n    /*\r\n     *   Fetch the data again and updates the content\r\n     */\r\n    refresh: function () {\r\n    },\r\n    /*\r\n     *   Sets an error on the cell\r\n     */\r\n    setError: function (key, columnXpath) {\r\n    },\r\n    /*\r\n     *   Changes the background for a cell\r\n     */\r\n    changeCellBackgroundColor: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *   Changes the background for a cell\r\n     */\r\n    changeCellColor: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *   Changes the visibility for a cell\r\n     */\r\n    changeCellVisibility: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *   Changes the editability for a cell\r\n     */\r\n    changeCellEditability: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *  Changes the required for cell\r\n     */\r\n    changeCellRequired: function (key, xpath, argument) {\r\n    },\r\n    /*\r\n     *  Refresh behaviors of cell\r\n     */\r\n    changeCellProperties: function (key, xpath, argument) {\r\n\r\n    },\r\n    /*\r\n     *  Changes the max value for a cell\r\n     */\r\n    changeCellMaxValue: function (key, xpath, argument) {\r\n\r\n    },\r\n    /*\r\n     *  Changes the min value for a cell\r\n     */\r\n    changeCellMinValue: function (key, xpath, argument) {\r\n\r\n    },\r\n    /*\r\n     *  Clean data of cell\r\n     */\r\n    cleanCellData: function (key, xpath) {\r\n    },\r\n\r\n    changeEditability: function (argument) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        self.saveGrid().done(function () {\r\n\r\n            // Renders again\r\n            var properties = {properties: $.extend({editable: bizagi.util.parseBoolean(argument)}, self.originalData)};\r\n\r\n            // Clears control\r\n            control.empty();\r\n\r\n            bizagi.rendering.render.prototype.initializeData.apply(self, [properties]);\r\n\r\n            self.initProperties();\r\n            self.changeColumnsEditability(argument);\r\n\r\n            if (typeof self.internalRenderControl == \"function\") {\r\n                $.when(self.internalRenderControl()).done(function (html) {\r\n                    control.append(html);\r\n                    self.postRenderElement(self.element);\r\n                });\r\n\r\n            }\r\n\r\n        });\r\n\r\n    },\r\n\r\n    saveGrid: function () {\r\n        var self = this;\r\n        var defer = $.Deferred();\r\n\r\n        var rows = $(\"[data-bizagi-component=rows]\", self.element).find(\"[data-new-row=true]\");\r\n        if (rows.length > 0) {\r\n            rows = $.map(rows, function (row, i) {\r\n                return $(row).data(\"business-key\");\r\n            });\r\n            self.saveInlineAddedRows(rows).done(function () {\r\n                defer.resolve();\r\n            });\r\n        } else {\r\n            defer.resolve();\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    changeColumnsEditability: function (value) {\r\n        var self = this;\r\n        var columns = self.columns || [];\r\n\r\n        $.each(columns, function (i, column) {\r\n            column.properties.editable = value;\r\n        });\r\n    },\r\n\r\n    /**\r\n     *   Refresh behaviors of cell\r\n     */\r\n    refreshCell: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var key = params.key;\r\n        var column = params.column;\r\n        var xpathContext = (params.xpathContext !== \"\") ? params.xpathContext + \".\" + self.properties.xpath + self.buildCellXpathFilter(key) : self.properties.xpath + self.buildCellXpathFilter(key);\r\n        var cell = self.getControlCell(key, params.column);\r\n        var form = self.getFormContainer();\r\n        var idForm = form.properties.id;\r\n\r\n        if (!cell) {\r\n            return;\r\n        }\r\n\r\n        // Execute personalized stuff before to refresh it\r\n        cell.beforeToRefresh();\r\n\r\n        // Call service\r\n        return $.when(self.dataService.multiaction().refreshGridCell({\r\n            idRender: properties.id,\r\n            column: cell.properties.id,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: xpathContext,\r\n            idForm: idForm,\r\n            typeRender: cell.properties.type\r\n        })).done(function (data) {\r\n            // Extract values\r\n            var getDepthData = function (target) {\r\n                if (target && typeof target == \"object\" && target.length >= 1) {\r\n                    return (target[0].length >= 1) ? target[0][0] : target[0];\r\n                }\r\n                return \"\";\r\n            };\r\n            var newValue = getDepthData(data.rows);\r\n            var editable = getDepthData(data.editable);\r\n            if (!bizagi.util.isBoolean(editable)) {\r\n                editable = editable || true;\r\n            }\r\n            var visible = getDepthData(data.visible);\r\n            if (!bizagi.util.isBoolean(visible)) {\r\n                visible = visible || true;\r\n            }\r\n            \r\n            // Change Visibility & Editability\r\n            self.changeCellVisibility(key, column, visible);\r\n            self.changeCellEditability(key, column, editable);\r\n\r\n            // Change control value\r\n            cell.setValue(newValue);\r\n            cell.setDisplayValue(newValue);\r\n\r\n            // Trigger grid change\r\n            self.triggerRenderChange({key: key, column: column, changed: false});\r\n\r\n            // Update the affected cell manually after a refresh\r\n            //TODO:temporary solution\r\n            //review the DRAGON-5982 \r\n            if (cell.column != undefined && bizagi.util.detectDevice() == \"desktop\") {\r\n                self.updateAffectedCellManually(key, newValue, cell.column.columnIndex);\r\n            }\r\n\r\n\r\n            // Execute personalized stuff after to refresh it\r\n            cell.afterToRefresh();\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Triggers the render change event\r\n     */\r\n    triggerRenderChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n        // Property to verify exporting updated grids\r\n        if (!bizagi.util.isEmpty(params) && params.changed != false)\r\n            self.properties.canBeExported = false;\r\n        self.triggerHandler(\"renderchange\", {\r\n            render: self,\r\n            surrogateKey: params.key,\r\n            column: params.column,\r\n            changed: params.changed,\r\n            rowDeleted: params.rowDeleted,\r\n            pressed: params.pressed\r\n        });\r\n    },\r\n\r\n    /*\r\n     *   Validate the grid\r\n     */\r\n    validate: function () {\r\n        this.isValid([]);\r\n    },\r\n    /* \r\n     * Public method to determine if a value is valid or not\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var bValid = true;\r\n\r\n        // Clear error message\r\n        self.hasErrors = false;\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check for required columns and null values\r\n        if (self.properties.data && self.properties.data.rows) {\r\n            var newRows = self.getDataNewRows();\r\n            // Preserve elements in data.rows\r\n            // Check required\r\n            if (newRows.length == 0 && bizagi.util.parseBoolean(self.properties.required)) {\r\n                if (!self.hasValue()) {\r\n                    message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", self.properties.displayName);\r\n                    invalidElements.push({\r\n                        xpath: self.properties.xpath,\r\n                        message: message\r\n                    });\r\n                    bValid = false;\r\n                }\r\n            }\r\n\r\n            var data = $.merge($.merge([], self.properties.data.rows), newRows);\r\n\r\n            for (var i = 0; i < self.columns.length; i++) {\r\n                var messages = [];\r\n                var uniqueMessages = {};\r\n\r\n                for (var j = 0; j < data.length; j++) {\r\n                    var value = data[j][i + 1];\r\n                    var key = data[j][0];\r\n                    var xpath = self.columns[i].properties.xpath;\r\n                    if (self.changes[key] !== undefined && self.changes[key][self.columns[i].properties.xpath] !== undefined) {\r\n                        value = self.changes[key][self.columns[i].properties.xpath];\r\n                    }\r\n\r\n                    // Check if the column is valid\r\n                    var valueValid = self.columns[i].isValueValid(key, value, messages, self.getCellOverride(key, i));\r\n                    if (!valueValid) {\r\n                        bValid = false;\r\n\r\n                        self.hasErrors = true;\r\n                        self.setError(key, self.columns[i].properties.xpath);\r\n                    }\r\n                }\r\n                for (var k = 0, messagesLength = messages.length; k < messagesLength; k++) {\r\n                    if (uniqueMessages[messages[k]] == null) {\r\n                        uniqueMessages[messages[k]] = messages[k];\r\n                    }\r\n                }\r\n\r\n                if (messages.length > 0) {\r\n                    var gridValidationMessage = self.getResource(\"render-grid-validation\").replaceAll(\"#grid#\", self.properties.displayName);\r\n                    for (key in uniqueMessages) {\r\n                        invalidElements.push({\r\n                            xpath: self.properties.xpath,\r\n                            message: gridValidationMessage + \" \" + key\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n    /*\r\n     *   Enables submit on change feature for the current render\r\n     */\r\n    configureSubmitOnChange: function () {\r\n        // Don't do anything we will trigger submit on change manually only when the grid add or edit form has been edited   \r\n    },\r\n    /*\r\n     *   Get cell override\r\n     */\r\n    getCellOverride: function (key, column) {\r\n        var self = this;\r\n\r\n        // Convert to numbers\r\n        key = Number(key);\r\n        column = Number(column);\r\n\r\n        // Find overrides\r\n        var columnProperties = self.columns[column].properties;\r\n        if (!self.cellOverrides[key])\r\n            self.cellOverrides[key] = {};\r\n        if (!self.cellOverrides[key][column]) {\r\n            self.cellOverrides[key][column] = {\r\n                visible: columnProperties.visible,\r\n                editable: columnProperties.editable,\r\n                required: columnProperties.required\r\n            };\r\n        }\r\n\r\n        return self.cellOverrides[key][column];\r\n    },\r\n\r\n    /*\r\n     * Set cell overrides based on the data\r\n     */\r\n    setCellOverrides: function (data, columns) {\r\n        var self = this;\r\n        var key;\r\n\r\n        // Init visibility overrides\r\n        if (data.visible) {\r\n            for (var i = 0, len = data.visible.length; i < len; i++) {\r\n                key = data.visible[i][0];\r\n                for (var j = 0, len_v = data.visible[i].length; j < len_v; j++) {\r\n                    // Skip key columns\r\n                    if (j > 0)\r\n                        self.getCellOverride(key, j - 1).visible = bizagi.util.parseBoolean(data.visible[i][j]);\r\n                }\r\n            }\r\n        }\r\n\r\n        // Init editability overrides\r\n        if (data.editable) {\r\n            for (var i = 0, len = data.editable.length; i < len; i++) {\r\n                key = data.editable[i][0];\r\n                for (var j = 0, len_v = data.editable[i].length; j < len_v; j++) {\r\n                    // Skip key columns\r\n                    if (j > 0) {\r\n                        var columnEditable = columns ? bizagi.util.parseBoolean(columns[j - 1].properties.editable) : true;\r\n                        self.getCellOverride(key, j - 1).editable = columnEditable ? bizagi.util.parseBoolean(data.editable[i][j]) : false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        // Init required overrides\r\n        if (data.required) {\r\n            for (var i = 0, len = data.required.length; i < len; i++) {\r\n                key = data.required[i][0];\r\n                for (var j = 0, len_v = data.required[i].length; j < len_v; j++) {\r\n                    // Skip key columns\r\n                    if (j > 0)\r\n                        self.getCellOverride(key, j - 1).required = bizagi.util.parseBoolean(data.required[i][j]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /*\r\n     *   Returns the row indexes for the data\r\n     */\r\n    getIndexes: function () {\r\n        var self = this;\r\n        var data = $.merge(self.properties.data.rows, self.getDataNewRows());\r\n        return $.map(data, function (item, i) {\r\n            return item[0];\r\n        });\r\n    },\r\n    /**\r\n     *  Return object with value of all new records unsaved within the grid\r\n     *  @return {object} all new records\r\n     */\r\n    getDataNewRows: function () {\r\n        var self = this;\r\n        var newRows = [];\r\n\r\n        if (typeof self.newRecords == \"object\" && !$.isEmptyObject(self.newRecords)) {\r\n            $.each(self.newRecords, function (rowKey) {\r\n                var cellValue = [];\r\n                cellValue.push(Number(rowKey));\r\n                for (var i = 0, length = self.columns.length; i < length; i++) {\r\n                    cellValue.push(self.getCellCurrentValue(rowKey, self.columns[i].properties.xpath));\r\n                }\r\n                // Add cell value row to new rows\r\n                newRows.push(cellValue);\r\n            });\r\n        }\r\n        return newRows;\r\n    },\r\n\r\n    /*\r\n     * Return the object with the required url to access the exported grid to the desired format\r\n     *  @return {object} render attributes, including id, xpathContext, idPagecache, disposition (inline or attachment), and exportType (XLS or PDF)\r\n     */\r\n    getGridExportUrl: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.getGridExportUrl({\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext || \"\",\r\n            idPageCache: properties.idPageCache,\r\n            disposition: params.disposition,\r\n            exportType: params.exportType,\r\n            sort: properties.sort,\r\n            sessionId: self.getSessionId(),\r\n            idForm: self.getFormContainer().properties.id\r\n\r\n        });\r\n    },\r\n\r\n    submitForGridChange: function () {\r\n        var self = this;\r\n        return self.submitOnChange(null, false);\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self.columns) {\r\n                $.each(self.columns, function (i, column) {\r\n                    column.dispose();\r\n                });\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    },\r\n\r\n    getEnabledChecks: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        params = params || {};\r\n        $.extend(params, {\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contextType,\r\n            idPageCache: properties.idPageCache,\r\n            rows: properties.rowsPerPage,\r\n            xpathfilter: params.xpath\r\n        });\r\n        // Default ajax call\r\n        var defer = new $.Deferred();\r\n        // Resolve with remote data\r\n        self.dataService.multiaction().getGridDataExclusivesSelected(params).done(function (data) {\r\n            // Resolve with fetched data\r\n            properties.page = data.page;\r\n            properties.records = data.records;\r\n            properties.totalPages = data.totalPages;\r\n\r\n            // Check RTL\r\n            if (self.isRTL()) {\r\n                data.rows = self.changeOrderData(data.rows);\r\n            }\r\n            defer.resolve(data);\r\n        });\r\n        return defer.promise();\r\n    },\r\n\r\n    buildCellXpathFilter: function (key) {\r\n        if (bizagi.util.isNumeric(key)) return \"[id=\" + key + \"]\";\r\n        return \"[id='\" + key + \"']\";\r\n    },\r\n\r\n    cleanNewRecords: function () {\r\n        // Mark it as saved\r\n        this.newRecords = {};\r\n    },\r\n\r\n    /**\r\n     *\r\n     * Customizes render background color\r\n     *\r\n     * This method is called when the backgroud color is setted by Form Designer\r\n     *\r\n     * @param color\r\n     */\r\n    changeBackgroundColor: function (color) {\r\n        this._super(color);\r\n\r\n        var control = this.getControl();\r\n        control.find(\".bz-rn-grid-header-title\").css(\"background-color\", color, \"!important\");\r\n        control.find(\".bz-rn-grid-container-foother\").css(\"background-color\", color, \"!important\");\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Check has header format\r\n     * @returns {boolean}\r\n     */\r\n    hasColorHeader: function () {\r\n        var headerFormat = this.properties.headerFormat || {};\r\n\r\n        return headerFormat ? !bizagi.util.isEmpty(headerFormat.color) : false;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Hidden Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for hiddens\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.hidden\", {}, {\r\n\r\n    /**\r\n     * Returns the in-memory processed element\r\n     */\r\n    renderControl: function () {\r\n        if (this.getMode() === \"design\") {\r\n            return \"<div>\" + bizagi.localization.getResource(\"render-hidden-displayName\") + \"</div>\";\r\n        } else {\r\n            return \"<div />\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var properties = this.properties;\r\n\r\n        // Call base\r\n        this._super();\r\n\r\n        // Set the initial value\r\n        if (properties.value !== undefined) {\r\n            this.setDisplayValue(properties.value);\r\n        }\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Label Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for labels\r\n */\r\n$.Class.extend(\"bizagi.rendering.label\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // A label itself is never \"required\" as other controls\r\n        var properties = self.properties;\r\n        properties.required = false;\r\n\r\n        // Set properties\r\n        self.properties.displayType = \"label\";\r\n        //self.properties.labelAlign = self.originalProperties.labelAlign || \"left\";\r\n        self.properties.displayName = data.properties.displayName || \"\";\r\n\r\n        if (bizagi.util.parseBoolean(self.properties.allowDinamiclabel)) {\r\n            this.properties.displayName = data.properties.displayName || bizagi.localization.getResource(\"render-label-default-display-name\");\r\n        }\r\n\r\n        self.bindingValue();\r\n\r\n        // Calculate layout properties\r\n        self.calculateInitialLayoutProperties();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this._super();\r\n        // Just apply display-type: label, align it to the left\r\n        this.changeDisplayOption(\"label\");\r\n        //this.changeLabelAlign(this.properties.labelAlign || \"left\");\r\n\r\n        if (typeof this.configureHelpText == \"function\")\r\n            this.configureHelpText();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this._super();\r\n        // Just apply display-type: label, align it to the left\r\n        this.changeDisplayOption(\"label\");\r\n        this.changeLabelAlign(this.properties.labelAlign || \"left\");\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param {} invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Automatically this render is valid, so we can't check a required label\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    bindingValue: function () {\r\n        var self = this;\r\n\r\n        if (self.properties.allowDinamiclabel && self.properties.value) {\r\n            if (typeof (self.properties.value) === \"object\" && self.properties.value[0]) {\r\n                self.properties.displayName = self.properties.value[0].value;\r\n            } else if (typeof (self.properties.value) === \"string\" && self.properties.value !== \"\") {\r\n                self.properties.displayName = self.properties.value;\r\n            }\r\n        }\r\n    },\r\n\r\n    controlValueIsChanged: function(){\r\n        //Labels never change\r\n        return false;\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: Bizagi Render Search Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for search renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.search\", {}, {\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        properties.searchForms = properties.searchForms || [];\r\n\r\n        // Default maxRecords is 20\r\n        properties.maxRecords = Number(properties.maxRecords) || 20;\r\n        properties.advancedSearch = (bizagi.util.parseBoolean(properties.advancedSearch) === null) ? false : bizagi.util.parseBoolean(properties.advancedSearch);\r\n        properties.allowSuggest = bizagi.util.parseBoolean(properties.allowSuggest) !== null ? bizagi.util.parseBoolean(properties.allowSuggest) : false;\r\n        properties.allowFullSearch = properties.allowFullSearch || false;\r\n        properties.allowAdd = bizagi.util.parseBoolean(properties.allowAdd) || false;\r\n        properties.allowTyping = bizagi.util.parseBoolean(properties.allowTyping) !== null ? bizagi.util.parseBoolean(properties.allowTyping) : false;\r\n        properties.allowTyping = bizagi.util.parseBoolean(properties.allowSuggest) ? true : properties.allowTyping;\r\n        properties.allowClear = bizagi.util.parseBoolean(properties.allowClear) !== null ? bizagi.util.parseBoolean(properties.allowClear) : false;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) !== null ? bizagi.util.parseBoolean(properties.editable) : true;\r\n\r\n        // This length defines the behavior of the suggest, 2 characters are used by default meaning after 2 characters are written the search will take place\r\n        properties.searchLength = properties.searchLength || 2;\r\n\r\n        // Expire local storage cache\r\n        properties.enableLocalStorage = false;\r\n        properties.expireCache = 1000 * 60 * 15; // 15 minutes\r\n\r\n        // QAF-3297 - Compatibility for old versions of advanced search where the \"submitOnChange\" property default is true\r\n        // New \"submitVersion\" property default is 2\r\n        if (properties.advancedSearch && self.getMode() === \"execution\") {\r\n            properties.submitOnChange = bizagi.util.parseBoolean(properties.submitOnChange) || false;\r\n            properties.submitOnChange = (properties.submitVersion || 1) > 1 ? properties.submitOnChange : true;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"search\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            allowTyping: properties.allowTyping,\r\n            advancedSearch: properties.advancedSearch,\r\n            allowSuggest: properties.allowSuggest,\r\n            editable: properties.editable,\r\n            allowClear: properties.allowClear,\r\n            hasValue: self.hasValue(),\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Fetch the data into a deferred\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    getData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n        var form = self.getFormContainer();\r\n        var contextType = form.getContextType() || form.params.contexttype || false;\r\n\r\n        params = params || {};\r\n\r\n        // Verify context type\r\n        if (self.properties.contexttype) {\r\n            params.h_contexttype = self.properties.contexttype;\r\n        } else if (contextType) {\r\n            params.h_contexttype = contextType;\r\n        }\r\n\r\n        params.h_contexttype = self.properties.enableQuerySuggestBehavior ? \"metadata\" : params.h_contexttype;\r\n\r\n        // QA-471 When the contexttype is metadata it does not send xpathcontext\r\n        if (params && params.h_contexttype && params.h_contexttype === 'metadata') {\r\n            properties.xpathContext = '';\r\n        }\r\n\r\n        // BA35025 - JFA\r\n        if (properties.term.indexOf(\"\\'\") > -1) {\r\n            var regexC = new RegExp(\"\\'\", \"g\");\r\n            properties.term = properties.term.replace(regexC, \"\\\\'\\\\'\");\r\n        }\r\n\r\n        // QAF-6448 - JFA\r\n        if (properties.term.indexOf(\"\\\"\") > -1) {\r\n            var regexC = new RegExp(\"\\\"\", \"g\");\r\n            properties.term = properties.term.replace(regexC, \"\\\"\");\r\n        }\r\n\r\n        // Resolve with remote data\r\n        self.dataService.multiaction().getSearchData({\r\n            url: properties.dataUrl,\r\n            contexttype: params.h_contexttype,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            term: (properties.allowFullSearch) ? \"%\" + properties.term : properties.term,\r\n            extra: params\r\n        }).done(function (data) {\r\n            // Resolve with fetched data\r\n            properties.data = data;\r\n            defer.resolve(properties.data);\r\n        }).fail(function (data) {\r\n            var hideStatus = data.hideStatus || false;\r\n\r\n            defer.resolve({});\r\n\r\n            if (!hideStatus) {\r\n                self.trigger(\"onSearchError\", data);\r\n            }\r\n        });\r\n\r\n        return defer.promise(defer);\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param {} value\r\n     * @param {} triggerEvents\r\n     * @returns {}\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n        triggerEvents = triggerEvents !== undefined ? triggerEvents : true;\r\n\r\n        self._super(value, triggerEvents);\r\n\r\n        if (value != undefined) {\r\n            this.value = value;\r\n            this.selectedValue = value.label;\r\n        } else {\r\n            this.value = null;\r\n            this.selectedValue = null;\r\n        }\r\n    },\r\n\r\n    /* Maps the value, when this one comes from actions*/\r\n    mapValue: function (value) {\r\n        if (value && value.fromAction) {\r\n            return {\r\n                id: value.value,\r\n                value: value.label,\r\n                label: value.label\r\n            }\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Add the render data to the given collection in order to send data to the server\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        var xpath = self.properties.xpath;\r\n        var value = self.getValue();\r\n\r\n        if (self.controlValueIsChanged()) {\r\n            // Filter by valid xpaths and valid values\r\n            // Remove empty validation for value for combos\r\n            if (!bizagi.util.isEmpty(xpath) && value !== null && typeof (value) !== \"undefined\") {\r\n                // Add a validation because sometimes value contains an empty not null object\r\n                if (typeof (value) == \"object\" && value.id === undefined)\r\n                    return;\r\n                // Add the value to the server\r\n                renderValues[xpath] = value;\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Submits the selected data to the server in order to be saved\r\n     * @returns {}\r\n     */\r\n    submitData: function () {\r\n        var self = this;\r\n        var data = {};\r\n\r\n        // Add current data\r\n        if (!self.grid) {\r\n            data[self.properties.xpath] = self.getValue();\r\n        }\r\n\r\n        // Executes submit on change\r\n        self.submitOnChange(data, undefined, false);\r\n    },\r\n\r\n    /**\r\n     * Check if control is valid or not\r\n     * @param {} invalidElements\r\n     * @returns {}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        return this._super(invalidElements);\r\n    },\r\n\r\n    hasValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (typeof (value) == \"undefined\" || value == null) return false;\r\n\r\n        if (typeof value === \"object\" && value.id !== \"\" && typeof (value.id) !== \"undefined\") return true;\r\n        return !bizagi.util.isEmpty(value);\r\n    },\r\n\r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n        return bizagi.util.formatItem(value);\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Text Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for text renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.text\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        if (properties.regularExpressionExpression) {\r\n            var message = properties.regularExpressionMessage || this.getResource(\"render-text-regular-expression-default-message\");\r\n            properties.regularExpression = {\"expression\": properties.regularExpressionExpression, \"message\": message};\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*}\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"text\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            value: this.properties.value,\r\n            isEmptyField: typeof (this.properties.value) === \"undefined\",\r\n            helpText: this.properties.helpText,\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"text-read-only\");\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.isString(value)) {\r\n            value = value.replaceAll(\"`\", \"&#96;\");\r\n        }\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {value: value, editable: this.properties.editable});\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n\r\n        this.input = this.getControl().find(\"input\");\r\n\r\n        //Attach event for retype double\r\n        if (this.properties.retype === \"double\")\r\n            this.attachRetypeDouble();\r\n    },\r\n\r\n    /**\r\n     * function virtual implements on children (desktop,samrtphone...).\r\n     */\r\n    attachRetypeDouble: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Check mask property\r\n        if (properties.mask)\r\n            self.input.mask({mask: properties.mask});\r\n\r\n        // Attach change event\r\n        self.input.bind(\"change\", function () {\r\n\r\n            // Updates internal value\r\n            self.setValue(self.input.val(), false);\r\n\r\n            // Check that the value is valid\r\n            var validationMessages = [];\r\n            if (properties.retype !== \"duplicate\") {\r\n                if (self.isValid(validationMessages) || typeof (properties.regularExpression) === \"undefined\") {\r\n                    // Update value again triggering handlers\r\n                    self.setValue(self.input.val(), true);\r\n                }\r\n            }\r\n\r\n        }).keypress(function (e) {\r\n            e = window.event || e;\r\n            var keyUnicode = e.charCode || e.keyCode;\r\n\r\n            if (e !== undefined) {\r\n                if (keyUnicode == 13) {\r\n                    $(this).trigger(\"change\");\r\n                }\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @returns {*}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n\r\n        // When the form have big data, block browser executing RegExp. QAF-1418.\r\n        // Check regular expression\r\n        if (typeof value == \"string\") {\r\n            if (properties.regularExpression) {\r\n                var regex = new RegExp(\"\");\r\n                try {\r\n                    regex = new RegExp(properties.regularExpression.expression);\r\n                } catch (e) {\r\n                    if (bizagi.override.showDesignValidations) {\r\n                        bizagi.log(e);\r\n                        invalidElements.push({xpath: properties.xpath, message: e.message});\r\n                        bValid = false;\r\n                    }\r\n                }\r\n\r\n                if (value && ((value.match(new RegExp(\".*?(<|\\\\u003C)(.+?)(>|\\\\u003E)(.?)|eval\\\\(|eval\\\\u0028\", \"g\"))) || (!value.match(regex) && self.properties && self.properties.xpath === \"userName\"))) {\r\n                    var message = properties.regularExpression.message;\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                } else {\r\n                    if (value && ((value.match(new RegExp(\".*?(<|\\\\u003C)(.+?)(>|\\\\u003E)(.?)|eval\\\\(|eval\\\\u0028\", \"g\"))) || (!value.match(regex)))) {\r\n                        var message = properties.regularExpression.message;\r\n                        invalidElements.push({xpath: properties.xpath, message: message});\r\n                        bValid = false;\r\n                    }\r\n                }\r\n            } else {\r\n                // Strange behavior on IE. When matchs are united on IE have is very slow\r\n                // solution, divide matchs\r\n                //.*? means for more information search: \"Lazy matching regexp\"\r\n                if (value && (value.match(new RegExp(\".*?eval\\\\(\", \"g\"))) && (value.match(new RegExp(\".*?eval\\\\u0028\", \"g\")))) {\r\n                    if (properties.editable) {\r\n                        var message = this.getResource(\"render-text-regular-expression-default-message\");\r\n\r\n                        invalidElements.push({xpath: properties.xpath, message: message});\r\n                        bValid = false;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n\r\n        if (!bizagi.util.parseBoolean(self.properties.editable)) {\r\n            // Render as simple value\r\n            if (typeof (value) === \"string\") {\r\n                // Replace line breaks for html line breaks\r\n                var valueToDisplay = bizagi.util.decodedDisplayValue(self.getDisplayValue());\r\n\r\n                control.html(\"<label class='readonly-control'>\" + valueToDisplay + \"</label>\");\r\n            } else {\r\n                if (bizagi.util.isNull(value)) {\r\n                    control.html(\"\");\r\n                }\r\n            }\r\n        }\r\n\r\n        // Set internal value\r\n        self.setValue(decodedValue, false);\r\n    },\r\n\r\n    /**\r\n     * Extend setValue to fix all encode data from database\r\n     * @param value\r\n     */\r\n    setValue: function (value) {\r\n        this._super(value);\r\n    },\r\n\r\n    /**\r\n     * Helptext tooltip\r\n     * @param {} control\r\n     * @param {} currentValue\r\n     * @param {} currentTitle\r\n     */\r\n    createTooltip: function (control, currentValue, currentTitle) {\r\n        control.data(\"oldValue\", currentValue);\r\n        control.val(\"\");\r\n\r\n        try {\r\n            // Destroy tooltips\r\n            control.tooltip(\"destroy\");\r\n        } catch (e) {\r\n        }\r\n\r\n        control.attr(\"title\", currentTitle);\r\n        control.tooltip();\r\n\r\n        var toolTipZindex = $.getMaxZindex();\r\n        control.tooltip().on(\"tooltipopen\", function (event, ui) {\r\n            ui.tooltip.zIndex(toolTipZindex);\r\n        });\r\n\r\n        // Create new tooltip\r\n        control.tooltip(\"open\");\r\n\r\n        setTimeout(function () {\r\n            control.focus();\r\n        }, 100);\r\n    },\r\n\r\n\r\n    //#region No side effects funtions    \r\n    /**\r\n     * Gets the string with the correct size\r\n     * @param {string} value String value to validate\r\n     * @param {Int} maxLength Maximum size of the string\r\n     * @returns {string} String value validated\r\n     */\r\n    validateValue: function (value, maxLength) {\r\n        if(maxLength<1 || value.length<=maxLength)return value;\r\n        return value.substr(0, maxLength)\r\n    }\r\n    //#endregion No side effects funtions\r\n\r\n});","/**\r\n *   Name: Bizagi Render Button Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for button renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.button\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.caption = properties.caption || \"\";\r\n\r\n        // set default value from normal to value\r\n        properties.displayType = \"value\";\r\n\r\n        // A button cannot be required\r\n        properties.required = false;\r\n\r\n        // This flag enable/disable default behaviors of buttons\r\n        // auto save and execute rule\r\n        properties.preventDefault = properties.preventDefault || false;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"button\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {\r\n            caption: self.properties.caption,\r\n            cssClass: self.properties.cssclass || \"\",\r\n            editable: self.properties.editable\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {}\r\n     */\r\n    renderReadOnly: function () {\r\n        // Executes the same template than normal render\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        // call base\r\n        this._super();\r\n\r\n        this.getLabel().addClass('bz-form-label--hidden');\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render behaviour after to be processed\r\n     */\r\n    postRender: function () {\r\n        // call base\r\n        this._super();\r\n\r\n        this.getLabel().addClass('bz-form-label--hidden');\r\n    },\r\n\r\n    /**\r\n     * Saves the form\r\n     * @returns {}\r\n     */\r\n    saveForm: function () {\r\n        var form = this.getFormContainer();\r\n        return form.saveForm();\r\n    },\r\n\r\n    /**\r\n     * Executes the button action\r\n     * @returns {}\r\n     */\r\n    executeButton: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpathContext = properties.xpathContext || \"\";\r\n\r\n        if (properties.submitOnChangexpathContextRow) {\r\n            xpathContext = xpathContext ? xpathContext + \".\" + properties.submitOnChangexpathContextRow : properties.submitOnChangexpathContextRow;\r\n        }\r\n\r\n        // Set the loading feedback\r\n        self.getFormContainer().startLoading();\r\n\r\n        return self.dataService.multiaction().executeButton({\r\n            idRender: properties.id,\r\n            xpath: properties.xpath || \"\",\r\n            xpathContext: xpathContext || \"\",\r\n            idPageCache: properties.idPageCache\r\n        }).always(function () {\r\n            self.getFormContainer().endLoading();\r\n            return arguments ? arguments[0] : undefined;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Refresh the current form\r\n     * @returns {}\r\n     */\r\n    refreshForm: function () {\r\n        var form = this.getFormContainer();\r\n        form.refreshForm(this.properties.id);\r\n    },\r\n\r\n    /**\r\n     * Process the button actions workflow\r\n     * @returns {}\r\n     */\r\n    processButton: function () {\r\n        var self = this;\r\n\r\n        if (self.properties.editable) {\r\n            // Save the form prior opening the dialog\r\n            self.runButtonAction();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Triggers the render change event\r\n     * @param {} params\r\n     * @returns {}\r\n     */\r\n    triggerRenderChange: function (params) {\r\n        var self = this;\r\n        params = params || {};\r\n\r\n        var pressed = params.pressed || false;\r\n\r\n        self.triggerHandler(\"renderchange\", {render: self, pressed: pressed});\r\n    },\r\n\r\n    /**\r\n     * Run button actions\r\n     * @returns {}\r\n     */\r\n    runButtonAction: function () {\r\n        var self = this;\r\n\r\n        // Save the form prior opening the dialog\r\n        self.getFormContainer().clearValidationMessages();\r\n\r\n        self.saveForm().pipe(function () {\r\n            return self.executeButton();\r\n        }).done(function (result) {\r\n\r\n            if (result == null || result == true || result.result === \"success\" || result.type === \"success\") {\r\n                return self.refreshForm();\r\n            } else if (result.type === \"validationMessages\") {\r\n                try {\r\n                    // Add validation messages\r\n                    self.getFormContainer().addValidationMessage(result.messages);\r\n                } catch (e) {\r\n                    // bizagi.showMessageBox(result.messages, \"Error\"); // TODO\r\n                }\r\n            }\r\n        }).fail(function (a, b, message) {\r\n            // Add error messages\r\n            try {\r\n                self.getFormContainer().addErrorMessage(message);\r\n            } catch (e) {\r\n                // bizagi.showMessageBox(message, \"Error\"); // TODO\r\n            }\r\n        });\r\n    },\r\n\r\n    processLayout: function (isLabelFormat, format) {\r\n        if (isLabelFormat) {\r\n            this.changeBackgroundColor(format.background);\r\n            this._super(!isLabelFormat, format);\r\n        }\r\n    },\r\n\r\n    changeBackgroundColor: function (color) {\r\n        if (typeof color === \"undefined\") return this;\r\n\r\n        if (color !== \"none\") {\r\n            this.getElementsToStylize(this.getControl()).style(\"background\", color, \"important\");\r\n        } else {\r\n            this.getElementsToStylize(this.getControl()).css(\"background\", \"\");\r\n        }\r\n\r\n        return this;\r\n    },\r\n\r\n    getElementsToStylize: function ($context) {\r\n        return $(\"input\", $context);\r\n    },\r\n\r\n    /**\r\n     *  Method to determine if the render value can be sent to the server or not\r\n     * @returns {}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render Fileprint Class\r\n *   Author: Christian Collazos\r\n *   Comments:\r\n *   -   This script will define basic stuff for fileprint renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.fileprint\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.caption = (properties.caption && properties.caption != \" \")? properties.caption : \"render-fileprint-property-caption\";\r\n        properties.filesCount = properties.filesCount ? properties.filesCount : 0;\r\n\r\n        // set default value from normal to value\r\n        properties.displayType = \"value\";\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n\r\n        // A button cannot be required\r\n        properties.required = false;\r\n    },\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"fileprint\");\r\n\r\n        return $.fasttmpl(template, {\r\n            caption: properties.caption\r\n        });\r\n    },\r\n    /*\r\n    *   Method to render non editable values\r\n    */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n\r\n        // Executes the same template than normal render\r\n        return self.renderControl();\r\n    },\r\n\r\n    /*\r\n    *   get the fileprint url\r\n    */\r\n    getFilePrintUrl: function (disposition) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.getFilePrintUrl({\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext || \"\",\r\n            idPageCache: properties.idPageCache,\r\n            disposition: disposition,\r\n            sessionId: self.getSessionId()\r\n        });\r\n\r\n    },\r\n\r\n    /*\r\n    *   Refresh the current form\r\n    */\r\n    refreshForm: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var form = self.getFormContainer();\r\n        form.refreshForm(properties.id);\r\n    },\r\n\r\n     /*\r\n    *   Saves the form\r\n    */\r\n    saveForm: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        return form.saveForm();\r\n    }\r\n});","/**\r\n *   Name: Bizagi Render Simple Link Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for link renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.link\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Set properties\r\n        var properties = this.properties;\r\n        properties.required = false;\r\n        properties.displayType = \"value\";\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"link\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {\r\n            displayName: self.properties.displayName,\r\n            align: self.properties.valueAlign,\r\n            editable: self.properties.editable\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        // Executes the same template than normal render\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Automatically this render is valid, so we can't check a required link\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Do nothing\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        return false;\r\n    }\r\n\r\n});","/*\r\n *   Name: BizAgi Render Radio Class\r\n *   Author: Ivan Ricardo Taimal Narvaez\r\n *   Comments:\r\n *   -   This script will define basic stuff for radio renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.checkList\", {}, {\r\n\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.horizontal = bizagi.util.parseBoolean(properties.horizontal) || false;\r\n        self.setValue(properties.items);\r\n        self.updateOriginalValue();\r\n    },\r\n\r\n    /*\r\n     *   Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n\r\n        // Call base\r\n        self._super();\r\n        self.checkListGroup = $(\".ui-bizagi-render-checkList .ui-bizagi-render-checkList-item\", control);\r\n    },\r\n\r\n    /*\r\n     *   Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(self.getTemplateName());\r\n        var items = self.properties.items || [];\r\n\r\n        var html = $.fasttmpl(template, $.extend(self.getTemplateParams(), {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            unique: bizagi.util.randomNumber(10000, 1000000),\r\n            idPageCache: properties.idPageCache,\r\n            items: items\r\n        }));\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     *   Gets the template used by the combo render\r\n     *   can be overriden in subclasses to reuse logic and just change the template\r\n     */\r\n    getTemplateName: function () {\r\n        return \"checkList\";\r\n    },\r\n\r\n    /*\r\n     *   Determines if we need to show the empty node or not\r\n     *   Can be overriden to change behaviour\r\n     */\r\n    showEmpty: function () {\r\n        return false;\r\n    },\r\n\r\n    /*\r\n     *   Determines if we need to show the current data regardless if it belongs to data or not\r\n     *   Can be overriden to change behaviour\r\n     */\r\n    showCurrentData: function () {\r\n        return false;\r\n    },\r\n\r\n    /*\r\n     *   Adds custom parameters to process the template\r\n     */\r\n    getTemplateParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return {\r\n            vertical: !properties.horizontal\r\n        };\r\n    },\r\n    /*\r\n     * Cleans current data\r\n     */\r\n    cleanData: function () {\r\n\r\n    },\r\n\r\n    setValue: function (value) {;\r\n        this.value = bizagi.clone(value);\r\n    },\r\n\r\n    getValue: function (data) {;\r\n        return this.value || [];\r\n    }\r\n\r\n});\r\n\r\n","/*\r\n*   Name: BizAgi Render Layout Render Class\r\n*   Author: Andrés Fernando Muñoz\r\n*   Comments:\r\n*   -   This script will define a base layout render class with common stuff related to all renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutRender\", {}, {\r\n\t/*\r\n\t *   Returns the html templated element\r\n\t */\r\n\trenderElement: function (template) {\r\n\t\tvar self = this;\r\n\t\tvar properties = self.properties;\r\n\t\tvar form = self.getFormContainer();\r\n\t\t// Start rendering deferred\r\n\t\tself.renderingDeferred = new $.Deferred();\r\n\r\n\t\t// Set render template\r\n\t\ttemplate = template || \"render-layout\";\r\n\t\tvar renderTemplate = self.renderFactory.getTemplate(template);\r\n\r\n\t\t// Resolve render label\r\n\t\tvar label = properties.displayName;\r\n\t\tif (typeof label == \"string\") {\r\n\t\t\tlabel = label.replaceAll(\"&\", \"&amp;\");\r\n\t\t\tlabel = label.replaceAll(\"$\", \"&#36;\");\r\n\t\t\tlabel = label.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\r\n\t\t\tlabel = label.replaceAll(\"\\\"\", \"&#34;\").replaceAll(\"'\", \"&#39;\").replaceAll(\"/\", \"&#47;\");\r\n\t\t\tlabel = label.replaceAll(\"\\\\n\", \"<br/>\");\r\n\t\t\tlabel = label.replaceAll(\"\\n\", \"<br/>\");\r\n\t\t}\r\n\r\n\t\t// Render template\r\n\t\tvar html = $.fasttmpl(renderTemplate, {\r\n\t\t\tlabel: label,\r\n\t\t\tisExtendedText: (properties.type == \"text\" && properties.isExtended),\r\n\t\t\torientation: properties.orientation,\r\n\t\t\tuniqueId: properties.uniqueId,\r\n\t\t\tid: properties.id,\r\n\t\t\tisDesign: self.getMode() === \"design\",\r\n\t\t\tmessageValidation: properties.messageValidation,\r\n\t\t\tprintVersion: form.params.printversion,\r\n\t\t\tcssClass: properties.cssclass || \"\",\r\n\t\t\thide: properties.hide\r\n\t\t});\r\n\r\n\t\t// Render internal control html\r\n\t\tvar result = self.internalRenderControl();\r\n\t\tif (!result) {\r\n\t\t\tresult = \"\";\r\n\t\t}\r\n\r\n\t\t// Check if this is an async element or not\r\n\t\tvar async = typeof (result) === \"object\" && result.done;\r\n\t\tif (!async) {\r\n\t\t\thtml = self.replaceControlHtml(html, result);\r\n\r\n\t\t} else {\r\n\t\t\tif (result.state() === \"resolved\") {\r\n\t\t\t\t// Fetch resolved result\r\n\t\t\t\thtml = self.replaceControlHtml(html, self.resolveResult(result));\r\n\t\t\t\tself.asyncRenderDeferred = null;\r\n\t\t\t} else {\r\n\t\t\t\t// Wait for result\r\n\t\t\t\tself.asyncRenderDeferred = result;\r\n\t\t\t\thtml = self.replaceControlHtml(html, \"\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn html;\r\n\t},\r\n\r\n    /*\r\n    *   Template method to get the control element\r\n    */\r\n\tgetControl: function () {\r\n\t\tvar self = this;\r\n\t\tif (!self.control || (self.control instanceof jQuery && self.control.length === 0)) {\r\n\t\t\tself.control = self.element;\r\n\t\t}\r\n\t\tif (!self.control || self.control.length == 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn self.control;\r\n\t},\r\n\r\n    /*\r\n    * Customizes the font italic style *\r\n    */\r\n\tchangeFontItalic: function (italic) {\r\n\t\tif (bizagi.util.parseBoolean(italic)) {\r\n\t\t\tthis.getControl().css(\"font-style\", \"italic\", \"!important\");\r\n\t\t} else {\r\n\t\t\tthis.getControl().css(\"font-style\", \"normal\", \"!important\");\r\n\t\t}\r\n\t\treturn this;\r\n\t},\r\n\r\n    /*\r\n    * Customizes the font underline\r\n    */\r\n\tchangeFontUnderline: function (underline) {\r\n\t\tvar valueFormat = this.properties.valueFormat || {},\r\n\t\t\tvaluestrikethru = bizagi.util.parseBoolean(valueFormat.strikethru) ? \"line-through \" : \"\";\r\n\r\n\t\tif (bizagi.util.parseBoolean(underline)) {\r\n\t\t\tthis.getControl().css(\"text-decoration\", valuestrikethru + \"underline\", \"!important\");\r\n\t\t} else {\r\n\t\t\tthis.getControl().find(\"*\").each(function (i, element) {\r\n\t\t\t\t$(element).css(\"text-decoration\", valuestrikethru, \"!important\");\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\treturn this;\r\n\t}\r\n});","/*\r\n*   Name: BizAgi render layout Image Class\r\n*   Author: Andrés Fernando Muñoz\r\n*   Comments:\r\n*   -   This script will define basic stuff for non editable image control inside templates\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutImage\", { }, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this,\r\n            mode = self.getMode(),\r\n            useDefaultImage = false,\r\n            valueObj = self.properties.value || {},\r\n            uri= \"\";\r\n\r\n        //\r\n        var templateUri = self.renderFactory.getTemplate(\"layout-image\");\r\n\r\n        //Solucion temporal mientras se ajusta la respuesta del servicio cambiar despues de demo de 21/07/2015\r\n        /*if (value.value && value.value !== \"\" && value.value.length > 100){\r\n            var template64 = self.renderFactory.getTemplate(\"layout-image64\");\r\n            return $.fasttmpl(template64, { url: value.value, useDefaultImage: useDefaultImage });\r\n        }*/\r\n\r\n        /* if (mode === 'execution' && valueObj.value && valueObj.value.length > 0) {\r\n            uri = self.getImageUri();\r\n        }\r\n        else{\r\n            useDefaultImage = true;\r\n        } */\r\n\r\n        return $.fasttmpl(templateUri, {useDefaultImage: true });\r\n    },\r\n\r\n    /**\r\n     * Gets the base 64 image, specify in each device in order to change the size\r\n     */\r\n    getImage64: function () {\r\n        var self = this;\r\n        //Gets the real value of the image\r\n        var params = {\r\n            xpath: self.properties.xpath,\r\n            entity: self.value.guid,\r\n            surrogateKey: self.value.surrogateKey,\r\n            width: 96,\r\n            height: 96\r\n        };\r\n\r\n        return self.dataService.getEntityImage64(params);\r\n    },\r\n\r\n    /**\r\n     * Gets the url to get the array image, specify in each device in order to change the size\r\n     */\r\n    getImageUri: function () {\r\n        var self = this;\r\n\r\n        var map = {\r\n            entity: self.value.guid,\r\n            surrogateKey: self.value.surrogateKey,\r\n            xpath: self.properties.xpath,\r\n            width: 96,\r\n            height: 96,\r\n            hash: self.value.value\r\n        };\r\n\r\n        return self.dataService.serviceLocator.getUrl(\"render-entity-layout-imageByteArray\").replaceMultiple(map);\r\n    }\r\n\r\n});","/*\r\n *   Name: BizAgi Render Layout Simple Link Class\r\n *   Author: Andrés Fernando Muñoz\r\n *   Comments:\r\n *   -   This script will define basic stuff for non editable link renders inside templates\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutLink\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-link\");\r\n        // Render template\r\n        var html = $.fasttmpl(template, {displayName: self.properties.displayName});\r\n        return html;\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render Layout Label Class\r\n *   Author: Mauricio Sánchez\r\n *   Comments:\r\n *   -   This script will define basic stuff for labels inside templates\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutLabel\", {}, {\r\n\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        this.properties.required = false;\r\n\r\n        // Set properties\r\n        this.properties.displayType = \"label\";\r\n        this.properties.labelAlign = this.originalProperties.labelAlign || \"left\";\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n\r\n\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-label\");\r\n        var value = self.properties.displayName || self.properties.value || \"\";\r\n        // Render template\r\n        var html = $.fasttmpl(template, {value: value});\r\n        return html;\r\n    }\r\n});\r\n","/*\r\n*   Name: BizAgi Render Layout Text Class\r\n*   Author: Mauricio Sanchez\r\n*   Comments:\r\n*   -   This script will define basic stuff for text renders inside templates\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutText\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        //properties.editable = false;\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-text\");\r\n        // Render template\r\n        var html = $.fasttmpl(template, {value: self.properties.value,editable: self.properties.editable});\r\n        return html;\r\n    },\r\n    /*\r\n     *   Method to render non editable values\r\n     */\r\n    renderReadOnly: function() {\r\n        var self = this;\r\n        // Executes the same template than normal render\r\n        return self.renderControl();\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render Layout Simple Upload Class\r\n *   Author: Elkin Fernando Siabato Cruz\r\n *   Comments:\r\n *   -   This script will define basic stuff for non editable upload renders inside templates\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutUpload\", {\r\n   // Statics\r\n   BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n   BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX,\r\n   BA_PAGE_CACHE: bizagi.render.services.service.BA_PAGE_CACHE\r\n}, {\r\n   /**\r\n    * Constructor\r\n    */\r\n   init: function (params) {\r\n      // Call base\r\n      this._super(params);\r\n   },\r\n\r\n   /**\r\n    *   Update or init the element data\r\n    */\r\n   initializeData: function (data) {\r\n      var self = this;\r\n      // Call base\r\n      this._super(data);\r\n\r\n      var form = self.getFormContainer();\r\n\r\n      // Fill default properties\r\n      var properties = this.properties;\r\n\r\n      properties.editable = true;\r\n      properties.allowDelete = true;\r\n\r\n      properties.contexttype = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : \"\";\r\n      properties.allowSendInMail = properties.allowSendInMail || false;\r\n   },\r\n\r\n   /**\r\n    * Get value files by data\r\n    */\r\n   getValueFilesByData: function(properties){\r\n      var self = this;\r\n      var defer = $.Deferred();\r\n      var dataFiles;\r\n      if (properties.value.value) {//Normal entityTemplate in form QAF-2319\r\n          dataFiles = properties.value.value;\r\n      }\r\n      else {//QAF-2210\r\n          dataFiles = properties.value;\r\n      }\r\n      var valueAuxFiles;\r\n      try{\r\n         if(self.isContextContainerWidgetRender()){\r\n            valueAuxFiles = JSON.parse(\"{ \\\"files\\\": \" + dataFiles  + \"}\");\r\n            defer.resolve(properties, valueAuxFiles);\r\n         }\r\n         else{//context: my stuff\r\n            $.when(self.getDataFilesWithoutScope()).done(function(valueResult){\r\n               valueAuxFiles = JSON.parse(\"{ \\\"files\\\": \" + valueResult  + \"}\");\r\n               defer.resolve(properties, valueAuxFiles);\r\n            });\r\n         }\r\n      }\r\n      catch(err){\r\n         valueAuxFiles = JSON.parse(\"{ \\\"files\\\": []}\");\r\n         defer.resolve(properties, valueAuxFiles);\r\n         console.warn(\"Exception converting data files. Error: \", err);\r\n      }\r\n      return defer.promise();\r\n   },\r\n\r\n   isContextContainerWidgetRender: function(){\r\n      var self = this;\r\n\r\n      var formContainer = self.getFormContainer();\r\n      return formContainer.params.paramsRender && formContainer.params.paramsRender.idRender;\r\n   },\r\n\r\n\r\n   /**\r\n    * Get data files when access from My stuff\r\n    */\r\n   getDataFilesWithoutScope: function(){\r\n      var self = this;\r\n      //Gets the real value of the image\r\n      var params = {\r\n         xpath: self.properties.xpath,\r\n         entity: self.value.guid,\r\n         surrogateKey: self.value.surrogateKey\r\n      };\r\n\r\n      return self.dataService.getFilesDataForLayoutUploadControl(params);\r\n   },\r\n\r\n   /**\r\n    *   Returns the internal value\r\n    */\r\n   getValue: function () {\r\n      return this.files;\r\n   },\r\n\r\n   /**\r\n    *   Returns the xpath to be used\r\n    */\r\n   getUploadXpath: function () {\r\n      return this.properties.xpath;\r\n   }\r\n\r\n});","/*\r\n*   Name: BizAgi Render Layout Boolean Class\r\n*   Author: Alexander Mejia\r\n*   Comments:\r\n*   -   This script will define basic stuff for boolean renders inside templates\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutBoolean\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.editable = false;\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-boolean\");\r\n        // Render template\r\n        var html = $.fasttmpl(template, {value: this.properties.value});\r\n        return html;\r\n    },\r\n    /*\r\n     *   Method to render non editable values\r\n     */\r\n    renderReadOnly: function() {\r\n        var self = this;\r\n        // Executes the same template than normal render\r\n        return self.renderControl();\r\n    },\r\n\r\n    setValue: function (value, triggerEvents) {\r\n        if(value === null || value === \"\"){\r\n            this.properties.value = \"\";\r\n        }\r\n        else if (value.toString().toLowerCase() === \"true\" || value.toString().toLowerCase() === \"false\"){\r\n            this.properties.value = bizagi.util.parseBoolean(value) ? this.getResource(\"render-boolean-yes\") : this.getResource(\"render-boolean-no\");\r\n        }\r\n        this._super(this.properties.value, triggerEvents);\r\n    }\r\n});","/**\r\n * Name: BizAgi Render Layout DateTime Class\r\n * Author: Andres Fernando Muñoz\r\n * Comments:\r\n * - This script will define basic stuff for text renders inside templates\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutDateTime\", {}, {\r\n    /**\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n        var dateFormat = self.getResource(\"dateFormat\");\r\n        var timeFormat = self.getResource(\"timeFormat\");\r\n\r\n        // We will hold here the value to display\r\n        properties.displayValue = \"\";\r\n        properties.showTime = properties.showTime !== undefined ? bizagi.util.parseBoolean(properties.showTime) : false;\r\n        properties.dateFormat = properties.dateFormat || dateFormat;\r\n        properties.timeFormat = properties.timeFormat || timeFormat;\r\n        properties.fullFormat = properties.dateFormat;\r\n\r\n        // Check if it has the showtime property\r\n        if (properties.showTime) {\r\n            if (properties.fullFormat.search(/[h|H]+/ig) === -1) {\r\n                properties.fullFormat = properties.fullFormat + ' ' + properties.timeFormat;\r\n            }\r\n        }\r\n        else{\r\n            var indexHour = properties.fullFormat.search(/[h|H]+/ig);\r\n            if (indexHour !== -1) {\r\n                properties.fullFormat = properties.fullFormat.substring(0, indexHour - 1);\r\n            }\r\n        }\r\n\r\n        // Read always parameter from server in invariant format\r\n        if (properties.value) {\r\n            var date = bizagi.util.dateFormatter.getDateFromInvariant(properties.value, properties.showTime);\r\n\r\n            // Format date to current format\r\n            if (date != 0) {\r\n                var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n                self.value = properties.value; // Value must always hold the value with invariant format\r\n                properties.displayValue = bizagi.util.dateFormatter.formatDate(date, properties.fullFormat, datePickerRegional);\r\n            }\r\n            else {\r\n                self.value = null;\r\n            }\r\n        }\r\n        else {\r\n            self.value = null;\r\n            properties.value = \"\";\r\n            properties.displayValue = \"\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-date-time\");\r\n        var value = (self.properties.value === null || self.properties.value === \"\") ?  \"\" : self.properties.value;\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {value: value});\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this, dateObj;\r\n        var properties = self.properties;\r\n        var dateControl = self.getDateControl();\r\n        var INVARIANT_FORMAT = \"MM/dd/yyyy H:mm:ss\";\r\n        self.i18n = bizagi.localization.getResource(\"datePickerRegional\");\r\n\r\n        if (value.length == INVARIANT_FORMAT.length || value.length == (INVARIANT_FORMAT.length + 1)) {\r\n            dateObj = bizagi.util.dateFormatter.getDateFromInvariant(value, true);\r\n        }\r\n        else {\r\n            dateObj = bizagi.util.dateFormatter.getDateFromInvariant(value);\r\n            if (dateObj && !isNaN(Date.parse(dateObj)) && !$.isNumeric(dateObj)) {\r\n                dateObj.setHours(0, 0, 0, 0);\r\n            }\r\n\r\n        }\r\n        // Set value in input\r\n        if (value && !isNaN(Date.parse(value))) {\r\n            var formattedDateTime = bizagi.util.dateFormatter.formatDate(dateObj, properties.fullFormat, self.i18n);\r\n            dateControl.text(formattedDateTime);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Gets the date control\r\n     */\r\n    getDateControl: function () {\r\n        var self = this;\r\n        self.dateControl = $(\".ui-bizagi-render-date-time\", self.getControl());\r\n        return self.dateControl;\r\n    }\r\n});","/*\r\n*   Name: BizAgi Render Layout number Class\r\n*   Author: Andres Fernando Muñoz\r\n*   Comments:\r\n*   -   This script will define basic stuff for text renders inside templates\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutNumber\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var format = this.getResource(\"numericFormat\");\r\n\r\n        properties.allowDecimals = typeof (properties.allowDecimals) !== \"undefined\" ? bizagi.util.parseBoolean(properties.allowDecimals) : this.getDefaultAllowDecimals(properties.dataType);\r\n        properties.numDecimals = properties.allowDecimals ? (properties.numDecimals ? properties.numDecimals : (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalDigits : 2)) : 0;\r\n        properties.symbol = '';\r\n        properties.positiveFormat = format.positiveFormat;\r\n        properties.negativeFormat = format.negativeFormat;\r\n        properties.decimalSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.decimalSeparator : format.decimalSymbol;\r\n        properties.digitGroupSymbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.groupSeparator : format.digitGroupSymbol;\r\n        properties.groupDigits = this.getDefaultGroupDigits(properties.dataType);\r\n        properties.colorize = properties.colorizeOnNegative || false;\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-number\");\r\n        // Render template\r\n        var html = $.fasttmpl(template, {value: self.properties.value});\r\n        return html;\r\n    },\r\n    /*\r\n     *   Method to render non editable values\r\n     */\r\n    renderReadOnly: function() {\r\n        var self = this;\r\n        // Executes the same template than normal render\r\n        return self.renderControl();\r\n    },\r\n\r\n    /*\r\n     *   Returns the display value of the render\r\n     */\r\n    getDisplayValue: function (value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var control = self.getControl();\r\n\r\n        // Workaround to get the display value by the format currency plugin, because it requires a control\r\n        var label = $('<label/>').html(value);\r\n        var regExp2 = /[\\u20AC \\u0024\\u00A3]/;\r\n        if (!value.toString().match(regExp2)) {\r\n            label.formatCurrency(\r\n                {\r\n                    symbol: properties.symbol,\r\n                    positiveFormat: properties.positiveFormat,\r\n                    negativeFormat: properties.negativeFormat,\r\n                    decimalSymbol: properties.decimalSymbol,\r\n                    digitGroupSymbol: properties.digitGroupSymbol,\r\n                    groupDigits: properties.groupDigits,\r\n                    roundToDecimalPlace: properties.numDecimals,\r\n                    colorize: properties.colorize\r\n                });\r\n        }\r\n        return label.text();\r\n    },\r\n\r\n    /*\r\n     *   Return the allow decimals default property based on the datatype\r\n     */\r\n    getDefaultAllowDecimals: function (dataType) {\r\n        if (dataType) {\r\n            // Integer data types\r\n            if (dataType == 1 || dataType == 2 || dataType == 3 || dataType == 4 || dataType == 7) {\r\n                return false;\r\n            }\r\n            // Decimal data types\r\n            if (dataType == 6 || dataType == 8 || dataType == 10 || dataType == 11) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    /*\r\n     *   Return the group digits default property based on the datatype\r\n     */\r\n    getDefaultGroupDigits: function (dataType) {\r\n        if (dataType) {\r\n            // Integer data types\r\n            if (dataType == 1 || dataType == 2 || dataType == 3 || dataType == 4 || dataType == 7) {\r\n                return false;\r\n            }\r\n            // Decimal data types\r\n            if (dataType == 6 || dataType == 8 || dataType == 10 || dataType == 11) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n});","/*\r\n*   Name: BizAgi Render Layout Money Class\r\n*   Author: Andrés Fernando Muñoz\r\n*   Comments:\r\n*   -   This script will define basic stuff for money renders inside templates\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutMoney\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var format = this.getResource(\"numericFormat\");\r\n\r\n        // Configures symbol\r\n        properties.showsymbol = typeof (properties.showsymbol) !== \"undefined\" ? properties.showsymbol : true;\r\n\r\n        if (properties.showsymbol) {\r\n            properties.symbol = properties.currencySymbol ? properties.currencySymbol :\r\n                (typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.symbol : format.symbol);\r\n        }\r\n        else {\r\n            properties.symbol = \"\";\r\n        }\r\n        properties.groupDigits = true;\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render Layout Label Class\r\n *   Author: Mauricio Sánchez\r\n *   Comments:\r\n *   -   This script will define basic stuff for labels inside templates\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.layoutPlaceholder\", {}, {\r\n\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n                \r\n    },\r\n\r\n    /*\r\n     *   Update or init the element data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n             \r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"layout-placeholder\");\r\n        var value = self.properties.value || self.properties.displayName || \"\";\r\n        // Render template\r\n        var html = $.fasttmpl(template, {value: value});\r\n        return html;\r\n    }\r\n});\r\n","/**\r\n *   Name: Bizagi Render Geolocation control\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for geolocation renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.geolocation\", {}, {\r\n\r\n    /**\r\n     * Constructor\r\n     * @param {} data\r\n     */\r\n    init: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n        this.geolocation = window.navigator.geolocation;\r\n\r\n        var properties = this.properties;\r\n        properties.allowUpdate = bizagi.util.parseBoolean(properties.allowUpdate) === true;\r\n\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"geolocation\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, self.properties);\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param {} invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Call base\r\n        return this._super(invalidElements);\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} value\r\n     * @returns {}\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Set internal value\r\n        this.setValue(value, false);\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     * @returns {}\r\n     */\r\n    configureHandlers: function () {\r\n\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param {} succes_callback\r\n     * @param {} fail_callback\r\n     */\r\n    getCurrentPosition: function (succes_callback, fail_callback) {\r\n        var self = this;\r\n\r\n        if (typeof (self.geolocation) === \"undefined\") {\r\n            if (fail_callback)\r\n                fail_callback(bizagi.localization.getResource(\"render-control-unsuported-by-browser\").replace(\"{0}\", self.properties.type));\r\n            return;\r\n        }\r\n\r\n        var onSuccess = function (position) {\r\n            if (succes_callback)\r\n                succes_callback(position);\r\n        };\r\n\r\n        var onError = function (error) {\r\n            var strMessage = self.getErrorMessage(error);\r\n\r\n            if (fail_callback)\r\n                fail_callback(strMessage);\r\n        };\r\n\r\n        return self.geolocation.getCurrentPosition(onSuccess, onError);\r\n    },\r\n\r\n    /**\r\n     * Get message of error\r\n     * @param error\r\n     * @returns {*|string}\r\n     */\r\n    getErrorMessage: function (error) {\r\n        var strMessage = \"\";\r\n\r\n        // Check for known errors\r\n        switch (error.code) {\r\n            case error.PERMISSION_DENIED:\r\n            case 1:\r\n                strMessage = bizagi.localization.getResource(\"render-geolocation-permission-denied\");\r\n                break;\r\n            case error.POSITION_UNAVAILABLE:\r\n            case 2:\r\n                strMessage = bizagi.localization.getResource(\"render-geolocation-position-unavailable\");\r\n                break;\r\n            case error.TIMEOUT:\r\n            case 3:\r\n                strMessage = bizagi.localization.getResource(\"render-geolocation-timeout\");\r\n                break;\r\n            default:\r\n                strMessage = \"WD: \" + bizagi.localization.getResource(\"render-geolocation-permission-denied\");\r\n                break;\r\n        }\r\n\r\n        return strMessage;\r\n    },\r\n\r\n    /**\r\n     * Change precision number of coordinates\r\n     * @param data\r\n     * @returns {*}\r\n     */\r\n    performPrecision: function (data) {\r\n        var geolocation = data.split(\" \") || \"\";\r\n\r\n        if (!geolocation) return data;\r\n\r\n        try {\r\n            var latitude = parseFloat(geolocation[0].trim());\r\n            var longitude = parseFloat(geolocation[1].trim());\r\n\r\n            return latitude.toPrecision(10) + \" \" + longitude.toPrecision(10);\r\n        } catch (e) {\r\n            return data;\r\n        }\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Upload Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for uploads\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.upload\", {}, {\r\n    /***\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        var form = self.getFormContainer();\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n\r\n        var maxFileSizeOfProperty = Number(properties.maxSize) || 0;\r\n        var maxFileSizeOfUser = typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\" ? Number(BIZAGI_SETTINGS.UploadMaxFileSize) : 4091904;\r\n\r\n        properties.maxSize = maxFileSizeOfProperty || maxFileSizeOfUser;\r\n        properties.maxfiles = Number(properties.maxfiles) || 999;\r\n        properties.validExtensions = properties.validExtensions || \"\";\r\n\r\n        if (properties.validExtensions.length > 0 && properties.validExtensions.indexOf(\".\") < 0) {\r\n            var singleExtensions = properties.validExtensions.replace(/\\ /gi, '').split(\";\");\r\n            var defExtensions = [];\r\n\r\n            for (var i = 0; i < singleExtensions.length; i++) {\r\n                if (singleExtensions[i].length > 0) {\r\n                    defExtensions.push(\"*.\" + singleExtensions[i]);\r\n                } else {\r\n                    //Removes the empty element\r\n                    var index = singleExtensions.indexOf(singleExtensions[i]);\r\n                    singleExtensions.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            properties.validExtensions = defExtensions.join(\";\");\r\n        }\r\n\r\n        properties.addUrl = properties.addUrl || self.dataService.getUploadAddUrl();\r\n        properties.deleteUrl = properties.deleteUrl || undefined;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) || false;\r\n        properties.allowDelete = (bizagi.util.parseBoolean(properties.allowDelete) !== null && properties.editable) ? bizagi.util.parseBoolean(properties.allowDelete) : false;\r\n\r\n        properties.contexttype = (form.params && form.params.data && form.params.data.contextType) ? form.params.data.contextType : \"\";\r\n        properties.allowSendInMail = properties.allowSendInMail || false;\r\n\r\n        // Set files property\r\n        self.files = properties.value || [];\r\n        self.filesCount = self.files.length;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"upload\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            xpath: bizagi.util.encodeXpath(self.getUploadXpath()),\r\n            editable: properties.editable,\r\n            haveFiles: self.filesCount !== 0,\r\n            noFiles: self.filesCount === 0,\r\n            allowSendInMail: properties.allowSendInMail\r\n        });\r\n\r\n        // Render current children\r\n        var items = \"\";\r\n        for (var i = 0; i < self.filesCount; i++) {\r\n            var file = {id: self.files[i][0], fileName: self.files[i][1]};\r\n            var item = self.renderUploadItem(file);\r\n\r\n            items += item;\r\n        }\r\n\r\n        html = self.replaceFilesHtml(html, items);\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Renders a single upload item\r\n     * @param file\r\n     * @returns {jQuery|*}\r\n     */\r\n    renderUploadItem: function (file) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var itemTemplate = self.getTemplateItemName();\r\n        var template = self.renderFactory.getTemplate(itemTemplate);\r\n\r\n        // Don't render urls when not running in execution mode\r\n        var url = !self.isExecutionMode() ? \"\" : self.buildItemUrl(file); // TODO: Review if need it: javascript:void(0);\r\n\r\n        var html = $.fasttmpl(template, {\r\n            id: file.id,\r\n            mode: mode,\r\n            url: url,\r\n            allowDelete: self.properties.allowDelete,\r\n            filename: file.fileName,\r\n            editable: self.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (file) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n\r\n        return self.dataService.getUploadFileUrl({\r\n            idRender: properties.id,\r\n            xpath: self.getUploadXpath(),\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            fileId: file.id,\r\n            sessionId: form.properties.sessionId,\r\n            contexttype: properties.contexttype\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Replaces a {{files}} tag in the container for the specified \"replace\" element\r\n     * @param html\r\n     * @param replace\r\n     * @returns {*}\r\n     */\r\n    replaceFilesHtml: function (html, replace) {\r\n        return html.replace(\"{{files}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Removes a file from the upload control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    deleteUploadItem: function (item, fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var xpath = self.getUploadXpath() + (bizagi.util.isNumeric(fileId) ? \"[id=\" + fileId + \"]\" : \"[id='\" + fileId + \"']\");\r\n\r\n        return self.dataService.deleteUploadFile({\r\n            url: properties.deleteUrl,\r\n            idRender: properties.id,\r\n            xpath: xpath,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            contexttype: properties.contexttype\r\n        }).pipe(function () {\r\n\r\n            // Subtract counter\r\n            self.filesCount = self.filesCount - 1;\r\n\r\n            // Remove from local collection\r\n            self.files = $.grep(self.files, function (fileItem) {\r\n                return fileItem[0] != fileId;\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n\r\n        // Set files property\r\n        self.files = value || []; // Dont remove this line\r\n        self.filesCount = self.files.length;\r\n\r\n        // Call base\r\n        self._super(value, triggerEvents);\r\n    },\r\n\r\n    /**\r\n     * Returns the internal value\r\n     * @returns {*}\r\n     */\r\n    getValue: function () {\r\n        return this.files;\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @returns {boolean}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n        var bValid = true;\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (properties.required && properties.editable) {\r\n            var newRow = self.grid && self.grid.isFromCreatedRow.apply(self);\r\n\r\n            if (self.filesCount <= 0 && !newRow) {\r\n                var inlineEdit = self.grid ? self.grid.properties.inlineEdit : true;\r\n\r\n                if (inlineEdit) {\r\n                    message = self.getResource(\"render-required-upload\").replaceAll(\"#label#\", properties.displayName);\r\n                    invalidElements.push({xpath: properties.xpath, message: message});\r\n                    bValid = false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Build add params to send to the server\r\n     */\r\n    buildAddParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var data = {};\r\n        var prefix = self.Class.BA_CONTEXT_PARAMETER_PREFIX;\r\n\r\n        data[prefix + \"xpath\"] = self.getUploadXpath();\r\n        data[prefix + \"idRender\"] = properties.id;\r\n        data[prefix + \"xpathContext\"] = properties.xpathContext;\r\n        data[prefix + self.Class.BA_PAGE_CACHE] = properties.idPageCache;\r\n        data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = form.properties.sessionId;\r\n        data[prefix + \"contexttype\"] = properties.contexttype;\r\n\r\n        try {\r\n            if (typeof (BIZAGI_SESSION_NAME) !== \"undefined\") {\r\n                data[BIZAGI_SESSION_NAME] = form.properties.sessionId\r\n            } else {\r\n                data[\"JSESSIONID\"] = form.properties.sessionId;\r\n            }\r\n        } catch (e) {\r\n            data[\"JSESSIONID\"] = form.properties.sessionId;\r\n        }\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getUploadXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    checkRequired: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        if (bizagi.util.parseBoolean(properties.required)) {\r\n            if (self.grid && self.grid.properties.inlineAdd === true) {\r\n                if (!self.hasValue() && !(self.getControl().parents(\"tr\").data(\"new-row\"))) {\r\n                    self.setRenderRequired(invalidElements, properties);\r\n                    return false;\r\n                }\r\n            } else {\r\n                if (!self.hasValue()) {\r\n                    self.setRenderRequired(invalidElements, properties);\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    setRenderRequired: function (invalidElements, properties) {\r\n        var self = this;\r\n        var message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n        invalidElements.push({xpath: properties.xpath, message: message});\r\n    },\r\n\r\n    /**\r\n     * Templates\r\n     */\r\n    getTemplateItemName: function () {\r\n        return \"uploadItem\";\r\n    }\r\n});","/**\r\n *   Name: Bizagi Render ECM upload control\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for ECM Control\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.ecm\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        properties.maxSize = Number(properties.maxSize) || (typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\" ? Number(BIZAGI_SETTINGS.UploadMaxFileSize) : properties.maxSize = Number(properties.maxSize) || 4091904);\r\n        properties.maxFiles = Number(properties.maxfiles) || 999;\r\n        properties.validExtensions = properties.validExtensions || \"\";\r\n\r\n        if (properties.validExtensions.length > 0 && properties.validExtensions.indexOf(\".\") < 0) {\r\n            var singleExtensions = properties.validExtensions.split(\";\");\r\n            for (var i = 0; i < singleExtensions.length; i++) {\r\n                singleExtensions[i] = \"*.\" + singleExtensions[i];\r\n            }\r\n            properties.validExtensions = singleExtensions.join(\";\");\r\n        }\r\n\r\n        properties.addUrl = self.dataService.serviceLocator.getUrl(\"render-ecm-upload-url\") + \"?action=uploadECMFile\";\r\n        properties.editUrl = self.dataService.serviceLocator.getUrl(\"render-ecm-upload-url\") + \"?action=updateECMFileContent\";\r\n        properties.deleteUrl = properties.deleteUrl || undefined;\r\n        properties.allowDelete = bizagi.util.parseBoolean(properties.allowDelete) !== null ? bizagi.util.parseBoolean(properties.allowDelete) : true;\r\n        properties.q_xpath = bizagi.util.encodeXpath(properties.xpath);\r\n        properties.showMetadata = properties.showMetadata === undefined || properties.showMetadata === null ? true : bizagi.util.parseBoolean(properties.showMetadata);\r\n\r\n        var dateFormat = this.getResource(\"dateFormat\");\r\n        var timeFormat = this.getResource(\"timeFormat\");\r\n\r\n        // We will hold here the value to display\r\n        properties.displayValue = \"\";\r\n        properties.showTime = properties.showTime !== undefined ? bizagi.util.parseBoolean(properties.showTime) : false;\r\n        properties.dateFormat = properties.dateFormat || dateFormat;\r\n        properties.timeFormat = properties.timeFormat || timeFormat;\r\n        properties.fullFormat = properties.dateFormat;\r\n\r\n        // Set files property\r\n        self.files = properties.value || [];\r\n        self.filesCount = self.files.length;\r\n\r\n        properties.xpathContext = this.parent.properties.xpathContext || properties.xpathContext || \"\";\r\n\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @param listControl\r\n     * @param fileProperties\r\n     * @returns {*}\r\n     */\r\n    renderControl: function (listControl, fileProperties) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"ecm\");\r\n        var mode = self.getMode();\r\n        var defer = new $.Deferred();\r\n\r\n        properties.value = (fileProperties) ? [[fileProperties.idFileUpload, fileProperties.fileName]] : self.value;\r\n        var html = $.fasttmpl(template, properties, {\r\n            getFileExtension: self.getFileExtension,\r\n            isImage: self.isImage\r\n        });\r\n\r\n        if (self.properties.value != undefined) {\r\n\r\n            var lengthValues = self.properties.value.length;\r\n\r\n            if (lengthValues === 0) {\r\n                defer.resolve(html);\r\n            }\r\n\r\n            $.each(self.properties.value, function (key, value) {\r\n                var data = {};\r\n\r\n                data.idFileUpload = value[0];\r\n                data.fileName = value[1];\r\n                data.idPageCache = self.properties.idPageCache;\r\n                data.xpathContext = self.getXpathContext();\r\n                data.xPath = self.properties.xpath;\r\n                data.editable = self.properties.editable;\r\n                data.idAttrib = self.properties.idAttrib;\r\n\r\n                var form = self.getFormContainer();\r\n                if (form && form.properties && form.properties.sessionId) {\r\n                    data.sessionId = form.properties.sessionId;\r\n                }\r\n\r\n                if (mode === \"execution\") {\r\n                    $.when(self.renderFileLayout(data, fileProperties)).done(function (item) {\r\n                        lengthValues--;\r\n\r\n                        if (bizagi.loader.productBuildToAbout && bizagi.loader.productBuildToAbout.indexOf(\"10.4\") === 0) {\r\n                            item = item.replaceAll(\"Handlers/MetadataFile\", \"Handlers/Metadata\");\r\n                        }\r\n\r\n                        html = self.replaceItemHtml(html, self.properties.id + \"-\" + data.idFileUpload, item);\r\n                        if (lengthValues === 0) {\r\n                            defer.resolve(html);\r\n                        }\r\n                    });\r\n\r\n                }\r\n            });\r\n        } else {\r\n            defer.resolve(html);\r\n        }\r\n        return defer.promise();\r\n    },\r\n\r\n    replaceItemHtml: function (html, id, replace) {\r\n        return html.replace(\"{{\" + id + \"}}\", replace);\r\n    },\r\n\r\n    renderFileLayout: function (data, fileProperties) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var metadataTemplate = self.renderFactory.getTemplate(\"ecm-metadata\");\r\n\r\n        var deferred = $.Deferred();\r\n\r\n        $.when(self.dataService.getECMMetadata(data),\r\n            (fileProperties) ? [fileProperties] : self.dataService.getFileProperties(data)\r\n        ).done(function (metaData, fileProperties) {\r\n\r\n            fileProperties[0].data = data;\r\n\r\n            // Make xpath context\r\n            fileProperties[0].xpathContext = fileProperties[0].xpathContext || form.properties.xpathContext || \"\";\r\n            fileProperties[0].xpath = self.properties.xpath;\r\n\r\n            metaData[0].filename = data.fileName;\r\n            metaData[0].url = self.buildItemUrl(fileProperties[0]);\r\n\r\n            // Define File Properties\r\n            metaData[0].ecm_ecmStatus = fileProperties[0].ecmStatus;\r\n            metaData[0].ecm_isVisible = fileProperties[0].isVisible;\r\n            metaData[0].ecm_allowUpdateMetadata = fileProperties[0].allowUpdateMetadata;\r\n            metaData[0].ecm_allowDelete = fileProperties[0].allowDelete;\r\n            metaData[0].ecm_allowUpdateContent = fileProperties[0].allowUpdateContent;\r\n            metaData[0].ecm_allowView = fileProperties[0].allowView;\r\n            metaData[0].ecm_allowCheckOut = fileProperties[0].allowCheckOut;\r\n            metaData[0].ecm_allowCancelCheckOut = fileProperties[0].allowCancelCheckOut;\r\n            metaData[0].ecm_allowEdit = data.editable && fileProperties[0].allowEdit;\r\n            metaData[0].ecm_ecmStatus = fileProperties[0].ecmStatus;\r\n            metaData[0].idFileUploads = fileProperties[0].idFileUpload;\r\n            metaData[0].xpath = fileProperties[0].xpath;\r\n            metaData[0].value = bizagi.util.parseBoolean(fileProperties[0].value);\r\n            metaData[0].deviceType = bizagi.detectDevice();\r\n\r\n            var html = $.fasttmpl(metadataTemplate, metaData[0]);\r\n            deferred.resolve(html);\r\n        });\r\n\r\n        return deferred.promise();\r\n    },\r\n\r\n    isImage: function (file) {\r\n        var extension = this.getFileExtension(file);\r\n        var image = [\"JPG\", \"JPEG\", \"GIF\", \"PNG\", \"BMP\"];\r\n\r\n        return (image.indexOf(extension.toUpperCase()) > -1) ? true : false;\r\n    },\r\n\r\n    replaceFilesHtml: function (html, replace) {\r\n        return html.replace(\"{{files}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (file) {\r\n        var self = this;\r\n        var p_sessionId = bizagi.cookie(\"JSESSIONID\");\r\n\r\n        if(!file.data) {\r\n            file.data = {fileName: file.fileName, idAttrib: file.idAttrib}\r\n        }\r\n\r\n        return self.dataService.getECMFileUrl({\r\n            idFileUpload: file.idFileUpload,\r\n            xPath: file.xpath || file.xPath,\r\n            xpathContext: file.xpathContext,\r\n            idAttrib: file.data.idAttrib,\r\n            idPageCache: self.properties.idPageCache,\r\n            fileName: file.data.fileName.replace(/ /g, \"_\"),\r\n            p_sessionId: p_sessionId,\r\n            sessionId: file.data.sessionId || \"\"\r\n        });\r\n    },\r\n\r\n    buildAddParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var data = {};\r\n\r\n        // data.fileExt = properties.validExtensions;\r\n        // data.fileDesc = properties.validExtensions ? self.getResource(\"render-upload-allowed-extensions\") + properties.validExtensions : \"\";\r\n        data.xPath = properties.xpath;\r\n        data.idAttrib = properties.idAttrib;\r\n        data.xpathContext = properties.xpathContext;\r\n        data.metaValues = [];\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = properties.idPageCache;\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Get name of file extension\r\n     * @param fileName\r\n     * @returns {*}\r\n     */\r\n    getFileExtension: function (fileName) {\r\n        fileName = fileName || \"\";\r\n        return fileName.split(\".\").pop();\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Call base\r\n        self._super(value, triggerEvents);\r\n\r\n        // Set files property\r\n        self.files = properties.value || [];\r\n        self.filesCount = (self.files.length) ? self.files.length : properties.value;\r\n    },\r\n\r\n    /**\r\n     * Gets xpath context\r\n     * @returns {*|string}\r\n     */\r\n    getXpathContext: function () {\r\n        return this.properties.xpathContext || \"\";\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getUploadXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Removes a file from the ECM control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    deleteUploadItem: function (item, fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var params = {\r\n            idFileUpload: fileId,\r\n            xPath: properties.xpath,\r\n            idAttrib: properties.idAttrib,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: self.getXpathContext()\r\n        };\r\n\r\n        return self.dataService.deleteECMFile(params).pipe(function () {\r\n\r\n            // Subtract counter\r\n            self.filesCount = self.filesCount - 1;\r\n\r\n            // Remove from local collection\r\n            self.files = $.grep(self.files, function (fileItem) {\r\n                return fileItem[0] != fileId;\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Lock a file from the ECM control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    lockUploadItem: function (fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var params = {\r\n            idFileUpload: fileId,\r\n            xPath: properties.xpath,\r\n            idAttrib: properties.idAttrib,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: self.getXpathContext()\r\n        };\r\n\r\n        return self.dataService.checkOutFile(params);\r\n    },\r\n\r\n    /**\r\n     * Unlock a file from the ECM control\r\n     * @param item\r\n     * @param fileId\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    unlockUploadItem: function (fileId) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var params = {\r\n            idFileUpload: fileId,\r\n            xPath: properties.xpath,\r\n            idAttrib: properties.idAttrib,\r\n            idPageCache: properties.idPageCache,\r\n            xpathContext: self.getXpathContext()\r\n        };\r\n\r\n        return self.dataService.cancelCheckOut(params);\r\n    }\r\n\r\n});","/**\r\n *   Name: Bizagi Render Yes-no Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for yes-no renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.yesno\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.value = typeof (properties.value) != \"undefined\" ? bizagi.util.parseBoolean(properties.value) : null;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"yesno\");\r\n        var randomId = bizagi.util.randomNumber(100, 10000000);\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {\r\n            id: randomId,\r\n            editable: this.properties.editable\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Gets the display value of the render\r\n     */\r\n    getDisplayValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.parseBoolean(value) === true) {\r\n            return this.getResource(\"render-boolean-yes\");\r\n        } else if (bizagi.util.parseBoolean(value) === false) {\r\n            return this.getResource(\"render-boolean-no\");\r\n        } else {\r\n            return \"\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if a render has no value for required validation\r\n     * @returns {boolean}\r\n     */\r\n    hasValue: function () {\r\n        var value = this.getValue();\r\n\r\n        if (bizagi.util.isEmptyValue(value)) return false;\r\n        return bizagi.util.parseBoolean(value) !== null;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Letter Class\r\n*   Author: Diego Parra\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for letter renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.letter\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Create a variable to check if the letter has been opened when editable\r\n        this.letterOpened = false;\r\n    },\r\n\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {}\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"letter\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template);\r\n    },\r\n\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"letter.readonly\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template);\r\n    },\r\n\r\n    /**\r\n     * Returns the letter content from the server\r\n     */\r\n    getLetterContent: function () {\r\n        // Set flag to true\r\n        this.letterOpened = true;\r\n\r\n        return this.dataService.getLetterContent({\r\n            url: this.properties.getUrl,\r\n            idRender: this.properties.id,\r\n            xpath: this.getXpath(),\r\n            xpathContext: this.getContextXpath(),\r\n            idPageCache: this.properties.idPageCache\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Sends the content to the server in order to save\r\n     * @param {} content\r\n     */\r\n    saveLetterContent: function (content) {\r\n        return this.dataService.saveLetterContent({\r\n            url: this.properties.saveUrl,\r\n            idRender: this.properties.id,\r\n            xpath: this.getXpath(),\r\n            xpathContext: this.getContextXpath(),\r\n            idPageCache: this.properties.idPageCache,\r\n            content: content\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Returns the letter content from the server\r\n     */\r\n    getCanGenerateLetter: function () {\r\n        return this.dataService.getCanGenerateLetter({\r\n            idRender: this.properties.id,\r\n            xpath: this.getXpath(),\r\n            xpathContext: this.getContextXpath(),\r\n            idPageCache: this.properties.idPageCache\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Saves the form\r\n     */\r\n    saveForm: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        return form.saveForm();\r\n    },\r\n\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var message;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) == false) return true;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) == false) return true;\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (properties.required) {\r\n            if (self.letterOpened == false) {\r\n                message = self.getResource(\"render-letter-required-text\").replaceAll(\"#label#\", properties.displayName);\r\n                invalidElements.push({xpath: properties.xpath, message: message});\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns the current xpath\r\n     */\r\n    getXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Returns the current context xpath\r\n     */\r\n    getContextXpath: function () {\r\n        return this.properties.xpathContext;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Form Link Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for form link renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.formLink\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Set properties\r\n        var properties = this.properties;\r\n\r\n        properties.displayType = \"value\";\r\n        properties.maximized = bizagi.util.parseBoolean(this.properties.maximized) != null ? bizagi.util.parseBoolean(this.properties.maximized) : false;\r\n\r\n        // Calculate layout properties\r\n        this.calculateInitialLayoutProperties();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"formLink\");\r\n\r\n        // Render template\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            align: properties.valueAlign,\r\n            displayName: properties.displayName,\r\n            value: properties.value,\r\n            editable: properties.editable,\r\n            likeButton: bizagi.util.parseBoolean(properties.likeButton) || false\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*|*|jQuery}\r\n     */\r\n    renderReadOnly: function () {\r\n        // Executes the same template than normal render\r\n        return this.renderControl();\r\n\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed\r\n     */\r\n    postRender: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this._super();\r\n        this.getLabel().addClass(\"bz-form-label--hidden\");\r\n    },\r\n\r\n    /**\r\n     * Submits a edit request for a link display form\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    submitEditRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Don't send request when the link is not editable\r\n        if (!properties.editable && !properties.value)\r\n            return null;\r\n\r\n        return self.dataService.editLinkForm({\r\n            url: properties.editUrl,\r\n            idRender: properties.id,\r\n            xpath: self.getFormLinkXpath(),\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Submits a link save request for the displayed form\r\n     * @param data\r\n     * @returns {*} Returns a deferred\r\n     */\r\n    submitSaveRequest: function (data) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Don't send request when the link is not editable\r\n        if (!properties.editable && !properties.value)\r\n            return null;\r\n\r\n        var xpath = self.getFormLinkXpath();\r\n        var xpathContext = xpath;\r\n\r\n        if (typeof (properties.xpathContext) !== \"undefined\" && properties.xpathContext !== \"\") {\r\n            xpathContext = xpath ? properties.xpathContext + \".\" + xpath : properties.xpathContext;\r\n        }\r\n\r\n        return self.dataService.saveLinkForm({\r\n            url: properties.saveUrl,\r\n            idRender: properties.id,\r\n            xpathContext: xpathContext,\r\n            submitData: data\r\n        }).done(function (response) {\r\n            var executeSubmitOnChange = true;\r\n\r\n            if (response && response.type === \"validationMessages\")\r\n                executeSubmitOnChange = false;\r\n\r\n            if (executeSubmitOnChange)\r\n                self.submitOnChange({});\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Submits a rollback request\r\n     * @param params\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitRollbackRequest: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function(){\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value){\r\n                return null;\r\n            }\r\n            else{\r\n                return self.dataService.rollbackLinkForm({\r\n                    url: properties.rollbackUrl,\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: params ? params.idPageCache : properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Submits a commit request\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitCommitRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function(){\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value){\r\n                return null;\r\n            } else {\r\n                return self.dataService.commitLinkForm({\r\n                    url: properties.commitUrl,\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Submits a checkpoint request\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitCheckpointRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function(){\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value){\r\n                return null;\r\n            } else {\r\n                return self.dataService.sendCheckpoint({\r\n                    url: properties.checkpointUrl,\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Submits a submitData request\r\n     * @returns {*} Returns a deferred when done\r\n     */\r\n    submitDataRequest: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return $.when(function () {\r\n            // Don't send request when the link is not editable\r\n            if (!properties.editable && !properties.value) {\r\n                return null;\r\n            } else {\r\n\r\n\r\n                return self.dataService.submitData({\r\n                    url: properties.checkpointUrl,\r\n                    action: \"SUBMITDATA\",\r\n                    idRender: properties.id,\r\n                    xpath: self.getFormLinkXpath(),\r\n                    xpathContext: properties.xpathContext,\r\n                    idPageCache: properties.idPageCache\r\n                });\r\n            }\r\n        }());\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     */\r\n    isValid: function (invalidElements) {\r\n        // Automatically this render is valid, so we can't check a required link\r\n    },\r\n\r\n    /**\r\n     * Get Form Link xpath to use\r\n     * @returns {*}\r\n     */\r\n    getFormLinkXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        // Don't do anything\r\n    }\r\n\r\n});\r\n\r\n","/**\r\n *   Name: Bizagi Render Document Generator\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for document generator render\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.document\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        var properties = this.properties;\r\n\r\n        properties.validate = bizagi.util.parseBoolean(properties.validate) != null ? bizagi.util.parseBoolean(properties.validate) : false;\r\n        properties.downloadalldocuments = properties.downloadalldocuments ? properties.downloadalldocuments : false;\r\n        properties.allowGenerate = properties.allowGenerate !== undefined ? properties.allowGenerate : true;\r\n        properties.append = properties.append ? properties.append : false;\r\n\r\n        if (properties.caption) {\r\n            properties.caption = bizagi.util.trim(properties.caption);\r\n\r\n            if (properties.caption.length === 0) {\r\n                properties.caption = this.getResource(\"render-documentgenerator-button-label\");\r\n            }\r\n        } else {\r\n            properties.caption = this.getResource(\"render-documentgenerator-button-label\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n\r\n        self.preRenderControl();\r\n\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n        var downloadAllDocuments = properties.downloadalldocuments;\r\n        var allowGenerate = properties.allowGenerate;\r\n        var template = self.renderFactory.getTemplate(self.getTemplate());\r\n        var documents = properties.value || [];\r\n        var noFiles = documents ? (documents.length === 0) : true;\r\n\r\n        // Render template\r\n        var html = self.getControlHtml(template, mode, downloadAllDocuments, allowGenerate, properties, noFiles);\r\n\r\n        // Render current children\r\n        var items = this.renderDocumentsHtml(documents);\r\n        items += this.renderActionsHtml(documents, noFiles, downloadAllDocuments);\r\n\r\n        html = self.replaceFilesHtml(html, items);\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @param template\r\n     * @param mode\r\n     * @param downloadAllDocuments\r\n     * @param allowGenerate\r\n     * @param properties\r\n     * @param noFiles\r\n     * @returns {*|jQuery}\r\n     */\r\n    getControlHtml: function (template, mode, downloadAllDocuments, allowGenerate, properties, noFiles) {\r\n        var self = this;\r\n\r\n        return $.fasttmpl(template, {\r\n            noActivateButton: false,\r\n            editable: mode !== \"execution\",\r\n            mode: mode,\r\n            downloadalldocuments: downloadAllDocuments,\r\n            required: properties.required,\r\n            allowgenerate: allowGenerate,\r\n            xpath: self.getXpath(properties.xpath),\r\n            append: properties.append,\r\n            caption: properties.caption,\r\n            noFiles: noFiles,\r\n            allowSendInMail: properties.allowSendInMail\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @param xpath\r\n     * @returns {*}\r\n     */\r\n    getXpath: function (xpath) {\r\n        return xpath;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    preRenderControl: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {boolean}\r\n     */\r\n    activateButton: function () {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @param xpath\r\n     * @returns {*}\r\n     */\r\n    getDocumentXpath: function (xpath) {\r\n        return xpath;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getContextXpath: function () {\r\n        return this.properties.xpathContext;\r\n    },\r\n\r\n    /**\r\n     * Renders a single document item\r\n     * @param file\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderDocumentItem: function (file) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var template = self.renderFactory.getTemplate(self.getTemplateItem());\r\n        var url = self.buildItemUrl(file);\r\n\r\n        // Don't render urls when not running in execution mode\r\n        if (mode !== \"execution\") url = \"javascript:void(0);\";\r\n\r\n        var html = $.fasttmpl(template, {\r\n            url: url,\r\n            allowDelete: self.properties.allowDelete,\r\n            filename: file.fileName,\r\n            mode: mode,\r\n            editable: self.properties.editable,\r\n            joined: false\r\n        });\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (file) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return self.dataService.getUploadFileUrl({\r\n            idRender: properties.id,\r\n            xpath: self.getDocumentXpath(properties.xpath),\r\n            xpathContext: self.getContextXpath(),\r\n            idPageCache: properties.idPageCache,\r\n            fileId: file.id,\r\n            sessionId: self.getSessionId()\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Builds the download all items item url\r\n     * @returns {*}\r\n     */\r\n    buildAllDocumentsUrl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var returnLink = self.dataService.getAllDocumentsDownloadUrl({\r\n            xpath: self.getDocumentXpath(properties.xpath),\r\n            xpathContext: self.getContextXpath(),\r\n            idPageCache: properties.idPageCache,\r\n            idCase: properties.caseId,\r\n            idWorkItem: properties.workitemId,\r\n            sessionId: self.getSessionId()\r\n        });\r\n\r\n        return returnLink;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed (Virtual method)\r\n     * @returns {string}\r\n     */\r\n    postRender: function () {\r\n        // Call base\r\n        this._super();\r\n\r\n        return \"<div></div>\";\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed in read-only mode\r\n     */\r\n    postRenderReadOnly: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        if (mode !== \"design\") {\r\n            var control = self.getControl();\r\n            var htmlControl = self.renderControl();\r\n\r\n            control.append(htmlControl);\r\n\r\n            self.updateControlForPrintMode(control);\r\n\r\n            // Execute the same as post-render\r\n            self.postRender();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Saves the form before the document generation\r\n     * @returns {*}\r\n     */\r\n    validateContainer: function () {\r\n        // Check if the form is valid, then generate\r\n        var form = this.getFormContainer();\r\n        return form.validateForm();\r\n    },\r\n\r\n    /**\r\n     * Saves the form before the document generation\r\n     * @returns {*}\r\n     */\r\n    save: function () {\r\n        var form = this.getFormContainer();\r\n\r\n        return form.saveForm();\r\n    },\r\n\r\n    /**\r\n     * Replaces a {{files}} tag in the container for the specified \"replace\" element\r\n     * @param html\r\n     * @param replace\r\n     * @returns {*}\r\n     */\r\n    replaceFilesHtml: function (html, replace) {\r\n        return html.replace(\"{{files}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Replaces a {{actions}} tag in the container for the specified \"replace\" element\r\n     * @param html\r\n     * @param replace\r\n     * @returns {*}\r\n     */\r\n    replaceActionsHtml: function (html, replace) {\r\n        return html.replace(\"{{actions}}\", replace);\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @param invalidElements\r\n     * @returns {boolean}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties,\r\n            message;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) === false) {\r\n            return true;\r\n        }\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) === false) {\r\n            return true;\r\n        }\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (properties.required && !properties.buttonExecuted) {\r\n            if (self.value) {\r\n                if (self.value.length > 0) return true;\r\n                message = self.getResource(\"render-document-required-text\");\r\n                invalidElements.push({xpath: properties.xpath, message: message});\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize the render's behaviour to add handlers\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var mode = self.getMode();\r\n\r\n        // Call base\r\n        self._super();\r\n\r\n        // Attach handler\r\n        var generateLink = $(\".ui-bizagi-button-documentgenerator\", control);\r\n        if (mode === \"execution\") {\r\n            generateLink.click(function (e) {\r\n                if (e.isPropagationStopped()) return;\r\n                e.stopPropagation();\r\n\r\n                self.properties.buttonExecuted = true;\r\n\r\n                if (self.properties.validate) {\r\n                    // Check if the form is valid, then generate\r\n                    var isValid = self.validateContainer();\r\n                    if (isValid) {\r\n                        self.documentTemplateGenerate();\r\n                    }\r\n                } else {\r\n                    // Just generate the form\r\n                    self.documentTemplateGenerate();\r\n                }\r\n\r\n                self.properties.buttonExecuted = false;\r\n            });\r\n        }\r\n\r\n        // Configure preview handler\r\n        $(\".ui-bizagi-document-preview\", control).click(function (e) {\r\n            if (e.isPropagationStopped()) return;\r\n            e.stopPropagation();\r\n\r\n            self.showDocumentPreview($(this).data(\"url\"), $(this).data(\"filename\"));\r\n        });\r\n\r\n        // Configure preview handler\r\n        $(\".ui-bizagi-container-documents-item-delete\", control).click(function (e) {\r\n            if (e.isPropagationStopped()) return;\r\n            e.stopPropagation();\r\n\r\n            self.deleteDocumentTemplate($(this).data(\"filename\"));\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Creates the event of generation of templates.\r\n     * @param filename\r\n     */\r\n    deleteDocumentTemplate: function (filename) {\r\n        var self = this;\r\n        var params = {\r\n            xpath: self.properties.xpath + \"[fileName='\" + filename + \"']\",\r\n            idRender: self.properties.id,\r\n            xpathContext: self.getContextXpath(),\r\n            idPageCache: self.properties.idPageCache\r\n        };\r\n\r\n        self.startLoading();\r\n\r\n        $.when(self.dataService.deleteUploadFile(params))\r\n            .done(function () {\r\n                $.when(self.dataService.multiaction().getPropertyData({\r\n                    xpath: self.properties.xpath,\r\n                    idRender: self.properties.id,\r\n                    xpathContext: self.getContextXpath(),\r\n                    idPageCache: self.properties.idPageCache,\r\n                    property: \"value\"\r\n                })).done(function (documents) {\r\n                    self.resolveDeleteDocumentTemplate(documents, false, self.properties.downloadalldocuments);\r\n\r\n                    // Finish loading\r\n                    self.endLoading();\r\n                });\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Creates the event of generation of templates.\r\n     */\r\n    documentTemplateGenerate: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        self.startLoading();\r\n\r\n        //Get the context xPath\r\n        properties.xpathcontext = self.getContextXpath();\r\n        properties.xpath = self.getDocumentXpath(properties.xpath);\r\n\r\n        self.save().done(function () {\r\n\r\n            bizagi.showErrorAlertDialog = false;\r\n\r\n            $.when(self.dataService.generateDocumentTemplate(properties))\r\n                .done(function () {\r\n\r\n                    // Fetch again the value property\r\n                    $.when(self.dataService.multiaction().getPropertyData({\r\n                        xpath: properties.xpath,\r\n                        idRender: properties.id,\r\n                        xpathContext: self.getContextXpath(),\r\n                        idPageCache: properties.idPageCache,\r\n                        property: \"value\"\r\n                    })).done(function (documents) {\r\n                        self.resolveDocumentTemplateGenerate(documents, false, properties.downloadalldocuments);\r\n\r\n                        // Finish loading\r\n                        self.endLoading();\r\n                    });\r\n\r\n                }).fail(function (error) {\r\n                self.endLoading();\r\n\r\n                // Add error messages\r\n                self.showErrorMessage(error);\r\n            });\r\n        }).fail(function (message) {\r\n            self.endLoading();\r\n\r\n            // Add error messages\r\n            self.showErrorMessage(error);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Show the error message when something went wrong with the service.\r\n     * @param error\r\n     */\r\n    showErrorMessage: function (error) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var messageText = self.resources.getResource('render-upload-alert-maxsize').replace(\"{0}\", BIZAGI_SETTINGS.UploadMaxFileSize);\r\n\r\n        try {\r\n            messageText = error && typeof (error.responseText) !== \"undefined\" ? JSON.parse(error.responseText).message : error;\r\n        } catch (e) {\r\n        }\r\n\r\n        form.addErrorMessage(messageText);\r\n        form.endLoading();\r\n    },\r\n\r\n    /**\r\n     * Shows the document if the flag is set. (virtual Function)\r\n     */\r\n    autoOpenDocuments: function () {\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each device to customize each render after processed (Virtual method)\r\n     * @param url\r\n     * @param filename\r\n     */\r\n    showDocumentPreview: function (url, filename) {\r\n    },\r\n\r\n    /**\r\n     * Identifies the extension of the file in a simpler way that ECM does\r\n     * @param file\r\n     * @returns {string}\r\n     */\r\n    returnCssTypeFile: function (file) {\r\n\r\n        if (file == undefined || file.lenght === 0) {\r\n            return \"ui-bizagi-document-upload-item-generic-file\";\r\n        }\r\n\r\n        var extension = file.substr((file.lastIndexOf('.') + 1));\r\n\r\n        switch (extension) {\r\n            case 'docx':\r\n                return \"ui-bizagi-document-upload-item-doc\";\r\n            case 'pdf':\r\n                return \"ui-bizagi-document-upload-item-pdf\";\r\n            case 'xlsx':\r\n                return \"ui-bizagi-document-upload-item-xls\";\r\n            default:\r\n                return \"ui-bizagi-document-upload-item-generic-file\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Redraw documents when needed\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    redrawDocuments: function (documents, noFiles, downloadAllDocuments) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var html = \"\";\r\n        var documentContainer = $(\"[data-component='files']\", control);\r\n\r\n        // Clear current links\r\n        documentContainer.empty();\r\n\r\n        // Draw links again\r\n        html += this.renderDocumentsHtml(documents);\r\n\r\n        // Check if there are documents and the flag to download all are available to show the link.\r\n        html += this.renderActionsHtml(documents, noFiles, downloadAllDocuments);\r\n\r\n        documentContainer.append(html);\r\n\r\n        //Set value\r\n        self.setValue(documents);\r\n    },\r\n\r\n    /**\r\n     * This method must be implemented by the specific class of each device. (Virtual method)\r\n     * @param file\r\n     * @returns {*|*|*}\r\n     */\r\n    renderAllDocumentDownload: function (file) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n\r\n        var template = self.renderFactory.getTemplate(self.getTemplateItem());\r\n        var url = self.buildAllDocumentsUrl();\r\n\r\n        // Don't render urls when not running in execution mode\r\n        if (mode !== \"execution\") url = \"javascript:void(0);\";\r\n\r\n        var html = $.fasttmpl(template, {\r\n            url: url,\r\n            allowDelete: properties.allowDelete,\r\n            filename: file.fileName,\r\n            mode: mode,\r\n            joined: true\r\n        });\r\n\r\n        return self.removeDeleteButton(html);\r\n    },\r\n\r\n    /**\r\n     * removeDeleteButton\r\n     * @param html\r\n     * @returns {*}\r\n     */\r\n    removeDeleteButton: function (html) {\r\n        var startIndex = html.indexOf(\"<span class=\\\"ui-bizagi-container-documents-item-delete\");\r\n\r\n        if (startIndex > 0) {\r\n            var restOfWord = html.substring(startIndex);\r\n            var finishIndex = restOfWord.indexOf(\"</span>\") + 7;\r\n\r\n            return html.substring(0, startIndex) + restOfWord.substring(finishIndex);\r\n        } else {\r\n            return html;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Process request of DeleteDocumentTemplate action\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    resolveDocumentTemplateGenerate: function (documents, noFiles, downloadAllDocuments) {\r\n        // Redraw documents\r\n        this.redrawDocuments(documents, noFiles, downloadAllDocuments);\r\n        this.value = documents;\r\n\r\n        // This does not apply for mobile.\r\n        this.autoOpenDocuments();\r\n        this.configureHandlers();\r\n    },\r\n\r\n    /**\r\n     * Process request of DocumentTemplateGenerate action\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     */\r\n    resolveDeleteDocumentTemplate: function (documents, noFiles, downloadAllDocuments) {\r\n        // Redraw documents\r\n        this.redrawDocuments(documents, noFiles, downloadAllDocuments);\r\n        this.value = documents;\r\n\r\n        // This does not apply for mobile.\r\n        this.configureHandlers();\r\n    },\r\n\r\n    /**\r\n     * Method to renders the documents\r\n     * @param documents\r\n     * @returns {string}\r\n     */\r\n    renderDocumentsHtml: function (documents) {\r\n        var items = \"\";\r\n\r\n        for (var i = 0; i < documents.length; i++) {\r\n            var document = {id: documents[i][0], fileName: documents[i][1]};\r\n            var item = this.renderDocumentItem(document);\r\n\r\n            items += item;\r\n        }\r\n\r\n        return items;\r\n    },\r\n\r\n    /**\r\n     * Methos to renders action of document\r\n     * @param documents\r\n     * @param noFiles\r\n     * @param downloadAllDocuments\r\n     * @returns {string}\r\n     */\r\n    renderActionsHtml: function (documents, noFiles, downloadAllDocuments) {\r\n        var actions = \"\";\r\n\r\n        if (downloadAllDocuments && (!noFiles && documents.length > 0)) {\r\n            var downloadAllDocumentsLink = {fileName: this.getResource(\"render-document-downloadalldocuments\")};\r\n            var action = this.renderAllDocumentDownload(downloadAllDocumentsLink);\r\n\r\n            actions += action;\r\n        }\r\n\r\n        return actions;\r\n    },\r\n\r\n    getTemplate: function () {\r\n        return \"document\";\r\n    },\r\n\r\n    getTemplateItem: function () {\r\n        return \"document-item\";\r\n    },\r\n\r\n    getErrorTemplate: function () {\r\n        return \"form-error\";\r\n    },\r\n\r\n    getTemplateDownload: function () {\r\n        return \"document-download\";\r\n    },\r\n\r\n    getTemplateReadonly: function () {\r\n        return \"document-readonly\";\r\n    }\r\n\r\n});","/*\r\n*   Name: Bizagi Render Cascading Combo Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for cascading combo renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.cascadingCombo\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n    BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX\r\n}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n\r\n        // Create dependency collection\r\n        self.dependants = [];\r\n        self.isDependant = false;\r\n    },\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.hasLocalData = bizagi.util.isEmpty(properties.parentCombo) ? properties.hasLocalData : false;\r\n\r\n        if (properties.value && properties.value.id === undefined)\r\n            properties.value = null;\r\n\r\n        self.value = properties.value;\r\n\r\n        // Add empty node if configured\r\n        if (properties.hasLocalData)\r\n            properties.data = self.complementData(properties.data);\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        // Check if this is a dependant combo\r\n        var parentCombo = self.parentCombo = self.getParentCombo();\r\n        if (parentCombo != null) {\r\n            var renderType = bizagi.util.normalizeType(parentCombo.properties.type);\r\n\r\n            if (/^cascadingcombo$/i.test(renderType)) {\r\n                self.isDependant = true;\r\n            }\r\n        }\r\n\r\n        // Apply element plugin, set a flag to avoid dependant combo ajax requests\r\n        self.initializingCascadingCombo = true;\r\n\r\n        // Call base\r\n        var result = this._super();\r\n\r\n        if (mode !== \"execution\") {\r\n            self.initializingCascadingCombo = false;\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Template method to implement in each device to customize the render's behaviour to add handlers\r\n    */\r\n    configureHandlers: function () {\r\n        var self = this;\r\n        self.initializingCascadingCombo = false;\r\n\r\n        // Bind with parent combo\r\n        if (self.isDependant) {\r\n            self.parentCombo.bindDependantCombo(self);\r\n        }\r\n    },\r\n\r\n    configureReadOnlyHandlers: function () {\r\n        var self = this;\r\n        self.initializingCascadingCombo = false;\r\n\r\n        // Bind with parent combo\r\n        if (self.isDependant) {\r\n            self.parentCombo.bindDependantCombo(self);\r\n        }\r\n    },\r\n    /*\r\n    *   Refresh the combo, after it has been painted\r\n    */\r\n    refresh: function (params, isInitialValue) {\r\n        var self = this;\r\n\r\n        // Wait until current element is rendered\r\n        $.when(self.isRendered()).done(function () {\r\n\r\n            // Unbind previous handler\r\n            // self.parentCombo.unbindDependantCombo(self);\r\n\r\n            // Clear current control\r\n            var control = self.getControl();\r\n            var mode = self.getMode();\r\n            control.empty();\r\n\r\n            // Render combo again\r\n            $.when(self.renderCombo(params)).then(function (html) {\r\n                // Append new element\r\n                control.html(html);\r\n\r\n                // Post-render method\r\n                self.postRender();\r\n\r\n                if (mode == \"execution\") {\r\n                    self.configureHandlers();\r\n                }\r\n\r\n                // Set current value\r\n                if (self.getValue() !== undefined) {\r\n                    self.setDisplayValue(self.getValue());\r\n                }\r\n\r\n                if (self.deferredVisible) {\r\n                    self.deferredVisible.resolve();\r\n                }\r\n\r\n                self.trigger(\"select\", [self.value, isInitialValue]);\r\n\r\n            });\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Fetch the data into a deferred\r\n    */\r\n    getData: function (params) {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        // Just execute ajax calls when rendering in execution mode\r\n        if (mode != \"execution\") return self.getDummyData();\r\n\r\n        // Do not load dependant combos when there are no parent id\r\n        if (self.isDependant) {\r\n            if (self.parentCombo && params) {\r\n                self.properties.remoteDataLoaded = false;\r\n            }\r\n\r\n            // Return an empty array when there are no parent defined when the combo is dependant\r\n\r\n            var parentValue = (self.parentCombo.selectedValue) ? self.parentCombo.selectedValue.id : '';\r\n\r\n            if (parentValue != '') {\r\n                return this._super(params);\r\n            } else {\r\n                return [];\r\n            }\r\n        }\r\n\r\n        return this._super(params);\r\n    },\r\n\r\n\r\n    /* \r\n    *   Bind the combos to create the cascading feature\r\n    */\r\n    bindDependantCombo: function (dependantCombo) {\r\n        var self = this;\r\n        var renderType = bizagi.util.normalizeType(dependantCombo.properties.type);\r\n\r\n        // Check it is a cascading combo\r\n        if (/^cascadingcombo$/i.test(renderType)) {\r\n\r\n            // Append to dependant combos\r\n            self.dependants.push(dependantCombo);\r\n\r\n            // When this combo is selected we need to make the other combo to auto fill with an extra filter\r\n            dependantCombo.onChangeFunction = function (event, item, isInitialValue) {\r\n                // Fill items for next combo\r\n                self.refreshDependantCombo(dependantCombo, item.id, self.focusDependant, isInitialValue);\r\n\r\n                //if initial value is true, it prevents deleting the next combo\r\n                if (!isInitialValue) {\r\n                    // Clean next inputs\r\n                    dependantCombo.cleanInput();\r\n                }\r\n            };\r\n\r\n            if (!self.isEventBinded(\"select\")) {\r\n                self.bind(\"select\", dependantCombo.onChangeFunction);\r\n            }\r\n\r\n            // After the event binding has been made, we need to fill the new dependant render if this instance (the parent) has a value\r\n            if (!bizagi.util.isEmpty(self.getValue())) {\r\n\r\n                // Auto fill dependant items with current value\r\n                if (self.properties.hasLocalData) {\r\n                    self.refreshDependantCombo(dependantCombo, self.getValue().id);\r\n                }\r\n\r\n            }\r\n        }\r\n    },\r\n    isEventBinded: function (event) {\r\n        if (typeof $._data(this.observableElement.get(0), \"events\") === \"undefined\") {\r\n            return false;\r\n        } else {\r\n            if (typeof $._data(this.observableElement.get(0), \"events\")[event] === \"undefined\") {\r\n                return false;\r\n            } else {\r\n                return true;\r\n            }\r\n        }\r\n    },\r\n\r\n\r\n    /* \r\n    *   Unbind the combos that are being redrawn\r\n    */\r\n    unbindDependantCombo: function (dependantCombo) {\r\n        // When this combo is selected we need to make the other combo to auto fill with an extra filter\r\n        this.unbind(\"select\", dependantCombo.onChangeFunction);\r\n    },\r\n\r\n    /*\r\n    *   Fills the next dependant combo based on the given value\r\n    */\r\n    refreshDependantCombo: function (dependant, parentValue, focus, isInitialValue) {\r\n        var self = this;\r\n        var params = {};\r\n        params[self.Class.BA_ACTION_PARAMETER_PREFIX + \"parent\"] = parentValue;\r\n\r\n        dependant.deferredVisible = $.Deferred();\r\n\r\n        if (!isInitialValue) {\r\n            // Clear dependant value\r\n            dependant.setValue(\"\", false);\r\n        }\r\n\r\n        dependant.refresh(params, isInitialValue);\r\n\r\n        if (focus) {\r\n            $.when(dependant.deferredVisible.promise()).done(function () {\r\n                dependant.inputCombo.trigger(\"click\");\r\n            });\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Empty html when render from action\r\n     */\r\n\r\n    emptyControlByChangeEditability: function () {\r\n        var control = this.getControl();\r\n        control.empty();\r\n    },\r\n\r\n    /* \r\n    *   Cleans the combo value\r\n    */\r\n    cleanInput: function () {\r\n        this.triggerHandler(\"select\", {id: 0});\r\n    },\r\n\r\n    /*\r\n    *   Search for the other cascading combo refering this one, by idRender\r\n    */\r\n    getParentCombo: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        // Check if parentCombo is defined\r\n        if (properties.parentCombo === undefined)\r\n            return null;\r\n\r\n        // Get form reference\r\n        var form = self.getFormContainer();\r\n        var renderType = bizagi.util.normalizeType(self.properties.type);\r\n        var controls = /^cascadingcombo$/i.test(renderType) ? form.getRenderByType(properties.type) : [];\r\n\r\n        var i = 0;\r\n        var j = 0;\r\n        var parents = [];\r\n\r\n        var control = null;\r\n\r\n        for (; i < controls.length; i++) {\r\n            if (properties.parentCombo === controls[i].properties.id) {\r\n                parents.push({control: controls[i], index: i});\r\n            }\r\n        }\r\n\r\n        if (parents.length > 1) {\r\n            var parentLength, parent, xpathParent, parentArray;\r\n\r\n            for (; j < parents.length; j++) {\r\n                parent = parents[j].control;\r\n                xpathParent = parent.properties.xpath;\r\n                parentArray = xpathParent.split(\".\");\r\n                parentLength = parentArray.length;\r\n                xpathParent = parentArray.slice(0, parentLength - 1).join(\".\");\r\n\r\n                if (xpathParent === properties.xpath) {\r\n                    control = controls[parents[j].index];\r\n                    break;\r\n                }\r\n            }\r\n        } else {\r\n            control = form.getRenderById(properties.parentCombo);\r\n        }\r\n\r\n        // Return parent combo\r\n        return control;\r\n    },\r\n\r\n    /* \r\n    *  Method to determine if the render value can be sent to the server or not\r\n    */\r\n    canBeSent: function () {\r\n        var self = this;\r\n\r\n        // If the render has dependants we can't send to the server\r\n        return self._super() && bizagi.util.isMapEmpty(self.dependants);\r\n    },\r\n\r\n    /*\r\n    *   Determines if we need to show the current data regardless if it belongs to data or not\r\n    *   Can be overriden to change behaviour\r\n    */\r\n    showCurrentData: function () {\r\n        var mode = this.getMode();\r\n\r\n        if (mode != \"execution\") return true;\r\n        return false;\r\n    },\r\n\r\n    /*\r\n    *   Enables submit on change feature for the current render\r\n    */\r\n    configureSubmitOnChange: function () {\r\n        var self = this;\r\n\r\n        if (!self.configured) {\r\n            // Call super\r\n            self._super();\r\n            self.configured = true;\r\n        }\r\n    },\r\n\r\n    internalSubmitOnChange: function (data, bRefreshForm) {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        if (self.isDependant && self.canBeSent() && self.itemSelected !== undefined)\r\n            return self._super(data, bRefreshForm);\r\n        return defer.resolve();\r\n    },\r\n    /*\r\n    *   Sets the initial value for the renders\r\n    */\r\n    internalSetInitialValue: function () {\r\n        var self = this;\r\n        // Call original method\r\n        self._super();\r\n\r\n        if (self.value && self.isDependant == false) {\r\n            self.internalSetInitialValueFlag = true;\r\n            self.trigger(\"select\", [self.value, true]);\r\n        }\r\n\r\n        self.internalSetInitialValueFlag = false;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: Bizagi Render List Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for list renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.list\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data \r\n     * @returns {} \r\n     */\r\n    initializeData: function(data) {      \r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.listSize = properties.listSize || 0;\r\n    },\r\n\r\n    /**\r\n     * Gets the template used by the combo render can be overriden in subclasses\r\n     * to reuse logic and just change the template\r\n     * @returns {} \r\n     */\r\n    getTemplateName: function() {\r\n        return \"list\";\r\n    },\r\n\r\n    /**\r\n     * Determines if we need to show the current data regardless if it belongs\r\n     * to data or not Can be overriden to change behaviour    \r\n     * @returns {} \r\n     */\r\n    showCurrentData: function() {\r\n        return false;\r\n    }\r\n\r\n});","/*\r\n *   Name: Bizagi Render MultiSelect Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for multiselect renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.multiSelect\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) !== null ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.maxRecords = Number(properties.maxRecords) || 20;\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*|jQuery}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"list-multiselect\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            editable: properties.editable,\r\n            align: properties.valueAlign\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     */\r\n    renderReadOnly: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"list-multiselect\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            editable: properties.editable,\r\n            align: properties.valueAlign\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Fetch the data into a deferred\r\n     * @returns {*[]}\r\n     */\r\n    getData: function () {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n        var properties = this.properties;\r\n\r\n        // Go to server\r\n        self.dataService.multiaction().getData({\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            contexttype: properties.contexttype || null,\r\n            idPageCache: properties.idPageCache\r\n        }).done(function (data) {\r\n\r\n            properties.data = data;\r\n            defer.resolve(properties.data);\r\n\r\n        }).fail(function (data) {\r\n            if (data.type === \"not-processed\")\r\n                return;\r\n\r\n            // Show error from server\r\n            var auxMsg = \"\";\r\n            var form = self.getFormContainer();\r\n            var msgObj = self.properties.displayName + \": \";\r\n\r\n            if (typeof data == \"string\") {\r\n                auxMsg = JSON && JSON.parse(data) || $.parseJSON(data);\r\n            } else {\r\n                auxMsg = data;\r\n            }\r\n\r\n            msgObj += auxMsg.message;\r\n\r\n            form.addValidationMessage(msgObj);\r\n\r\n            defer.reject(data);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        triggerEvents = triggerEvents !== undefined ? triggerEvents : true;\r\n\r\n        value = JSON.encode({\"value\": value});\r\n\r\n        this._super(value, triggerEvents);\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Returns the internal value\r\n     * @returns {*|Array}\r\n     */\r\n    getValue: function () {\r\n        return this.value || [];\r\n    },\r\n\r\n    /**\r\n     * Get list of data\r\n     * @returns {*|Array}\r\n     */\r\n    getDataValue: function () {\r\n        var list;\r\n\r\n        try {\r\n            list = JSON.parse(this.value);\r\n\r\n            return list.value || [];\r\n        } catch (e) {\r\n            return [];\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Check if a render has no value for required validation\r\n     * @returns {*|Array|boolean}\r\n     */\r\n    hasValue: function () {\r\n        var values = this.getDataValue();\r\n\r\n        return values && values.length > 0;\r\n    },\r\n\r\n    getElementsToStylize: function (context) {\r\n        return $(\".bz-multiselect .bz-multiselect__tag:not(.bz-multiselect__plus)\", context);\r\n    },\r\n\r\n    /**\r\n     * Add elements to global value\r\n     * @param value\r\n     */\r\n    addElement: function (value) {\r\n        var newValue = this.getDataValue();\r\n\r\n        newValue.push(value);\r\n\r\n        this.setValue(newValue);\r\n    },\r\n\r\n    /**\r\n     * Remove elements to global value\r\n     * @param value\r\n     */\r\n    removeElement: function (value) {\r\n        var idToRemove = value.id;\r\n        var newValue = this.getDataValue()\r\n            .filter(function (item) {\r\n                return item.id !== idToRemove;\r\n            });\r\n\r\n        this.setValue(newValue);\r\n    },\r\n\r\n    /**\r\n     * Submit the selected data to the server in order to be saved\r\n     */\r\n    submitData: function () {\r\n        var data = {};\r\n\r\n        // Add current data\r\n        data[this.properties.xpath] = this.getValue();\r\n\r\n        // Executes submit on change\r\n        this.submitOnChange(data);\r\n    },\r\n\r\n    /**\r\n     * Mark a item how checked\r\n     * @param id\r\n     * @returns {*}\r\n     */\r\n    markAsChecked: function (id) {\r\n        var self = this;\r\n\r\n        return self.selected.some(function (item, index) {\r\n            var found = item.id === id;\r\n\r\n            if (found) self.selected.splice(index, 1);\r\n            return found;\r\n        });\r\n    },\r\n\r\n    isChecked: function (values, id) {\r\n        return values.some(function (item) {\r\n            return item.id == id;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to verify if can add more items\r\n     * @param $tagsContainer\r\n     * @returns {boolean}\r\n     */\r\n    canAddMoreItems: function ($tagsContainer) {\r\n        var self = this;\r\n        var containerWidth = parseInt($tagsContainer.css(\"width\"));\r\n        var $children = $tagsContainer.children();\r\n\r\n        var childrenWidth = $children\r\n            .toArray()\r\n            .reduce(function (acc, child) {\r\n                acc += self.getElementWidth(child);\r\n                return acc;\r\n            }, 0);\r\n\r\n        return containerWidth > (childrenWidth + self.Class.MORE_OPTION_WIDTH)\r\n\r\n    },\r\n\r\n    /**\r\n     * getElementWidth\r\n     * @param element\r\n     * @returns {*}\r\n     */\r\n    getElementWidth: function (element) {\r\n        var styles = window.getComputedStyle(element);\r\n        var outerWidth = $(element).outerWidth();\r\n        return outerWidth + [\r\n            \"padding-left\",\r\n            \"padding-right\",\r\n            \"margin-left\",\r\n            \"margin-right\"\r\n        ].reduce(function (acc, property) {\r\n            acc += parseInt(styles[property]);\r\n            return acc;\r\n        }, 0);\r\n    },\r\n\r\n    /**\r\n     * Filtering list of elements\r\n     * @param query\r\n     * @param $container\r\n     */\r\n    filterList: function (query, $container) {\r\n\r\n        $container.filter(function () {\r\n            var stringContainer = $(this).text().toUpperCase();\r\n            var stringToSearch = query.toUpperCase();\r\n\r\n            if (stringContainer.indexOf(stringToSearch) >= 0) {\r\n                return $(this);\r\n            } else {\r\n                $(this).hide();\r\n            }\r\n        }).show();\r\n\r\n    },\r\n\r\n    /**\r\n     * addSelectedElements\r\n     */\r\n    addSelectedElements: function () {\r\n    },\r\n\r\n    /**\r\n     * Find item by id\r\n     * @param id\r\n     * @returns {[]}\r\n     */\r\n    findItemById: function (id) {\r\n        return (this.properties.data || []).find(function (item) {\r\n            return item.id == id;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n        return bizagi.util.formatItem(value);\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Money Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for money numbers\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.money\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data\r\n     * @returns {}\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = self.properties;\r\n        var format = this.getResource(\"numericFormat\");\r\n\r\n        // Configures symbol\r\n        properties.showsymbol = typeof (properties.showsymbol) !== \"undefined\" ? properties.showsymbol : true;\r\n\r\n        if (properties.showsymbol) {\r\n            var symbol = typeof (BIZAGI_DEFAULT_CURRENCY_INFO) !== \"undefined\" ? BIZAGI_DEFAULT_CURRENCY_INFO.symbol : format.symbol;\r\n            properties.symbol = properties.currencySymbol ? properties.currencySymbol : symbol;\r\n        } else {\r\n            properties.symbol = \"\";\r\n        }\r\n\r\n        properties.groupDigits = true;\r\n    }\r\n\r\n});\r\n","/**\r\n *   Name: Bizagi Render Radio Class\r\n *   Author: UI Forms Team\r\n *   Comments:\r\n *   -   This script will define basic stuff for radio renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.radio\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.horizontal = bizagi.util.parseBoolean(properties.horizontal) || false;\r\n\r\n        // Set a random identifier to fix a problem when using radio buttons inside grids and the plugin mismatch the elements because all of them have the same name\r\n        properties.unique = bizagi.util.randomNumber(1000, 1000000);\r\n    },\r\n\r\n    /**\r\n     * Gets the template used by the combo render\r\n     * Can be overridden in subclasses to reuse logic and just change the template\r\n     * @returns {string}\r\n     */\r\n    getTemplateName: function () {\r\n        return \"radio\";\r\n    },\r\n\r\n    /**\r\n     * Determines if we need to show the empty node or not\r\n     * Can be overridden to change behaviour\r\n     * @returns {boolean}\r\n     */\r\n    showEmpty: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Determines if we need to show the current data regardless if it belongs to data or not\r\n     * Can be overridden to change behaviour\r\n     * @returns {boolean}\r\n     */\r\n    showCurrentData: function () {\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Adds custom parameters to process the template\r\n     * @returns {{vertical: boolean}}\r\n     */\r\n    getTemplateParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        return {\r\n            vertical: !properties.horizontal,\r\n            horizontal: properties.horizontal\r\n        };\r\n    },\r\n\r\n    /**\r\n     * Cleans current data\r\n     */\r\n    cleanData: function () {\r\n        var self = this;\r\n        var value = {id: \"\", label: \"\"};\r\n        var selectedItem = self.element.find(\".ui-radio-state-checked\");\r\n\r\n        selectedItem.removeClass(\"ui-radio-state-checked\");\r\n        self.setDisplayValue(value);\r\n        self.setValue(value, false);\r\n        self.clearDisplayValue();\r\n    },\r\n\r\n    /**\r\n     * Check value of control is changed\r\n     * @returns {boolean}\r\n     */\r\n    controlValueIsChanged: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var value = self.getValue();\r\n        var compareValue = properties.originalValue;\r\n        var baseValue = properties.defaultValue;\r\n\r\n        var result = true;\r\n\r\n        if (value && value.length !== undefined) {\r\n            value = value[0];\r\n        }\r\n        if (compareValue && compareValue.length !== undefined) {\r\n            compareValue = compareValue[0];\r\n        }\r\n        if (baseValue && baseValue.length !== undefined) {\r\n            baseValue = baseValue[0];\r\n        }\r\n\r\n        value = value && value.id !== undefined ? value.id : value;\r\n        compareValue = compareValue && compareValue.id !== undefined ? compareValue.id : compareValue;\r\n        baseValue = baseValue && baseValue.id !== undefined ? baseValue.id : baseValue;\r\n\r\n        if (baseValue !== undefined) {\r\n            if ((baseValue == value) && (value == compareValue)) {\r\n                result = false;\r\n            } else {\r\n                if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                    result = false;\r\n                } else {\r\n                    result = (compareValue == value) ? false : true;\r\n                }\r\n            }\r\n        } else {\r\n            if ((value === null || value === \"\") && (compareValue === null || compareValue === \"\")) {\r\n                result = false;\r\n            } else {\r\n                result = (compareValue == value) ? false : true;\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n});\r\n\r\n","/*\r\n*   Name: Bizagi Render Search List Control\r\n*   Author: UI Forms Team\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.searchList\", {}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param {} data \r\n     * @returns {} \r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        properties.maxRecords = Number(properties.maxRecords) || 20;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) !== null ? bizagi.util.parseBoolean(properties.editable) : true;\r\n\r\n        // Set value\r\n        self.setValue(properties.value);\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {} \r\n     */\r\n    renderControl: function() {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var template = self.renderFactory.getTemplate(\"searchList\");\r\n\r\n        return $.fasttmpl(template, {\r\n            id: properties.id,\r\n            xpath: properties.xpath,\r\n            value: properties.value,\r\n            allowTyping: properties.allowTyping,\r\n            items: properties.value,\r\n            hasSearchForm: properties.searchForms ? true : false,\r\n            editable: properties.editable\r\n        }, {\r\n            formatItem: self.formatItem\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {} \r\n     */\r\n    renderReadOnly: function() {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param {} value \r\n     * @returns {} \r\n     */\r\n    setValue: function(value) {\r\n        this.value = JSON.encode({ \"value\": value });\r\n        this.triggerRenderChange();\r\n    },\r\n\r\n    /**\r\n     * Add elements to global value\r\n     * @param value = { id:integer,value:[string || array] }\r\n     * @returns {} \r\n     */\r\n    addElement: function(value) {\r\n        var list = JSON.parse(this.value);\r\n\r\n        list.value.push(value);\r\n\r\n        this.setValue(list.value);\r\n    },\r\n\r\n    /**\r\n     * Remove elements to global value\r\n     * @param value = { id:integer }\r\n     * @returns {} \r\n     */\r\n    removeElement: function(value) {\r\n        var list = JSON.parse(this.value);\r\n        var result = [];\r\n\r\n        $.each(list.value, function(key, val) {\r\n            if (val.id != value.id) {\r\n                result.push({ id: val.id, value: val.value });\r\n            }\r\n        });\r\n\r\n        this.setValue(result);\r\n    },\r\n\r\n    /**\r\n     * Remove last element to global value\r\n     * @returns {} \r\n     */\r\n    removeLastElement: function() {\r\n        var list = JSON.parse(this.value);\r\n\r\n        if (list.value.length > 0) {\r\n            list.value.pop();\r\n            this.setValue(list.value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Fetch the data into a deferred\r\n     * @param {} params \r\n     * @returns {} \r\n     */\r\n    getData: function(params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n\r\n        // Resolve with remote data\r\n        self.dataService.getSearchData({\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            term: properties.term,\r\n            extra: params\r\n        }).done(function(data) {\r\n            // Resolve with fetched data\r\n            properties.data = data;\r\n            defer.resolve(properties.data);\r\n        }).fail(function(data) {\r\n            var hideStatus = data.hideStatus || false;\r\n\r\n            defer.resolve({});\r\n\r\n            if (!hideStatus) {\r\n                self.trigger(\"onSearchError\", data);\r\n            }\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Submits the selected data to the server in order to be saved\r\n     * @returns {} \r\n     */\r\n    submitData: function() {\r\n        var data = {};\r\n\r\n        // Add current data\r\n        data[this.properties.xpath] = this.getValue();\r\n\r\n        // Executes submit on change\r\n        this.submitOnChange(data);\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {} \r\n     */\r\n    canBeSent: function() {\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Check if the control has value\r\n     * @returns {} \r\n     */\r\n    hasValue: function() {\r\n        var list = this.getListItems();\r\n\r\n        return list.length > 0;\r\n    },\r\n\r\n    getListItems: function(){\r\n        var value = this.getValue();\r\n        var finalValue = typeof (value) === \"string\" ? JSON.parse(value).value : value.value;\r\n\r\n        return finalValue || [];\r\n    },\r\n    \r\n    /**\r\n     * Formats value of each item\r\n     * @param {string, boolean or array} value\r\n     * @example\r\n     * value = \"string\" => \"string\"\r\n     * value = true => \"yes\" or \"si\", the localized value\r\n     * value = false => \"no\", the localized value\r\n     * value = [\"string 1\", \"string 2\"] => \"string 1 - string 2\"\r\n     * @returns {string}\r\n     */\r\n    formatItem: function (value) {\r\n        return bizagi.util.formatItem(value);\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi User field render\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define the basic behavior for userfields\r\n*/\r\n$.Class.extend(\"bizagi.rendering.userfieldDefinition\", {}, {\r\n\r\n    /*************************************************************/\r\n    /* Private section of the userfield                          */\r\n    /*************************************************************/\r\n\r\n    /*\r\n    *   Method to be overriden by userfields in order to ensure that custom files are loaded before the execution\r\n    */\r\n    getFileDependencies: function () {\r\n        return null;\r\n    },\r\n\r\n    postRender: function () {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super();\r\n\r\n        var defer = $.Deferred();\r\n        var fileDependencies = self.getFileDependencies();\r\n        if (fileDependencies && fileDependencies.length > 0) {\r\n            bizagi.loader.loadFile(fileDependencies)\r\n\t\t\t.then(function () {\r\n\t\t\t    // After all dependencies has been resolved\r\n\t\t\t    self.internalRenderControl();\r\n\t\t\t    defer.resolve();\r\n\t\t\t});\r\n\r\n        } else {\r\n            $.when( self.renderUserfieldControl()).done(function () {\r\n                defer.resolve();\r\n            });\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    renderUserfieldControl: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n        var def = new $.Deferred();\r\n\r\n        if (properties.extendedData && properties.extendedData.length > 0) {\r\n            self.extendedData = bizagi.services.ajax.parseJSON(properties.extendedData);\r\n        } else {\r\n            self.extendedData = {};\r\n        }\r\n\r\n\r\n        var loadUserfield = function () {\r\n            var userEditableControl = self.getEditableControl();\r\n            if (userEditableControl) {\r\n                self.input = control.html(userEditableControl);\r\n            }\r\n            self.renderComplex();\r\n            def.resolve();\r\n        };\r\n\r\n        \r\n            loadUserfield();\r\n    \r\n        \r\n        return def.promise();\r\n    },\r\n\r\n    postRenderReadOnly: function () {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var properties = self.properties;\r\n\r\n        if (properties.extendedData && properties.extendedData.length > 0) {\r\n            self.extendedData = bizagi.services.ajax.parseJSON(properties.extendedData);\r\n        } else {\r\n            self.extendedData = {};\r\n        }\r\n\r\n        var loadUserfieldReadOnly = function () {\r\n            try {\r\n                var userReadOnlyControl = self.getReadonlyControl();\r\n                if (userReadOnlyControl) {\r\n                    self.input = control.html(userReadOnlyControl);\r\n                }                                                 \r\n                self.renderComplex();\r\n                \r\n            } catch (error) {\r\n                var displayName = self.properties.displayName || \"Widget\";\r\n                control.html(\"<h6>\" + displayName  + \"</h6>\")\r\n            }\r\n            \r\n        };\r\n\r\n        if (self.ready) {\r\n            self.ready().done(function () {\r\n                loadUserfieldReadOnly();\r\n            });\r\n        } else {\r\n            loadUserfieldReadOnly();\r\n        }\r\n    },\r\n\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n        return self.getReadonlyValue();\r\n    },\r\n\r\n    /*\r\n    *   Sets the value in the rendered control \r\n    */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self.setValue(value);\r\n\r\n        // Set editable value in control\r\n        self.setEditableValue(value);\r\n    },\r\n\r\n    getValue: function () {\r\n        var self = this;\r\n        return self.getEditableValue();\r\n    },\r\n\r\n    getPropertyValue: function (propertyName, params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n        self.dataService.multiaction().getPropertyData({\r\n            url: properties.dataUrl,\r\n            xpath: properties.xpath,\r\n            idRender: properties.id,\r\n            xpathContext: properties.xpathContext,\r\n            idPageCache: properties.idPageCache,\r\n            property: propertyName,\r\n            extra: params,\r\n            dataType: params ? params.dataType : null\r\n        }).done(function (data) {\r\n            if (data.type == \"error\") {\r\n                // Workflow engine error, we gotta show it with error\r\n                self.getFormContainer().addErrorMessage(data.message);\r\n                defer.reject(data);\r\n            } else {\r\n                defer.resolve(data);\r\n            }\r\n        }).fail(function (jqXHR, textStatus, errorThrown) {\r\n            defer.reject(jqXHR, textStatus, errorThrown);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /*\r\n    *   Saves the form\r\n    */\r\n    saveForm: function () {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        return form.saveForm();\r\n    },\r\n\r\n    /**\r\n    * Returns all the elements that match the given xpath\r\n    */\r\n    getRenderElements: function (xpath) {\r\n        var self = this;\r\n        var result = $();\r\n        var controls = self.getFormContainer().getRenders(xpath);\r\n        $.each(controls, function (i, item) {\r\n            result = result.add($(item.element));\r\n        });\r\n\r\n        return result;\r\n    },\r\n\r\n    getServerResourceURL: function (resource) {\r\n        var self = this;\r\n        var url = \"Rest/Userfields/{0}/resource/{1}/{2}\";\r\n        url = url.replace(\"{0}\", self.properties.userfieldGuid);\r\n        resource = resource.replace(\"\\\\\", \"__\").replace(\"/\", \"__\");\r\n        var device = bizagi.util.detectDevice();\r\n        url = url.replace(\"{1}\", device);\r\n        url = url.replace(\"{2}\", resource);\r\n        //Rest/Userfields/{0}/resource/desktop/{1}\r\n        return url;\r\n    },\r\n\r\n    /**\r\n    * Returns all the elements that match the given xpath\r\n    */\r\n    getRenderValue: function (xpath) {\r\n        var self = this;\r\n        var controls = self.getFormContainer().getRenders(xpath);\r\n        var control;\r\n        $.each(controls, function (index, item) {\r\n            if (!control || item.properties.editable) {\r\n                control = item;\r\n            }\r\n        });\r\n        if (control) {\r\n            return control.getValue();\r\n        } else {\r\n            return null;\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Refresh the current form\r\n    */\r\n    refreshForm: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n\r\n        var form = self.getFormContainer();\r\n        form.refreshForm(properties.id);\r\n    },\r\n\r\n    /*\r\n    * Shows a jquery dialog\r\n    */\r\n    showDialog: function (url, params) {\r\n        bizagi.util.mustImplement(\"Must implement the showDialog method\");\r\n    },\r\n\r\n    /*\r\n    *   Shows a browser popup\r\n    */\r\n    showPopup: function (url, params) {\r\n        bizagi.util.mustImplement(\"Must implement the showPopup method\");\r\n    },\r\n\r\n    updateOriginalValue: function () {\r\n        var self = this;\r\n        self.properties.originalValue = self.value = self.properties.value;\r\n    }\r\n\r\n\r\n});\r\n\r\n\r\n$.Class.extend(\"bizagi.rendering.basicUserField\", {}, {\r\n\r\n    /*************************************************************/\r\n    /* methods to be overriden by the implementations            */\r\n    /*************************************************************/\r\n    getEditableControl: function () {\r\n    },\r\n\r\n    renderComplex: function () {\r\n    },\r\n\r\n    // Returns the value of the control\r\n    getEditableValue: function () {\r\n        return bizagi.rendering.render.prototype.getValue.apply(this, arguments);\r\n    },\r\n\r\n    // \r\n    setEditableValue: function (value) {\r\n        return bizagi.rendering.render.prototype.setValue.apply(this, arguments);\r\n    },\r\n\r\n    getReadonlyControl: function () {\r\n    },\r\n\r\n    getReadonlyValue: function () {\r\n        // if the method is not overriden then call the parent method \r\n        return bizagi.rendering.render.prototype.getDisplayValue.apply(this, arguments);\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super();\r\n    }\r\n\r\n});\r\n\r\n/*\r\n*   This control will wrap any userfield in order to load the code remotely, \r\n*   when executing renderControl, which is an async method\r\n*/\r\n$.Class.extend(\"bizagi.rendering.userfieldWrapper\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(params);\r\n        // Save userfield guid and name\r\n        self.initialParams = params;\r\n        self.userfieldGuid = this.properties.userfieldGuid;\r\n        self.userfieldName = this.properties.control;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element\r\n    */\r\n    internalPostRender: function () {\r\n        var self = this;\r\n        $.when(self.getUserfieldControl())\r\n        .done(function (control) {\r\n            control.element = self.element;\r\n\r\n            // Add grid and surrogatekey properties if the userfield is a column userfield\r\n            if (self.column) {\r\n                control.isColumn = true;\r\n                control.grid = self.grid;\r\n                control.surrogateKey = self.surrogateKey;\r\n                control.properties.xpathContext = self.getControlXpathContext(control);\r\n                control.getControl = self.column.getControl;\r\n            }\r\n\r\n            return control.internalPostRender();\r\n        });\r\n    },\r\n\r\n    /*\r\n    *   Helper for userfields to fetch the xpathContext\r\n    */\r\n    getControlXpathContext: function (control) {\r\n        var self = this;\r\n        var properties = control.properties;\r\n\r\n        if (control.isColumn) {\r\n            return properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + control.grid.properties.xpath + \"[id=\" + control.surrogateKey + \"]\" : control.grid.properties.xpath + \"[id=\" + control.surrogateKey + \"]\";\r\n        }\r\n\r\n        return properties.xpathContext;\r\n    },\r\n\r\n\r\n    getUserFieldInstance: function(params){\r\n        console.log(\"not implemented\");\r\n    },\r\n\r\n    /*\r\n    *   Replicate all userfield methods to this instance in order to create a proxy\r\n    */\r\n    replicateUserfieldMethods: function (control) {\r\n        var self = this;\r\n        for (var key in control.Class.prototype) {\r\n            // Omit the folowing methods\r\n            if (key == \"init\" || key == \"constructor\" || key == \"Class\" || key == \"subscribe\" || key == \"unsubscribe\" ||\r\n                key == \"publish\" || key == \"render\" || key == \"triggerHandler\" || key == \"dispose\") continue;\r\n\r\n            // Replicate instance methods\r\n            self[key] = eval('var tmp = function(){ if (this.userfieldInstance) return this.userfieldInstance.' + key + '.apply(this.userfieldInstance, arguments); return null;};tmp');\r\n        }\r\n\r\n        // Replicate properties and value\r\n        control.properties = self.properties;\r\n        control.value = self.value;\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self.userfieldInstance) {\r\n                self.userfieldInstance.unbind(\"renderchange\");\r\n                self.userfieldInstance.dispose();\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n\r\n        // Call base\r\n        self._super();\r\n    }\r\n});\r\n\r\n","/**\r\n*   Name: Bizagi Render Image Class\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will define basic stuff for image control\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.image\", {\r\n    // Statics\r\n    BA_ACTION_PARAMETER_PREFIX: bizagi.render.services.service.BA_ACTION_PARAMETER_PREFIX,\r\n    BA_CONTEXT_PARAMETER_PREFIX: bizagi.render.services.service.BA_CONTEXT_PARAMETER_PREFIX,\r\n    BA_PAGE_CACHE: bizagi.render.services.service.BA_PAGE_CACHE\r\n}, {\r\n\r\n    /**\r\n     * Update or init the element data\r\n     * @param data\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        // Fill default properties\r\n        var properties = this.properties;\r\n        var maxSize = 4091904;\r\n\r\n        if(properties.maxSize) {\r\n            maxSize = Number(properties.maxSize);\r\n        } else if (typeof (BIZAGI_SETTINGS) !== \"undefined\" && typeof (BIZAGI_SETTINGS.UploadMaxFileSize) !== \"undefined\") {\r\n            maxSize = Number(BIZAGI_SETTINGS.UploadMaxFileSize);\r\n        }\r\n\r\n        properties.maxSize = maxSize;\r\n        properties.editable = bizagi.util.parseBoolean(properties.editable) === true;\r\n        properties.validExtensions = properties.validExtensions || \"\";\r\n\r\n        if (properties.validExtensions.length > 0 && properties.validExtensions.indexOf(\".\") < 0) {\r\n            var singleExtensions = properties.validExtensions.replace(/\\ /gi, '').split(\";\");\r\n\r\n            for (var i = 0; i < singleExtensions.length; i++) {\r\n                if (singleExtensions[i].length != 0) {\r\n                    singleExtensions[i] = \"*.\" + singleExtensions[i].replaceAll(\" \", \"\");\r\n                } else {\r\n                    //Removes the empty element\r\n                    var index = singleExtensions.indexOf(singleExtensions[i]);\r\n                    singleExtensions.splice(i, 1);\r\n                }\r\n            }\r\n\r\n            properties.validExtensions = singleExtensions.join(\";\");\r\n        }\r\n\r\n        properties.addUrl = properties.addUrl || self.dataService.getUploadAddFileUrl(properties.isUserPreference);\r\n        properties.allowDelete = bizagi.util.parseBoolean(properties.allowDelete) !== null\r\n\r\n        properties.isAutoWidth = false;\r\n        properties.isAutoHeight = false;\r\n\r\n        if (properties.width === -1) {\r\n            properties.width = \"100%\";\r\n            properties.isAutoWidth = true;\r\n        } else {\r\n            properties.width = properties.width + \"px\";\r\n        }\r\n\r\n        if (properties.height === -1) {\r\n            properties.height = \"auto\";\r\n            properties.isAutoHeight = true;\r\n        } else {\r\n            properties.height = properties.height + \"px\";\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @returns {*}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var def = new $.Deferred(); //design\r\n        var template = self.renderFactory.getTemplate(\"image\");        \r\n\r\n        $.when(self.buildItemUrl()).done(function (dataUrl) {\r\n            if (!self.isDisposed()) {\r\n                self.properties.url = dataUrl !== \"\" ? dataUrl : \"\";\r\n                self.properties.value = self.value = self.properties.url.length > 0 ? [self.properties.url] : null;\r\n                self.setValue(self.properties.value);                \r\n\r\n                var html = $.fasttmpl(template, { url: self.properties.url });\r\n                def.resolve(html);\r\n            }\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Method to render non editable values\r\n     * @returns {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"image-readonly\");\r\n        var html = $.fasttmpl(template);\r\n\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * This method return the name of template of items, please make a override in each device\r\n     * @returns {*}\r\n     */\r\n    getTemplateItem: function () {\r\n        return this.renderFactory.getTemplate(\"image-item\");\r\n    },\r\n\r\n    /**\r\n     * Renders a single upload item\r\n     * @param file\r\n     * @returns {*}\r\n     */\r\n    renderUploadItem: function (file) {\r\n        var self = this;\r\n        var mode = self.getMode();        \r\n        var def = new $.Deferred();\r\n        var template = self.getTemplateItem();\r\n\r\n        $.when(self.buildItemUrl()).done(function (dataUrl) {\r\n            var url = dataUrl || \"\";\r\n\r\n            var html = $.fasttmpl(template, {\r\n                url: url,\r\n                allowDelete: self.properties.allowDelete,\r\n                editable: self.properties.editable,\r\n                mode: mode,                \r\n            });\r\n\r\n            self.properties.url = url;\r\n            self.properties.value = url.length > 0 ? [url] : null;\r\n\r\n            def.resolve(html);\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url\r\n     * @param params\r\n     * @returns {*}\r\n     */\r\n    buildItemUrl: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var def = new $.Deferred();\r\n        var url = \"\";\r\n\r\n        if (!this.isExecutionMode()) {\r\n            url = \"\"; // TODO: Review the use of \"javascript:void(0);\";\r\n            def.resolve(url);\r\n        } else {\r\n            var parameters = {\r\n                url: properties.dataUrl,\r\n                xpath: properties.xpath,\r\n                idRender: properties.id,\r\n                xpathContext: properties.xpathContext,\r\n                idPageCache: properties.idPageCache,\r\n                property: params && params.property ? params.property : \"fileContent\",\r\n                dataType: \"text\"\r\n            };\r\n\r\n            if (properties.contexttype) {\r\n                parameters.contexttype = properties.contexttype;\r\n            }\r\n\r\n            if (properties.isUserPreference) {\r\n                self.currentUser = bizagi.currentUser.idUser;\r\n                parameters.xpathContext = \"@Context.Users[id == \" + self.currentUser + \"]\";\r\n                parameters.contexttype = \"entity\";\r\n                parameters.surrogatekey = self.currentUser;\r\n            }\r\n\r\n            self.dataService.multiaction().getPropertyData(parameters, \"text\")\r\n                .done(function (data) {\r\n                    if (data.charAt(0) === \"\\\"\") {\r\n                        data = data.slice(1, -1);\r\n                    }\r\n\r\n                    if (data !== \"\") {\r\n                        url = \"data:image/png;base64,\" + data;\r\n                    }\r\n\r\n                    def.resolve(url);\r\n                });\r\n        }\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    buildItemUrlOffline: function(parameters){\r\n        var def = new $.Deferred();\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var formParams = self.getFormParams();\r\n        var parameters = {\r\n            idCase: formParams.idCase,\r\n            idWorkitem: formParams.idWorkitem,\r\n            id: properties.xpath,\r\n            offlineType: formParams.offlineType\r\n        }\r\n        $.when(self.dataService.getOfflineImage(parameters, \"base64\"))\r\n        .done( function(imageValue){\r\n            properties.value = imageValue;\r\n            def.resolve(bizagi.util.getDataUrl(properties));\r\n        });\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Create an image offline\r\n     * @param path File in Browser or Path in Mobile Devices\r\n     * @param promise Promise to be resolved when save is completed\r\n     */\r\n    saveImageOffline: function (path, promise) {\r\n        var self = this;        \r\n        var blobPromise = new $.Deferred();\r\n\r\n        if(self.isNative){\r\n            var fileName = self.fileProperties.name;            \r\n            if (!bizagi.util.isAndroidDevice()) {\r\n                path = bizagi.util.media.normalizeIOSFilePath(path);\r\n            }\r\n            else{\r\n                // Fix android 4.4 getting images from recent folder\r\n                path = bizagi.util.media.getImagePath(path);\r\n            }\r\n            \r\n            var errorHandler = function (error) {\r\n                bizagi.log('error converting path to blob', error);  \r\n                blobPromise.reject(error);\r\n            };\r\n    \r\n            window.resolveLocalFileSystemURL(path, function (fileEntry) {\r\n                fileEntry.file(function (file) {    \r\n                    var reader = new FileReader();\r\n                    reader.onloadend = function () {\r\n                        var blob = new Blob([this.result], {type: file.type});\r\n                        blob.name = fileName;\r\n                        blobPromise.resolve(blob);\r\n                    }    \r\n                    reader.readAsArrayBuffer(file);\r\n                }, errorHandler);\r\n            }, errorHandler);\r\n        }\r\n        else {\r\n            blobPromise.resolve(path);\r\n        }        \r\n\r\n        $.when(blobPromise)\r\n        .done( function(blobImage) {\r\n            // Save the image as attachment \r\n            var formParams = self.getFormParams();\r\n            var parameters = {\r\n                idCase: formParams.idCase,\r\n                idWorkitem: formParams.idWorkitem,\r\n                id: self.properties.xpath,\r\n                operationType: \"edition\",\r\n                offlineType: formParams.offlineType\r\n            }\r\n\r\n            $.when(self.dataService.saveOfflineImage(parameters, blobImage))\r\n            .done( function() {\r\n                promise.resolve();\r\n            });\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Builds the upload item url in real size\r\n     * @returns {*}\r\n     */\r\n    buildFullItemUrl: function () {\r\n        var def = new $.Deferred();\r\n\r\n        $.when(this.buildItemUrl({\"property\": \"fileFullContent\"}))\r\n            .done(function (dataUrl) {\r\n                def.resolve(dataUrl);\r\n            });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Method to determine if the render value can be sent to the server or not\r\n     * @returns {boolean}\r\n     */\r\n    canBeSent: function () {\r\n        // This render cannot be sent because it is full ajax\r\n        return false;\r\n    },\r\n\r\n    /**\r\n     * Sets the internal value\r\n     * @param value\r\n     * @param triggerEvents\r\n     */\r\n    setValue: function (value, triggerEvents) {\r\n        // Call base\r\n        this._super(value, triggerEvents);\r\n    },\r\n\r\n    /**\r\n     * Returns the internal value\r\n     * @returns {*|Array}\r\n     */\r\n    getValue: function () {\r\n        return this.properties.value || [];\r\n    },\r\n\r\n    /**\r\n     * Check if control is valid or not\r\n     * @param invalidElements\r\n     * @returns {boolean}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(self.properties.visible) === false) {\r\n            return true;\r\n        }\r\n\r\n        // Don't check non- editable renders\r\n        if (bizagi.util.parseBoolean(self.properties.editable) === false) {\r\n            return true;\r\n        }\r\n\r\n        // Clear error message\r\n        self.setValidationMessage(\"\");\r\n\r\n        // Check required\r\n        if (self.properties.required) {\r\n            var newRow = self.grid && self.grid.isFromCreatedRow.apply(self);\r\n\r\n            if (!newRow) {\r\n                var value = self.getValue();\r\n\r\n                if (value.length === 0) {\r\n                    var message = self.getResource(\"render-required-text\").replaceAll(\"#label#\", self.properties.displayName);\r\n                    invalidElements.push({ xpath: self.properties.xpath, message: message });\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    },\r\n\r\n    /**\r\n     * Build add params to send to the server\r\n     */\r\n    buildAddParams: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var form = self.getFormContainer();\r\n        var data = {};\r\n\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpath\"] = self.getUploadXpath();\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"idRender\"] = properties.id;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"xpathContext\"] = properties.xpathContext;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + self.Class.BA_PAGE_CACHE] = properties.idPageCache;\r\n        data[self.Class.BA_ACTION_PARAMETER_PREFIX + \"sessionId\"] = form.properties.sessionId;\r\n        data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"action\"] = 'savefile';\r\n\r\n        if (properties.contexttype) {\r\n            data[self.Class.BA_CONTEXT_PARAMETER_PREFIX + \"contexttype\"] = properties.contexttype;\r\n        }\r\n\r\n        try {\r\n            if (typeof (BIZAGI_SESSION_NAME) !== \"undefined\") {\r\n                data[BIZAGI_SESSION_NAME] = form.properties.sessionId;\r\n            } else {\r\n                data[\"JSESSIONID\"] = form.properties.sessionId;\r\n            }\r\n        } catch (e) {\r\n            data[\"JSESSIONID\"] = form.properties.sessionId;\r\n        }\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n     * Returns the xpath to be used\r\n     * @returns {*}\r\n     */\r\n    getUploadXpath: function () {\r\n        return this.properties.xpath;\r\n    },\r\n\r\n    /**\r\n     * Clean html because some scenarios render twice\r\n     */\r\n    emptyControlByAsyncRenderDeferred: function () {\r\n        var $control = this.getControl();\r\n        $control.empty();\r\n    }\r\n});","/*\r\n*   Name: BizAgi Render Association Class\r\n*   Author: Edward Morales\r\n*   Comments:\r\n*   -   This script will define basic stuff for association renders\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.association\", {}, {\r\n\r\n    /*\r\n    *   Update or init the element data\r\n    */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(data);\r\n\r\n        var properties = self.properties;\r\n\r\n        // Fill default properties\r\n        properties.property = \"flipped\";\r\n        properties.idRender = self.properties.id;\r\n        properties.allowFlip = (typeof properties.allowFlip != \"undefined\") ? bizagi.util.parseBoolean(properties.allowFlip) : true;\r\n        properties.flipped = (typeof properties.flipped != \"undefined\") ? bizagi.util.parseBoolean(properties.flipped) : false;\r\n        properties.flipstate = properties.flipped;\r\n\r\n\r\n        // data of entities (left and right)\r\n        properties.leftData = properties.leftData || [];\r\n        properties.rightData = properties.rightData || [];\r\n\r\n        if (properties.value) {\r\n            self.processPropertyValue();\r\n        }\r\n    },\r\n\r\n\r\n\r\n    /*\r\n    *   Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"association\");\r\n        var def = new $.Deferred();\r\n\r\n        self.properties.property = \"flipped\";\r\n        self.properties.idRender = self.properties.id;\r\n\r\n        // Define flipped\r\n        $.when(self.getFlipAssociation())\r\n            .done(function (flip) {\r\n\r\n                // Make json base, create self.properties.formatJson\r\n                self.makeJsonBase();\r\n\r\n                self.properties.flipped = bizagi.util.parseBoolean(flip) || false;\r\n\r\n                var html = $.fasttmpl(template, self.properties, {\r\n                    getColumnData: self.getColumnData,\r\n                    getRightAssociation: self.getRightAssociation\r\n                });\r\n\r\n                /* by default need set self.properties.formatJson */\r\n                self.setValue(JSON.encode(self.properties.formatJson));\r\n\r\n                def.resolve(html);\r\n            });\r\n\r\n        return def.promise();\r\n    },\r\n\r\n\r\n    /*\r\n    * Returns the flip state\r\n    */\r\n    getFlipAssociation: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n\r\n        if (mode == \"execution\")\r\n            return self.dataService.getFlipAssociation(self.properties);\r\n\r\n        return false;\r\n    },\r\n\r\n    /* \r\n    *   Gets the display value of the render\r\n    */\r\n    getDisplayValue: function () {\r\n        var self = this;\r\n        var value = self.getValue();\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Get the template \r\n    */\r\n    getTemplateName: function () {\r\n        return \"association\";\r\n    },\r\n\r\n\r\n    /**\r\n    * Get Left Data, verify if flipper flags sets true\r\n    * \r\n    * @param column {'0'||'1'}\r\n    */\r\n    getColumnData: function () {\r\n        var self = this;\r\n        var properties = self.data;\r\n        var data = [];\r\n        var associationData = properties.flipped ? properties.rightData : properties.leftData;\r\n\r\n        $.each(associationData, function(key, item) {\r\n            data.push({ id: item.id, value: item.value });\r\n        });\r\n\r\n        return data;\r\n    },\r\n\r\n    /**\r\n    * Association of right elements\r\n    */\r\n    getRightAssociation: function (leftId) {\r\n        var self = this;\r\n        var properties = self.data;\r\n        var association = [];\r\n\r\n\r\n        var isChecked = function (leftId, idRight) {\r\n            var checked = false;\r\n            $.each(properties.formatJson.value, function (key, value) {\r\n                if (!checked && value.id == leftId && value.value.indexOf(idRight) >= 0) {\r\n                    checked = true;\r\n                }\r\n            });\r\n\r\n            return checked;\r\n        };\r\n\r\n        // create association and check element\r\n        if (properties.flipped) {\r\n            // left element\r\n            $.each(properties.leftData, function (key, data) {\r\n                association.push({\r\n                    id: data.id,\r\n                    name: data.value,\r\n                    checked: isChecked(data.id, leftId)\r\n                });\r\n\r\n            });\r\n        } else {\r\n            $.each(properties.rightData, function (key, data) {\r\n                association.push({\r\n                    id: data.id,\r\n                    name: data.value,\r\n                    checked: isChecked(leftId, data.id)\r\n                });\r\n            });\r\n        }\r\n\r\n        return association;\r\n    },\r\n\r\n\r\n    removeElement: function (leftId, rightId) {\r\n        var self = this;\r\n\r\n        $.each(self.properties.formatJson.value, function (key, data) {\r\n            if (self.properties.flipped) {\r\n                if (data.id == rightId) {\r\n                    // Remove right element from left panel\r\n                    $.each(self.properties.formatJson.value[key][\"value\"], function (removeKey, removeValue) {\r\n                        if (leftId == removeValue) {\r\n                            // Splice from array\r\n                            self.properties.formatJson.value[key][\"value\"].splice(removeKey, 1);\r\n                        }\r\n                    });\r\n                }\r\n            } else if (data.id == leftId) {\r\n                // Remove right element from left panel\r\n                $.each(self.properties.formatJson.value[key][\"value\"], function (removeKey, removeValue) {\r\n                    if (rightId == removeValue) {\r\n                        // Splice from array\r\n                        self.properties.formatJson.value[key][\"value\"].splice(removeKey, 1);\r\n                    }\r\n                });\r\n            }\r\n        });\r\n        self.setValue(JSON.encode(self.properties.formatJson));\r\n    },\r\n\r\n\r\n    addElement: function (leftId, rightId) {\r\n        var self = this;\r\n\r\n        $.each(self.properties.formatJson.value, function (key, data) {\r\n            if (self.properties.flipped) {\r\n                if (data.id == rightId) {\r\n                    // Add right element to left panel\r\n                    self.properties.formatJson.value[key][\"value\"].push(leftId);\r\n                }\r\n            } else if (data.id == leftId) {\r\n                // Add right element to left panel\r\n                self.properties.formatJson.value[key][\"value\"].push(rightId);\r\n            }\r\n        });\r\n        self.setValue(JSON.encode(self.properties.formatJson));\r\n    },\r\n\r\n    makeJsonBase: function () {\r\n        var self = this;\r\n        self.properties.formatJson = self.properties.formatJson || {\r\n            leftXpath: self.properties.leftXpath,\r\n            rightXpath: self.properties.rightXpath,\r\n            leftFactName: self.properties.leftFactName,\r\n            rightFactName: self.properties.rightFactName,\r\n            value: self.properties.value\r\n        };\r\n    },\r\n\r\n\r\n    /*\r\n    *   Check if a render has no value for required validation\r\n    */\r\n    hasValue: function () {\r\n        var self = this;\r\n\r\n        if (self.properties.formatJson) {\r\n            var values = self.properties.formatJson.value;\r\n        } else {            \r\n            values = self.properties.value;\r\n        }\r\n       \r\n\r\n        for (var i = 0, l = values.length; i < l; i++) {\r\n            var data = values[i];\r\n            if (data && data.value.length > 0) {\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    },\r\n\r\n    /*\r\n    * This method process the value.\r\n    * changes the format to send request\r\n    */\r\n    processPropertyValue: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var values = properties.value;\r\n        var result = [];\r\n\r\n        for (var i = 0, l = values.length; i < l; i++) {\r\n            var value = values[i];\r\n            result.push({ id: value[0], value: value[1] });\r\n        }\r\n\r\n        properties.value = result;\r\n    }\r\n});","/**\r\n * Description of control\r\n *\r\n * @author:\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.getUser\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        var properties = this.properties;\r\n        properties.allowDelegatedUser = this.properties.xpath && this.properties.xpath === \"idDelegate\";\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"render-getUser\");\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, {});\r\n        return html;\r\n    },\r\n\r\n    renderReadOnly: function () {\r\n        var result = this._super();\r\n        var html = result;\r\n        if(!bizagi.util.isString(html)){\r\n            html = result[0] && result[0].value ? result[0].value : \"\";\r\n        }\r\n        \r\n        return html;\r\n    },\r\n\r\n    /*\r\n     * Public method to determine if a value is valid or not\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        return bValid;\r\n    }\r\n\r\n});","/*\r\n *   Name: BizAgi Render Query Process\r\n *   Author: Jeison Borja\r\n *   Comments:\r\n *   -   This script will define basic stuff for query process renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.queryProcess\", {}, {\r\n    /*\r\n    * Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n    * Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"queryProcess\");\r\n        var html = $.fasttmpl(template, {});\r\n        return html;\r\n    },\r\n    loadtemplates: function () { }\r\n});","/*\r\n *   Name: BizAgi Render Query Search User\r\n *   Author: Jeison Borja\r\n *   Comments:\r\n *   -   This script will define basic stuff for query search user renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.querySearchUser\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"render-querySearchUser\");\r\n        var html = $.fasttmpl(template, {});\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     *   Fetch the data into a deferred\r\n     */\r\n    getUserData: function (params) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var defer = new $.Deferred();\r\n        var form = self.getFormContainer();\r\n        var contextType = form.getContextType() || false;\r\n        params = params || {};\r\n\r\n        // Verify context type\r\n        if (self.properties.contexttype) {\r\n            params.h_contexttype = self.properties.contexttype;\r\n        } else if (contextType) {\r\n            params.h_contexttype = contextType;\r\n        }\r\n        //GET DATA\r\n        var data = [{\"id\":1,\"value\":\"user1\"},{\"id\":2,\"value\":\"user2\"},{\"id\":3,\"value\":\"user3\"},{\"id\":4,\"value\":\"user4\"},{\"id\":5,\"value\":\"user5\"},{\"id\":6,\"value\":\"user6\"},{\"id\":7,\"value\":\"user7\"},{\"id\":8,\"value\":\"user8\"},{\"id\":9,\"value\":\"user9\"},{\"id\":10,\"value\":\"user10\"}];\r\n        properties.data = data;\r\n        defer.resolve(properties.data);\r\n        return defer.promise(defer);\r\n\r\n    },\r\n\r\n    /*\r\n     *   Sets the value in the rendered control\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        var displayValue = self.getDisplayValue();\r\n        var decodedValue = bizagi.util.decodeURI(value);\r\n        var decodedDisplayValue = bizagi.util.decodeURI(displayValue);\r\n        if (self.properties.editable == false) {\r\n            // Render as simple value\r\n            if (typeof (value) == \"string\") {\r\n\r\n                // Replace line breaks for html line breaks\r\n                var valueToDisplay = decodedDisplayValue.replaceAll(\"&\", \"&amp;\");\r\n                valueToDisplay = valueToDisplay.replaceAll(\"<\", \"&lt;\").replaceAll(\">\", \"&gt;\");\r\n                valueToDisplay = valueToDisplay.replaceAll(\"\\\"\", \"&#34;\").replaceAll(\"'\", \"&#39;\").replaceAll(\"/\", \"&#47;\");\r\n                valueToDisplay = valueToDisplay.replaceAll(\"\\\\n\", \"<br/>\");\r\n                valueToDisplay = valueToDisplay.replaceAll(\"\\n\", \"<br/>\");\r\n\r\n                control.html(valueToDisplay);\r\n            }\r\n        }\r\n\r\n        // Set internal value\r\n        self.setValue(decodedValue, false);\r\n    },\r\n    /**\r\n     * Extend setValue to fix all encode data from database\r\n     * More information SUITE-9407\r\n     */\r\n    setValue: function (value) {\r\n        /*ISUPP-4116/*\r\n         /*var decodedValue = bizagi.util.decodeURI(value);*/\r\n        var self = this;\r\n        self._super(value);\r\n    }\r\n});","/*\r\n *   Name: Bizagi Render ComboSelected class\r\n *   Author: Paola Herrera\r\n *   Comments:\r\n *   -   This script will define basic stuff for comboSelected renders\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.comboSelected\", {}, {\r\n    /* \r\n    * Constructor \r\n    */\r\n    init: function (params) {\r\n        // Call base \r\n        this._super(params);\r\n        this.leftValues = this.filterData();\r\n        this.rightValues = JSON.parse(JSON.stringify(this.properties.value));\r\n    },\r\n    /*\r\n    * Template method to implement in each children to customize each control\r\n    */\r\n    renderControl: function () {\r\n        var template = this.renderFactory.getTemplate(\"render-comboSelected\");\r\n        var html = $.fasttmpl(template, { dataList: this.leftValues });\r\n        return html;\r\n    },\r\n\r\n    orderArraySelected: function (dataList) {\r\n        var arrayOrder = dataList;\r\n\r\n        var order = arrayOrder.sort(function (a, b) {\r\n            var nA = a.value === undefined || a.value === null ? \"\" : a.value.toString().toLowerCase();\r\n            var nB = b.value === undefined || b.value === null ? \"\" : b.value.toString().toLowerCase();\r\n            if (nA < nB)\r\n                return -1;\r\n            else if (nA > nB)\r\n                return 1;\r\n            return 0;\r\n        });\r\n\r\n        return order;\r\n    },\r\n\r\n    /*\r\n    * Filter data before set\r\n    */\r\n    filterData: function () {\r\n        var self = this;\r\n        var dataListArray = [];\r\n\r\n        if(self.properties.data) {\r\n            $.each(self.properties.data, function (i, data) {\r\n                var el = $.grep(self.properties.value, function (value, e) {\r\n                    return (self.properties.xpath == \"Organizations\") ? value.id == data.id : value.id === data.id;\r\n                });\r\n    \r\n                if (!el.length) {\r\n                    dataListArray.push(data);\r\n                }\r\n            });\r\n        }\r\n\r\n        return dataListArray;\r\n    },\r\n\r\n    /*\r\n    * Template method to implement in each children to customize each control\r\n    */\r\n    renderControlReadOnly: function () {\r\n        var template = this.renderFactory.getTemplate(\"render-comboSelectedReadOnly\");\r\n        var html = $.fasttmpl(template, {});\r\n        return html;\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render userPassword class\r\n *   Author: Paola Herrera\r\n *   Comments:\r\n *   -   This script will define basic stuff for userPassword render\r\n */\r\n$.Class.extend(\"bizagi.rendering.userPassword\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n        this.properties.value = null;\r\n        self.properties = this.properties;\r\n    },\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"render-userPassword\");\r\n        // Render template\r\n        var html = $.fasttmpl(template, {valuePassword: self.properties.value});\r\n        return html;\r\n    },\r\n\r\n    /*\r\n     * Public method to determine if a value is valid or not\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n\r\n        return bValid;\r\n    }\r\n});","/*\r\n *   Name: BizAgi Render Stateholder\r\n *   Author: Fabian Moreno\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.stakeholder\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        if (typeof this.properties.value === \"undefined\") {\r\n            this.properties.value = [];\r\n        }\r\n\r\n        if (typeof this.properties.data === \"undefined\") {\r\n            this.properties.data = [];\r\n        }\r\n        self.properties = this.properties;\r\n    },\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var template = self.renderFactory.getTemplate(\"stakeholder\");\r\n\r\n        var params =  {\r\n            currentUser: bizagi.currentUser.userName,\r\n            userNames: (typeof self.properties.value == \"string\") ? JSON.parse(self.properties.value).value: self.properties.value,\r\n            entities: self.properties.data\r\n        };\r\n\r\n        // Render template\r\n        var html = $.fasttmpl(template, params);\r\n        return html;\r\n    },\r\n\r\n    getData: function (valueXpath, currentPage, filter, sort, order) {\r\n        var self = this;\r\n\r\n        if (typeof currentPage === \"undefined\" || currentPage == null)\r\n            currentPage = \"1\";\r\n\r\n        var params= {\r\n            pxpath:valueXpath,\r\n            prows: \"10\",\r\n            ppage: currentPage.toString(),\r\n            xpath:valueXpath,\r\n            idRender:self.properties.id,\r\n            xpathContext:self.properties.xpathContext,\r\n            idPageCache:self.properties.idPageCache,\r\n            property:\"dataxpath\",\r\n            contexttype:\"entity\",\r\n            pfilter: filter,\r\n            psort: sort\r\n        };\r\n\r\n        if(order) params.porder = order;\r\n\r\n        return self.dataService.multiaction().getPropertyData(params);\r\n    },\r\n\r\n    associatedUser: function (idEntity, guidEntity, idUser) {\r\n        var self = this;\r\n\r\n        return self.dataService.associateStakeholder({\r\n\r\n            idPageCache:self.properties.idPageCache,\r\n            contexttype:\"entity\",\r\n            surrogateKey: parseInt(idEntity),\r\n            associatedUser: JSON.encode({dataType:\"Int\", value:(idUser == \"null\")?idUser:parseInt(idUser)}),\r\n            guidentity: guidEntity\r\n        });\r\n    },\r\n\r\n    refreshStakeholderList: function () {\r\n        var self = this;\r\n\r\n        return self.dataService.refreshAssociateStakeholder({\r\n\r\n            idRender:self.properties.id,\r\n            contexttype:\"entity\",\r\n            property:\"value\",\r\n            idPageCache:self.properties.idPageCache\r\n        });\r\n    }\r\n});","/**\r\n * Base definition of Action Launcher and Entity template controls\r\n *\r\n * @author: Edward Morales\r\n */\r\n$.Class.extend(\"bizagi.rendering.actionLauncher\", {}, {\r\n\r\n    /*\r\n     * Initialize the control with data provided\r\n     */\r\n    initializeData: function (data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n        var form = self.getFormContainer();\r\n        this.typeForm = form.properties.typeForm || \"\";\r\n        var mode = self.getMode();\r\n        var properties = self.properties;\r\n\r\n        self.deferredActions = new $.Deferred();\r\n        self.deferredActions.promise();\r\n\r\n        if (mode == \"execution\") {\r\n            self.engine = new bizagi.templateEngine({\r\n                renderFactory: self.renderFactory,\r\n                cache: true,\r\n                autoGenerateData: false,\r\n                templateGuid: properties.selecttemplate\r\n            });\r\n        }\r\n\r\n        // Data of get process property value\r\n        self.processPropertyValueArgs = {\r\n            \"pcaseId\": self.getIdCase(),\r\n            \"pguidEntity\": self.properties.guidEntity,\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"property\": \"data\",\r\n            \"psurrogatedKey\": self.properties.surrogatedKey,\r\n            \"ptags\": self.properties.tagslist || [],\r\n            \"pmaxitems\": self.properties.maxItems,\r\n            \"pactionXpath\": self.properties.xpathActions\r\n        };\r\n\r\n        self.processPropertyValueDataTmplArgs = {\r\n            \"pactionXpath\": self.properties.xpathActions,\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"ptemplateGuid\": properties.selecttemplate,\r\n            \"property\": \"dataTemplate\",\r\n            \"xpathActions\": self.properties.xpathActions\r\n        };\r\n\r\n        self.properties.valueWidth = 100;\r\n        self.properties.displayType = \"value\";\r\n        var defaultAllowActions = data.properties.type === \"entityTemplate\" ? false : true;\r\n        self.properties.allowactions = (typeof data.properties.allowactions == \"undefined\")\r\n            ? defaultAllowActions : data.properties.allowactions;\r\n        self.properties.isHorizontal = (typeof data.properties.isHorizontal == \"undefined\")\r\n            ? true : data.properties.isHorizontal;\r\n        self.properties.allowSearch = (typeof data.properties.allowSearch == \"undefined\")\r\n            ? false : data.properties.allowSearch;\r\n        self.properties.selecttemplate = (typeof data.properties.selecttemplate == \"undefined\")\r\n            ? \"\" : data.properties.selecttemplate;\r\n        self.properties.templatetype = (typeof properties.templatetype != \"undefined\")\r\n            ? properties.templatetype : 'none';\r\n\r\n        self.properties.sessionId = form.params.data.sessionId;\r\n\r\n        if (!self.properties.value) {\r\n            self.properties.value = self.value = [];\r\n            self.properties.originalValue = [];\r\n        } else if (typeof self.properties.value == \"string\") {\r\n            self.properties.value = self.value = JSON.parse(self.properties.value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Send processpropertyvalue in order to execute an Action\r\n     * This method is used when this control stay in Summary form or Global form\r\n     * @param action\r\n     */\r\n    executeActionImmediately: function (action) {\r\n        var self = this;\r\n        //Execute action immediately\r\n        var form = self.getFormContainer();\r\n\r\n        var processPropertyValueExecuteAction = {\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"property\": \"executeAction\",\r\n            \"psurrogatedKey\": self.properties.surrogatedKey,\r\n            \"pguidAction\": action.guidAction,\r\n            \"pparameters\": JSON.encode({\r\n                \"idStartScope\": action.idStartScope,\r\n                \"pactionXpath\": self.properties.xpathActions,\r\n                \"idPageCache\": action.idPageCache\r\n            })\r\n        };\r\n\r\n        self.dataService.executeActions(processPropertyValueExecuteAction).done(function (data) {\r\n            self.notifyExecution(data, action);\r\n        }).fail(function (error) {\r\n            // TODO: Create generic mechanism to send notifications\r\n            self.notifyExecution(\"Error\", action);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * notify action execution status\r\n     * @param response\r\n     * @param actionName\r\n     */\r\n    notifyExecution: function (response, actionName) {\r\n        // To override in each device\r\n    },\r\n\r\n    /**\r\n     * Render control in read only mode: properties.editable = false\r\n     * @return {*}\r\n     */\r\n    renderReadOnly: function () {\r\n        return this.renderControl();\r\n    },\r\n\r\n    /**\r\n     * Make a postrender of readonly control\r\n     */\r\n    postRenderReadOnly: function () {\r\n        this.properties.readOnly = true;\r\n        this.postRender();\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     * @return {string}\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        var mode = self.getMode();\r\n        var template;\r\n        var html = \"\";\r\n\r\n        // Render template\r\n        if (mode == \"design\") {\r\n            template = self.renderFactory.getTemplate(\"render-actionLauncher-design\");\r\n            var params = {\r\n                type: properties.type,\r\n                isHorizontal: properties.isHorizontal,\r\n                allowSearch: properties.allowSearch,\r\n                templateDefined: properties.templatetype != 'none',\r\n                allowactions: properties.allowactions\r\n            };\r\n            html = $.fasttmpl(template, params);\r\n        } else if (properties.surrogatedKey) {\r\n            template = self.renderFactory.getTemplate(\"render-actionLauncher\");\r\n            html = $.fasttmpl(template, { allowactions: self.properties.allowactions });\r\n        }\r\n        return html;\r\n    },\r\n\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     * @param invalidElements\r\n     * @return {*}\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var value = self.getValue();\r\n        var bValid = false;\r\n\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.visible) == false) {\r\n            return true;\r\n        }\r\n        // Don't check non-editable renders\r\n        if (bizagi.util.parseBoolean(properties.editable) == false) {\r\n            return true;\r\n        }\r\n\r\n        // Check required\r\n        if (properties.required) {\r\n            if (self.value) {\r\n                if (self.value.length > 0)\r\n                    return true;\r\n                message = self.getResource(\"render-required-register-action\");\r\n                invalidElements.push({ xpath: properties.xpath, message: message });\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     * @param value\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        // TODO: write functionality\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n    },\r\n\r\n    /**\r\n     * Process an action\r\n     * @param action\r\n     */\r\n    actionManager: function (action) {\r\n        var self = this;\r\n        var guidProcess = action.guidProcess || \"\";\r\n        var def = new $.Deferred();\r\n\r\n        action.recordXpath = self.getFormContainer().properties.recordXpath;\r\n\r\n        /**\r\n         * Check if action is a process\r\n         */\r\n        switch (action.actionType) {\r\n            case \"Process\":\r\n                // Verify if case has startform\r\n                var params = {\r\n                    guidWFClass: guidProcess\r\n                };\r\n\r\n                $.when(self.dataService.hasStartForm(params)).done(function (result) {\r\n                    if (result.hasStartForm) {\r\n                        // Open a dialog with startform and wait for Scope\r\n                        $.when(self.processStartForm({\r\n                            guidprocess: guidProcess,\r\n                            title: action.displayName,\r\n                            recordXpath: action.recordXpath\r\n                        })).done(function (idStartScope) {\r\n                            action.idStartScope = idStartScope;\r\n                            def.resolve(action);\r\n                        });\r\n                    } else {\r\n                        // Just add action to queue to be executed on nextEvent\r\n                        def.resolve(action);\r\n                    }\r\n                });\r\n\r\n                break;\r\n            case \"Rule\":\r\n                // Just add action to queue to be executed on nextEvent\r\n                def.resolve(action);\r\n                break;\r\n            case \"Form\":\r\n                // If it has additional xpath this action is a form of collection\r\n                if (action.xpathContext) {\r\n                    $.when(self.processActionFormCollection(action)).done(function (idStartScope) {\r\n                        action.idStartScope = idStartScope;\r\n                        def.resolve(action);\r\n                    });\r\n                } else {\r\n\r\n                    if (action.actionType === \"Form\") {\r\n                        action.xpathContext = undefined;\r\n                        action.contextType = \"entitytemplate\";\r\n                        action.guidEntity = action.guidEntity || self.properties.guidEntity;\r\n                    }\r\n\r\n                    $.when(self.processActionForm(action)).done(function (idStartScope) {\r\n                        action.idStartScope = idStartScope;\r\n                        def.resolve(action);\r\n                    });\r\n                }\r\n                break;\r\n        }\r\n\r\n        return def.promise();\r\n    },\r\n\r\n    /**\r\n     * Add actions within value object\r\n     * @param action\r\n     */\r\n    addActionToQueue: function (action) {\r\n        var self = this;\r\n        var actionsList = self.getValue();\r\n        var formParams = self.getFormContainer().getParams();\r\n\r\n        action.params = action.params || {};\r\n\r\n        var recordXpath = self.properties.xpathContext;\r\n\r\n        switch (action.actionType) {\r\n            case \"Process\":\r\n                action.params = {\r\n                    idStartScope: action.idStartScope,\r\n                    additionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n                    idParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n                    recordXpath: recordXpath\r\n                };\r\n                break;\r\n            case \"Form\":\r\n                action.params = {\r\n                    idStartScope: action.idStartScope,\r\n                    additionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n                    entityXpath: self.properties.xpathActions,\r\n                    idParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n                    idEntity: action.idEntity\r\n                };\r\n                break;\r\n            case \"Rule\":\r\n                action.params = {\r\n                    xpathActions: action.xpathActions || \"\",\r\n                    recordXpath: recordXpath\r\n                };\r\n                break;\r\n        }\r\n\r\n        var newValueActionsList = bizagi.clone(actionsList);\r\n        newValueActionsList.push(action);\r\n        self.setValue(newValueActionsList);\r\n        self.setDisplayValue(newValueActionsList);\r\n    },\r\n\r\n    /**\r\n     * Remove action within value object\r\n     * @param index\r\n     */\r\n    removeActionToQueue: function (index) {\r\n        var self = this;\r\n        var newValueActionsList = bizagi.clone(self.getValue());\r\n        newValueActionsList.splice(index, 1);\r\n        self.setValue(newValueActionsList);\r\n        self.setDisplayValue(newValueActionsList);\r\n    },\r\n    /**\r\n     * Add the render data to the given collection in order to send data to the server\r\n     * @param renderValues\r\n     */\r\n    collectData: function (renderValues) {\r\n        var self = this;\r\n        if (self.controlValueIsChanged()) {\r\n            var properties = self.properties;\r\n            var xpath = properties.xpath;\r\n            var controlValue = self.getValue();\r\n            var actions = [];\r\n            $.each(controlValue, function (index, value) {\r\n                var action = {};\r\n                action.params = value.params || {};\r\n                action.guidAction = value.guidAction;\r\n\r\n                actions.push(action);\r\n            });\r\n            renderValues[xpath] = (actions.length == 0) ? \"\" : JSON.encode(actions);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Util to count how many actions are there\r\n     * @param action\r\n     * @return {number}\r\n     */\r\n    countSameActions: function (action) {\r\n        var self = this;\r\n        var value = self.getValue();\r\n        var count = 0;\r\n        $.each(value, function (key, value) {\r\n            if (value.guidAction == action.guidAction) {\r\n                count++;\r\n            }\r\n        });\r\n        return count;\r\n    },\r\n\r\n    /**\r\n    * Normalize action launcher control properties\r\n    * @param actionsLaucher\r\n    * @returns {*}\r\n    */\r\n    getPropertiesActionLaucher: function (actionsLaucher) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        /**\r\n         * The properties of actionLaucher have to 7 properties mandatory\r\n         * 0: guidProcess\r\n         * 1: displayName\r\n         * 2: title\r\n         * 3: actionType\r\n         * 4: guidaction\r\n         * 5: xpathContext\r\n         * 6: readOnlyForm: default: false\r\n         */\r\n        for (var i = 0, length = actionsLaucher.length, j = length; i < j; i += 1) {\r\n            //some ocassions server return 6 or 7 items\r\n            //return 6 properties when launch form action from action launcher control.\r\n            //in this case dont return xpathContext.\r\n            // So, add item position 5, simulate xpathContext empty.\r\n            if (actionsLaucher[i].length === 6) {\r\n                actionsLaucher[i].splice(5, 0, \"\");\r\n\r\n                if (actionsLaucher[i][3] == \"Process\" && form.properties.xpathContext) {\r\n                    actionsLaucher[i][5] = form.properties.xpathContext;\r\n                }\r\n            }\r\n        }\r\n\r\n        return actionsLaucher;\r\n    }\r\n});\r\n","/**\r\n * Base definition of a range control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.range\", {}, {\r\n    /*\r\n     * Constructor\r\n     */\r\n    init: function(params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /*\r\n     * Initialize the control with data provided\r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n    },\r\n\r\n\r\n    /*\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function() {\r\n        var self = this,\r\n            properties = self.properties;\r\n        var template;\r\n        var html = \"\";\r\n        // Render template\r\n        template = self.renderFactory.getTemplate(\"render-range\");\r\n        html = $.fasttmpl(template, {});\r\n        return html;\r\n    },\r\n    /**\r\n     * Sets the range controls in DOM\r\n     * @param minControl: min range control\r\n     * @param maxControl: max range control\r\n     */\r\n    setRanageControls: function (minControl, maxControl){\r\n        var self = this;\r\n        self.minControl = minControl || null;\r\n        self.maxControl = maxControl || null;\r\n        var control = self.getControl();\r\n\r\n        var $maxCanvas = $(\".bz-range-maximum\", control);\r\n        var $minCanvas = $(\".bz-range-minimum\", control);\r\n\r\n        //var $maxCanvas = $('<div>hola</div>');\r\n        //var $minCanvas = $('<div>hola</div>');\r\n\r\n        self.renderRangeControl($minCanvas, minControl);\r\n        self.renderRangeControl($maxCanvas, maxControl);\r\n    },\r\n\r\n    /*\r\n     *   Returns the internal value\r\n     */\r\n    getValue: function () {\r\n        var self = this;\r\n        var minValue = self.minControl.getValue();\r\n        var maxValue = self.maxControl.getValue();\r\n\r\n        var value = {\r\n            min: minValue,\r\n            max: maxValue\r\n        };\r\n        return value;\r\n    },\r\n\r\n    renderRangeControl: function ($canvas, control){\r\n        $.when(control.render(\"render\")).done(function (html) {\r\n            $canvas.empty().append(html);\r\n            control.postRenderElement($canvas);\r\n        });\r\n    }\r\n});\r\n","/**\r\n * Base definition of a range date control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.rangeDate\", {}, {\r\n\r\n    /**\r\n     * Defines de min date an de max date to the range control\r\n     */\r\n    defineRangeControl: function (params) {\r\n        var self = this;\r\n\r\n        var dateMin = bizagi.rendering.date.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1 ; i >= 0; i--) {\r\n                    this.observer[i].changeMinValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var dateMax = bizagi.rendering.date.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1; i >= 0; i--) {\r\n                    this.observer[i].changeMaxValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n\r\n        var minControl = new dateMin(self.getRenderProperties(\"min\"));\r\n        var maxControl = new dateMax(self.getRenderProperties(\"max\"));\r\n\r\n        minControl.suscribe(maxControl);\r\n        maxControl.suscribe(minControl);\r\n\r\n\r\n        self.setRanageControls(minControl, maxControl);\r\n    },\r\n\r\n    getRenderProperties: function (typeRangeControl) {\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        var renderProperties = {\r\n            data: {\r\n                properties: {\r\n                    \"id\": properties.id,\r\n                    \"xpath\": properties.xpath + \"_\" + typeRangeControl,\r\n                    \"displayType\": \"value\"\r\n                }\r\n            },\r\n            mode: \"execute\",\r\n            parent: form,\r\n            renderFactory: self.renderFactory,\r\n            resources: bizagi.localization,\r\n            dataService: self.dataService\r\n        };\r\n\r\n        if (typeRangeControl === \"min\") {\r\n            renderProperties.data.properties.displayName = \"From\";\r\n        } else {\r\n            renderProperties.data.properties.displayName = \"To\";\r\n        }\r\n\r\n        return renderProperties;\r\n    }\r\n});\r\n","/**\r\n * Base definition of a range money control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.rangeMoney\", {}, {\r\n    \r\n    /**\r\n     * Defines de min money an de max money to the range control\r\n     */\r\n    defineRangeControl: function () {\r\n        var self = this;\r\n\r\n        var moneyMin = bizagi.rendering.money.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1 ; i >= 0; i--) {\r\n                    this.observer[i].changeMinValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var moneyMax = bizagi.rendering.money.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1; i >= 0; i--) {\r\n                    this.observer[i].changeMaxValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var minControl = new moneyMin(self.getRenderProperties(\"min\"));\r\n        var maxControl = new moneyMax(self.getRenderProperties(\"max\"));\r\n\r\n        minControl.suscribe(maxControl);\r\n        maxControl.suscribe(minControl);\r\n\r\n        self.setRanageControls(minControl, maxControl);\r\n    },\r\n\r\n\r\n    getRenderProperties: function (typeRangeControl){\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        var renderProperties = {\r\n            data: {\r\n                properties: {\r\n                    \"id\": properties.id,\r\n                    \"xpath\": properties.xpath + \"_\" + typeRangeControl,\r\n                    \"displayType\": \"value\"\r\n                }\r\n            },\r\n            mode: \"execute\",\r\n            parent: form,\r\n            renderFactory: self.renderFactory,\r\n            resources: bizagi.localization,\r\n            dataService: self.dataService\r\n        };\r\n        return renderProperties;\r\n    }\r\n});\r\n","/**\r\n * Base definition of a range number control\r\n *\r\n * @author: Andres Fernando Munoz\r\n */\r\n\r\n $.Class.extend(\"bizagi.rendering.rangeNumber\", {}, {\r\n\r\n    /**\r\n    * Defines de min number an de max number to the range control\r\n    */\r\n    defineRangeControl: function () {\r\n        var self = this;\r\n\r\n        var numberMin = bizagi.rendering.number.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1 ; i >= 0; i--) {\r\n                    this.observer[i].changeMinValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var numberMax = bizagi.rendering.number.extend({\r\n            suscribe: function (control) {\r\n                this.observer = this.observer || [];\r\n                this.observer.push(control);\r\n            },\r\n\r\n            notify: function (value) {\r\n                for (var i = this.observer.length - 1; i >= 0; i--) {\r\n                    this.observer[i].changeMaxValue(value);\r\n                }\r\n            },\r\n\r\n            setValue: function (value) {\r\n                value = value || \"\";\r\n                this._super(value);\r\n                this.notify(value);\r\n            }\r\n        });\r\n\r\n        var minControl = new numberMin(self.getRenderProperties(\"min\"));\r\n        var maxControl = new numberMax(self.getRenderProperties(\"max\"));\r\n\r\n        minControl.suscribe(maxControl);\r\n        maxControl.suscribe(minControl);\r\n\r\n        self.setRanageControls(minControl, maxControl);\r\n    },\r\n\r\n\r\n    getRenderProperties: function (typeRangeControl){\r\n        var self = this;\r\n        var form = self.getFormContainer();\r\n        var properties = self.properties;\r\n\r\n        var renderProperties = {\r\n            data: {\r\n                properties: {\r\n                    \"id\": properties.id,\r\n                    \"xpath\": properties.xpath + \"_\" + typeRangeControl,\r\n                    \"displayType\": \"value\"\r\n                }\r\n            },\r\n            mode: \"execute\",\r\n            parent: form,\r\n            renderFactory: self.renderFactory,\r\n            resources: bizagi.localization,\r\n            dataService: self.dataService\r\n        };\r\n\r\n        return renderProperties;\r\n    }\r\n});\r\n","/**\r\n * Base definition of entity template\r\n *\r\n * @author: Andres Fernando Muñoz\r\n * based on action launcher control\r\n */\r\n$.Class.extend(\"bizagi.rendering.entityTemplate\", {}, {\r\n    /**\r\n     * Constructor\r\n     */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n    },\r\n\r\n    /**\r\n     * Initialize the control with data provided\r\n     */\r\n    initializeData: function(data) {\r\n        var self = this;\r\n        // Call base\r\n        this._super(data);\r\n        var form = self.getFormContainer();\r\n\r\n        self.deferredActions = new $.Deferred();\r\n        self.deferredActions.promise();\r\n\r\n        // Data of get process property value\r\n        self.processPropertyValueArgs = {\r\n            \"pcaseId\": self.getIdCase(),\r\n            \"pguidEntity\": self.properties.guidEntity,\r\n            \"idRender\": self.properties.id,\r\n            \"xpathContext\": form.properties.xpathContext,\r\n            \"idPageCache\": form.properties.idPageCache,\r\n            \"property\": \"data\",\r\n            \"psurrogatedKey\": self.properties.surrogatedKey\r\n        };\r\n\r\n        self.properties.valueWidth = 100;\r\n        self.properties.displayType = \"value\";\r\n        self.properties.allowactions = (typeof data.properties.allowactions == \"undefined\") ? true : data.properties.allowactions;\r\n\r\n        if(!self.properties.value) {\r\n            self.properties.value = self.value = [];\r\n        } else if(typeof self.properties.value == \"string\") {\r\n            self.properties.value = self.value = JSON.parse(self.properties.value);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Template method to implement in each children to customize each control\r\n     */\r\n    renderControl: function () {\r\n        var self = this;\r\n        var mode = self.getMode();\r\n        var template;\r\n        var html = \"\";\r\n        // Render template\r\n        if (mode == \"design\") {\r\n            template = self.renderFactory.getTemplate(\"render-entityTemplate-design\");\r\n            html = $.fasttmpl(template, {});\r\n        }\r\n        else if(self.properties.surrogatedKey) {\r\n            template = self.renderFactory.getTemplate(\"render-entityTemplate\");\r\n            html = $.fasttmpl(template, {allowactions: self.properties.allowactions});\r\n        }\r\n        return html;\r\n    },\r\n\r\n    /**\r\n     * Public method to determine if a value is valid or not\r\n     */\r\n    isValid: function (invalidElements) {\r\n        var self = this,\r\n            properties = self.properties;\r\n        // Call base\r\n        var bValid = this._super(invalidElements);\r\n        var value = self.getValue();\r\n        // TODO: write functionality\r\n        return bValid;\r\n    },\r\n\r\n    /**\r\n     * Sets the value in the rendered control\r\n     */\r\n    setDisplayValue: function (value) {\r\n        var self = this;\r\n        var control = self.getControl();\r\n        // TODO: write functionality\r\n        // Set internal value\r\n        self.setValue(value, false);\r\n    }\r\n});","/**\r\n * Base definition of Polymorphic launcher\r\n *\r\n * @author: Edward J Morales\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.polymorphicLauncher\", {}, {\r\n\t/*\r\n\t * Constructor\r\n\t */\r\n\tinit: function(params) {\r\n\t\t// Call base\r\n\t\tthis._super(params);\r\n\t},\r\n\r\n\t/*\r\n\t * Initialize the control with data provided\r\n\t */\r\n\tinitializeData: function(data) {\r\n\t\tvar self = this;\r\n\t\t// Call base\r\n\t\tthis._super(data);\r\n\t\tvar form = self.getFormContainer();\r\n\t\tthis.typeForm = form.properties.typeForm || \"\";\r\n\t\tvar mode = self.getMode();\r\n\r\n\t\tself.deferredActions = new $.Deferred();\r\n\t\tself.deferredActions.promise();\r\n\r\n\t\tself.properties.valueWidth = 100;\r\n\t\tself.properties.displayType = \"value\";\r\n\t\tself.properties.allowSearch = (typeof data.properties.allowSearch == \"undefined\") ? false : data.properties.allowSearch;\r\n\t\tself.properties.additionalXpath = self.properties.additionalXpath || [];\r\n\r\n\t\tif(!self.properties.value) {\r\n\t\t\tself.properties.value = self.value = [];\r\n\t\t\tself.properties.originalValue = [];\r\n\t\t} else if(typeof self.properties.value == \"string\") {\r\n\t\t\tself.properties.value = self.value = JSON.parse(self.properties.value);\r\n\t\t}\r\n\r\n\t\t// Data of get process property value\r\n\t\tself.processPropertyValueArgs = {\r\n\t\t\t\"pcaseId\": self.getIdCase(),\r\n\t\t\t\"pguidEntity\": self.properties.guidEntity,\r\n\t\t\t\"idRender\": self.properties.id,\r\n\t\t\t\"xpathContext\": form.properties.xpathContext,\r\n\t\t\t\"idPageCache\": form.properties.idPageCache,\r\n\t\t\t\"property\": \"data\",\r\n\t\t\t\"ptags\": self.getTagList(self.properties.tagslist),\r\n\t\t\t\"additionalXpaths\": self.properties.additionalXpath\r\n\t\t};\r\n\t},\r\n\r\n\t/**\r\n\t * Send processpropertyvalue in order to execute an Action\r\n\t * This method is used when this control stay in Summary form or Global form\r\n\t * @param action\r\n\t */\r\n\texecuteActionImmediately: function(action) {\r\n\t\tvar self = this;\r\n\t\t//Execute action immediately\r\n\t\tvar form = self.getFormContainer();\r\n\r\n\t\tvar processPropertyValueExecuteConstructor = {\r\n\t\t\t\"idRender\": self.properties.id,\r\n\t\t\t\"xpathContext\": form.properties.xpathContext,\r\n\t\t\t\"idPageCache\": form.properties.idPageCache,\r\n\t\t\t\"property\": \"executeConstructor\",\r\n\t\t\t\"psurrogatedKey\": self.properties.surrogatedKey,\r\n\t\t\t\"pguidConstructor\": action.guidConstructor,\r\n\t\t\t\"pparameters\": JSON.encode({\r\n\t\t\t\t\"idStartScope\": action.idStartScope,\r\n\t\t\t\t\"pactionXpath\": self.properties.xpathActions,\r\n\t\t\t\t\"idPageCache\": action.idPageCache\r\n\t\t\t})\r\n\t\t};\r\n\r\n\t\tself.dataService.executeActions(processPropertyValueExecuteConstructor).done(function(data) {\r\n\t\t\tself.notifyExecution(data.response, action);\r\n\t\t}).fail(function(error) {\r\n\t\t\t// TODO: Create generic mechanism to send notifications\r\n\t\t\tself.notifyExecution(\"Error\", action);\r\n\t\t});\r\n\t},\r\n\r\n\t/**\r\n\t * notify action execution status\r\n\t * @param response\r\n\t */\r\n\tnotifyExecution: function(response, actionName) {\r\n\t\t// To override in each device\r\n\t},\r\n\r\n\t/**\r\n\t * Render control in read only mode: properties.editable = false\r\n\t * @return {*}\r\n\t */\r\n\trenderReadOnly: function() {\r\n\t\treturn this.renderControl();\r\n\t},\r\n\r\n\t/**\r\n\t * Make a postrender of readonly control\r\n\t */\r\n\tpostRenderReadOnly: function() {\r\n\t\tthis.properties.readOnly = true;\r\n\t\tthis.postRender();\r\n\t},\r\n\r\n\t/**\r\n\t * Template method to implement in each children to customize each control\r\n\t * @return {string}\r\n\t */\r\n\trenderControl: function() {\r\n\t\tvar self = this;\r\n\t\tvar properties = self.properties;\r\n\t\tvar mode = self.getMode();\r\n\t\tvar template;\r\n\t\tvar html = \"\";\r\n\r\n\t\t// Render template\r\n\t\tif(mode == \"design\") {\r\n\t\t\ttemplate = self.renderFactory.getTemplate(\"render-polymorphicLauncher-design\");\r\n\t\t\tvar params = {\r\n\t\t\t\ttype: properties.type,\r\n\t\t\t\tallowSearch: properties.allowSearch\r\n\t\t\t};\r\n\t\t\thtml = $.fasttmpl(template, params);\r\n\t\t} else if(properties.surrogatedKey) {\r\n\t\t\ttemplate = self.renderFactory.getTemplate(\"render-polymorphicLauncher\");\r\n\t\t\thtml = $.fasttmpl(template);\r\n\t\t}\r\n\t\treturn html;\r\n\t},\r\n\r\n\r\n\t/**\r\n\t * Public method to determine if a value is valid or not\r\n\t * @param invalidElements\r\n\t * @return {*}\r\n\t */\r\n\tisValid: function(invalidElements) {\r\n\t\tvar self = this,\r\n\t\t\tproperties = self.properties;\r\n\t\t// Call base\r\n\t\tvar bValid = this._super(invalidElements);\r\n\t\tvar value = self.getValue();\r\n\t\t// TODO: write functionality\r\n\t\treturn bValid;\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the value in the rendered control\r\n\t * @param value\r\n\t */\r\n\tsetDisplayValue: function(value) {\r\n\t\tvar self = this;\r\n\t\t// Set internal value\r\n\t\tself.setValue(value, false);\r\n\t},\r\n\r\n\t/**\r\n\t * Process an action\r\n\t * @param action\r\n\t */\r\n\tactionManager: function(action) {\r\n\t\tvar self = this;\r\n\t\tvar guidProcess = action.guidObject || \"\";\r\n\t\tvar def = new $.Deferred();\r\n\r\n        action.recordXpath = self.getFormContainer().properties.recordXpath;\r\n\r\n\t\t/**\r\n\t\t/**\r\n\t\t * Check if action is a process\r\n\t\t */\r\n\t\tswitch(action.actionType) {\r\n\t\t\tcase \"Process\":\r\n\t\t\t\t// Verify if case has startform\r\n\t\t\t\tvar params = {\r\n\t\t\t\t\tguidWFClass: guidProcess\r\n\t\t\t\t};\r\n\r\n\t\t\t\t$.when(self.dataService.hasStartForm(params)).done(function(result) {\r\n\t\t\t\t\tif(result.hasStartForm) {\r\n\t\t\t\t\t\t// Open a dialog with startform and wait for Scope\r\n\t\t\t\t\t\t$.when(self.processStartForm({\r\n\t\t\t\t\t\t\tguidprocess: guidProcess,\r\n\t\t\t\t\t\t\ttitle: action.displayNamee,\r\n                            recordXpath: action.recordXpath\r\n\t\t\t\t\t\t})).done(function(idStartScope) {\r\n\t\t\t\t\t\t\taction.idStartScope = idStartScope;\r\n\t\t\t\t\t\t\tdef.resolve(action);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// Just add action to queue to be executed on nextEvent\r\n\t\t\t\t\t\tdef.resolve(action);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Rule\":\r\n\t\t\t\t// Just add action to queue to be executed on nextEvent\r\n\t\t\t\tdef.resolve(action);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Form\":\r\n\t\t\t\t$.when(self.processActionForm(action)).done(function(idStartScope) {\r\n\t\t\t\t\taction.idStartScope = idStartScope;\r\n\t\t\t\t\tdef.resolve(action);\r\n\t\t\t\t});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\treturn def.promise();\r\n\t},\r\n\r\n\t/**\r\n\t * Add actions within value object\r\n\t * @param action\r\n\t */\r\n\taddActionToQueue: function(action) {\r\n\t\tvar self = this;\r\n\t\tvar actionsList = self.getValue();\r\n\t\tvar formParams = self.getFormContainer().getParams();\r\n\t\t\r\n\t\taction.params = action.params || {};\r\n\r\n        var recordXpath = self.properties.xpathContext;\r\n\r\n\t\tswitch(action.actionType) {\r\n\t\t\tcase \"Process\":\r\n\t\t\t\taction.params = {\r\n\t\t\t\t\tadditionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n\t\t\t\t\tidParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n                    recordXpath: recordXpath\r\n\t\t\t\t};\r\n                if (typeof action.idStartScope !== \"undefined\") {\r\n                    action.params.idStartScope = action.idStartScope;\r\n                }\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Form\":\r\n\t\t\t\taction.params = {\r\n\t\t\t\t\tidStartScope: action.idStartScope,\r\n\t\t\t\t\tadditionalXpaths: self.properties.additionalXpath.join(\",\"),\r\n\t\t\t\t\tentityXpath: self.properties.xpathActions,\r\n\t\t\t\t\tidParentWorkitem: formParams.idWorkitem || bizagi.context.idWorkItem,\r\n\t\t\t\t\tidEntity: action.idEntity,\r\n\t\t\t\t\tguidEntity: action.guidEntity\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"Rule\":\r\n\t\t\t\t//TODO\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tactionsList.push(action);\r\n\t\tself.setValue(actionsList);\r\n\t\tself.setDisplayValue(actionsList);\r\n\t},\r\n\r\n\t/**\r\n\t * Remove action within value object\r\n\t * @param index\r\n\t */\r\n\tremoveActionToQueue: function(index) {\r\n\t\tvar self = this;\r\n\t\tvar value = self.getValue();\r\n\t\tvalue.splice(index, 1);\r\n\t\tself.setValue(value);\r\n\t\tself.setDisplayValue(value);\r\n\t},\r\n\t/**\r\n\t * Add the render data to the given collection in order to send data to the server\r\n\t * @param renderValues\r\n\t */\r\n\tcollectData: function(renderValues) {\r\n\t\tvar self = this;\r\n\t\tif(self.controlValueIsChanged()) {\r\n\t\t\tvar properties = self.properties;\r\n\t\t\tvar xpath = properties.xpath;\r\n\t\t\tvar controlValue = self.getValue();\r\n\t\t\tvar actions = [];\r\n\t\t\t$.each(controlValue, function(index, value) {\r\n\t\t\t\tvar action = {};\r\n\t\t\t\taction.params = value.params || {};\r\n\t\t\t\taction.guidAction = value.guidObject || value.guidAction;\r\n\t\t\t\taction.displayName = value.displayName;\r\n\t\t\t\taction.guidConstructor = value.guidConstructor;\r\n\t\t\t\taction.actionType = value.actionType;\r\n\t\t\t\taction.xpathContext = value.xpathContext;\r\n\t\t\t\taction.guidEntity = value.guidEntity;\r\n\t\t\t\tactions.push(action);\r\n\t\t\t});\r\n\t\t\trenderValues[xpath] = (actions.length == 0) ? \"\" : JSON.encode(actions);\r\n\t\t}\r\n\t},\r\n\r\n\t/**\r\n\t * Util to count how many actions are there\r\n\t * @param action\r\n\t * @return {number}\r\n\t */\r\n\tcountSameActions: function(action) {\r\n\t\tvar self = this;\r\n\t\tvar value = self.getValue();\r\n\t\tvar count = 0;\r\n\t\t$.each(value, function(key, value) {\r\n\t\t\tif(value.guidAction == action.guidAction) {\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn count;\r\n\t},\r\n\r\n\t/**\r\n\t * Get list of tags\r\n\t * @param taglist\r\n\t * @return {Array}\r\n\t */\r\n\tgetTagList: function(taglist) {\r\n\t\ttaglist = taglist || [];\r\n\t\tvar result = [];\r\n\r\n\t\tfor(var i = taglist.length; i > 0; i--) {\r\n\t\t\tresult.push(taglist[i - 1].value);\r\n\t\t}\r\n\t\treturn (result.length > 0) ? result : \"\";\r\n\t}\r\n});","/*\r\n *   Name: BizAgi Render Column Decorator Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define basic stuff for Columns\r\n */\r\n\r\nbizagi.rendering.element.extend(\"bizagi.rendering.columns.column\", {}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        this.decoratedClass = params.decorated;\r\n        this.data = params.data;\r\n        if (params.singleInstance) {\r\n            this.decorated = new this.decoratedClass({\r\n                data: this.data,\r\n                parent: this.parent,\r\n                renderFactory: this.renderFactory,\r\n                dataService: this.dataService\r\n            });\r\n            this.decorated.getControl = this.getControl;\r\n            params.decorated = this.decorated;\r\n            this.decorated.properties.isColumn = true;\r\n        } else {\r\n            this.decorateRenders = [];\r\n        }\r\n        this.grid = params.parent;\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n        properties.columnVisible = bizagi.util.parseBoolean(properties.columnVisible) != null ? bizagi.util.parseBoolean(properties.columnVisible) : true;\r\n        properties.align = properties.align || 'center';\r\n        properties.textFormat = properties.textFormat || {};\r\n        properties.submitOnChange = (typeof properties.submitOnChange != \"undefined\") ? bizagi.util.parseBoolean(properties.submitOnChange) : false;\r\n        properties.singleInstance = params.singleInstance;\r\n        properties.editable = (typeof properties.editable != \"undefined\") ? bizagi.util.parseBoolean(properties.editable) : true;\r\n        properties.visible = (typeof properties.visible != \"undefined\") ? bizagi.util.parseBoolean(properties.visible) : true;\r\n        properties.required = (typeof properties.required != \"undefined\") ? bizagi.util.parseBoolean(properties.required) : false;\r\n        properties.showColumn = (typeof properties.showColumn != \"undefined\") ? bizagi.util.parseBoolean(properties.showColumn) : true;\r\n\r\n        // Define if it is editable or not        \r\n        try {\r\n            if (params.parent && typeof params.parent.properties.editable == \"boolean\" && !params.parent.properties.editable) {\r\n                properties.editable = false;\r\n            }\r\n        } catch (e) {\r\n        }\r\n\r\n        // Define if the column is readonly\r\n        this.readonly = properties.readonly !== undefined ? properties.readonly : false;\r\n        if (this.readonly) properties.editable = required = false;\r\n\r\n        // Save original properties\r\n        this.originalProperties = JSON.parse(JSON.encode(properties));\r\n    },\r\n\r\n    /*\r\n    *   Return true if the column is read-only, so we can make a quick render\r\n    */\r\n    isReadonly: function () {\r\n        return false;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Method to retrieve the decorated control\r\n    */\r\n    getControl: function () {\r\n        var self = this;\r\n        return $(\".ui-bizagi-render-control\", self.element || self.observableElement);\r\n    },\r\n    /*\r\n    *   Returns the decorated cell instance to use\r\n    */\r\n    getDecorated: function (surrogateKey) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        if (properties.singleInstance) {\r\n            return self.decorated;\r\n        }\r\n        else {\r\n            var decorated = self.decorateRenders[surrogateKey];\r\n            if (decorated == undefined) {\r\n                if (typeof self.decorateRenders != \"object\") {\r\n                    self.decorateRenders = [];\r\n                }\r\n                var instanceDecoratedClass = new this.decoratedClass({\r\n                    data: bizagi.clone(this.data),\r\n                    parent: this.parent,\r\n                    renderFactory: this.renderFactory,\r\n                    dataService: this.dataService\r\n                });\r\n                decorated = instanceDecoratedClass;\r\n                self.decorateRenders[surrogateKey] = instanceDecoratedClass;\r\n\r\n                // Set surrogate key to all controls\r\n                decorated.surrogateKey = surrogateKey;\r\n\r\n                // Execute decorated overrides\r\n                self.applyOverrides(decorated);\r\n\r\n                // Also override setDisplayValue on summary row for non numeric columns\r\n                if (surrogateKey == \"summary\" && decorated.properties.type != \"columnMoney\" && decorated.properties.type != \"columnNumber\") {\r\n\r\n                    decorated.setDisplayValue = function (value) {\r\n                        var control = this.getControl();\r\n\r\n                        // Replace line breaks for html line breaks\r\n                        control.html(value);\r\n                    };\r\n                }\r\n            }\r\n            return decorated;\r\n        }\r\n    },\r\n    /*\r\n    *   Set a ready function to execute when the render has been inserted in the dom\r\n    */\r\n    ready: function () {\r\n        return this.readyDeferred.promise();\r\n    },\r\n    /*\r\n    *   Load stuff needed for the column\r\n    *   It could return a promise if the column need to load async stuff\r\n    */\r\n    initialize: function () {\r\n        // Override to do any stuff needed here\r\n    },\r\n    /* \r\n    *  Method to determine if the render value can be sent to the server or not\r\n    */\r\n    canBeSent: function (surrogateKey, cellOverrides) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n\r\n        if (cellOverrides) {\r\n            decorated.properties.visible = cellOverrides.visible;\r\n            decorated.properties.editable = cellOverrides.editable;\r\n        }\r\n        return decorated.canBeSent() || (!self.properties.editable && self.hasChanged()) || (!decorated.properties.editable && self.hasChanged());\r\n    },\r\n    /*\r\n    *   Method to check if a value is valid or not in this render\r\n    */\r\n    isValueValid: function (surrogateKey, value, messages, propertyOverrides) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var invalidElements = [];\r\n\r\n        if (propertyOverrides.visible) {\r\n            self.setValue(surrogateKey, value);\r\n\r\n            // Override properties\r\n            decorated.properties = $.extend(decorated.properties, propertyOverrides);\r\n\r\n            if (self.grid && typeof(decorated.grid) === \"undefined\") {\r\n                decorated.grid = self.grid;\r\n            }\r\n\r\n            // Validate field\r\n            decorated.isValid(invalidElements);\r\n        }\r\n\r\n        if (invalidElements.length > 0) {\r\n            $.each(invalidElements, function (i, invalidElement) {\r\n                messages.push(invalidElement.message);\r\n            });\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    },\r\n    /*\r\n    *   Apply custom overrides to each decorated instance\r\n    */\r\n    applyOverrides: function (decorated) {\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element \r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value) {\r\n        var self = this;\r\n        var properties = self.properties;\r\n        // Set grid and id references to the control in order to render the content\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        decorated.grid = self.grid;\r\n        decorated.column = this;\r\n        decorated.surrogateKey = surrogateKey;\r\n\r\n        // Set cell value\r\n        self.setValue(surrogateKey, value);\r\n\r\n        // Override render properties\r\n        self.overrideDecoratedRenderProperties(surrogateKey);\r\n\r\n        // Set flag to check when a render has changed\r\n        self.changed = false;\r\n\r\n        // If the render is not editable return the readonly version of the column\r\n        //Fix: Uncaught RangeError: Maximum call stack size exceeded\r\n        if (!properties.editable && arguments[3] !== \"CALLER_RENDER_READ_ONLY_COLUMNSLINK\")\r\n            return self.renderReadOnly.apply(self, arguments);\r\n\r\n        // Returns the decorated render inside a custom layout for columns\r\n        self.readyDeferred = new $.Deferred();\r\n        var cell = decorated.render(\"cell\");\r\n\r\n        // If the render changes set the flag on\r\n        decorated.bind(\"renderchange\", function () {\r\n            self.changed = true;\r\n        });\r\n\r\n        self.bind(\"rendered\", function () {\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n        return cell;\r\n    },\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRender: function (surrogateKey, cell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        decorated.postRenderElement(cell);\r\n    },\r\n    /*\r\n    *   Returns the in-memory processed element when the element is read-only\r\n    */\r\n    renderReadOnly: function (surrogateKey, value) {\r\n        var self = this;\r\n        // Set grid and id references to the control in order to render the content\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        decorated.grid = self.grid;\r\n        decorated.column = this;\r\n        decorated.surrogateKey = surrogateKey;\r\n\r\n        // Set cell value\r\n        self.setValue(surrogateKey, value);\r\n\r\n        // Override render properties\r\n        self.overrideDecoratedRenderProperties(surrogateKey);\r\n\r\n        // Changes editable to false to render read-only\r\n        decorated.properties.editable = false;\r\n\r\n        // Perform the internal render\r\n        self.readyDeferred = new $.Deferred();\r\n        var result = decorated.render(\"cell.readonly\");\r\n\r\n        self.bind(\"rendered\", function () {\r\n            self.readyDeferred.resolve();\r\n        });\r\n\r\n        // Returns the decorated render inside a custom layout for columns\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *  Returns the html template to draw the summary cell\r\n    */\r\n    renderSummary: function (key, value) {\r\n        var self = this;\r\n        var result = self.renderFactory.getTemplate(\"cell.summary\")\r\n        return $.tmpl(result).html();\r\n    },\r\n\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRenderReadOnly: function (surrogateKey, cell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var editable = self.properties.editable;\r\n        decorated.properties.editable = false;\r\n        if (self.properties.singleInstance) {\r\n            decorated.element = cell;\r\n        }\r\n        decorated.postRenderElement(cell);\r\n        decorated.properties.editable = editable;\r\n    },\r\n\r\n    /*\r\n    * Return false to all columns that doesn't need special treatment (like number or currency)\r\n    */\r\n    postRenderSummary: function () {\r\n        return false;\r\n    },\r\n\r\n    /*\r\n    *   Returns the cell html to be inserted in the table\r\n    */\r\n    getCell: function () {\r\n        return this.decorated.getDisplayValue();\r\n    },\r\n    /*\r\n    *   Sets the surrogate key for this row\r\n    */\r\n    setSurrogateKey: function (key) {\r\n        this.surrogateKey = key;\r\n    },\r\n    /*\r\n    *   Sets the internal value, only must be called internally\r\n    */\r\n    setValue: function (surrogateKey, value) {\r\n        var self = this;\r\n\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated != \"undefined\" && decorated != null) {\r\n\r\n            decorated.properties.originalValue = value;\r\n            decorated.properties.previousValue = value;\r\n\r\n            if ((value === null || value === undefined) && self.properties.defaultvalue !== undefined && decorated.grid != undefined) {\r\n                value = self.setDefaultValue(surrogateKey, decorated);\r\n            }\r\n\r\n            decorated.properties.value = value;\r\n            decorated.setValue(value, false);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Set the cell default value and make this action as a change to send it to server\r\n    */\r\n    setDefaultValue: function (surrogateKey, decorated) {\r\n        var self = this;\r\n        var value = self.properties.defaultvalue;\r\n\r\n        decorated.grid.changes[surrogateKey] = decorated.grid.changes[surrogateKey] || {};\r\n        decorated.grid.changes[surrogateKey][self.properties.xpath] = value;\r\n\r\n        return value;\r\n    },\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        return decorated.getValue();\r\n    },\r\n    /*\r\n    *   Gets the composite value (applies for non-standard render values)\r\n    */\r\n    getCompositeValue: function (surrogateKey) {\r\n        return this.getValue(surrogateKey);\r\n    },\r\n    /*\r\n    *   Returns the element type\r\n    */\r\n    getElementType: function () {\r\n        return bizagi.rendering.element.ELEMENT_TYPE_COLUMN;\r\n    },\r\n    /*\r\n    *   Determines if a render has changed its value\r\n    */\r\n    hasChanged: function () {\r\n        return this.changed;\r\n    },\r\n    /*\r\n    *   Triggers an event inside the control\r\n    */\r\n    trigger: function (eventType, data) {\r\n        if (this.decorated)\r\n            this.decorated.trigger(eventType, data);\r\n    },\r\n    /*\r\n    *   Triggers an event handler inside the control\r\n    */\r\n    triggerHandler: function (eventType, data) {\r\n        if (this.decorated)\r\n            this.decorated.triggerHandler(eventType, data);\r\n    },\r\n    /*\r\n    *   Binds to an event\r\n    */\r\n    bind: function (eventType, fn) {\r\n        if (this.decorated)\r\n            this.decorated.bind(eventType, fn);\r\n    },\r\n    /*\r\n    *   Unbinds to an event\r\n    */\r\n    unbind: function (eventType, fn) {\r\n        if (this.decorated)\r\n            this.decorated.unbind(eventType, fn);\r\n    },\r\n    /*\r\n    *   Override decorated properties\r\n    */\r\n    overrideDecoratedRenderProperties: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n\r\n        // Override decorated control properties\r\n        decorated.properties.editable = this.properties.editable;\r\n        decorated.properties.visible = this.properties.visible;\r\n        decorated.properties.required = this.properties.required;\r\n    },\r\n\r\n    overrideProperties: function (properties) {\r\n        var self = this;\r\n\r\n        self.properties.editable = properties.editable || self.properties.editable;\r\n        self.properties.visible = properties.visible || self.properties.visible;\r\n        self.properties.required = properties.required || self.properties.required;\r\n    },\r\n\r\n    /*\r\n    *   Returns the xpath used to sort the grid\r\n    */\r\n    getSortName: function () {\r\n        var self = this;\r\n\r\n        // Check if there is an override for the default behaviour \r\n        var decorated = self.getAnyDecoratedInstance();\r\n        if (decorated && decorated.getSortColumn) {\r\n            return decorated.getSortColumn();\r\n        }\r\n\r\n        // Default behaviour\r\n        return self.properties.xpath;\r\n    },\r\n\r\n    /*\r\n    *   Returns any of the decorated instances, if there are none, return null\r\n    */\r\n    getAnyDecoratedInstance: function () {\r\n        var self = this;\r\n        var first;\r\n\r\n        // Get the first key for the hash\r\n        for (first in this.decorateRenders) break;\r\n\r\n        // Return the first decorated render\r\n        if (first) return this.decorateRenders[first];\r\n\r\n        return null;\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n\r\n        setTimeout(function () {\r\n            if (self.decorated) {\r\n                self.decorated.unbind(\"renderchange\");\r\n                self.decorated.dispose();\r\n            }\r\n        \r\n            if (self.decorateRenders) {\r\n                bizagi.util.arrayEach(self.decorateRenders, function (key, render) {\r\n                    if (render) {\r\n                        render.unbind(\"renderchange\");\r\n                        render.dispose();\r\n                    }\r\n                });\r\n            }\r\n        }, bizagi.override.disposeTime || 50);\r\n        \r\n        // Call base\r\n        self._super();\r\n    }\r\n});\r\n\r\n","/*\r\n *   Name: BizAgi Render Column ReadOnlyDecorator Class\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define basic stuff for readonly-columns\r\n */\r\n\r\n// Extends itself\r\n$.Class.extend(\"bizagi.rendering.columns.readonly\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n\r\n        // Define the column as readonly\r\n        properties.editable = required = false;\r\n    },\r\n\r\n    /*\r\n    *   Return true if the column is read-only, so we can make a quick render\r\n    */\r\n    isReadonly: function () {\r\n        return true;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element \r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value) {\r\n        if (typeof value === \"string\") {\r\n            var valueToDisplay = value.replaceAll(\"\\\\n\", \"<br/>\");\r\n            valueToDisplay = valueToDisplay.replaceAll(\"\\n\", \"<br/>\");\r\n            return valueToDisplay;\r\n        }\r\n        else if (value === null){\r\n            return \"\";\r\n        }\r\n\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRender: function (surrogateKey, cell) {\r\n        // DON'T DO ANYTHING\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element when the element is read-only\r\n    */\r\n    renderReadOnly: function (surrogateKey, value) {\r\n        return this.render(surrogateKey, value);\r\n    },\r\n\r\n    /*\r\n    *   Post process the element after it has been rendered\r\n    */\r\n    postRenderReadOnly: function (surrogateKey, cell) {\r\n        // DON'T DO ANYTHING\r\n    },\r\n    \r\n    /*\r\n    *   Method to check if a value is valid or not in this render\r\n    */\r\n    isValueValid: function () {\r\n        // It is always valid because the column is readonly\r\n        return true;\r\n    }\r\n});\r\n\r\n","/*\r\n*   Name: BizAgi Render Document Generator\r\n*   Author: Mauricio Gonzalez\r\n*   Comments:\r\n*   -   This script will define basic stuff for document generator render\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.document\", {}, { \r\n});","/*\r\n*   Name: BizAgi Render Letter\r\n*   Author: Alexander Mejia\r\n*   Comments:\r\n*   -   This script will define basic stuff for letter render\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.letter\", {}, {\r\n    \r\n});","/*\r\n*   Name: BizAgi Render Combo Column Decorator Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for Combo Columns\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.combo\", {}, {\r\n\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n        properties.recalculate = bizagi.util.parseBoolean(properties.recalculate) || false;\r\n    },\r\n\r\n\r\n    /*\r\n    *   Apply custom overrides to each decorated instance\r\n    */\r\n    applyOverrides: function (decorated) {\r\n        var properties = this.properties;\r\n\r\n        this._super(decorated);\r\n\r\n        if (!properties.recalculate) {\r\n            decorated.originalGetData = decorated.getData;\r\n            decorated.getData = this.getDataForAllCells;\r\n            decorated.findDataById = this.findDataById;\r\n        }\r\n    },\r\n\r\n    findDataById: function (id) {\r\n        var self = this;\r\n        var result = {};\r\n        if (this.column && this.column.comboData) {\r\n            $.each(this.column.comboData, function (key, value) {\r\n                if (value.id == id) {\r\n                    result = value;\r\n                }\r\n            });\r\n        }\r\n\r\n        return result;\r\n    },\r\n\r\n    /*\r\n    *   Single data fetch for all the cells\r\n    */\r\n    getDataForAllCells: function (params) {\r\n        var column = this.column;\r\n        if (column.comboData) return column.comboData;\r\n        if (column.fetchingData) return column.dataPromise;\r\n\r\n        // Start fetching\r\n        column.fetchingData = true;\r\n        column.dataPromise = $.when(this.originalGetData(params))\r\n        .pipe(function (result) {\r\n            column.comboData = result;\r\n            column.fetchingData = false;\r\n            return result;\r\n        });\r\n\r\n        return column.dataPromise;\r\n    },\r\n\r\n    /*\r\n    *   Sets the internal value\r\n    */\r\n    setValue: function(surrogateKey, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated === null) {\r\n            return;\r\n        }\r\n\r\n        // Perform default set value when rendering summary row\r\n        if (surrogateKey == \"summary\") return self._super(surrogateKey, value);\r\n\r\n        if (value && bizagi.util.isString(value)) {        \r\n            self._super(surrogateKey, value);\r\n        } else if (value && value.length > 0) {\r\n            // Create the value property\r\n            var newValue = {\r\n                id: value[0][0],\r\n                value: value[0].length > 2 ? $.grep(value[0], function(item, i) { return i != 0; }) : value[0][1]\r\n            };\r\n            // Call base\r\n            self._super(surrogateKey, newValue);\r\n            decorated.selectedValue = newValue.value;\r\n        } else if (value && value.id && value.value) {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value.value;\r\n        } else if (self.properties.type == \"columnRadio\") {\r\n            self._super(surrogateKey, null);\r\n            decorated.selectedValue = value;\r\n        } else if (value && typeof (value) == \"number\") {\r\n            self._super(surrogateKey, value);\r\n        } else {\r\n            // Set null values when the entry array is null\r\n            self._super(surrogateKey, null);\r\n            decorated.selectedValue = \"\";\r\n        }\r\n    },\r\n\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getCompositeValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var value = decorated.getValue();\r\n        var label = decorated.getSelectedValue();\r\n\r\n        // Build value for grid data\r\n        var valueForGrid = [];\r\n        if (value && (value.id > 0 || bizagi.util.isString(value.id))) {\r\n            valueForGrid.push([]);\r\n            valueForGrid[0].push(value.id);\r\n            valueForGrid[0].push(label);\r\n        } else {\r\n            valueForGrid.push([]);\r\n        }\r\n\r\n        return valueForGrid;\r\n    },\r\n\r\n    /*\r\n    *   Gets the internal value\r\n    */\r\n    getValue: function (surrogateKey) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var value = decorated.getValue();\r\n        if (value) return value.id;\r\n        return value;\r\n    },\r\n\r\n    /*\r\n    *   Returns the in-memory processed element \r\n    *   so the caller could append it to any place\r\n    */\r\n    render: function (surrogateKey, value, tableCell) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        var properties = self.properties;\r\n\r\n        // If the control needs to recalculate data, reset it on the decorated render\r\n        if (properties.recalculate) {\r\n            decorated.resetData();\r\n        }\r\n\r\n        // Change the xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + surrogateKey + \"]\" : self.grid.properties.xpath + \"[id=\" + surrogateKey + \"]\";\r\n        decorated.properties.xpathContext = xpathContext;\r\n\r\n        // Render the control\r\n        var result = this._super(surrogateKey, value, tableCell);\r\n\r\n        return result;\r\n    },\r\n\r\n    renderReadOnly: function (key, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(key);\r\n        var properties = self.properties;\r\n\r\n        // Change the xpath context\r\n        var xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + key + \"]\" : self.grid.properties.xpath + \"[id=\" + key + \"]\";\r\n        decorated.properties.xpathContext = xpathContext;\r\n\r\n        // Render the control\r\n        var result = this._super(key, value);\r\n\r\n        return result;\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Render Combo Column Decorator Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for Combo Columns\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.search\", {}, {\r\n\r\n\t/*\r\n\t*   Constructor\r\n\t*/\r\n\tinit: function (params) {\r\n        // Call base\r\n        this._super(params);\r\n\r\n        // Set base column styles\r\n        var properties = this.properties;\r\n\r\n        if (properties.advancedSearch && this.getMode() === \"execution\") {\r\n            properties.submitOnChange = bizagi.util.parseBoolean(properties.submitOnChange) || false;\r\n            properties.submitOnChange = (properties.submitVersion || 1) > 1 ? properties.submitOnChange : true;\r\n        }\r\n    },\r\n\r\n\t/*\r\n\t*   Returns the in-memory processed element \r\n\t*   so the caller could append it to any place\r\n\t*/\r\n\trender: function (surrogateKey, value, tableCell) {\r\n\t\tvar self = this;\r\n\t\tvar decorated = self.getDecorated(surrogateKey);\r\n\t\tvar properties = self.properties;\r\n\r\n\t\t// If the control needs to recalculate data, reset it on the decorated render\r\n\t\tif (properties.recalculate) {\r\n\t\t\tdecorated.resetData();\r\n\t\t}\r\n\r\n\t\t// Change the xpath context\r\n\t\tvar xpathContext = properties.xpathContext.length > 0 ? properties.xpathContext + \".\" + self.grid.properties.xpath + \"[id=\" + surrogateKey + \"]\" : self.grid.properties.xpath + \"[id=\" + surrogateKey + \"]\";\r\n        decorated.properties.xpathContext = xpathContext;\r\n\r\n\t\t// Render the control\r\n\t\tvar result = this._super(surrogateKey, value, tableCell);\r\n\r\n\t\treturn result;\r\n\t},\r\n\r\n\t/*\r\n    *   Gets the internal value\r\n    */\r\n    getValue: function (surrogateKey) {\r\n        var self = this;\r\n    \tvar decorated = self.getDecorated(surrogateKey);\r\n        var value = decorated.getValue();\r\n        if (value && typeof(value) == \"object\" ) return value.id;\r\n        \t\r\n    \treturn value;\r\n    },\r\n    setValue: function (surrogateKey, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated === null) { return; }\r\n\r\n        // Perform default set value when rendering summary row\r\n        if (surrogateKey == \"summary\") return self._super(surrogateKey, value);\r\n\r\n        if (value && value.length > 0) {\r\n            // Create the value property\r\n            var newValue = {\r\n                id: value[0][0],\r\n                value: value[0].length > 2 ? $.grep(value[0], function (item, i) { return i != 0; }) : value[0][1]\r\n            };\r\n            // Call base\r\n            self._super(surrogateKey, newValue);\r\n            decorated.selectedValue = newValue.value;\r\n        } else if (value && value.id && value.value) {\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value.value;\r\n        } else if(value && value.id && value.label){\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = value.label;\r\n        }\r\n        else{\r\n            self._super(surrogateKey, value);\r\n            decorated.selectedValue = \"\";\r\n        }\r\n    }\r\n\r\n});\r\n","/*\r\n*   Name: BizAgi Render Date Column Decorator Class\r\n*   Author: Diego Parra\r\n*   Comments:\r\n*   -   This script will define basic stuff for Date Columns\r\n*/\r\n\r\n\r\n$.Class.extend(\"bizagi.rendering.columns.date\", {}, {\r\n\r\n    /*\r\n    *   Sets the internal value\r\n    */\r\n    setValue: function (surrogateKey, value) {\r\n        var self = this;\r\n        var decorated = self.getDecorated(surrogateKey);\r\n        if (decorated === null) return;\r\n\r\n        self._super(surrogateKey, value);\r\n        if ((value === null || value === undefined) && self.properties.defaultvalue !== undefined) {\r\n            value = self.setDefaultValue(surrogateKey, decorated);\r\n        }\r\n\r\n        // Perform default set value when rendering summary row\r\n        if (surrogateKey === \"summary\") return self._super(surrogateKey, value);\r\n\r\n        if (value == null) {\r\n            decorated.setValue(value, false);\r\n            decorated.properties.displayValue = \"\";\r\n        }\r\n\r\n        var date = bizagi.util.dateFormatter.getDateFromInvariant(value, decorated.properties.showTime);\r\n\r\n        if (date === 0) {\r\n            // force another attempt in order to check invariant format for the value with time or without time (reverse option)\r\n            date = bizagi.util.dateFormatter.getDateFromInvariant(value, !decorated.properties.showTime);\r\n        }\r\n        // Format date to current format\r\n        if (date !== 0) {\r\n            var datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n            var formattedDate = bizagi.util.dateFormatter.formatDate(date, decorated.properties.fullFormat, datePickerRegional);\r\n\r\n            // Set formatted value in display value property\r\n            decorated.properties.displayValue = formattedDate;\r\n\r\n            // Send original value to decorated control, because it must be with invariant format\r\n            decorated.setValue(value, false);\r\n        }\r\n    },\r\n\r\n    /*\r\n    * Set the cell default value and make this action as a change to send it to server\r\n    */\r\n    setDefaultValue: function (surrogateKey, decorated) {\r\n        var self = this;\r\n        var value = self.properties.defaultvalue;\r\n\r\n        decorated.grid.changes[surrogateKey] = decorated.grid.changes[surrogateKey] || {};\r\n\r\n        value = bizagi.util.dateFormatter.getDateFromInvariant(value, decorated.properties.showTime || false);\r\n\r\n        value = bizagi.util.dateFormatter.formatInvariant(value, true);\r\n        decorated.grid.changes[surrogateKey][self.properties.xpath] = value;\r\n\r\n        return value;\r\n    }\r\n});\r\n\r\n","/*\r\n *   Name: Bizagi Base Render Factory\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will define an abstract render factory in order to do common stuff for all device factories\r\n */\r\n\r\n$.Class.extend(\"bizagi.rendering.base.factory\", {}, {\r\n    /* \r\n    *   Constructor\r\n    */\r\n    init: function (dataService) {\r\n        this.templates = {};\r\n        this.dataService = dataService;        \r\n    },\r\n\r\n    /**\r\n    * Load client resources in order to override a default behavior\r\n    */\r\n    loadOverrides: function () {\r\n    },\r\n    /*\r\n    *   This function will load asynchronous stuff needed in the module\r\n    */\r\n    initAsyncStuff: function() {\r\n        return $.when.apply($, [this.loadOverrides(), this.loadTemplates()]);\r\n    },\r\n    /*\r\n    *   Load all the templates used for rendering\r\n    */\r\n    loadTemplates: function () {\r\n    },\r\n    /*\r\n    *   Load one template and save it internally\r\n    */\r\n    loadTemplate: function(template, templateDestination) {\r\n        var self = this;\r\n\r\n        // Go fetch the template\r\n        return bizagi.templateService.getTemplate(templateDestination, template)\r\n                .done(function (resolvedTemplate) {\r\n                self.templates[template] = resolvedTemplate;\r\n            });\r\n    },\r\n    /*\r\n    * Returns a common  used template for the framework\r\n    */\r\n    getCommonTemplate: function (template) {        \r\n        return this.templates[template];\r\n    },\r\n    /*\r\n    *   Returns the appropiate container based on the container type\r\n    */\r\n    getContainer: function (params) {\r\n        // TODO: REMOVE IMPLEMENTATION\r\n\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var containerParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type == \"form\") {\r\n            return new bizagi.rendering.form(containerParams);\r\n        }\r\n\r\n        if (type == \"mobileform\") {\r\n            return new bizagi.rendering.mobileform(containerParams);\r\n        }\r\n\r\n        if (type == \"template\") {\r\n            return new bizagi.rendering.formTemplate(containerParams);\r\n        }\r\n\r\n        if (type == \"queryForm\") {\r\n            return new bizagi.rendering.queryForm(containerParams);\r\n        }\r\n\r\n        if (type == \"layout\") {\r\n            return new bizagi.rendering.layout(containerParams);\r\n        }\r\n\r\n        if (type == \"usersForm\") {\r\n            return new bizagi.rendering.usersForm(containerParams);\r\n        }\r\n\r\n        if (type == \"panel\") {\r\n            return new bizagi.rendering.panel(containerParams);\r\n        }\r\n\r\n        if (type == \"contentPanel\" || type == \"contentpanel\") {\r\n            return new bizagi.rendering.contentPanel(containerParams);\r\n        }\r\n\r\n        if (type.toLowerCase() == \"nestedform\") {\r\n            return new bizagi.rendering.nestedForm(containerParams);\r\n        }\r\n\r\n        if (type == \"tab\") {\r\n            return new bizagi.rendering.tab(containerParams);\r\n        }\r\n\r\n        if (type == \"tabItem\" || type == \"tabitem\") {\r\n            return new bizagi.rendering.tabItem(containerParams);\r\n        }\r\n\r\n        if (type == \"horizontal\") {\r\n            return new bizagi.rendering.horizontal(containerParams);\r\n        }\r\n\r\n        if (type == \"accordion\") {\r\n            return new bizagi.rendering.accordion(containerParams);\r\n        }\r\n\r\n        if (type == \"accordionItem\") {\r\n            return new bizagi.rendering.accordionItem(containerParams);\r\n        }\r\n\r\n        if (type == \"group\") {\r\n            return new bizagi.rendering.group(containerParams);\r\n        }\r\n\r\n        if (type == \"mobilegroup\") {\r\n            return new bizagi.rendering.mobilegroup(containerParams);\r\n        }\r\n\r\n        if (type == \"searchForm\") {\r\n            containerParams.context = \"search\";\r\n            containerParams.contexttype = \"metadata\";\r\n            return new bizagi.rendering.searchForm(containerParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate render based on the render type\r\n    */\r\n    getRender: function (params) {\r\n\r\n        // TODO: REMOVE IMPLEMENTATION\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var renderParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (!type)\r\n            type = \"label\";\r\n\r\n        if (type == \"text\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                return new bizagi.rendering.extendedText(renderParams);\r\n            }\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.text(renderParams);\r\n        }\r\n        if (type == \"mobiletext\") {\r\n            return new bizagi.rendering.mobiletext(renderParams);\r\n        }\r\n\r\n        if (type == \"association\") {\r\n            return new bizagi.rendering.association(renderParams);\r\n        }\r\n\r\n        if (type == \"label\") {\r\n            return new bizagi.rendering.label(renderParams);\r\n        }\r\n\r\n        if (type == \"hidden\") {\r\n            return new bizagi.rendering.hidden(renderParams);\r\n        }\r\n\r\n        if (type == \"number\") {\r\n            return new bizagi.rendering.number(renderParams);\r\n        }\r\n\r\n        if (type == \"money\") {\r\n            return new bizagi.rendering.money(renderParams);\r\n        }\r\n\r\n        if (type == \"date\") {\r\n            return new bizagi.rendering.date(renderParams);\r\n        }\r\n\r\n        if (type == \"boolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                return new bizagi.rendering.check(renderParams);\r\n            }\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.yesno(renderParams);\r\n        }\r\n\r\n        if (type == \"combo\") {\r\n            return new bizagi.rendering.combo(renderParams);\r\n        }\r\n\r\n        if (/^cascadingcombo$/i.test(type)) {\r\n            return new bizagi.rendering.cascadingCombo(renderParams);\r\n        }\r\n\r\n        if (type == \"list\") {\r\n            return new bizagi.rendering.list(renderParams);\r\n        }\r\n\r\n        if (type == \"multiSelect\") {\r\n            return new bizagi.rendering.multiSelect(renderParams);\r\n        }\r\n\r\n        if (type == \"radio\") {\r\n            return new bizagi.rendering.radio(renderParams);\r\n        }\r\n\r\n        if (type == \"image\") {\r\n            // Override for test purposes\r\n            return new bizagi.rendering.image(renderParams);\r\n        }\r\n        if (type == \"uploadecm\") {\r\n            // Check if its ECM file            \r\n            return new bizagi.rendering.ecm(renderParams);\r\n        }\r\n\r\n        if (type == \"upload\") {\r\n            return new bizagi.rendering.upload(renderParams);\r\n        }\r\n        if (type == \"grid\") {\r\n            return new bizagi.rendering.grid(renderParams);\r\n        }\r\n\r\n        if (type == \"groupedgrid\") {\r\n            return new bizagi.rendering.grid(renderParams);\r\n        }\r\n\r\n        if (type == \"search\") {\r\n            return new bizagi.rendering.search(renderParams);\r\n        }\r\n\r\n        if (type == \"suggest\") {\r\n            renderParams.data.properties.enableQuerySuggestBehavior = true;\r\n            return new bizagi.rendering.search(renderParams);\r\n        }\r\n\r\n        if (type == \"searchList\") {\r\n            return new bizagi.rendering.searchList(renderParams);\r\n        }\r\n\r\n        if (type == \"letter\") {\r\n            return new bizagi.rendering.letter(renderParams);\r\n        }\r\n\r\n        if (type == \"button\") {\r\n            return new bizagi.rendering.button(renderParams);\r\n        }\r\n\r\n        if (type == \"formLink\") {\r\n            return new bizagi.rendering.formLink(renderParams);\r\n        }\r\n\r\n        if (type == \"link\") {\r\n            return new bizagi.rendering.link(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutImage\") {\r\n            return new bizagi.rendering.layoutImage(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutLink\") {\r\n            return new bizagi.rendering.layoutLink(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutLabel\") {\r\n            return new bizagi.rendering.layoutLabel(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutText\") {\r\n            return new bizagi.rendering.layoutText(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutDateTime\") {\r\n            return new bizagi.rendering.layoutDateTime(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutNumber\") {\r\n            return new bizagi.rendering.layoutNumber(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutMoney\") {\r\n            return new bizagi.rendering.layoutMoney(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutPlaceholder\") {\r\n            return new bizagi.rendering.layoutPlaceholder(renderParams);\r\n        }\r\n\r\n        if (type == \"actionLauncher\") {\r\n            return new bizagi.rendering.actionLauncher(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutBoolean\") {\r\n            return new bizagi.rendering.layoutBoolean(renderParams);\r\n        }\r\n\r\n        if (type == \"layoutUpload\") {\r\n            return new bizagi.rendering.layoutUpload(renderParams);\r\n        }\r\n\r\n        if (type == \"entityTemplate\") {\r\n            return new bizagi.rendering.entityTemplate(renderParams);\r\n        }\r\n\r\n        if (type == \"polymorphicLauncher\") {\r\n            return new bizagi.rendering.polymorphicLauncher(renderParams);\r\n        }\r\n\r\n        if (type == \"userfield\") {\r\n            return new bizagi.rendering.userfieldWrapper(renderParams);\r\n        }\r\n\r\n        // Check search renders (starts with \"search\")\r\n        if (type.indexOf(\"search\") == 0) {\r\n            return this.getSearchRender(params);\r\n        }\r\n\r\n        if (type.indexOf(\"query\") == 0) {\r\n            return this.getQueryRender(params);\r\n        }\r\n\r\n        if (type == \"document\") {\r\n            return new bizagi.rendering.document(renderParams);\r\n        }\r\n\r\n        if (type == \"image\") {\r\n            return new bizagi.rendering.image(renderParams);\r\n        }\r\n        if (type == \"fileprint\") {\r\n            return new bizagi.rendering.fileprint(renderParams);\r\n        }\r\n        if (type == \"geolocation\") {\r\n            return new bizagi.rendering.geolocation(renderParams);\r\n        }\r\n\r\n        if (type == \"collectionnavigator\") {\r\n            return new bizagi.rendering.collectionnavigator(renderParams);\r\n        }\r\n\r\n        if (type == \"getUser\") {\r\n            return new bizagi.rendering.getUser(renderParams);\r\n        }\r\n\r\n        if (type == \"rangeDate\") {\r\n            return new bizagi.rendering.rangeDate(renderParams);\r\n        }\r\n\r\n        if (type == \"rangeMoney\") {\r\n            return new bizagi.rendering.rangeMoney(renderParams);\r\n        }\r\n\r\n        if (type == \"rangeNumber\") {\r\n            return new bizagi.rendering.rangeNumber(renderParams);\r\n        }\r\n\r\n        if (type == \"activityCheckList\") {\r\n            return new bizagi.rendering.activityCheckList(renderParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate column based on the render type\r\n    */\r\n    getColumn: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var columnParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService,\r\n            singleInstance: bizagi.util.isEmpty(params.singleInstance) ? true : params.singleInstance\r\n        });\r\n\r\n        if (type == \"columnText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                columnParams.decorated = bizagi.rendering.extendedText;\r\n            } else {\r\n                // Creates one normal text render\r\n                columnParams.decorated = bizagi.rendering.text;\r\n            }\r\n            return new bizagi.rendering.columns.text(columnParams);\r\n        }\r\n\r\n        if (type == \"columnSearchList\") {\r\n            columnParams.decorated = bizagi.rendering.searchList;\r\n            return new bizagi.rendering.columns.searchList(columnParams);\r\n        }\r\n\r\n        if (type == \"columnNumber\") {\r\n            columnParams.decorated = bizagi.rendering.number;\r\n            return new bizagi.rendering.columns.number(columnParams);\r\n        }\r\n\r\n        if (type == \"columnMoney\") {\r\n            columnParams.decorated = bizagi.rendering.money;\r\n            return new bizagi.rendering.columns.number(columnParams);\r\n        }\r\n\r\n        if (type == \"columnDate\") {\r\n            columnParams.decorated = bizagi.rendering.date;\r\n            return new bizagi.rendering.columns.date(columnParams);\r\n        }\r\n\r\n        if (type == \"columnBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                columnParams.decorated = bizagi.rendering.check;\r\n                if (params.data.properties.isExclusive) {\r\n                    return new bizagi.rendering.columns.exclusiveCheck(columnParams);\r\n                }\r\n            } else {\r\n                // Creates one yes-no render\r\n                columnParams.decorated = bizagi.rendering.yesno;\r\n            }\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnCombo\") {\r\n            columnParams.decorated = bizagi.rendering.combo;\r\n            return new bizagi.rendering.columns.combo(columnParams);\r\n        }\r\n\r\n        if (type == \"columnRadio\") {\r\n            columnParams.decorated = bizagi.rendering.radio;\r\n            return new bizagi.rendering.columns.radio(columnParams);\r\n        }\r\n\r\n        if (type == \"columnList\") {\r\n            columnParams.decorated = bizagi.rendering.list;\r\n            return new bizagi.rendering.columns.list(columnParams);\r\n        }\r\n\r\n        if (type == \"columnHidden\") {\r\n            columnParams.decorated = bizagi.rendering.hidden;\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUpload\") {\r\n            columnParams.decorated = bizagi.rendering.upload;\r\n            return new bizagi.rendering.columns.upload(columnParams);\r\n        }\r\n\r\n        if (type == \"columnImage\") {\r\n            columnParams.decorated = bizagi.rendering.image;\r\n            return new bizagi.rendering.columns.image(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUploadEcm\") {\r\n            columnParams.decorated = bizagi.rendering.ecm;\r\n            return new bizagi.rendering.columns.uploadecm(columnParams);\r\n        }\r\n        if (type == \"columnLink\") {\r\n            columnParams.decorated = bizagi.rendering.link;\r\n            return new bizagi.rendering.columns.link(columnParams);\r\n        }\r\n\r\n        if (type == \"columnFormLink\") {\r\n            columnParams.decorated = bizagi.rendering.formLink;\r\n            return new bizagi.rendering.columns.link(columnParams);\r\n        }\r\n\r\n        if (type == \"columnUserfield\") {\r\n            columnParams.decorated = bizagi.rendering.userfieldWrapper;\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnSearch\") {\r\n            columnParams.decorated = bizagi.rendering.search;\r\n            return new bizagi.rendering.columns.search(columnParams);\r\n        }\r\n\r\n        if (type == \"columnLabel\") {\r\n            columnParams.decorated = bizagi.rendering.label;\r\n            return new bizagi.rendering.columns.column(columnParams);\r\n        }\r\n\r\n        if (type == \"columnReadonly\") {\r\n            columnParams.decorated = bizagi.rendering.label;\r\n            return new bizagi.rendering.columns.readonly(columnParams);\r\n        }\r\n\r\n        if (type == \"columnDocument\") {\r\n            columnParams.decorated = bizagi.rendering.document;\r\n            return new bizagi.rendering.columns.document(columnParams);\r\n        }\r\n\r\n        if (type == \"columnLetter\") {\r\n            columnParams.decorated = bizagi.rendering.letter;\r\n            return new bizagi.rendering.columns.letter(columnParams);\r\n        }\r\n\r\n        if (type == \"columnButton\") {\r\n            columnParams.decorated = bizagi.rendering.button;\r\n            return new bizagi.rendering.columns.button(columnParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate search render based on the type\r\n    */\r\n    getSearchRender: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var searchParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type == \"searchText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                return new bizagi.rendering.extendedText(searchParams);\r\n            }\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.text(searchParams);\r\n        }\r\n\r\n        if (type == \"searchBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                return new bizagi.rendering.check(searchParams);\r\n            }\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.yesno(searchParams);\r\n        }\r\n\r\n        if (type == \"searchNumber\") {\r\n            if (data.properties.dataType == 29) {\r\n                //Creates a Scientific Notation render\r\n                return new bizagi.rendering.numberScientificNotation(searchParams);\r\n            }\r\n            return new bizagi.rendering.number(searchParams);\r\n        }\r\n\r\n        if (type == \"searchMoney\") {\r\n            return new bizagi.rendering.money(searchParams);\r\n        }\r\n\r\n        if (type == \"searchDate\") {\r\n            return new bizagi.rendering.date(searchParams);\r\n        }\r\n\r\n        if (type == \"searchCombo\") {\r\n            return new bizagi.rendering.combo(searchParams);\r\n        }\r\n\r\n        if (type == \"searchSuggest\") {\r\n            return new bizagi.rendering.search(searchParams);\r\n        }\r\n\r\n        if (type == \"searchLabel\") {\r\n            return new bizagi.rendering.label(searchParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Returns the appropiate search render based on the type\r\n    */\r\n    getQueryRender: function (params) {\r\n        var type = params.type;\r\n        var data = params.data;\r\n        var searchParams = $.extend(params, {\r\n            renderFactory: this,\r\n            dataService: params.dataService || this.dataService\r\n        });\r\n\r\n        if (type == \"queryText\") {\r\n            var isExtended = bizagi.util.parseBoolean(data.properties.isExtended) || false;\r\n\r\n            if (isExtended) {\r\n                // Creates one extended render\r\n                return new bizagi.rendering.queryExtendedText(searchParams);\r\n            }\r\n\r\n            // Creates one normal text render\r\n            return new bizagi.rendering.queryText(searchParams);\r\n        }\r\n\r\n        if (type == \"queryBoolean\") {\r\n            var display = data.properties.display || \"option\";\r\n\r\n            if (display == \"check\") {\r\n                // Creates one check render\r\n                return new bizagi.rendering.queryCheck(searchParams);\r\n            }\r\n\r\n            // Creates one yes-no render\r\n            return new bizagi.rendering.queryYesNo(searchParams);\r\n        }\r\n\r\n        if (type == \"queryNumber\") {\r\n\r\n            return new bizagi.rendering.queryNumber(searchParams);\r\n        }\r\n\r\n        if (type == \"queryMoney\") {\r\n            return new bizagi.rendering.queryMoney(searchParams);\r\n        }\r\n\r\n        if (type == \"queryDate\") {\r\n            return new bizagi.rendering.queryDate(searchParams);\r\n        }\r\n\r\n        if (type == \"queryCombo\") {\r\n            return new bizagi.rendering.queryCombo(searchParams);\r\n        }\r\n\r\n        if (type == \"queryCascadingCombo\") {\r\n            return new bizagi.rendering.queryCascadingCombo(searchParams);\r\n        }\r\n\r\n        if (type == \"querySuggest\") {\r\n            return new bizagi.rendering.querySuggest(searchParams);\r\n        }\r\n\r\n        if (type == \"queryLabel\") {\r\n            return new bizagi.rendering.queryLabel(searchParams);\r\n        }\r\n\r\n        if (type == \"queryList\") {\r\n            return new bizagi.rendering.queryList(searchParams);\r\n        }\r\n        \r\n        if (type == \"queryMultiSelect\") {\r\n            return new bizagi.rendering.queryMultiSelect(searchParams);\r\n        }\r\n\r\n        if (type == \"querySearch\") {\r\n            return new bizagi.rendering.querySearch(searchParams);\r\n        }\r\n\r\n        if (type == \"queryRadio\") {\r\n            return new bizagi.rendering.queryRadio(searchParams);\r\n        }\r\n\r\n        if (type == \"queryState\") {\r\n            return new bizagi.rendering.queryState(searchParams);\r\n        }\r\n\r\n        if (type == \"queryCaseState\") {\r\n            return new bizagi.rendering.queryCaseState(searchParams);\r\n        }\r\n\r\n        if (type == \"queryProcess\") {\r\n            return new bizagi.rendering.queryProcess(searchParams);\r\n        }\r\n\r\n        if (type == \"querySearchUser\") {\r\n            return new bizagi.rendering.querySearchUser(searchParams);\r\n        }\r\n\r\n        if (type == \"queryHidden\") {\r\n            return new bizagi.rendering.hidden(searchParams);\r\n        }\r\n\r\n        // No type supported\r\n        bizagi.log(type + \" not supported in render factory\", data, \"error\");\r\n        return null;\r\n    },\r\n    /*\r\n    *   Method to fetch templates from a private dictionary\r\n    */\r\n    getTemplate: function (template) {\r\n        var self = this;\r\n        return self.templates[template];\r\n    }\r\n});\r\n","/*\r\n*   Name: Bizagi Device Render Factory\r\n*   Author: UI Forms Team\r\n*   Comments:\r\n*   -   This script will detect the current device and then will load the appropriate factory on demand\r\n*/\r\n\r\n$.Class.extend(\"bizagi.rendering.device.factory\", {}, {\r\n\r\n    /**\r\n     * Constructor, detects the device\r\n     * @param params\r\n     */\r\n    init: function (params) {\r\n        this.execution_device = bizagi.util.detectDevice();\r\n        this.cachedFactory = {};\r\n    },\r\n\r\n    /**\r\n     * Returns the appropriate render factory based on the device detection\r\n     * Because it loads the scripts on demand it must return a promise\r\n     * @param dataService\r\n     * @param device\r\n     * @returns {*}\r\n     */\r\n    getRenderFactory: function (dataService, device) {\r\n        var self = this;\r\n        device = device || \"desktop\";\r\n        var defer = new $.Deferred();\r\n\r\n        if (typeof self.cachedFactory[device] !== \"undefined\") {\r\n            // Reset print version value\r\n            self.cachedFactory[device].printVersion = false;\r\n            // Resolve with cached factory                \r\n            defer.resolve(self.cachedFactory[device]);\r\n        } else {\r\n            // If factory is not cached then build it\r\n            if (device === \"print\") {\r\n\r\n                // Load print version references\r\n                self.cachedFactory[device] = new bizagi.rendering.print.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n\r\n            } else if (device === \"desktop\") {\r\n\r\n                // Load desktop references\r\n                self.cachedFactory[device] = new bizagi.rendering.desktop.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n\r\n            } else if (bizagi.util.isTabletDevice(device)) {\r\n\r\n                // Load tablet references\r\n                self.cachedFactory[device] = new bizagi.rendering.tablet.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n            } else if (bizagi.util.isSmartphoneDevice(device)) {\r\n\r\n                // Load tablet references\r\n                self.cachedFactory[device] = new bizagi.rendering.smartphone.factory(dataService);\r\n\r\n                // Wait for async loading\r\n                self.cachedFactory[device].initAsyncStuff()\r\n                    .done(function () {\r\n\r\n                        // Resolve operation\r\n                        defer.resolve(self.cachedFactory[device]);\r\n                    });\r\n            } else {\r\n                // if no device suuported\r\n                bizagi.showMessageBox(\"Not supported device: \" + device);\r\n                defer.reject(\"Not supported device: \" + device);\r\n            }\r\n        }\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Returns the current data service being used\r\n     * @returns {*}\r\n     */\r\n    getDataService: function () {\r\n        return this.dataService;\r\n    }\r\n\r\n});\r\n","/*\r\n *   Name: BizAgi Rendering\r\n *   Author: Diego Parra\r\n *   Comments:\r\n *   -   This script will process a rendering page by calling an ajax service to retrieve the model,\r\n *       and then process it to create base layout, and then call the device render factory\r\n */\r\n\r\n// Define BizAgi Rendering namespace\r\nbizagi.rendering = bizagi.rendering || {};\r\n\r\n/*\r\n *   This class will define a method to process the page\r\n *   1. Fetch the data\r\n *   2. Call the device factory to appropriately render the content\r\n */\r\n$.Class.extend(\"bizagi.rendering.facade\", {\r\n    form: undefined,\r\n    executionDeferred: new $.Deferred()\r\n}, {\r\n    /*\r\n    *   Constructor\r\n    */\r\n    init: function (params) {\r\n        params = params || {};\r\n\r\n        // Set observable element\r\n        this.observableElement = $({});\r\n\r\n        // Injection of Device, only for print version purpose\r\n        var device = params.device || \"\";\r\n\r\n        // Defines a device factory for all rendering\r\n        this.deviceFactory = new bizagi.rendering.device.factory();\r\n\r\n        // Creates a data service instance\r\n        this.dataService = new bizagi.render.services.service(params);\r\n\r\n        // Retrieves the render factory\r\n        this.renderFactory = this.deviceFactory.getRenderFactory(this.dataService, device);\r\n    },\r\n    getFactory: function () {\r\n        var self = this;\r\n        return {\r\n            deviceFactory: self.deviceFactory,\r\n            dataService: self.dataService,\r\n            renderFactory: self.renderFactory\r\n        };\r\n    },\r\n    /*\r\n    *   Subscribe method\r\n    */\r\n    subscribe: function () {\r\n        this.observableElement.bind.apply(this.observableElement, arguments);\r\n    },\r\n    /*\r\n    *   Unsubscribe method\r\n    */\r\n    unsubscribe: function () {\r\n        this.observableElement.unbind.apply(this.observableElement, arguments);\r\n    },\r\n    /*\r\n    *   Publish method\r\n    */\r\n    publish: function () {\r\n        return this.observableElement.triggerHandler.apply(this.observableElement, arguments);\r\n    },\r\n    /*\r\n    *   This method will re-execute the process\r\n    */\r\n    update: function (params) {\r\n        var self = this;\r\n\r\n        // Update rendering mode\r\n        if (params.mode)\r\n            self.mode = params.mode;\r\n\r\n        // Enable form buttons on desktop view\r\n        return self.execute($.extend({\r\n            canvas: self.canvas,\r\n            mode: self.mode\r\n        }, params));\r\n    },\r\n    /*\r\n    *   Start point method to use in the main javascript pages\r\n    *   This method will process everything and attach the html directly to the dom\r\n    */\r\n    execute: function (params) {\r\n        var self = this;\r\n        var doc = this.ownerDocument;\r\n        var body = $(\"body\", doc);\r\n        params = params || {};\r\n\r\n        // Creates ready deferred\r\n        if (self.executionDeferred && self.executionDeferred.state) {\r\n            if (self.executionDeferred.state() == \"resolved\") {\r\n                self.executionDeferred = $.Deferred();\r\n            }\r\n        } else {\r\n            self.executionDeferred = $.Deferred();\r\n        }\r\n\r\n        // Performance measurement stuff\r\n        bizagi.chrono.initAndStart(\"rendering+data\", true);\r\n        bizagi.rendering.render.startOptimization();\r\n\r\n        // Override mode\r\n        if (typeof (params.mode) === \"undefined\") {\r\n            if (!bizagi.util.isEmpty(window.location.search)) {\r\n                var queryString = bizagi.util.getQueryString();\r\n                params.mode = queryString[\"mode\"];\r\n            }\r\n        }\r\n\r\n        // If the canvas is not given, we need to create one\r\n        var canvas = self.canvas = params.canvas = params.canvas || $(\"<div />\").appendTo(body);\r\n        self.mode = params.mode;\r\n\r\n        self.process(params).done(function (form) {\r\n\r\n            // Clear canvas    \r\n            if (!params.refreshing) {\r\n                canvas.empty();\r\n            }\r\n\r\n            // Append content\r\n            canvas.append(form.container);\r\n\r\n            // Include process path\r\n            $(form.pathProcess).insertBefore(form.container);\r\n\r\n            // Keep reference in class\r\n            self.form = form;\r\n            self.form.setSize({width: self.lastWidth, height: self.lastHeight});\r\n\r\n            // Save window size variables\r\n            setTimeout(function () {\r\n                self.lastWidth = $(window).width();\r\n                self.lastHeight = $(window).height();\r\n                if (window.self !== window.top)\r\n                    self.resizeInPopUpHTML();\r\n            }, 2000);\r\n\r\n            // Publish an event to check if the form has been set in the DOM\r\n            form.triggerHandler(\"ondomincluded\");\r\n\r\n            // Notify to module users that the form has been rendered\r\n            self.publish(\"rendering-formRendered\", {});\r\n\r\n            // Configure handlers\r\n            self.configureRefresh(form, canvas);\r\n            self.configureRouting(form, canvas);\r\n            self.configureRenderError(form, canvas);\r\n            self.configureResize(form);\r\n            self.configureGlobalHandlers(form);\r\n\r\n            // Check if it is a summary form\r\n            if (params.summaryForm) {\r\n                form.container.addClass(\"ui-bizagi-summary-form\");\r\n            }\r\n\r\n            // Ends main timer and log everything\r\n            bizagi.chrono.stopAndLog(\"rendering\");\r\n            bizagi.chrono.stopAndLog(\"rendering+data\");\r\n            bizagi.chrono.stopAndLog(\"submitForm\");\r\n            bizagi.chrono.stopAndLog(\"submitForm-ajax\");\r\n            bizagi.chrono.stopAndLog(\"waiting\");\r\n\r\n            // Resolves deferred\r\n            bizagi.rendering.render.stopOptimization();\r\n\r\n            // Expose public reference of form\r\n            if (bizagi.override.enableE2EInterface) {\r\n                self.Class.form = self.form;\r\n                self.Class.executionDeferred.resolve(self.form);\r\n            }\r\n\r\n            self.executionDeferred.resolve(self.form);\r\n\r\n        }).fail(function (message, errorType) {\r\n\r\n            $.when(self.renderFactory)\r\n                .done(function (renderFactory) {\r\n\r\n                    if (typeof message === \"undefined\" || message === \"\") {\r\n                        message = bizagi.localization.getResource(\"render-error-unknown\");\r\n                    }\r\n\r\n                    var errorTemplate = renderFactory.getCommonTemplate(\"form-error\");\r\n                    // Fill canvas\r\n                    canvas.empty();\r\n                    canvas.append($.tmpl(errorTemplate, {\r\n                        message: message\r\n                    }));\r\n                    self.publish(\"rendering-formRenderedError\", message);\r\n                    self.canvas.triggerHandler(\"errorform\", message);\r\n                    // Ends main timer and log everything\r\n                    bizagi.chrono.stopAndLog(\"rendering\");\r\n                    bizagi.chrono.stopAndLog(\"rendering+data\");\r\n\r\n                    self.executionDeferred.reject();\r\n                });\r\n        });\r\n\r\n        return self.executionDeferred.promise();\r\n    },\r\n    /*\r\n    *   Returns the execution deferred to determine if the component is ready or not\r\n    */\r\n    ready: function () {\r\n        return this.executionDeferred.promise();\r\n    },\r\n    /*\r\n    *   Loads data and render factory in order to process the form\r\n    *   Returns a deferred to set callbacks when the process is done\r\n    */\r\n    process: function (params) {\r\n        var self = this;\r\n        var defer = new $.Deferred();\r\n\r\n        // Call get form data service\r\n        var dataPromise = self.dataService.getFormData(params);\r\n\r\n        var canvas = self.canvas || params.canvas;\r\n\r\n        bizagi.showErrorAlertDialog = false;\r\n        // Set callback when requests have been done\r\n        $.when(dataPromise, self.renderFactory)\r\n            .done(function (data, renderFactory) {\r\n                bizagi.showErrorAlertDialog = true;\r\n\r\n                // When there is no data trigger an event\r\n                if (bizagi.util.isEmpty(data)) {\r\n                    self.publish(\"no-data-found\");\r\n                    defer.fail();\r\n                    return;\r\n                }\r\n\r\n                if (data && data.type == \"reload\") {\r\n                    var form = self.form;\r\n                    if (form) {\r\n                        form.endLoading();\r\n                        form.dispose();\r\n                    }\r\n                    // Trigger handler on canvas\r\n                    canvas.triggerHandler(\"routing\");\r\n\r\n                } else if (data && data.type == \"suspended\") {\r\n                    var errorTemplate = renderFactory.getTemplate(\"info-message\");\r\n                    var message = bizagi.localization.getResource(\"render-case-suspended\");\r\n                    var errorHtml = $.tmpl(errorTemplate, {\r\n                        message: message\r\n                    });\r\n                    // Remove loading icon from summary container\r\n                    errorHtml.appendTo(canvas);\r\n\r\n                    defer.fail();\r\n\r\n                } else if (data && data.type != \"error\") {\r\n                    if (params.hasOwnProperty('printversion')) {\r\n                        data = self.transformGridControl(data);\r\n                        data.form.properties.editable = \"False\";\r\n                    }\r\n\r\n                    bizagi.chrono.initAndStart(\"rendering\");\r\n                    params.type = (data.form && data.form.properties.type) || params.type;\r\n                    var form = self.processForm(data.form, renderFactory, params);\r\n\r\n                    // Resolve deferred\r\n                    defer.resolve(form);\r\n\r\n                } else {\r\n                    self.getFailDeferred(data, defer);\r\n                }\r\n            }).fail(function (errorMessage) {\r\n            self.getFailDeferred(errorMessage, defer);\r\n        });\r\n\r\n        return defer.promise();\r\n    },\r\n    /**\r\n     * In the print version widget when grid control was rendered, the main render has broken\r\n     * Is necesary change id of grid control to fixed these  problems\r\n     */\r\n    transformGridControl: function (data) {\r\n        var self = this;\r\n        if (data == null) {\r\n            return data;\r\n        }\r\n\r\n        if (data.hasOwnProperty('type') && data.type == 'grid') {\r\n            data.id = data.id + \"-print\";\r\n            data.allowAdd = \"False\";\r\n            data.allowDelete = \"False\";\r\n            data.allowEdit = \"False\";\r\n            data.allowGrouping = \"False\";\r\n            data.allowMore = \"False\";\r\n            data.allowSearch = \"False\";\r\n        } else {\r\n            $.each(data, function (key, value) {\r\n                if (typeof (value) == 'object') {\r\n                    data[key] = self.transformGridControl(data[key]);\r\n                }\r\n            });\r\n        }\r\n        return data;\r\n    },\r\n    /**\r\n     * Resolve deferred\r\n     */\r\n    getFailDeferred: function (errorMessage, defer) {\r\n        var self = this;\r\n        var message = \"\";\r\n        var jsonErrorMessage = {};\r\n        try {\r\n            jsonErrorMessage = JSON.parse(errorMessage.responseText);\r\n        } catch (e) {\r\n            jsonErrorMessage = {message: errorMessage.responseText, errorType: \"ERRORUNKNOWN\"};\r\n        }\r\n\r\n\r\n        if (jsonErrorMessage.message) {\r\n            message += \"<br>Error Type: \" + jsonErrorMessage.errorType;\r\n            message += \"<br>Error Message: \" + jsonErrorMessage.message;\r\n        } else {\r\n            if (jsonErrorMessage.errorType == \"JSharpNotSupportedException\") {\r\n                message += \"<br>Error Message: \" + bizagi.localization.getResource(\"jsharp-required\");\r\n            }\r\n        }\r\n\r\n        // Error in metadata InvalidFormMetadata\r\n        if (jsonErrorMessage.errorType == 'ERRORUNKNOWN') {\r\n            defer.reject(message, jsonErrorMessage.errorType);\r\n        } else {\r\n\r\n            defer.reject(message);\r\n        }\r\n    },\r\n    /*\r\n    *   Process the form\r\n    */\r\n    processForm: function (data, renderFactory, params) {\r\n        var form = renderFactory.getContainer($.extend(params, {\r\n            type: params.type || \"form\",\r\n            data: data\r\n        }));\r\n\r\n        //Orientation RTL - OrderButtons\r\n        if (typeof BIZAGI_ORIENTATION != \"undefined\") {\r\n            if ((form.properties.orientation == \"rtl\" || BIZAGI_ORIENTATION == 'rtl') && form.buttons.length > 0) {\r\n                var buttonsForm = form.buttons[0];\r\n\r\n                form.buttons.splice(0, 1);\r\n                form.buttons.push(buttonsForm);\r\n            }\r\n        }\r\n\r\n        // Render the full form\r\n        form.render();\r\n\r\n        return form;\r\n    },\r\n    /*\r\n    *   Performs a resize\r\n    */\r\n    resize: function (args) {\r\n        var self = this;\r\n        if (self.form) {\r\n            self.form.trigger(\"renderresize\", args);\r\n        }\r\n    },\r\n    /*\r\n    *   Binds a refresh handler to detect when the whole form needs to fetch all data from server\r\n    */\r\n    configureRefresh: function (form, canvas) {\r\n        var self = this;\r\n\r\n        // Attach a refresh handler to recreate all the form\r\n        form.bind(\"refresh\", function (_, refreshParams) {\r\n\r\n            // Find the scroll top\r\n            var parent = form.container.parent();\r\n            parent = bizagi.util.scrollTop(parent);\r\n            var scrollTop = parent.scrollTop();\r\n\r\n            $(self.form).trigger(\"onRefreshStarted\");\r\n\r\n            //Dispose current form\r\n            form.dispose(refreshParams);\r\n            canvas.fastEmpty();\r\n            var canvasParent = canvas.parent();\r\n            if (canvasParent.find(\".ui-bizagi-button-container\").length > 0) {\r\n                canvasParent.find(\".ui-bizagi-button-container\").remove();\r\n            }\r\n\r\n            if (self.executionDeferred && self.executionDeferred.state) {\r\n                if (self.executionDeferred.state() == \"resolved\") {\r\n                    self.executionDeferred = $.Deferred();\r\n                }\r\n            }\r\n\r\n            var formParams = self.form.getParams();\r\n            // Re-execute process\r\n            $.when(self.execute($.extend(refreshParams, {\r\n                canvas: canvas,\r\n                refreshing: true,\r\n                idCase: formParams.idCase,\r\n                displayName: formParams.displayName\r\n            }))).done(function () {\r\n\r\n                // Restore scroll at same position\r\n                setTimeout(function () {\r\n                    parent.scrollTop(scrollTop);\r\n                    $(self.form).trigger(\"onRefreshFinished\");\r\n                }, 100);\r\n            });\r\n\r\n            return self.executionDeferred.promise();\r\n        });\r\n    },\r\n    /*\r\n    *   Binds a resize hanlder to configure the resize behaviour\r\n    */\r\n    configureResize: function (form) {\r\n        var self = this;\r\n\r\n        // Attach resize handler\r\n        form.bind(\"renderresize\", function (_, args) {\r\n            args = args || {};\r\n            // Just allow one resize at a time\r\n            if (self.resizeTimeout)\r\n                return;\r\n            var resizeFn = function () {\r\n                // Call resize event in form\r\n                var width = $(window).width();\r\n                var height = $(window).height();\r\n                if (args.forceResize || width != self.lastWidth) {\r\n\r\n                    // Logging stuff\r\n                    bizagi.chrono.initAndStart(\"resize\");\r\n\r\n                    // Perform resize\r\n                    form.resize({\r\n                        width: width,\r\n                        height: height\r\n                    });\r\n                    self.lastWidth = width;\r\n                    self.lastHeight = height;\r\n\r\n                    // Logging stuff\r\n                    bizagi.chrono.stopAndLog(\"resize\");\r\n                    bizagi.chrono.log(\"resize\");\r\n                }\r\n\r\n                self.resizeTimeout = null;\r\n            };\r\n            self.resizeTimeout = setTimeout(resizeFn, 0);\r\n\r\n        });\r\n        self.resize();\r\n    },\r\n    /*\r\n    *   Binds a routing handler to detect when the workportal need to enroute the case\r\n    */\r\n    configureRouting: function (form, canvas) {\r\n        // Attach a routing handler to notify to the caller\r\n        form.bind(\"routing\", function (context, triggerParams) {\r\n            //Dispose current form\r\n            form.dispose();\r\n\r\n            // Trigger handler on canvas\r\n            canvas.triggerHandler(\"routing\", triggerParams);\r\n        });\r\n    },\r\n    /*\r\n    *   Binds a generic handler that will be replicated to facade instantiators\r\n    */\r\n    configureGlobalHandlers: function (form) {\r\n        var self = this;\r\n\r\n        // Attach a routing handler to notify to the caller\r\n        form.bind(\"globalHandler\", function (_, args) {\r\n            // Trigger handler on canvas\r\n            return self.publish(args.eventType, args.data);\r\n        });\r\n    },\r\n    /*\r\n    * Binds error form handler to detect when the render element nop posible get information or error in server\r\n    */\r\n    configureRenderError: function (form, canvas) {\r\n        var self = this;\r\n\r\n        form.bind(\"formRenderingError\", function (event, errorMessage) {\r\n            $.when(self.renderFactory)\r\n                .done(function (renderFactory) {\r\n                    var message = \"<br>Error: \";\r\n\r\n                    errorMessage = errorMessage.replace(/(\\r\\n|\\n|\\r)/gm, \"\");\r\n\r\n                    var jsonErrorMessage = JSON.parse(errorMessage);\r\n                    if (jsonErrorMessage.message) {\r\n                        message += jsonErrorMessage.message;\r\n                        message += \"<br>Error Type: \" + jsonErrorMessage.errorType;\r\n                    }\r\n                    var errorTemplate = renderFactory.getCommonTemplate(\"form-error\");\r\n                    // Fill canvas\r\n                    canvas.empty();\r\n                    canvas.append($.tmpl(errorTemplate, {\r\n                        message: message\r\n                    }));\r\n                    //send the type error to differentiate between a form and an item for render\r\n                    self.canvas.triggerHandler(\"errorform\", \"renderItemError\");\r\n                    // Ends main timer and log everything\r\n                    bizagi.chrono.stopAndLog(\"rendering+data\");\r\n                    bizagi.chrono.stopAndLog(\"rendering\");\r\n                });\r\n        });\r\n    },\r\n\r\n    dispose: function () {\r\n        var self = this;\r\n        if (self.form) {\r\n            self.form.dispose();\r\n        }\r\n        bizagi.util.dispose(self);\r\n    },\r\n\r\n    resizeInPopUpHTML: function () {\r\n        if ($(\".activitiFormContainer\").length > 0 && bizagi.util.getQueryString().type != \"cases\") {\r\n            var heightActivitiFormContainer = $(\".activitiFormContainer\").height() || 0;\r\n            var renderForm = $(\".activitiFormContainer #ui-bizagi-webpart-render-container\");\r\n            var buttonContainer = $(\".ui-bizagi-button-container\", \".activitiFormContainer\");\r\n            var heightButtonContainer = buttonContainer.outerHeight() || 0;\r\n            var renderBehavior = bizagi.util.getQueryString().renderBehavior || \"\";\r\n            renderBehavior = renderBehavior.replace(\"#\", \"\");\r\n\r\n            if (renderBehavior == \"PopUp\") {\r\n                if (typeof (self.postMessageSocket) == \"undefined\") {\r\n                    var heightCanvas = $(\".activitiFormContainer\").height() - 50 || 396;\r\n                    $(\"#render-canvas\").height(heightCanvas);\r\n                    $(\"#render-canvas\").css(\"overflowY\", \"scroll\");\r\n                } else $(\".activitiFormContainer\").height($(\".activitiFormContainer\").height() + $(\".ui-bizagi-button-container\").height() + 30);\r\n                $(\".ui-bizagi-button-container\").css(\"position\", \"absolute\");\r\n                $(\".ui-bizagi-button-container\").appendTo(\".activitiFormContainer\");\r\n                if ($(\".ui-bizagi-button-container\").length > 1) {\r\n                    $(\".ui-bizagi-button-container:first\").hide();\r\n                    renderForm.css(\"marginTop\", \"-17px\");\r\n                }\r\n            }\r\n            if (buttonContainer.length > 0) {\r\n                //display buttons\r\n                renderForm.height(heightActivitiFormContainer - 97 - heightButtonContainer);\r\n            }\r\n            if ($(\".ui-bizagi-button-container\").children().length == 0)\r\n                $(\"#render-canvas\").height($(\"#render-canvas\").height() + heightButtonContainer);\r\n            else {\r\n                buttonContainer.width(\"100%\");\r\n                buttonContainer.css(\"marginLeft\", 0);\r\n                buttonContainer.css(\"bottom\", 0);\r\n            }\r\n        } else if (bizagi.util.getQueryString().type == \"render\") {\r\n            $(\"html\").css(\"overflowX\", \"hidden\");\r\n            ($(\"#render\").height() <= window.innerHeight + 5) ? $(\"html\").css(\"overflowY\", \"hidden\")\r\n                : $(\"html\").css(\"overflowY\", \"scroll\");\r\n            $(\".ui-widget-overlay\").height(650);\r\n        }\r\n    }\r\n\r\n});"]}