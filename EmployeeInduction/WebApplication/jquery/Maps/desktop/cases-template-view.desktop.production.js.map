{"version":3,"sources":["jquery/workportal/desktop/widget/casesTemplate/bizagi.workportal.desktop.widgets.casestemplate.js","jquery/workportal/desktop/widget/filtercases/bizagi.workportal.desktop.widgets.filtercases.js","jquery/workportal/desktop/widget/paginator/bizagi.workportal.desktop.widgets.paginator.js","jquery/workportal/desktop/widget/sortbar/bizagi.workportal.desktop.widgets.sortbar.js","jquery/workportal/desktop/widget/processeslist/bizagi.workportal.desktop.widgets.processeslist.js"],"names":["bizagi","workportal","widgets","widget","extend","init","workportalFacade","dataService","actionService","casetoolbar","usersCasesService","actionsEventsService","accumulatedcontext","params","self","this","_super","loadTemplates","casestemplate-container","getTemplate","concat","casestemplate-item","casestemplate-empty-data","selectorCheckboxItems","hasBatchActions","sequenceCall","renderContent","templateContainer","content","render","postRender","$content","getContent","sub","$","proxy","updateCases","getCommonActions","ev","setValues","subscribe","onFormActionExecuted","onFormRuleExecuted","find","on","onCaseChecked","heightBreadCrumb","outerHeight","heightMenu","height","scroll","sticky","heightSticky","scrollTop","addClass","css","removeClass","clean","checkAll","unbind","unsubscribe","unsub","off","data","sequence","args","defer","Deferred","$dataViewList","empty","casesSelected","page","idworkflow","undefined","route","filter","pageSize","when","getCasesData","pipe","casesData","resolve","pub","type","event","getCasesTemplates","done","templates","templateString","casesLength","length","getEmptyDataMessage","$templateCase","$elementsTmpl","i","l","renderCase","push","apply","append","commonActions","value","promise","caseData","isRefresh","actionData","idCase","surrogateKey","guidEntity","templateCase","security","command","tmpl","checkSecurityPerm","graphicQuery","casetoolbarData","setTimeout","$casetoolbar","getCaseToolbar","referrer","$case","$footer","startLoading","delay","overlay","getActionsView","loadEvents","responseActions","$actionsView","actionsView","actionsData","batchActions","getCheckBox","showCheckItem","removeCheckItem","endLoading","getAssignees","$assignees","$item","closest","remove","show","refresh","refreshCase","idBox","$templateBox","isChecked","is","then","caseTemplate","replaceWith","prop","getActivitiesData","getPendingsData","taskState","result","getTemplateEngine","engine","map","entities","cases","casesTemplates","makeArray","arguments","idCases","guidFavorite","idcase","idWorkflow","guid","radNumber","templateEngine","proxyPrefix","RPproxyPrefix","renderDataService","services","service","renderFactory","rendering","desktop","factory","initAsyncStuff","cache","forcePersonalizedColumns","reference","referenceType","fromActionLauncher","histName","displayName","guidEntityCurrent","xpath","pubDeadLockDetection","outerHTML","$target","target","model","actions","surrogateKeys","parentsid","itemsSelected","$inputs","input","guidentity","injector","register","casestemplate","lastIdworkflow","filtercases","template","$contentWidget","onClickButtonFilter","updateUI","currentTarget","hasClass","attr","siblings","resourceLocalization","toLowerCase","localization","getResource","refreshLastItemBreadcrumb","hide","paginator","getSuffixWidget","updateView","configureHandlers","renderTemplate","totalRecords","totalPages","currentPage","appendTo","setModel","action","guidSearch","getModel","stopNavigation","onPageBreak","disabledPaginatorButtonsByLimits","text","$buttonFastRewind","$buttonRewind","$buttonFordward","$buttonFastFordward","processActionService","sortbar","right-content","addButton","sortMenu","recordsPerPage","recordsMenu","enableFilter","$checkAll","configureAfterPaintHandlers","initializeAndProcessFilterButton","setFiltersSortData","hideFilterButtonAndBar","hideSortButtons","enableBatchActions","updateCounterByFilterApplied","showingFiltering","setVisibleCheckAll","behaviorVisibleSortbar","validActions","tooltip","onCheckUncheck","showSortMenu","showRecordsMenu","sortSelection","attribute","setIconSortType","_sortType","properties","orderType","typeSearch","onRemoveSelectedItemsCollections","showingSorting","showingCheckAll","_haveAddButton","setVisibleSortbar","visible","showSelectedItems","numberCheckedItems","keywordSelected","button","sortTypeBeforeChanged","onClickBatchAction","$buttonLI","guidAction","getAction","requestsInProgressActionGuid","addLoadingButtonAction","executeBatchAction","commonActionsmodel","always","$button","prepend","$parent","filters","_filters","displayValue","val","click","e","stopPropagation","document","one","index","display","split","pop","Number","util","trim","textContent","restoreOrderSelected","processAddButton","$buttonContainer","_lastReferenceEntity","children","getProcessAddAction","referenceEntity","Object","getOwnPropertyNames","id","renderButton","$addButton","clickAddButton","getMapping","accumulatedContext","getContext","xpathContext","mappingData","onExecuteProcess","onExecuteForm","commonActionsModel","showBatchActions","typeActions","keys","moreActions","slice","$actions","tooltipClass","items","html","open","ui","uiTooltip","$id","keyActionGuid","not","$buttonAction","close","hover","stop","fadeTo","fadeOut","filtersAppliedCounter","calculateFilters","a","filterCounter","sortCounter","defaultValues","min","max","showFilterButton","hideFilterButton","showSortButtons","updateCounter","$sortbarIcon","filtersApplied","counter","$counter","showingFilter","startForm","hasStartForm","executeProcessAction","refreshTemplateData","loadTemplateData","executeFormAction","grep","multiplicity","mode","isEvent","processeslist","processeslistEmptyData","getData","processes","setSelectedList","getIdworkflow","getHistname","onClickProcess","$args","$route","myPendings","myActivities","onlyFavorites","getAllProcesses","getInfoToProcessesList","allProcesses","categories","j","k","workflows","process","name","clone","level","item"],"mappings":"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","sourcesContent":["bizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.casestemplate\", {}, {\r\n    /**\r\n     * Constructor\r\n     */\r\n    init: function (workportalFacade, dataService, actionService, casetoolbar, usersCasesService, actionsEventsService, accumulatedcontext, params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(workportalFacade, dataService, params);\r\n\r\n        //Load templates\r\n        self.loadTemplates({\r\n            \"casestemplate-container\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.casestemplate\").concat(\"#casestemplate-wrapper\"),\r\n            \"casestemplate-item\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.casestemplate\").concat(\"#casestemplate-item\"),\r\n            \"casestemplate-empty-data\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.casestemplate\").concat(\"#casestemplate-empty-message\")\r\n        });\r\n\r\n        self.selectorCheckboxItems = \".casetemplate-box-check-selector input:checkbox\";\r\n        self.actionService = actionService;\r\n        self.casetoolbar = casetoolbar;\r\n        self.usersCasesService = usersCasesService;\r\n        self.actionsEventsService = actionsEventsService;\r\n        self.hasBatchActions = false;\r\n\r\n        self.sequenceCall = 0;\r\n        self.accumulatedcontext = accumulatedcontext;\r\n    },\r\n\r\n    /**\r\n     * Renders the template defined in the widget\r\n     */\r\n    renderContent: function () {\r\n        var self = this,\r\n            templateContainer = self.getTemplate(\"casestemplate-container\");\r\n\r\n        self.content = templateContainer.render({});\r\n        return self.content;\r\n    },\r\n\r\n    /**\r\n     * links events with handlers\r\n     */\r\n    postRender: function () {\r\n        var self = this,\r\n            $content = self.getContent();\r\n\r\n        self.sub(\"CASES-TEMPLATE-VIEW\", $.proxy(self.updateCases, self));\r\n        self.sub(\"UPDATE-DATATEMPLATE-VIEW\", $.proxy(self.updateCases, self));\r\n        self.sub(\"GET-COMMON-ACTIONS\", $.proxy(self.getCommonActions, self));\r\n        self.sub(\"SET-RECORDS\", $.proxy(self.updateCases, self));\r\n        self.sub(\"SET-VALUES\", function (ev, params) { return self.setValues(params) });\r\n        self.actionService.subscribe(\"onFormActionExecuted\", $.proxy(self.onFormActionExecuted, self));\r\n        self.actionService.subscribe(\"onFormRuleExecuted\", $.proxy(self.onFormRuleExecuted, self));\r\n        $content.find(\"#casestemplate-dataviewer-list\").on(\"click\", self.selectorCheckboxItems, $.proxy(self.onCaseChecked, self));\r\n\r\n        //keep bar actions\r\n        var heightBreadCrumb = $(\"#home-navbar\").outerHeight();\r\n        var heightMenu = $(\"#ui-bizagi-wp-menu\").height() - heightBreadCrumb;\r\n        $(\"#content-wrapper\").scroll(function(){\r\n            var sticky = $(\".template-sticky-header-tools\");\r\n            var heightSticky = sticky.height();\r\n            var scroll = $(\"#content-wrapper\").scrollTop();\r\n\r\n            if (scroll >= heightMenu) {\r\n                sticky.addClass(\"fixed-header-tools\");\r\n                $(this).css(\"padding-top\", (heightSticky) + \"px\");\r\n            }\r\n            else {\r\n                sticky.removeClass(\"fixed-header-tools\");\r\n                $(this).css(\"padding-top\", \"\");\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Detach events\r\n     */\r\n    clean: function () {\r\n        var self = this,\r\n            $content = self.getContent();\r\n\r\n        self.checkAll = false;\r\n        self.sequenceCall = 0;\r\n\r\n        $(\"#content-wrapper\").unbind(\"scroll\");\r\n\r\n        if ($content) {\r\n            self.actionService.unsubscribe(\"onFormActionExecuted\");\r\n            self.actionService.unsubscribe(\"onFormRuleExecuted\");\r\n            self.unsub(\"CASES-TEMPLATE-VIEW\");\r\n            self.unsub(\"UPDATE-DATATEMPLATE-VIEW\");\r\n            self.unsub(\"GET-COMMON-ACTIONS\");\r\n            self.sub(\"SET-VALUES\");\r\n            $content.find(\"#casestemplate-dataviewer-list\").off(\"click\", self.selectorCheckboxItems);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Updates the cases list\r\n     */\r\n    updateCases : function(ev, data){\r\n        var self = this,\r\n            args = data.args,\r\n            defer = new $.Deferred(),\r\n            $dataViewList = $(\"#casestemplate-dataviewer-list\", self.getContent());\r\n\r\n        $dataViewList.empty();\r\n        self.actionService.init();\r\n        self.casesSelected = {};\r\n        self.sequenceCall++;\r\n\r\n        self.page = args.page || self.page;\r\n        self.idworkflow = (args.idworkflow == undefined) ? self.idworkflow : args.idworkflow;\r\n        self.route = args.route || self.route;\r\n        self.filter = args.filter || self.filter;\r\n        self.pageSize = args.pageSize || self.pageSize;\r\n\r\n        (function (sequence) {\r\n            $.when(self.getCasesData({ page: self.page, idworkflow: self.idworkflow, pageSize: self.pageSize }))\r\n                .pipe(function (casesData) {\r\n                    if (self.sequenceCall !== sequence) {\r\n                        defer.resolve();\r\n                        return null;\r\n                    }\r\n                    self.pub(\"notify\", { type: \"PAGINATOR-UPDATE\", args: $.extend(args, casesData, { event: data.type }) });\r\n                    return self.getCasesTemplates(casesData);\r\n                })\r\n                .done(function (templates) {\r\n                    if(templates !== null){\r\n                        var casesLength = self.casesLength = templates.length,\r\n                            templateString = casesLength > 0 ? \"\" : self.getEmptyDataMessage(),\r\n                            $templateCase = null,\r\n                            $elementsTmpl = $();\r\n\r\n                        self.hasBatchActions = false;\r\n                        for (var i = 0, l = templates.length; i < l; i++) {\r\n                            if (self.sequenceCall !== sequence) {\r\n                                defer.resolve();\r\n                                return;\r\n                            }\r\n                            $templateCase = self.renderCase(templates[i], false, sequence);\r\n                            $elementsTmpl.push.apply($elementsTmpl, $templateCase);\r\n                        }\r\n                        if (!self.hasBatchActions) {\r\n                            self.pub(\"notify\", {\r\n                                type: \"HIDE-CHECK-ALL\",\r\n                                args: {}\r\n                            });\r\n                        }\r\n\r\n                        if ($elementsTmpl.length > 0) {\r\n                            $dataViewList.append($elementsTmpl);\r\n                        }\r\n                        else {\r\n                            $dataViewList.append(templateString);\r\n                        }\r\n\r\n                        self.checkAll = false;\r\n\r\n                        self.pub(\"notify\", { type: \"ENABLE-BATCHS-ACTIONS\", args: { commonActions: self.setValues({ args: { value: self.checkAll } }) } });\r\n                        defer.resolve(templates);\r\n                    }\r\n\r\n                });\r\n        })(self.sequenceCall);\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Renders the case with the decorators related\r\n     * actions events and images\r\n     */\r\n    renderCase : function(caseData, isRefresh, sequence){\r\n        var self = this,\r\n            actionData = caseData.actionData,\r\n            idCase = actionData.idCase,\r\n            surrogateKey = actionData.surrogateKey,\r\n            guidEntity = actionData.guidEntity,\r\n            templateCase = self.getTemplate(\"casestemplate-item\"),\r\n            security = new bizagi.workportal.command.security(self.dataService);\r\n        var $templateCase = templateCase.render({\r\n            idCase: idCase,\r\n            guidEntity: guidEntity,\r\n            surrogateKey: surrogateKey\r\n        });\r\n\r\n        $templateCase.find(\"#template\").append(caseData.tmpl);\r\n\r\n        $.when(security.checkSecurityPerm(\"GraphicQuery\")).done(function(graphicQuery){\r\n            caseData.casetoolbarData[\"graphicQuery\"] = graphicQuery;\r\n             // Set header\r\n            setTimeout(function () {\r\n                var $casetoolbar = self.casetoolbar.getCaseToolbar({ casetoolbarData: $.extend(caseData.casetoolbarData, {referrer: \"CasesTemplate\"}) });\r\n                var $case = self.getContent().find(\"#casetemplate-box-wrapper-\" + idCase + \" .casetemplate-box-element\");\r\n\r\n                if (sequence === self.sequenceCall) {\r\n                    $case.append($casetoolbar);\r\n                }\r\n            }, 0);\r\n        });\r\n\r\n        // Get Actions and events\r\n        setTimeout(function () {\r\n            var $footer = self.getContent().find(\"#casetemplate-box-wrapper-\" + idCase + \" .casetemplate-box-footer\");\r\n\r\n            $footer.startLoading({ delay: 0, overlay: true });\r\n            $.when(self.actionService.getActionsView({\r\n                    actionData: caseData.actionData,\r\n                    loadEvents: true,\r\n                    isRefresh: isRefresh\r\n                }))\r\n                .done(function (responseActions) {\r\n                    var $actionsView = responseActions.actionsView;\r\n                    var actionsData = responseActions.actionsData;\r\n\r\n                    // Get the batch actions in the actionsData array\r\n                    var batchActions = actionsData.length === 0 ? [] : self.pub(\"notify\", {\r\n                        type: \"BATCH-ACTIONS\",\r\n                        args: {actionsData: actionsData}\r\n                    })[0];\r\n                    var $case = self.getContent()\r\n                        .find(\"#casetemplate-box-wrapper-\" + idCase + \" .casetemplate-box-element .casetemplate-box-footer\");\r\n                    if ($actionsView && (sequence === self.sequenceCall)) {\r\n                        $case.append($actionsView);\r\n\r\n                        // Show cases checboxes and check all checkbox if there are batch actions\r\n                        if(batchActions.length > 0 && self.getCheckBox($case).data(\"surrogatekey\") != -1){\r\n                            self.hasBatchActions = true;\r\n                            self.showCheckItem($case);\r\n                            self.pub(\"notify\", {\r\n                                type: \"SOME-ITEM-ALLOW-SELECT\",\r\n                                args: {}\r\n                            });\r\n                        }\r\n                        else{\r\n                            self.removeCheckItem($case);\r\n                        }\r\n                    }\r\n                    else{\r\n                        self.removeCheckItem($case);\r\n                    }\r\n                    $footer.endLoading();\r\n                });\r\n        }, 0);\r\n        // Get cases assignees\r\n        setTimeout(function () {\r\n            $.when(self.usersCasesService.getAssignees(idCase))\r\n                .done(function ($assignees) {\r\n                    if ($assignees && (sequence === self.sequenceCall)) {\r\n                        var $case = self.getContent()\r\n                            .find(\"#casetemplate-box-wrapper-\" + idCase + \" .casetemplate-box-element .casetemplate-box-footer\");\r\n                        $case.append($assignees);\r\n                    }\r\n                });\r\n        }, 0);\r\n        \r\n        return $templateCase;\r\n    },\r\n\r\n    /**\r\n     * Get check item by case\r\n     * @param $item\r\n     */\r\n    getCheckBox: function($item){\r\n        var self = this;\r\n        return $item.closest(\".casetemplate-box-element\").find(self.selectorCheckboxItems);\r\n    },\r\n\r\n    /**\r\n     * Hide check item\r\n     * @param $item\r\n     */\r\n    removeCheckItem: function($item){\r\n        var self = this;\r\n        self.getCheckBox($item).remove();\r\n    },\r\n\r\n    /**\r\n     * Show checkbox\r\n     * @param $item\r\n     */\r\n    showCheckItem: function($item){\r\n        var self = this;\r\n        self.getCheckBox($item).show();\r\n    },\r\n\r\n    /**\r\n     * Process action was executed\r\n     */\r\n    onFormActionExecuted : function(ev, data){\r\n        var self = this;\r\n        data = data || {};\r\n\r\n        if (data.refresh) {\r\n            self.refreshCase(data.idCase);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Process action was executed\r\n     */\r\n    onFormRuleExecuted: function (ev, data) {\r\n        var self = this;\r\n        data = data || {};\r\n\r\n        if (data.refresh) {\r\n            self.refreshCase(data.idCase);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Refresh the case with the new data\r\n     */\r\n    refreshCase: function (idCase) {\r\n        var self = this;\r\n\r\n        var idBox = \"#casetemplate-box-wrapper-\" + idCase;\r\n        var $templateBox = $(idBox);\r\n        var isChecked = $templateBox\r\n            .find(\".casetemplate-box-check-selector > input\")\r\n            .is(\":checked\");\r\n\r\n        $templateBox.startLoading({ delay: 250, overlay: true });\r\n\r\n        $.when(self.getCasesData({ idCase: idCase }))\r\n            .then(function (caseData) {\r\n                return self.getCasesTemplates(caseData, true);\r\n            })\r\n            .done(function (caseTemplate) {\r\n                \r\n                var $templateCase = null;\r\n\r\n                if (caseTemplate[0] != undefined && caseTemplate[0] != null) {\r\n                    $templateCase = self.renderCase(caseTemplate[0], true, self.sequenceCall);\r\n                    $templateBox.replaceWith($templateCase);\r\n                }\r\n\r\n                $templateBox.endLoading();\r\n\r\n                // Restore checked value\r\n                if (isChecked) {\r\n                    $templateBox = $(idBox);\r\n                    $templateBox.find(\".casetemplate-box-check-selector > input\").prop(\"checked\", true);\r\n                }\r\n            });\r\n    },\r\n\r\n    /**\r\n     * Gets the data related with the cases\r\n     */\r\n    getCasesData: function (params) {\r\n        var self = this;\r\n\r\n        if (self.route == \"following\") {\r\n            return self.dataService.getActivitiesData(params);\r\n        }\r\n\r\n        if (self.route == \"pendings\") {\r\n            return self.dataService.getPendingsData(params);\r\n        }\r\n\r\n        if ( self.route == \"Green\" ||\r\n            self.route == \"Yellow\" ||\r\n            self.route == \"Red\" ) {\r\n            $.extend(params, { taskState: self.route });\r\n            return self.dataService.getPendingsData(params);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Invokes the template engine, to gets the custom columns\r\n     */\r\n    getCasesTemplates : function(casesData, refreshCase){\r\n        var self = this,\r\n            result = [],\r\n            defer = new $.Deferred();\r\n\r\n            $.when(self.getTemplateEngine())\r\n                .then(function (engine) {\r\n                    return $.when.apply($, $.map(casesData.entities, function (cases) {\r\n                        return engine.render(cases);\r\n                    }));\r\n                })\r\n                .done(function () {\r\n                    var casesTemplates = $.makeArray(arguments),\r\n                        idCases = [],\r\n                        cases = casesData.entities.length;\r\n\r\n                    for (var i = 0; i < cases; i++) {\r\n                        var tmpl = (cases === 1) ? casesTemplates[i] : casesTemplates[i][0];\r\n                        var caseData = casesData.entities[i];\r\n                        result.push({\r\n                            tmpl: tmpl,\r\n                            casetoolbarData: {\r\n                                guidFavorite: casesData.entities[i].guidFavorite,\r\n                                idcase: casesData.entities[i].idCase,\r\n                                idWorkflow: casesData.entities[i].idWorkflow\r\n                            },\r\n                            actionData: {\r\n                                guidEntity: caseData.guid,\r\n                                idCase: caseData.idCase,\r\n                                radNumber: caseData.radNumber,\r\n                                surrogateKey: caseData.surrogateKey\r\n                            }\r\n                        });\r\n                        idCases.push(caseData.idCase);\r\n                    }\r\n\r\n                    if (!refreshCase) {\r\n                        self.usersCasesService.render(idCases);\r\n                        self.actionsEventsService.render(idCases);\r\n                    }\r\n\r\n                    defer.resolve(result);\r\n                });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     *  returns an instance of  the template engine\r\n     */\r\n    getTemplateEngine: function () {\r\n        var self = this;\r\n\r\n        if (self.templateEngine) {\r\n            return self.templateEngine;\r\n        }\r\n\r\n        var params = {};\r\n\r\n        params.proxyPrefix = bizagi.RPproxyPrefix;\r\n        var renderDataService = new bizagi.render.services.service(params),\r\n            renderFactory = new bizagi.rendering.desktop.factory(renderDataService),\r\n            defer = new $.Deferred();\r\n\r\n        $.when(renderFactory.initAsyncStuff())\r\n            .done(function () {\r\n                self.templateEngine = new bizagi.templateEngine({ renderFactory: renderFactory, cache: true, forcePersonalizedColumns: true });\r\n                self.templateEngine.subscribe(\"onLoadDataNavigation\", function (ev, params) {\r\n                    var data = params.data || {};\r\n                    var args = {\r\n                        reference: data.reference,\r\n                        surrogateKey: data.surrogateKey,\r\n                        referenceType: data.referenceType,\r\n                        fromActionLauncher: false,\r\n                        histName: data.displayName,\r\n                        guidEntityCurrent: data.guidEntityCurrent,\r\n                        page: 1\r\n                    };\r\n\r\n                    if (typeof data.xpath !== \"undefined\" && data.xpath) {\r\n                        args.xpath = data.xpath;\r\n                    }\r\n\r\n                    self.accumulatedcontext.clean();\r\n                    self.pubDeadLockDetection(\"notify\", {\r\n                        type: \"TEMPLATEENGINE-VIEW\",\r\n                        args: args\r\n                    });\r\n                });\r\n                defer.resolve(self.templateEngine);\r\n            });\r\n\r\n        return defer.promise();\r\n    },\r\n\r\n    /**\r\n     * Gets Message when there aren\"t data\r\n     */\r\n    getEmptyDataMessage: function () {\r\n        var self = this;\r\n        var casestemplateEmptyData = self.getTemplate(\"casestemplate-empty-data\");\r\n\r\n        return casestemplateEmptyData.render()[0].outerHTML;\r\n    },\r\n\r\n    /**\r\n     * Handler to hold the cases selected\r\n     */\r\n    onCaseChecked: function (ev) {\r\n        var self = this,\r\n            $target = $(ev.target),\r\n            surrogateKey = $target.data(\"surrogatekey\"),\r\n            idCase = $target.data(\"idcase\"),\r\n            guidEntity = $target.data(\"guidentity\"),\r\n            isChecked = $target.is(\":checked\");\r\n\r\n        self.casesSelected[idCase] = {\r\n            surrogateKey: surrogateKey,\r\n            guidEntity: guidEntity,\r\n            idCase: idCase\r\n        };\r\n\r\n        if (!isChecked) {\r\n            delete self.casesSelected[idCase];\r\n        }\r\n        self.pub(\"notify\", { type: \"ENABLE-BATCHS-ACTIONS\", args: { commonActions: self.getCommonActions() } });\r\n\r\n    },\r\n\r\n    /**\r\n     * Returns the common actions in the set of data\r\n     */\r\n    getCommonActions: function () {\r\n        var self = this,\r\n            model = {};\r\n\r\n        model.actions = self.actionService.getCommonActions(self.casesSelected);\r\n        model.surrogateKeys = [];\r\n        model.parentsid = [];\r\n\r\n        for (var idcase in self.casesSelected) {\r\n            var data = self.casesSelected[idcase];\r\n            if (data.surrogateKey !== -1) {\r\n                model.surrogateKeys.push(data.surrogateKey);\r\n                model.parentsid.push(data.idCase);\r\n            }\r\n        }\r\n\r\n        model.guidEntity = (idcase !== undefined) ? self.casesSelected[idcase].guidEntity : \"\";\r\n\r\n        if (model.surrogateKeys.length == 0) {\r\n            self.checkAll = false;\r\n            model.checkAll = false;\r\n        }\r\n        else if (model.surrogateKeys.length == self.casesLength) {\r\n            self.checkAll = true;\r\n            model.checkAll = true;\r\n        }\r\n\r\n        model.itemsSelected = self.casesSelected;\r\n\r\n        return model;\r\n    },\r\n\r\n    /**\r\n     * Set current value\r\n     */\r\n    setValues: function (params) {\r\n        var self = this,\r\n            $content = self.getContent(),\r\n            args = params.args || {},\r\n            isChecked = args.value;\r\n\r\n        if ($content) {\r\n            self.casesSelected = {};\r\n            var $inputs = $content.find(self.selectorCheckboxItems);\r\n            $.map($inputs, function (input) {\r\n                $(input).prop(\"checked\", isChecked);\r\n\r\n                if (isChecked) {\r\n                    var surrogateKey = $(input).data(\"surrogatekey\"),\r\n                        idCase = $(input).data(\"idcase\"),\r\n                        guidentity = $(input).data(\"guidentity\");\r\n\r\n                    self.casesSelected[idCase] = {\r\n                        surrogateKey: surrogateKey,\r\n                        guidEntity: guidentity,\r\n                        idCase: idCase\r\n                    };\r\n                }\r\n            });\r\n\r\n            self.checkAll = isChecked;\r\n\r\n            return self.getCommonActions();\r\n        }\r\n    }\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.casestemplate\", [\"workportalFacade\", \"dataService\", \"actionService\", \"casetoolbar\", \"usersCasesService\", \"actionsEventsService\", \"accumulatedcontext\", bizagi.workportal.widgets.casestemplate]);\r\n","/**\r\n *   Name: Bizagi Workportal Desktop Filter Cases Widget\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\r\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.filtercases\", {}, {\r\n\r\n    /**\r\n     *   Constructor\r\n     */\r\n    init: function (workportalFacade, dataService, params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(workportalFacade, dataService, params);\r\n\r\n        self.lastIdworkflow;\r\n\r\n        //Load templates\r\n        self.loadTemplates({\r\n            \"filtercases\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.filtercases\").concat(\"#filtercases-wrapper\")\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Renders the template defined in the widget\r\n     */\r\n    renderContent: function (event, params) {\r\n        var self = this;\r\n        var template = self.getTemplate(\"filtercases\");\r\n        self.content = template.render({});\r\n        return self.content;\r\n    },\r\n\r\n    /**\r\n     * links events with handlers\r\n     */\r\n    postRender: function (event, params) {\r\n        var self = this;\r\n        var $contentWidget = self.getContent();\r\n        $(\"li.ui-bizagi-wp-app-inbox-tab\", $contentWidget).on(\"click\", $.proxy(self.onClickButtonFilter, self));\r\n        self.sub(\"CASES-TEMPLATE-VIEW\", $.proxy(self.updateUI, self));\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param event\r\n     */\r\n    onClickButtonFilter: function(event){\r\n        var self = this;\r\n        var $target = $(event.currentTarget);\r\n\r\n        if(!$target.hasClass(\"active\")){\r\n            var auxDescriptionColorResourceName = \"workportal-widget-inboxcommon-filter-\";\r\n            var route = $target.attr(\"id\");\r\n            var idworkflow = self.pub(\"notify\", { type: \"GETIDWORKFLOW_FROM_PROCESSESLIST\"})[0];\r\n            var histName;\r\n\r\n            $target.addClass(\"active\").siblings().removeClass(\"active\");\r\n\r\n            if(route === \"pendings\"){\r\n                histName = self.pub(\"notify\", { type: \"GETHISTNAME_FROM_PROCESSESLIST\"})[0];\r\n            }\r\n            else{\r\n                var resourceLocalization = auxDescriptionColorResourceName + route.toLowerCase();\r\n                histName = bizagi.localization.getResource(resourceLocalization);\r\n            }\r\n\r\n            self.lastIdworkflow = idworkflow;\r\n\r\n            self.pub(\"notify\", {\r\n                type: \"CASES-TEMPLATE-VIEW\",\r\n                args : {\r\n                    histName: histName,\r\n                    page: 1,\r\n                    refreshLastItemBreadcrumb: false,\r\n                    route : route,\r\n                    idworkflow : idworkflow || \"\"\r\n                }\r\n            });\r\n\r\n        }\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param event\r\n     * @param params\r\n     */\r\n    updateUI: function(event, params){\r\n        var self = this;\r\n\r\n        if(params.args.route === \"following\"){\r\n            $(self.content).hide();\r\n        }\r\n        else{\r\n            $(self.content).show();\r\n        }\r\n        if(params.args.idworkflow != (self.lastIdworkflow || \"\")){\r\n            $(\".ui-bizagi-wp-app-inbox-tab:first-child\").addClass(\"active\").siblings().removeClass(\"active\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     *\r\n     */\r\n    clean: function(){\r\n        var self = this;\r\n        self.unsub(\"CASES-TEMPLATE-VIEW\");\r\n    }\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.filtercases\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.filtercases]);","/**\r\n * Name: Bizagi Workportal Desktop Paginator Controller\r\n * Author: Mauricio Sánchez\r\n */\r\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.paginator\", {}, {\r\n\r\n    /**\r\n     *   Constructor\r\n     */\r\n    init: function (workportalFacade, dataService, params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(workportalFacade, dataService, params);\r\n        //Load templates\r\n        self.loadTemplates({\r\n            \"paginator\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.paginator\").concat(\"#paginator-wrapper\"),\r\n            \"content\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.paginator\").concat(\"#paginator-content\")\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Renders the template defined in the widget\r\n     */\r\n    renderContent: function () {\r\n        var self = this;\r\n        var hide = self.params.referenceType === \"ENTITY\";\r\n        var template = self.getTemplate(\"paginator\" + self.getSuffixWidget());\r\n        self.content = template.render({hide:hide});\r\n\r\n        return self.content;\r\n    },\r\n\r\n    /**\r\n     * links events with handlers\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n\r\n        self.sub(\"PAGINATOR-UPDATE\", $.proxy(self.updateView, self));\r\n        self.configureHandlers();\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @returns {string}\r\n     */\r\n    getSuffixWidget: function(){\r\n        return \"\";\r\n    },\r\n\r\n    /**\r\n     * Updates la view with the data related to entity:\r\n     * Name entity\r\n     * Number of records\r\n     * Number of pages\r\n     * */\r\n    updateView: function (ev, params) {\r\n        var self = this;\r\n        var args = params.args;\r\n        var hide = args.referenceType === \"ENTITY\";\r\n        var $content = self.getContent();\r\n\r\n        self.setModel(args);\r\n        $content.empty();\r\n\r\n        if (args.fromActionLauncher){\r\n            if (self.totalRecords > 1) {\r\n                renderTemplate();\r\n            }\r\n            else {\r\n                self.clean();\r\n            }\r\n        }\r\n        else {\r\n            renderTemplate();\r\n        }\r\n\r\n        /**\r\n         *\r\n         */\r\n        function renderTemplate( ){\r\n            var contentTemplate = self.getTemplate(\"content\" + self.getSuffixWidget());\r\n\r\n            contentTemplate.render({\r\n                totalRecords: self.totalRecords,\r\n                totalPages: self.totalPages,\r\n                displayName: self.displayName,\r\n                currentPage: self.currentPage,\r\n                hide: hide\r\n            }).appendTo($content);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Builds the navigation model\r\n     */\r\n    setModel: function (args) {\r\n        var self = this;\r\n\r\n        self.totalRecords = typeof(args.totalRecords) == \"undefined\" ?  self.totalRecords : args.totalRecords;\r\n        self.totalPages = args.totalPages || self.totalPages;\r\n        self.displayName = args.histName || self.displayName;\r\n        self.currentPage = args.currentPage || self.currentPage;\r\n        self.action = args.action;\r\n        self.reference = args.reference || self.reference;\r\n        self.surrogateKey = args.surrogateKey || self.surrogateKey;\r\n        self.referenceType = args.referenceType;\r\n        self.event = args.event;\r\n        self.guidSearch = args.guidSearch;\r\n    },\r\n\r\n    /**\r\n     *  Gets the current model\r\n     */\r\n    getModel: function () {\r\n        var self = this;\r\n\r\n        return {\r\n            page: self.currentPage,\r\n            totalRecords: self.totalRecords,\r\n            action: self.action,\r\n            reference: self.reference,\r\n            surrogateKey: self.surrogateKey,\r\n            referenceType: self.referenceType,\r\n            stopNavigation : true,\r\n            guidSearch: self.guidSearch\r\n        };\r\n    },\r\n\r\n    /**\r\n     *  Binds events to handles\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this,\r\n            $content = self.getContent();\r\n\r\n        $content.on(\"click\", $.proxy(self.onPageBreak, self));\r\n    },\r\n\r\n    /**\r\n     * This event get a new page\r\n     */\r\n    onPageBreak: function (ev) {\r\n        var self = this,\r\n            $target = $(ev.target),\r\n            $content = self.getContent();\r\n\r\n        if ($target.hasClass(\"control-icon\") && !$target.hasClass(\"ui-state-disabled\")) {\r\n            var type = $target.data(\"type\");\r\n\r\n            if (type == \"forward\") {\r\n                self.currentPage += 1;\r\n            }\r\n            else if (type == \"rewind\") {\r\n                self.currentPage -= 1;\r\n            }\r\n            else if (type == \"fastrewind\") {\r\n                self.currentPage = 1;\r\n            }\r\n            else {\r\n                self.currentPage = self.totalPages;\r\n            }\r\n\r\n            self.disabledPaginatorButtonsByLimits();\r\n            $content.find(\".paginator-controls__currentPage\").text(self.currentPage);\r\n\r\n            self.pub(\"notify\", { type: \"UPDATE-DATATEMPLATE-VIEW\", args: self.getModel() });\r\n        }\r\n    },\r\n\r\n    disabledPaginatorButtonsByLimits: function (){\r\n        var self = this;\r\n        var $buttonFastRewind = $(\"[data-type='fastrewind']\", self.content);\r\n        var $buttonRewind = $(\"[data-type='rewind']\", self.content);\r\n        var $buttonFordward = $(\"[data-type='forward']\", self.content);\r\n        var $buttonFastFordward = $(\"[data-type='fastforward']\", self.content);\r\n\r\n        if(self.totalPages === 1){\r\n            $buttonFastRewind.addClass(\"ui-state-disabled\");\r\n            $buttonRewind.addClass(\"ui-state-disabled\");\r\n            $buttonFordward.addClass(\"ui-state-disabled\");\r\n            $buttonFastFordward.addClass(\"ui-state-disabled\");\r\n        }else{\r\n            // The first page\r\n            if(self.currentPage === 1){\r\n                $buttonFastRewind.addClass(\"ui-state-disabled\");\r\n                $buttonRewind.addClass(\"ui-state-disabled\");\r\n                $buttonFordward.removeClass(\"ui-state-disabled\");\r\n                $buttonFastFordward.removeClass(\"ui-state-disabled\");\r\n            }\r\n            // the last page\r\n            else if(self.currentPage === self.totalPages){\r\n                $buttonFastRewind.removeClass(\"ui-state-disabled\");\r\n                $buttonRewind.removeClass(\"ui-state-disabled\");\r\n                $buttonFordward.addClass(\"ui-state-disabled\");\r\n                $buttonFastFordward.addClass(\"ui-state-disabled\");\r\n            }\r\n            // other page\r\n            else{\r\n                $buttonFastRewind.removeClass(\"ui-state-disabled\");\r\n                $buttonRewind.removeClass(\"ui-state-disabled\");\r\n                $buttonFordward.removeClass(\"ui-state-disabled\");\r\n                $buttonFastFordward.removeClass(\"ui-state-disabled\");\r\n            }\r\n        }\r\n    },\r\n\r\n    /**\r\n     *\r\n     */\r\n    clean: function(){\r\n        var self = this;\r\n        var $content = self.getContent();\r\n\r\n        if($content){\r\n            $content.empty();\r\n        }\r\n    }\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.paginator\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.paginator]);","/**\r\n * Name: Bizagi Workportal Desktop Sort Bar Controller\r\n * Author: Danny Gonzalez\r\n */\r\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.sortbar\", {}, {\r\n    /**\r\n     * Constructor\r\n     * @param workportalFacade\r\n     * @param dataService\r\n     * @param processActionService\r\n     * @param accumulatedcontext\r\n     * @param params\r\n     */\r\n    init: function (workportalFacade, dataService, processActionService, accumulatedcontext, params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(workportalFacade, dataService, params);\r\n\r\n        //Load templates\r\n        self.loadTemplates({\r\n            \"sortbar\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.sortbar\").concat(\"#sortbar-wrapper\"),\r\n            \"content\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.sortbar\").concat(\"#sortbar-content\"),\r\n            \"right-content\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.sortbar\").concat(\"#sortbar-right\"),\r\n            \"addButton\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.sortbar\").concat(\"#sortbar-content-add-button\"),\r\n            \"sortMenu\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.sortbar\").concat(\"#sortbar-sort-menu\"),\r\n            \"actions\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.sortbar\").concat(\"#sortbar-content-actions\"),\r\n            \"recordsPerPage\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.sortbar\").concat(\"#sortbar-records-per-page\"),\r\n            \"recordsMenu\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.sortbar\").concat(\"#sortbar-records-menu\")\r\n        });\r\n\r\n        self.processActionService = processActionService;\r\n        self.accumulatedcontext = accumulatedcontext;\r\n    },\r\n\r\n    /**\r\n     * Renders the template defined in the widget\r\n     */\r\n    renderContent: function () {\r\n        var self = this;\r\n        var template = self.getTemplate(\"sortbar\");\r\n        self.content = template.render({ enableFilter: true });\r\n        self.$checkAll = self.content.find(\".sortbar-left-check-uncheck input\");\r\n\r\n        return self.content;\r\n    },\r\n\r\n    /**\r\n     * links events with handlers\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n\r\n        var template = self.getTemplate(\"right-content\");\r\n        self.configureHandlers();\r\n        $(\".sortbar-right\", self.content).append(template.render());\r\n        self.configureAfterPaintHandlers();\r\n    },\r\n\r\n    /**\r\n     * Binds events to handles\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this,\r\n            $content = self.getContent();\r\n\r\n        self.sub(\"TEMPLATEENGINE-VIEW\", $.proxy(self.initializeAndProcessFilterButton, self));\r\n        self.sub(\"SEARCH-ENGINE-VIEW\", $.proxy(self.initializeAndProcessFilterButton, self));\r\n        self.sub(\"SET-FILTERS-DATA\", $.proxy(self.setFiltersSortData, self));\r\n        self.sub(\"HIDE-FILTER-BUTTONANDBAR\", $.proxy(self.hideFilterButtonAndBar, self));\r\n        self.sub(\"HIDE-SORT-BUTTONS\", $.proxy(self.hideSortButtons, self));\r\n        self.sub(\"ENABLE-BATCHS-ACTIONS\", function(ev, args) { return self.enableBatchActions(args);});\r\n        self.sub(\"UPDATE-COUNTER-FILTERS-APPLIED\", function(ev, args) { return self.updateCounterByFilterApplied(args); });\r\n        self.sub(\"CASES-TEMPLATE-VIEW\", function(ev, args){ self.showingFiltering = false; self.setVisibleCheckAll(false);self.behaviorVisibleSortbar(); });\r\n        self.sub(\"SOME-ITEM-ALLOW-SELECT\", function(ev, args){ self.setVisibleCheckAll(true);self.behaviorVisibleSortbar(); });\r\n        self.sub(\"HIDE-CHECK-ALL\", function(ev, args){ self.setVisibleCheckAll(false); });\r\n        self.sub(\"BATCH-ACTIONS\", function(ev, args){ return self.validActions(args.args.actionsData); });\r\n\r\n        $content.find(\".wgd-sortbar-add-button\").tooltip();\r\n        self.$checkAll.on(\"click\", $.proxy(self.onCheckUncheck, self));\r\n    },\r\n\r\n    /**\r\n     * Configure Handlers\r\n     */\r\n    configureAfterPaintHandlers: function () {\r\n        var self = this,\r\n            $content = self.getContent();\r\n\r\n        // Show sort menu\r\n        $content.find(\".right-menu\").on(\"click\", function (ev) {\r\n            self.showSortMenu(ev, $(this));\r\n        });\r\n\r\n        // Show records menu\r\n        $content.find(\".records-menu\").on(\"click\", function (ev) {\r\n            self.showRecordsMenu(ev, $(this));\r\n        });\r\n\r\n        // Change sort type\r\n        $content.find(\".sortbar-az\").on(\"click\", function () {\r\n            if(self.sortSelection.attribute) {\r\n                self.setIconSortType($(this), self._sortType);\r\n\r\n                self.pub(\"notify\", { type: \"SET-ORDERBY\", args: {\r\n                    properties:{\r\n                        xpath: self.sortSelection.attribute,\r\n                        orderType: self._sortType,\r\n                        typeSearch: \"none\"\r\n                    }\r\n                }});\r\n            }\r\n        });\r\n        // Show filter bar\r\n        $content.find(\".filter-icon\").on(\"click\", function () {\r\n            self.pub(\"notify\", { type: \"OPENCLOSE-MYSEARCHFILTER\", args: {guidSearch: self.params.guidSearch, target: $(this) }});\r\n        });\r\n\r\n        $(\".remove-selected-items-collections\", $content).on(\"click\", $.proxy(self.onRemoveSelectedItemsCollections, self));\r\n    },\r\n\r\n    /**\r\n     * Behavior visible sortbar\r\n     */\r\n    behaviorVisibleSortbar: function(){\r\n        var self = this;\r\n        if(self.showingFiltering || self.showingSorting || self.showingCheckAll || self._haveAddButton){\r\n            self.setVisibleSortbar(true);\r\n        }\r\n        else{\r\n            self.setVisibleSortbar(false);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Shor or hide sortbar\r\n     * @param visible\r\n     */\r\n    setVisibleSortbar: function(visible){\r\n        var self = this;\r\n        var $content = self.getContent();\r\n        if(visible){\r\n            $content.show();\r\n        }\r\n        else{\r\n            $content.hide();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Show or hide check input (select all)\r\n     * @param visible\r\n     */\r\n    setVisibleCheckAll: function(visible){\r\n        var self = this;\r\n        if(visible){\r\n            self.$checkAll.closest(\".border-check-uncheck\").show();\r\n            self.showingCheckAll = true;\r\n        }\r\n        else{\r\n            self.$checkAll.closest(\".border-check-uncheck\").hide();\r\n            self.showingCheckAll = false;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Show number items selected from data items (from casetemplate or entityTemplates)\r\n     * @param numberCheckedItems\r\n     */\r\n    showSelectedItems: function(numberCheckedItems){\r\n        var self = this;\r\n        if(numberCheckedItems && numberCheckedItems > 0){\r\n            self.content.addClass(\"there-are-actions\");\r\n\r\n            var keywordSelected = self.getResource(\"workportal-general-word-selected-singular\");\r\n            if(numberCheckedItems > 1){\r\n                keywordSelected = self.getResource(\"workportal-general-word-selected-plural\");\r\n            }\r\n            $(\".actions-count-selected\", self.content).text(numberCheckedItems + \" \" + keywordSelected + \" \");\r\n        }\r\n        else{\r\n            self.content.removeClass(\"there-are-actions\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Set icon descending or ascending\r\n     * @param button represents icon ascending or descending\r\n     * @param sortTypeBeforeChanged\r\n     */\r\n    setIconSortType: function(button, sortTypeBeforeChanged){\r\n        var self = this;\r\n        if (sortTypeBeforeChanged === \"asc\") {\r\n            self._sortType =\"desc\";\r\n            button.removeClass(\"bz-icon-order-ascendant-outline\").addClass(\"bz-icon-order-descendant-outline\");\r\n        }\r\n        else {\r\n            self._sortType =\"asc\";\r\n            button.removeClass(\"bz-icon-order-descendant-outline\").addClass(\"bz-icon-order-ascendant-outline\");\r\n        }\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param event\r\n     */\r\n    onClickBatchAction: function(event){\r\n        var self = this;\r\n        var $buttonLI = $(event.target).closest(\"li\");\r\n        var guidAction = $buttonLI.data(\"guid\");\r\n        var action = self.getAction(guidAction);\r\n\r\n        if(!self.requestsInProgressActionGuid[guidAction]){\r\n            self.requestsInProgressActionGuid[guidAction] = true;\r\n\r\n            self.addLoadingButtonAction($buttonLI);\r\n\r\n            $.when(self.processActionService.executeBatchAction({\r\n                action: action,\r\n                commonActionsmodel: self.commonActionsmodel\r\n            })).always(function(){\r\n                $buttonLI.find(\".wdg-tple-button\").removeClass(\"state-loading\");\r\n                $buttonLI.find(\".ui-bizagi-loading-button\").remove();\r\n                $buttonLI.find(\"i\").show();\r\n\r\n                self.requestsInProgressActionGuid[guidAction] = undefined;\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Add loading to button\r\n     */\r\n    addLoadingButtonAction: function($button){\r\n        $button.find(\".wdg-tple-button\").addClass(\"state-loading\");\r\n        $button.find(\".wdg-tple-button\").prepend(\"<div class=\\\"ui-bizagi-loading-icon ui-bizagi-loading-button\\\"></div>\").find(\"i\").hide();\r\n    },\r\n\r\n    /**\r\n     *\r\n     */\r\n    onRemoveSelectedItemsCollections: function(){\r\n        var self = this;\r\n        var commonActions = self.pub(\"notify\", {type: \"SET-VALUES\", args: {value: false}})[0];\r\n        self.enableBatchActions({ args: { commonActions: commonActions } });\r\n    },\r\n\r\n    /**\r\n     * Show the sort menu\r\n     * @param ev\r\n     * @param $parent\r\n     */\r\n    showSortMenu: function (ev, $parent) {\r\n        var self = this;\r\n        var $content = self.getContent();\r\n        var template = self.getTemplate(\"sortMenu\");\r\n        var tooltip = template.render({filters: self._filters}, {\r\n            displayValue: function (val) {\r\n                return val;\r\n            }});\r\n\r\n        if ($(\".sortbar-box-menu\", $parent).length) {\r\n            $(\".sortbar-box-menu\", $parent).remove();\r\n        }\r\n\r\n        $parent.append(tooltip);\r\n        tooltip.show(\"fast\", function () {\r\n            tooltip.click(function (e) {\r\n                e.stopPropagation();\r\n            });\r\n            $(document).one(\"click\", function () {\r\n                tooltip.hide(\"fast\");\r\n                tooltip.remove();\r\n            });\r\n        });\r\n\r\n        //Configure handler to each action\r\n        $content.find(\".sortbar-option\").on(\"click\", function (ev) {\r\n            var data = $(ev.currentTarget).data();\r\n            var sortSelection = self._filters[data.index];\r\n            $content.find(\".sortbar-az\").removeClass(\"disabled\");\r\n\r\n            if(self.sortSelection != sortSelection) {\r\n                self.sortSelection = sortSelection;\r\n                $(\".sortbar-selected\", $parent).text(self.sortSelection.display.split(\".\").pop());\r\n                self.pub(\"notify\", { type: \"SET-ORDERBY\", args: {\r\n                    properties:{\r\n                        xpath: sortSelection.attribute,\r\n                        orderType: self._sortType,\r\n                        typeSearch: \"none\"\r\n                    }\r\n                }});\r\n            }\r\n            tooltip.hide(\"fast\");\r\n        });\r\n    },\r\n\r\n    showRecordsMenu: function (ev, $parent) {\r\n        var self = this;\r\n        var $content = self.getContent();\r\n        var template = self.getTemplate(\"recordsMenu\");\r\n        var tooltip = template.render({});\r\n\r\n        if ($(\".sortbar-records-box-menu\", $parent).length) {\r\n            $(\".sortbar-records-box-menu\", $parent).remove();\r\n        }\r\n\r\n        $parent.append(tooltip);\r\n        tooltip.show(\"fast\", function () {\r\n            tooltip.click(function (e) {\r\n                e.stopPropagation();\r\n            });\r\n            $(document).one(\"click\", function () {\r\n                tooltip.hide(\"fast\");\r\n                tooltip.remove();\r\n            });\r\n        });\r\n\r\n        //Configure handler to each action\r\n        $content.find(\".sortbar-records-option\").on(\"click\", function (ev) {\r\n\r\n            var pageSize = Number(bizagi.util.trim(this.textContent));\r\n\r\n            $(\".sortbar-records-selected\", $parent).text(pageSize);\r\n\r\n            self.pub(\"notify\", {\r\n                type: \"SET-RECORDS\", args: {\r\n                    pageSize: pageSize\r\n                }\r\n            });\r\n\r\n            tooltip.hide(\"fast\");\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Asigna los parametros iniciales de la busqueda e inicializa los objetos\r\n     * @param e\r\n     * @param params\r\n     */\r\n    initializeAndProcessFilterButton: function (e, params) {\r\n        var self = this;\r\n\r\n        self.showingFiltering = false;\r\n        self.setVisibleCheckAll(false);\r\n        self.behaviorVisibleSortbar();\r\n\r\n        self.restoreOrderSelected();\r\n        self.setIconSortType($(\".sortbar-az\", self.content), \"desc\");\r\n        self.params = params.args;\r\n        self.sortSelection = {};\r\n\r\n        self.processAddButton(e, params);\r\n    },\r\n\r\n    /**\r\n     *  Checks if the add button should be displayed\r\n     */\r\n    processAddButton: function (ev, params) {\r\n        var self = this,\r\n            $content = self.getContent(),\r\n            args = params.args,\r\n            action = args.action,\r\n            $buttonContainer = $content.find(\".sortbar-left .add-button\");\r\n        self._lastReferenceEntity = args.reference;\r\n        $buttonContainer.children().remove();\r\n        $(\".wrapper-sortbar-actions\", $content).remove();//Remove same time buttons batch actions\r\n        self._haveAddButton = false;\r\n        if (args.reference && args.referenceType !== \"ENTITY\") {\r\n            $buttonContainer.startLoading({ delay: 0, overlay: true });\r\n            self.dataService.getProcessAddAction(params).done(function (data) {\r\n                if(self._lastReferenceEntity === data.referenceEntity){\r\n                    if (typeof data !== \"undefined\" && Object.getOwnPropertyNames(data).length > 1 && data.guidEntity && data.id) {\r\n                        self.renderButton($buttonContainer, data);\r\n                    }\r\n                }\r\n            }).always(function () {\r\n                $buttonContainer.endLoading();\r\n            });\r\n        }\r\n        else if (action) {\r\n            self.renderButton($buttonContainer, action);\r\n        }\r\n    },\r\n\r\n    /**\r\n     *\r\n     */\r\n    renderButton: function ($buttonContainer, action) {\r\n        var self = this,\r\n            template = self.getTemplate(\"addButton\"),\r\n            $addButton = template.render({ action: action });\r\n\r\n        $buttonContainer.empty();\r\n        $addButton.appendTo($buttonContainer);\r\n        self._haveAddButton = true;\r\n        self.behaviorVisibleSortbar();\r\n        $addButton.on(\"click\", function () { self.clickAddButton(action); });\r\n    },\r\n\r\n    /**\r\n     * Click on add Proccess btn\r\n     */\r\n    clickAddButton: function (action) {\r\n        var self = this;\r\n\r\n        $.when(self.dataService.getMapping({\r\n            guidEntity: action.guidEntity,\r\n            accumulatedContext: self.accumulatedcontext.getContext({}),\r\n            xpathContext: (action.type === \"Process\") ? action.xpathContext : \"\"\r\n        })).done(function (mappingData) {\r\n            if (action.type === \"Process\") {\r\n                self.onExecuteProcess(action, mappingData);\r\n            }\r\n            else {\r\n                self.onExecuteForm(action, mappingData);\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Check or uncheck all registers related, could be cases or data\r\n     */\r\n    onCheckUncheck: function(ev){\r\n        var self = this;\r\n        var $target = $(ev.target);\r\n        var isChecked = $target.is(\":checked\");\r\n        var commonActions = self.pub(\"notify\", {type: \"SET-VALUES\", args: {value: isChecked}})[0];\r\n\r\n        self.enableBatchActions({ args: { commonActions: commonActions } });\r\n    },\r\n\r\n    /**\r\n     * Enabled / disables the batch actions. This method is called always update data\r\n     */\r\n    enableBatchActions: function (params) {\r\n        var self = this;\r\n        var args = params.args;\r\n        var commonActionsModel = self.commonActionsmodel = args.commonActions;\r\n        var actions = self.validActions(commonActionsModel.actions);\r\n        if(actions.length > 0 || self._haveAddButton ){\r\n            $(self.getContent()).show();\r\n        }\r\n        self.showBatchActions(actions, commonActionsModel, \"batchAction\");\r\n\r\n        if (commonActionsModel.checkAll !== undefined) {\r\n            self.$checkAll.prop(\"checked\", commonActionsModel.checkAll);\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Show batch actions\r\n     * @param actions\r\n     * @param commonActionsModel\r\n     * @param typeActions\r\n     */\r\n    showBatchActions: function (actions, commonActionsModel, typeActions){\r\n        var self = this;\r\n        var $content = self.getContent();\r\n        var template = self.getTemplate(\"actions\");\r\n\r\n        self.showSelectedItems(Object.keys(commonActionsModel.itemsSelected).length);\r\n\r\n        var moreActions = actions.slice(3, 9999);\r\n\r\n        var $actions = template.render({actions: actions.slice(0, 3), moreActions: moreActions, typeActions: typeActions});\r\n\r\n        $(\".wdg-tple-button.batchAction\", self.content).off(\"click\", $.proxy(self.onClickBatchAction, self));\r\n\r\n        $(\".wrapper-sortbar-actions\", $content).remove();\r\n        $(\".sortbar-left .sortbar-menu\", $content).append($actions);\r\n\r\n        $(\".wdg-tple-button.batchAction\", self.content).on(\"click\", $.proxy(self.onClickBatchAction, self));\r\n\r\n        if(moreActions.length > 0){\r\n            if(self.content.data('ui-tooltip')) {\r\n                $(self.content).tooltip(\"destroy\");\r\n            }\r\n\r\n            $(self.content).tooltip({\r\n                tooltipClass: \"sortbar-tooltip-more-actions\",\r\n                items: \".bz-actions-showmore\",\r\n                content: $(\".template-box-tooltip\", self.content).html(),\r\n                open: function(event, ui)\r\n                {\r\n                    $(\".wdg-tple-button.batchAction\", ui.tooltip).on(\"click\", $.proxy(self.onClickBatchAction, self));\r\n\r\n                    var uiTooltip = $('div.ui-tooltip');\r\n\r\n                    if (typeof(event.originalEvent) === 'undefined')\r\n                    {\r\n                        uiTooltip.remove();\r\n                        return false;\r\n                    }\r\n                    var $id = $(ui.tooltip).attr('id');\r\n                    // close any lingering tooltips\r\n                    uiTooltip.not('#' + $id).remove();\r\n                    // ajax function to pull in data and add it to the tooltip goes here\r\n\r\n                    for(var keyActionGuid in self.requestsInProgressActionGuid){\r\n                        if(self.requestsInProgressActionGuid[keyActionGuid]){\r\n                            var $buttonAction = $(\"li[data-guid='\" + keyActionGuid + \"']\", ui.tooltip);\r\n                            self.addLoadingButtonAction($buttonAction);\r\n                        }\r\n                    }\r\n                },\r\n                close: function(event, ui)\r\n                {\r\n                    ui.tooltip.hover(function()\r\n                        {\r\n                            $(this).stop(true).fadeTo(400, 1);\r\n                        },\r\n                        function()\r\n                        {\r\n                            $(this).fadeOut('400', function()\r\n                            {\r\n                                $(\".wdg-tple-button.batchAction\", this).off(\"click\", $.proxy(self.onClickBatchAction, self));\r\n                                $(this).remove();\r\n                            });\r\n                        });\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Define the data on order to show the sort options\r\n     * @param ev\r\n     * @param params\r\n     */\r\n    setFiltersSortData: function (ev, params) {\r\n        var self = this;\r\n        var filtersAppliedCounter = params.args.filtersAppliedCounter;\r\n        var totalRecords = params.args.totalRecords;\r\n        self._filters = params.args.calculateFilters ? params.args.filters : self._filters;\r\n\r\n        if (params.args.calculateFilters) {\r\n            var i = -1, a, filterCounter = 0, sortCounter = 0;\r\n            while (a = self._filters[++i]) {\r\n                if (a.type != \"Text\" && a.type !== \"Link\" && a.data && ((a.data.defaultValues && a.data.defaultValues.length > 0) || (a.data.min && a.data.max))) {\r\n                    filterCounter++;\r\n                }\r\n                if (a.display !== \"\") {\r\n                    sortCounter++;\r\n                }\r\n            }\r\n\r\n            if (totalRecords > 0) {\r\n                // Si existen filtros, muestre el boton\r\n                if (filterCounter > 0) {\r\n                    self.showFilterButton();\r\n                }\r\n                else {\r\n                    self.hideFilterButton();\r\n                }\r\n                // Si existen filtros que tienen display name, muestre los botones de sort\r\n                if (sortCounter > 0) {\r\n                    self.showSortButtons();\r\n                }\r\n                else {\r\n                    self.hideSortButtons();\r\n                }\r\n            }\r\n            // Si no hay registros y ni se ha aplicado ningun filtro ocultar\r\n            // los botones del sortbar\r\n            else if (filtersAppliedCounter === 0) {\r\n                self.hideFilterButton();\r\n                self.hideSortButtons();\r\n            }\r\n        }\r\n        self.updateCounter(filtersAppliedCounter);\r\n    },\r\n\r\n    /**\r\n     * Show Filter Button\r\n     */\r\n    showFilterButton: function () {\r\n        var self = this;\r\n        $(\".filter-icon\", self.getContent()).show();\r\n    },\r\n\r\n    /**\r\n     * Hide Filter Button\r\n     */\r\n    hideFilterButton: function () {\r\n        var self = this;\r\n        $(\".filter-icon\", self.getContent()).hide();\r\n        self.showingFiltering = false;\r\n        self.behaviorVisibleSortbar();\r\n    },\r\n\r\n    /**\r\n     * Show Sort Buttons\r\n     */\r\n    showSortButtons: function () {\r\n        var self = this;\r\n        $(\".sortbar-text\", self.getContent()).show();\r\n        $(\".sortbar-icon\", self.getContent()).show();\r\n        $(\".sortbar-az\", self.getContent()).show();\r\n\r\n        self.showingSorting = true;\r\n        self.showingFiltering = true;\r\n        self.behaviorVisibleSortbar();\r\n    },\r\n\r\n    /**\r\n     * Hide Sort Buttons\r\n     */\r\n    hideSortButtons: function () {\r\n        var self = this;\r\n        var $sortbarIcon = $(\".sortbar-az\", self.getContent());\r\n\r\n        // Restore initial settings\r\n        $(\".sortbar-text\", self.getContent()).hide();\r\n\r\n        $sortbarIcon.addClass(\"disabled\");\r\n        $sortbarIcon.removeClass(\"bz-icon-order-ascendant-outline\");\r\n        $sortbarIcon.removeClass(\"bz-icon-order-descendant-outline\");\r\n        $sortbarIcon.addClass(\"bz-icon-order-ascendant-outline\");\r\n        $sortbarIcon.hide();\r\n\r\n        self.showingSorting = false;\r\n        self.behaviorVisibleSortbar();\r\n    },\r\n\r\n    /**\r\n     * Restore Order by Option\r\n     */\r\n    restoreOrderSelected: function(){\r\n        var self = this;\r\n        $(\".sortbar-selected\", self.getContent()).text(self.getResource(\"workportal-my-search-order-by\"));\r\n    },\r\n\r\n    /**\r\n     * Set number filters\r\n     * @param params\r\n     */\r\n    updateCounterByFilterApplied: function(params){\r\n        var self = this;\r\n        if(params.args.filtersApplied){\r\n            self.updateCounter(params.args.filtersApplied.length);\r\n        }\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param counter\r\n     */\r\n    updateCounter: function (counter) {\r\n        var self = this,\r\n            $content = self.getContent(),\r\n            $counter = $(\".counter-filters-applied\", $content);\r\n\r\n        if (counter > 0) {\r\n            $counter.html(counter);\r\n            $counter.show();\r\n        }\r\n        else {\r\n            $counter.hide();\r\n        }\r\n    },\r\n\r\n    /**\r\n     *\r\n     */\r\n    hideFilterButtonAndBar: function () {\r\n        var self = this;\r\n        self.showingFilter = false;\r\n        $(\".filter-icon\", self.getContent()).hide();\r\n        self.pub(\"notify\", { type: \"CLOSE-MYSEARCHFILTER\", args: {\"show\": false, \"$target\": null}});\r\n    },\r\n\r\n    /**\r\n     * Creates a new case, it could has start form or not\r\n     */\r\n    onExecuteProcess: function (action, mappingData) {\r\n        var self = this;\r\n\r\n        if (action.startForm) {\r\n            action.hasStartForm = action.startForm;\r\n        }\r\n\r\n        $.when(self.processActionService.executeProcessAction({\r\n            action: action,\r\n            mappingData: mappingData\r\n        })).done( function (params) {\r\n            var params = params || {};\r\n\r\n            if(!!params && params.refreshTemplateData !== false){\r\n                self.loadTemplateData(action);\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param action\r\n     */\r\n    loadTemplateData: function (action) {\r\n        var self = this;\r\n        self.pub(\"notify\", { type: \"TEMPLATEENGINE-VIEW\", args: {action: action, isRefresh: true}});\r\n    },\r\n\r\n    /**\r\n     *\r\n     */\r\n    onExecuteForm: function (action, mappingData) {\r\n        var self = this;\r\n\r\n        $.when(self.processActionService.executeFormAction({\r\n            action: action,\r\n            mappingData: mappingData\r\n        })).done(function (data) {\r\n            if (data.refresh) {\r\n                self.pub(\"notify\", { type: \"UPDATE-DATATEMPLATE-VIEW\", args: { action: action, isRefresh: true, calculateFilters: true }});\r\n            }\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Returns the action required\r\n     */\r\n    getAction: function (guidAction) {\r\n        var self = this;\r\n        return self.commonActionsmodel.actions.filter( function (action) {\r\n            return action.id == guidAction;\r\n        })[0];\r\n    },\r\n\r\n    /**\r\n     * Returns an array with the valid actions\r\n     * @param actions\r\n     * @return {*}\r\n     */\r\n    validActions: function (actions) {\r\n        return $.grep(actions, function (action) {\r\n            if (action.multiplicity == 2) { return true; }\r\n            if (action.mode == \"Collection\") { return false; }\r\n            if (action.type == \"Form\") { return false; }\r\n            if (action.isEvent) { return false; }\r\n            if (action.type == \"Process\" && action.hasStartForm) { return false; }\r\n            return true;\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Detach handlers\r\n     */\r\n    clean: function () {\r\n        var self = this,\r\n            $content = self.getContent();\r\n        self.requestsInProgressActionGuid = {};\r\n\r\n        if ($content) {\r\n            self.unsub(\"TEMPLATEENGINE-VIEW\");\r\n            self.unsub(\"ENABLE-BATCHS-ACTIONS\");\r\n            self.unsub(\"SEARCH-ENGINE-VIEW\");\r\n            self.unsub(\"SET-FILTERS-DATA\");\r\n            self.unsub(\"HIDE-FILTER-BUTTONANDBAR\");\r\n            self.unsub(\"HIDE-SORT-BUTTONS\");\r\n\r\n            self.$checkAll.off(\"click\");\r\n            $content.find(\".right-menu\").off(\"click\");\r\n            $content.find(\".sortbar-az\").off(\"click\");\r\n            $content.find(\".filter-icon\").off(\"click\");\r\n            $content.find(\".sortbar-action\").off(\"click\");\r\n            $(\".wdg-tple-button.batchAction\", $content).off(\"click\", $.proxy(self.onClickBatchAction, self));\r\n            $(\".remove-selected-items-collections\", $content).off(\"click\", $.proxy(self.onRemoveSelectedItemsCollections, self));\r\n        }\r\n    }\r\n\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.sortbar\", [\"workportalFacade\", \"dataService\", \"processActionService\", \"accumulatedcontext\", bizagi.workportal.widgets.sortbar]);\r\n","/**\r\n *   Name: Bizagi Workportal Desktop Processes list controller\r\n *   Author: Danny Gonzalez\r\n */\r\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.processeslist\", {}, {\r\n\r\n    /**\r\n     * Constructor\r\n     * @param workportalFacade instance of facade, mandatory\r\n     * @param dataService instance of service tier, mandatory\r\n     * @param params extra params, its not mandatory\r\n     */\r\n    init: function (workportalFacade, dataService, params) {\r\n        var self = this;\r\n        self.params = params;\r\n        // Call base\r\n        self._super(workportalFacade, dataService, params);\r\n\r\n        self.idworkflow = params.idworkflow; //Save current idworkflow\r\n        self.histName = params.histName; //Save current histName\r\n\r\n        //Load templates\r\n        self.loadTemplates({\r\n            \"processeslist\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.processeslist\").concat(\"#processeslist-wrapper\"),\r\n            \"processeslistEmptyData\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.processeslist\").concat(\"#processeslist-empty-message\")\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Renders the template defined in the widget\r\n     * @return {string} html\r\n     */\r\n    renderContent: function () {\r\n        var self = this,\r\n            template = self.getTemplate(\"processeslist\");\r\n\r\n        return $.when(self.getData()).done(function(data){\r\n            self.content = data.length > 0 ? template.render({ processes: data }) : self.getEmptyDataMessage().render({});\r\n            self.setSelectedList($(\".wdg-process-card:first\", self.getContent()));\r\n        });\r\n    },\r\n\r\n    /**\r\n     * links events with handlers\r\n     */\r\n    postRender: function () {\r\n        var self = this;\r\n        self.configureHandlers();\r\n\r\n        self.sub(\"GETIDWORKFLOW_FROM_PROCESSESLIST\", function(){\r\n            return self.getIdworkflow();\r\n        });\r\n        self.sub(\"GETHISTNAME_FROM_PROCESSESLIST\", function(){\r\n            return self.getHistname();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Binds events to handles\r\n     */\r\n    configureHandlers: function () {\r\n        var self = this,\r\n            $content = self.getContent();\r\n        $(\".wdg-process-card\", $content).on(\"click\", $.proxy(self.onClickProcess, self));\r\n    },\r\n\r\n    /**\r\n     * Call to all processes in my activities\r\n     * @return {object} data\r\n     */\r\n    getData: function () {\r\n        var self = this,\r\n            $args = {},\r\n            $route = self.params.route;\r\n\r\n        switch ($route) {\r\n            case \"pendings\":\r\n                $args = {\r\n                    \"taskState\": \"all\",\r\n                    \"myPendings\": true\r\n                };\r\n                break;\r\n            case \"following\":\r\n                $args = {\r\n                    \"taskState\": \"all\",\r\n                    \"myActivities\": true,\r\n                    \"onlyFavorites\": true\r\n                };\r\n                break;\r\n            case \"Green\":\r\n            case \"Red\":\r\n            case \"Yellow\":\r\n                $args = {\r\n                    \"taskState\": $route\r\n                };\r\n                break;\r\n        }\r\n        return self.dataService.getAllProcesses($args).then(function (data) {\r\n            return self.getInfoToProcessesList(data);\r\n        });\r\n    },\r\n\r\n    /**\r\n     * Organize all data to processes in my activities\r\n     * @param data\r\n     * @returns {{cases}}\r\n     */\r\n    getInfoToProcessesList: function (data) {\r\n        var allProcesses = data.categories,\r\n            processes = [],\r\n            cases = [];\r\n\r\n        for (var i = 0, l = allProcesses.length; i < l; i++) {\r\n            processes = allProcesses[i].workflows;\r\n            for (var j = 0, k = processes.length; j < k; j++) {\r\n                cases.push({\r\n                    process: processes[j].name,\r\n                    idworkflow: processes[j].idworkflow\r\n                });\r\n            }\r\n        }\r\n        return cases;\r\n    },\r\n\r\n    /**\r\n     * event listener for each action in the processes list\r\n     * @param ev\r\n     */\r\n    onClickProcess: function (ev) {\r\n        var self = this,\r\n            params = bizagi.clone(self.params),\r\n            $target = $(ev.target).closest(\".wdg-process-card\");\r\n        self.setSelectedList($target);\r\n\r\n        self.idworkflow = $target.data(\"idworkflow\");\r\n        self.histName = $target.data(\"title\");\r\n\r\n        self.pubDeadLockDetection(\"notify\", {\r\n            type: \"CASES-TEMPLATE-VIEW\",\r\n            args: $.extend(params, {\r\n                histName: self.histName,\r\n                level: 3,\r\n                idworkflow: self.idworkflow\r\n            })\r\n        });\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @returns {*}\r\n     */\r\n    getIdworkflow: function (){\r\n        var self = this;\r\n        return self.idworkflow;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @returns {*}\r\n     */\r\n    getHistname: function(){\r\n        var self = this;\r\n        return self.histName;\r\n    },\r\n\r\n    /**\r\n     *\r\n     * @param item\r\n     */\r\n    setSelectedList: function(item){\r\n        var self = this;\r\n        $(item).addClass(\"wdg-plst-selected\").siblings().removeClass(\"wdg-plst-selected\");\r\n    },\r\n\r\n    /**\r\n     * Gets Message when there are not data\r\n      * @returns {processeslistEmptyData}\r\n     */\r\n     getEmptyDataMessage: function () {\r\n        var self = this,\r\n            processeslistEmptyData = self.getTemplate(\"processeslistEmptyData\");\r\n\r\n        return processeslistEmptyData;\r\n    },\r\n\r\n    /**\r\n     * Detach handlers\r\n     */\r\n    clean: function () {\r\n        var self = this,\r\n            $content = self.getContent();\r\n\r\n        if ($content) {\r\n            $(\".wdg-process-card\", $content).off(\"click\");\r\n        }\r\n\r\n        self.unsub(\"GETIDWORKFLOW_FROM_PROCESSESLIST\");\r\n        self.unsub(\"GETHISTNAME_FROM_PROCESSESLIST\");\r\n    }\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.processeslist\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.processeslist], true);"]}