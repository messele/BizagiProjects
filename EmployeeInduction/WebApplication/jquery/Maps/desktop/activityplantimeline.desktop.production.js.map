{"version":3,"sources":["jquery/workportal/desktop/widget/project.plan.activity.users/bizagi.workportal.desktop.widgets.project.plan.activity.users.js"],"names":["bizagi","workportal","widgets","widget","extend","init","workportalFacade","dataService","params","self","this","usersMap","plugins","usersInformation","globalHandlersService","injector","get","usersAssignees","_super","loadTemplates","plan-users-main","getTemplate","concat","renderContent","content","$","postRender","sub","proxy","onNotifyLoadInfoActivityExecution","activityRuning","activity","startDate","finishDate","event","cvsGuidUsers","activitiesUsers","$content","getContent","empty","args","ownerUserId","plan","idUserCreator","ownerUserGuid","push","idUser","guidUser","userType","picture","id","guid","name","each","activities","index","userId","userAssigned","userGuid","userAssignedGuid","inArray","filter","user","length","render","assignee","justAssignees","label","localization","getResource","appendTo","addEventHandlersModal","when","callGetDataUsers","then","showCreatorInformation","renderUserProfilesAndImages","allUsers","usersAssignee","map","isOwner","indexOf","isAssignee","usersAdapter","createJsonUserInfo","userCreator","userInfo","username","undefined","email","getInitials","find","userinformation","i","obj","$li","prop","hide","html","console","log","not","on","ev","userSelected","$target","target","data","usersActivities","userParam","getIsAssignee","getIsOwner","parent","usertooltip","defer","Deferred","usersGuids","join","width","height","getUsersData","always","response","getUsersAssignees","resolve","promise","getUserAssignee","tasks","types","actUser","click","preventDefault","stopPropagation","publish","widgetName","BIZAGI_WORKPORTAL_WIDGET_USERS_MODAL","closeVisible","maximize","modalParameters","title","refreshInbox","register","project","users"],"mappings":"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","sourcesContent":["/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Activity Users Controller\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\r\n\r\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.activity.users\", {}, {\r\n   /*\r\n    *   Constructor\r\n    */\r\n   init: function (workportalFacade, dataService, params) {\r\n      var self = this;\r\n\r\n      self.usersMap = {};\r\n      self.plugins = {};\r\n      self.usersInformation=[];\r\n      self.globalHandlersService = bizagi.injector.get('globalHandlersService');\r\n      self.usersAssignees = [];\r\n\r\n      // Call base\r\n      self._super(workportalFacade, dataService, params);\r\n\r\n      //Load templates\r\n      //The load template the users plan because they are the same\r\n      self.loadTemplates({\r\n         \"plan-users-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.users\").concat(\"#project-plan-users\")\r\n      });\r\n   },\r\n\r\n   /*\r\n    * Renders the template defined in the widget\r\n    */\r\n   renderContent: function () {\r\n      var self = this;\r\n      self.content = $(\"<div></div>\");\r\n      return self.content;\r\n   },\r\n\r\n   /*\r\n    * links events with handlers\r\n    */\r\n   postRender: function () {\r\n      var self = this;\r\n      self.sub(\"LOAD_INFO_ACTIVITY_SUMMARY\", $.proxy(self.onNotifyLoadInfoActivityExecution, self));\r\n   },\r\n\r\n   /*\r\n    * validate if the activity is running\r\n    */\r\n   activityRuning: function (activity) {\r\n      return activity.startDate !== null && activity.finishDate === null;\r\n   },\r\n\r\n   onNotifyLoadInfoActivityExecution: function (event, params) {\r\n      var self = this,\r\n      cvsGuidUsers = [],\r\n         activitiesUsers = [],\r\n         $content = self.getContent().empty();\r\n      self.params = $.extend(self.params, params.args);\r\n\r\n      var ownerUserId = self.params.plan.idUserCreator;\r\n      var ownerUserGuid = self.params.plan.idUserCreator;\r\n\r\n      activitiesUsers.push({ \"idUser\": ownerUserId, \"guidUser\": ownerUserGuid, \"userType\": [\"owner\"] });\r\n      self.usersMap[\"-\" + ownerUserId + \"-\"] = {\r\n         picture: \"\",\r\n         id: ownerUserId,\r\n         guid: ownerUserGuid,\r\n         name: \"\",\r\n         userType: [\"owner\"]\r\n      };\r\n      cvsGuidUsers.push(ownerUserGuid);\r\n      $.each(self.params.plan.activities, function (index, activity) {\r\n         if (self.activityRuning(activity)) {\r\n            var userId = activity.userAssigned;\r\n            var userGuid = activity.userAssignedGuid;\r\n            if (userId === ownerUserId) {\r\n               if($.inArray(\"Assigned\", activitiesUsers[0].userType) === -1){\r\n                  activitiesUsers[0].userType.push(\"Assigned\");\r\n                  self.usersMap[\"-\" + ownerUserId + \"-\"].userType.push(\"Assigned\");\r\n               }\r\n            }\r\n            else {\r\n               self.usersMap[\"-\" + userId + \"-\"] = {\r\n                  picture: \"\",\r\n                  id: userId,\r\n                  name: \"\",\r\n                  userType: [\"Assigned\"]\r\n               };\r\n               if (activitiesUsers.filter(function(user) { return user.idUser == userId; }).length === 0) {\r\n                  var id=userGuid?userGuid:userId;\r\n                  activitiesUsers.push({\"idUser\": id, \"userGuid\": id, \"userType\": [\"Assigned\"]});\r\n                  cvsGuidUsers.push(id);\r\n               }\r\n            }  \r\n         }\r\n      });\r\n      self.activitiesUsers = activitiesUsers;\r\n\r\n      //Update widget\r\n      var contentTemplate = self.getTemplate(\"plan-users-main\");\r\n      contentTemplate\r\n         .render({\r\n            assignee: self.justAssignees(activitiesUsers),\r\n            label: bizagi.localization.getResource(\"workportal-project-plan-assignee\")\r\n         })\r\n         .appendTo($content);\r\n        self.addEventHandlersModal();\r\n      $.when(self.callGetDataUsers(cvsGuidUsers)).then(function () {\r\n         self.showCreatorInformation(ownerUserId);\r\n         self.renderUserProfilesAndImages();\r\n      });\r\n   },\r\n\r\n   /**\r\n    * return standar userAdapter information with only assigned users\r\n    * @param {Array} allUsers \r\n    */\r\n   justAssignees: function (allUsers) {\r\n       var usersAssignee=[];\r\n       allUsers.map(function(user) {\r\n           var isOwner=user.userType.indexOf(\"owner\")!==-1;\r\n           var isAssignee=user.userType.indexOf(\"Assigned\")!==-1;\r\n           usersAssignee.push(usersAdapter.createJsonUserInfo(user.idUser, \"\", \"\", \"\", \"\", \"\", isAssignee, isOwner, [], []));\r\n       });\r\n       return usersAdapter.justAssignees(usersAssignee);\r\n   },\r\n   \r\n   /**\r\n    * show the information of the creator case\r\n    * @param {string} ownerUserId guid user creator\r\n    */\r\n   showCreatorInformation: function (ownerUserId) {\r\n       var self = this;\r\n       var userCreator=self.usersMap[\"-\"+ownerUserId+\"-\"];\r\n       var userInfo = usersAdapter.createJsonUserInfo(\r\n           userCreator.id,\r\n           userCreator.name,\r\n           userCreator.username,\r\n           userCreator.picture?userCreator.picture:undefined,\r\n           userCreator.email,\r\n           userCreator.name.getInitials(),\r\n           false,\r\n           true,\r\n           [],\r\n           []\r\n       );\r\n       self.content.find(\".ui-bizagi-wp-project-plan-users .ui-bizagi-wp-project-users-creator-info\").userinformation(self, { user: userInfo });\r\n   },\r\n\r\n   /**\r\n    * UI\r\n    */\r\n\r\n   renderUserProfilesAndImages: function () {\r\n       var self = this;\r\n       $.each(self.usersMap, function (i, obj) {\r\n           var $li = $(\".ui-bizagi-wp-userlist li[data-iduser=\" + obj.id + \"]\", self.content);\r\n           if (obj.picture !== \"\") {\r\n               $li.find(\"img\").prop(\"src\", obj.picture);\r\n           }\r\n           else {\r\n               $li.find(\"img\").hide();\r\n               if(obj.name!==undefined){\r\n                  $li.find(\"span\").html(obj.name.getInitials());\r\n               }\r\n               else{\r\n                  console.log(\"obj.name is undefined\");\r\n               }\r\n\r\n           }\r\n       });\r\n       $(\".ui-bizagi-wp-userlist li\", self.content).not(\".moreUsers\").on('mouseenter', function (ev) {\r\n         var $target = $(ev.target);  \r\n         var userId = $(this).data(\"iduser\");\r\n         var userSelected;\r\n         $.each(self.usersMap, function (i, obj) {\r\n            if(obj.id === userId)\r\n               userSelected=obj;\r\n        });\r\n         var usersActivities=self.usersAssignees.find(function(assignee) {\r\n            return assignee.userAssigned === userSelected.id;\r\n         });\r\n         var activities=[];\r\n         if(usersActivities)\r\n            usersActivities.activities.map(function(activity) {\r\n               activities.push(activity.name);\r\n            });\r\n         var userParam = usersAdapter.createJsonUserInfo(userSelected.id, userSelected.name, userSelected.username, userSelected.picture, userSelected.email, userSelected.name.getInitials(), self.getIsAssignee(userSelected), self.getIsOwner(userSelected), activities, undefined);\r\n                     \r\n         $target.parent().usertooltip(self,{target:$target,user:userParam});\r\n      });\r\n   },\r\n\r\n   getIsAssignee: function(userSelected){\r\n      if(userSelected.userType.indexOf(\"Assigned\") > -1){\r\n          return true;\r\n      }\r\n      return false;\r\n     },\r\n  \r\n     getIsOwner : function(userSelected){\r\n      if(userSelected.userType.indexOf(\"owner\") > -1){\r\n          return true;\r\n      }\r\n      return false;\r\n     },\r\n   /*\r\n    *  Get data for users\r\n    */\r\n   callGetDataUsers: function (cvsGuidUsers) {\r\n      var self = this,\r\n         params = {},\r\n         defer = $.Deferred();\r\n      params = {\r\n         usersGuids: cvsGuidUsers.join(),\r\n         width: 50,\r\n         height: 50\r\n      };\r\n      $.when(self.dataService.getUsersData(params)).always(function (response) {\r\n        self.usersInformation= response;\r\n         for (var i = 0, length = response.length; i < length; i += 1) {\r\n            if (typeof (response[i].name) === \"undefined\") {\r\n               bizagi.log(response[i] + \" Id Not Found\", response, \"error\");\r\n            } else {\r\n               if(self.usersMap[\"-\" + response[i].id + \"-\"]){\r\n                  self.usersMap[\"-\" + response[i].id + \"-\"].picture += (response[i].picture) ? \"data:image/png;base64,\" + response[i].picture : \"\";\r\n                  self.usersMap[\"-\" + response[i].id + \"-\"].name = response[i].name || \"\";\r\n                  self.usersMap[\"-\" + response[i].id + \"-\"].username = response[i].username || \"\";\r\n                  self.usersMap[\"-\" + response[i].id + \"-\"].email = response[i].email || \"\";\r\n               }\r\n               else{\r\n                  console.log(\"The object is undefined\");\r\n               }\r\n            }\r\n         }\r\n         self.getUsersAssignees();\r\n         defer.resolve();\r\n      });\r\n      return defer.promise();\r\n   },\r\n\r\ngetUsersAssignees: function(){\r\n    var self = this;\r\n    for(var i=0; i<self.usersInformation.length; i++){\r\n        self.usersAssignees.push(self.getUserAssignee(self.usersInformation[i]));\r\n    }\r\n\r\n},\r\n\r\ngetUserAssignee: function(user){\r\n    var self =  this;\r\n    var tasks = [];\r\n    $.each(self.params.plan.activities, function (index, activity) {\r\n        var userId = activity.userAssigned;\r\n        if (userId === user.id && self.activityRuning(activity)) {\r\n            tasks.push({ \"name\": activity.name });\r\n        }\r\n    });\r\n    user.tasks = tasks;\r\n    var types = self.activitiesUsers.find(function(actUser) {\r\n        return actUser.idUser == user.id;\r\n    });\r\n    user.userType = types.userType;\r\n\r\n    var userAssignees = usersAdapter.createJsonUserInfo(\r\n        user.id, \r\n        user.name, \r\n        user.username, \r\n        user.picture ? \"data:image/png;base64,\" + user.picture : undefined, \r\n        user.email, \r\n        user.name.getInitials(),\r\n        self.getIsAssignee(user), \r\n        self.getIsOwner(user), \r\n        user.tasks, \r\n        []);\r\n\r\n        return userAssignees;\r\n   },\r\n\r\n   addEventHandlersModal: function () {\r\n    var self =  this;\r\n    $(\".moreUsers\").click(function(event) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        var usersAssignees = self.usersAssignees || [];\r\n        self.globalHandlersService.publish(\"showDialogWidget\", {\r\n            widgetName: bizagi.workportal.widgets.widget.BIZAGI_WORKPORTAL_WIDGET_USERS_MODAL,\r\n            closeVisible: true,\r\n            data: usersAssignees,\r\n            maximize: true,\r\n            modalParameters: {\r\n                title: bizagi.localization.getResource(\"workportal-project-users-title\")+ \" (\"+usersAssignees.length+\")\",\r\n                width: 790,\r\n                height: 526,\r\n                refreshInbox: false\r\n            }\r\n        });\r\n     });\r\n   }\r\n\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.activity.users\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.activity.users], true);"]}