{"version":3,"sources":["jquery/workportal/js/base/widget/bizagi.workportal.widgets.comments.js"],"names":["bizagi","workportal","comments","renderComments","data","self","this","cache","htmlContent","def","$","Deferred","_Comments","_getRenderCommentList","_currentUser","currentUser","idUser","commentsCanvas","canvas","readOnly","setStorage","caseNumber","workportalFacade","getTemplate","commentsList","commentsReplies","commentsDropdown","commentsConfirm","showComments","getCommentSync","commentsToSync","maxIdComment","when","getComments","idCase","done","usr","users","getCategoryColor","category","color","hideReplies","ul","children","slideUp","parent","removeClass","replyToggle","li","replies","button","length","addClass","timeAgo","commentTime","timeago","Date","getUserPicture","image","each","key","value","Picture","getUserName","name","DisplayName","resetRepliesFlags","getRenderCommentList","totalRecords","setPagination","totalPages","actualPage","tmpl","User","CurrentUser","RelatedElementId","replaceTextToSmiles","params","selector","hasPagination","page","pageSelector","paginationData","pagination","pages","empty","show","hide","pageToshow","i","push","pageNumber","paginationHtml","paginationTemplate","html","append","bizagiPagination","listElement","clickCallBack","options","idColorCategory","pag","renderCommentList","appendTo","hideAllReplies","util","setInterval","context","singleton","timeout","killWhenExitContext","getWidgetName","call","getStorage","dataService","getNewComments","idLastComment","numberOfNewComments","newComments","newReplies","totalNewComments","bufferLocalNewComments","newMessage","replace","text","click","e","isPropagationStopped","stopPropagation","getCategoryName","resources","getResource","tooltip","find","off","slideDown","focus","fadeIn","blur","val","message","listId","list","makeNewReply","idComment","comment","dataNewComment","incrementStorage","newReply","Replies","makeNewComment","newComment","prepend","categoryClose","delegate","keyCode","selfParent","oldIcon","attr","oldText","newText","siblings","iconCategory","filterTextColor","hasClass","removeAttr","renameCommentCategory","colorName","selfParentItem","selfParentLength","showDropDownMenu","menu","referer","css","position","my","at","collision","of","getCommentsCategories","categories","bind","getIdCase","oldVal","split","editControls","select","categoryId","filterText","trim","setCommentCategory","target","on","id","textForReply","first","parents","liId","dialog","resizable","modal","title","buttons","removeReply","idReply","state","evalState","removeComment","action","remove","alert","desktop","popup","closePopupInstance","replyToggleBotton","resolve","promise","callBack","parseMessage","preParseMessage","securityPatterns","<br>","[<]","[>]","pattern","RegExp",":)",":!",":$",":(",":'(",";)",":|",":D",":o",":p",":s"," Y "," N ","scapeKey","label","result","sessionStorage","setItem","increment","newValue","parseInt","undefined","getItem"],"mappings":"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","sourcesContent":["/**\r\n * @name: Bizagi workportal comments\r\n * @description: This file define functionality of comments into the render\r\n * @author: Edward J Morales\r\n */\r\n\r\n\r\nbizagi.workportal.comments = {\r\n    /**\r\n     * Make functionality to comments tab in case summary\r\n     */\r\n    renderComments: function(data) {\r\n        var self = this;\r\n        var cache = {};\r\n        var htmlContent = \"\";\r\n        var def = new $.Deferred();\r\n        var _Comments = {};\r\n        var _getRenderCommentList = -1;\r\n        var _currentUser = bizagi.currentUser.idUser;\r\n        var commentsCanvas = data.canvas;\r\n        var readOnly = data.readOnly || false;\r\n\r\n        self.setStorage('bufferLocalNewComments_' + data.caseNumber, 0);\r\n        self.setStorage('idCase', data.caseNumber);\r\n\r\n        // Templates definition\r\n        self.comments = self.workportalFacade.getTemplate(\"comments\");\r\n        self.commentsList = self.workportalFacade.getTemplate(\"comments-list\");\r\n        self.commentsReplies = self.workportalFacade.getTemplate(\"comments-replies\");\r\n        self.commentsDropdown = self.workportalFacade.getTemplate(\"comments-dropdown\");\r\n        self.commentsConfirm = self.workportalFacade.getTemplate(\"comments-confirm\");\r\n\r\n        data.showComments = true;\r\n\r\n        var getCommentSync = function(commentsToSync) {\r\n            _Comments = commentsToSync.comments;\r\n            self.setStorage('maxIdComment_' + data.caseNumber, commentsToSync.maxIdComment);\r\n            self.setStorage('bufferLocalNewComments_' + data.caseNumber, 0);\r\n        }\r\n\r\n\r\n        $.when(\r\n                self.getComments({\r\n            idCase: data.caseNumber\r\n        }, getCommentSync))\r\n                .done(function(comments) {\r\n            var users = comments.users || [];\r\n            var getCategoryColor = function(category) {\r\n                var color = \"\";\r\n                switch (category) {\r\n                    case 0:\r\n                        color = \"orange\";\r\n                        break;\r\n                    case 1:\r\n                        color = \"red\";\r\n                        break;\r\n                    case 2:\r\n                        color = \"yellow\";\r\n                        break;\r\n                    case 3:\r\n                        color = \"blue\";\r\n                        break;\r\n                    case 4:\r\n                        color = \"purple\";\r\n                        break;\r\n                    case 5:\r\n                        color = \"green\";\r\n                        break;\r\n                    default:\r\n                        color = \"disable\";\r\n                        break;\r\n                }\r\n                return color;\r\n            };\r\n\r\n            var showReplies = function(ul) {\r\n                $(ul).children('li:not(:last)').slideDown('fast');\r\n            };\r\n\r\n            // This function hide all replies except the last\r\n            var hideReplies = function(ul) {\r\n                $(ul).children('li:not(:last)').slideUp('fast');\r\n                $(\"span.reply-toggler > span\", ul.parent()).removeClass(\"expanded\");\r\n            };\r\n\r\n            // Show or hide toggle button\r\n            var replyToggle = function(li) {\r\n                var replies = $(\".reply-list li\", li) || [];\r\n                var button = $(\".reply-toggler\", li);\r\n                if (replies.length > 1) {\r\n                    button.removeClass('hidden');\r\n                } else {\r\n                    button.addClass('hidden');\r\n                }\r\n            };\r\n\r\n            // Calculate time ago\r\n            var timeAgo = function(commentTime) {\r\n                return $.timeago(new Date(commentTime));\r\n            };\r\n\r\n            // Get base64 user image\r\n            var getUserPicture = function(idUser) {\r\n                var image = \"\";\r\n                $.each(users, function(key, value) {\r\n                    if (users[key]['Id'] == idUser) {\r\n                        image = value.Picture;\r\n                    }\r\n                });\r\n                return image;\r\n            };\r\n\r\n            var getUserName = function(idUser) {\r\n                var name = \"\";\r\n                $.each(users, function(key, value) {\r\n                    if (users[key]['Id'] == idUser) {\r\n                        name = value.DisplayName;\r\n                    }\r\n                });\r\n                return name;\r\n            };\r\n\r\n            // Reset replies flags\r\n            var resetRepliesFlags = function() {\r\n                $(\".comments-text-box\").removeClass('comments-reply-box');\r\n                $(\".comments-text-box li:first-child\").data('reply-mode', '');\r\n                $(\".comments-text-box li:first-child\").data('id', '');\r\n            };\r\n\r\n            var countReplies = function(comments) {\r\n                var countReplies = 0;\r\n                $.each(comments.comments, function(key, value) {\r\n                    countReplies += value.Replies.length;\r\n                });\r\n            };\r\n\r\n            var renderCommentsPanel = function(comments, usr) {\r\n                _Comments.totalRecords = comments.totalRecords;\r\n                users = usr;\r\n\r\n                return $.tmpl(self.comments, {\r\n                    comments: comments.comments,\r\n                    readOnly: readOnly,\r\n                    User: users,\r\n                    idCase: data.caseNumber,\r\n\r\n                    CurrentUser: _currentUser,\r\n                    RelatedElementId: null,\r\n                    getCategoryColor: getCategoryColor,\r\n                    replaceTextToSmiles: self.replaceTextToSmiles,\r\n                    timeAgo: timeAgo,\r\n                    getUserPicture: getUserPicture,\r\n                    getUserName: getUserName,\r\n                    getCategoryName: function(name) {\r\n                        return self.resources.getResource(\"workportal-widget-comments-\" + name);\r\n                    }\r\n                });\r\n            };\r\n\r\n            var getRenderCommentList = function(data, usr) {\r\n                _Comments.totalRecords = comments.totalRecords;\r\n                users = usr;\r\n\r\n                // Render Pagination\r\n                setPagination({\r\n                    totalPages: data.totalPages,\r\n                    actualPage: data.actualPage\r\n                });\r\n\r\n                return $.tmpl(self.commentsList, {\r\n                    comments: data.comments,\r\n                    User: users,\r\n                    CurrentUser: _currentUser,\r\n                    RelatedElementId: null,\r\n                    getCategoryColor: getCategoryColor,\r\n                    replaceTextToSmiles: self.replaceTextToSmiles,\r\n                    timeAgo: timeAgo,\r\n                    getUserPicture: getUserPicture,\r\n                    getUserName: getUserName,\r\n                    readOnly: readOnly\r\n                });\r\n            };\r\n\r\n            var renderCommentsReplies = function(data, usr) {\r\n                _Comments.totalRecords = comments.totalRecords;\r\n                users = usr;\r\n\r\n                return $.tmpl(self.commentsReplies, {\r\n                    Replies: data.Replies,\r\n                    User: users,\r\n                    CurrentUser: _currentUser,\r\n                    RelatedElementId: null,\r\n                    getCategoryColor: getCategoryColor,\r\n                    replaceTextToSmiles: self.replaceTextToSmiles,\r\n                    timeAgo: timeAgo,\r\n                    getUserPicture: getUserPicture,\r\n                    getUserName: getUserName,\r\n                    readOnly: readOnly\r\n                });\r\n            };\r\n\r\n            var renderDropDownMenu = function(options) {\r\n                return $.tmpl(self.commentsDropdown, {\r\n                    categories: options.categories,\r\n                    css: options.css,\r\n                    idComment: options.idComment,\r\n                    getCategoryColor: getCategoryColor,\r\n                    readOnly: readOnly\r\n                });\r\n            };\r\n\r\n            var setPagination = function(params, selector) {\r\n                var totalPages = params.totalPages || 1;\r\n                var hasPagination = (totalPages > 1) ? true : false;\r\n                var nElemToShow = 5;\r\n                var page = params.actualPage || 1;\r\n                var pageSelector = $('.comments-pagination') || selector;\r\n                var paginationData = {};\r\n                paginationData.pagination = hasPagination;\r\n                paginationData.totalPages = totalPages;\r\n                paginationData.pages = [];\r\n                paginationData.page = page;\r\n\r\n                // Empty container of pagination\r\n                pageSelector.empty();\r\n\r\n                if (hasPagination) {\r\n                    pageSelector.show();\r\n                } else {\r\n                    pageSelector.hide();\r\n                }\r\n\r\n                var pageToshow = (nElemToShow > totalPages) ? totalPages : nElemToShow;\r\n                for (var i = 1; i <= pageToshow; i++) {\r\n                    paginationData.pages.push({\r\n                        \"pageNumber\": i\r\n                    });\r\n                }\r\n\r\n                var paginationHtml = $.tmpl(self.paginationTemplate, paginationData).html();\r\n                $(pageSelector).append(paginationHtml);\r\n\r\n                // Crate pagination control \r\n                $(\"ul\").bizagiPagination({\r\n                    totalPages: paginationData.totalPages,\r\n                    actualPage: paginationData.page,\r\n                    listElement: $(\"ul\", pageSelector),\r\n                    clickCallBack: function(options) {\r\n                        $.when(self.getComments({\r\n                            idCase: data.caseNumber,\r\n                            idColorCategory: _getRenderCommentList,\r\n                            pag: options.page\r\n                        }))\r\n                                .done(function(comments) {\r\n                            renderCommentList(comments, comments.users, true);\r\n                        });\r\n                    }\r\n                });\r\n            };\r\n\r\n            var renderCommentList = function(comments, users) {\r\n                _Comments.totalRecords = comments.totalRecords;\r\n                // Empty list\r\n                $(\"#comment-list\").empty();\r\n\r\n                htmlContent = getRenderCommentList(comments, users);\r\n\r\n                htmlContent.appendTo($(\"#comment-list\"));\r\n                cache[\"subprocess\"] = $(\"#comment-list\");\r\n                hideAllReplies();\r\n\r\n                return htmlContent;\r\n            };\r\n\r\n            // Check new comments\r\n            if (!readOnly) {\r\n                bizagi.util.setInterval({\r\n                    name: 'comments',\r\n                    params: {\r\n                        idCase: bizagi.context.idCase\r\n                    },\r\n                    singleton: true,\r\n                    timeout: 30000,\r\n                    killWhenExitContext: false,\r\n                    context: '(bizagi.context.widget==\"' + self.getWidgetName() + '\" && bizagi.context.idCase == \"' + data.caseNumber + '\" && bizagi.context.commentsFocus)',\r\n                    call: function(options) {\r\n                        options = options || {};\r\n                        var maxIdComment = self.getStorage('maxIdComment_' + options.idCase);\r\n\r\n                        $.when(self.dataService.getNewComments({\r\n                            idCase: options.idCase,\r\n                            idLastComment: maxIdComment\r\n                        }))\r\n                                .done(function(numberOfNewComments) {\r\n                            if (numberOfNewComments.newComments > 0 || numberOfNewComments.newReplies > 0) {\r\n                                var totalNewComments = (numberOfNewComments.newComments + numberOfNewComments.newReplies);\r\n                                var bufferLocalNewComments = self.getStorage('bufferLocalNewComments_' + options.idCase) || totalNewComments;\r\n                                var newMessage = $(\".comments-update\").data('message').replace(/{totalNewComments}/, totalNewComments - bufferLocalNewComments);\r\n\r\n                                // Check if total of new comments its equal to local added comments\r\n                                if (totalNewComments > bufferLocalNewComments) {\r\n                                    $(\".comments-update\").text(newMessage);\r\n                                    $(\".comments-update\").show().click(function(e) {\r\n                                        if (e.isPropagationStopped())\r\n                                            return;\r\n                                        e.stopPropagation();\r\n                                        $('#filterClear').click();\r\n                                    });\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n\r\n            htmlContent = renderCommentsPanel(comments, users);\r\n\r\n            // Tooltip for category button\r\n            $(\".comment-frame .button-category\", htmlContent).tooltip();\r\n\r\n            // Remove all 'live' events\r\n            $(htmlContent).find(\"*\").off('click');\r\n\r\n            // Refresh all comments \r\n            $('.button-refresh', htmlContent).click(function() {\r\n                $('.comments-update').hide();\r\n                // Get json and render again \r\n                $.when(\r\n                        self.getComments({\r\n                    idCase: data.caseNumber,\r\n\r\n                    idColorCategory: _getRenderCommentList\r\n                }, getCommentSync))\r\n                        .done(function(comments) {\r\n                    var users = comments.users || [];\r\n\r\n                    // Empty list\r\n                    $(\"#comment-list\").empty();\r\n\r\n                    htmlContent = renderCommentList(comments, users);\r\n\r\n                    htmlContent.appendTo($(\"#comment-list\"));\r\n                    cache[\"subprocess\"] = $(\"#comment-list\");\r\n                    hideAllReplies();\r\n                });\r\n            });\r\n\r\n            // Show textarea to create a new comment\r\n            $(\".make-new-comments\", htmlContent).click(function() {\r\n                resetRepliesFlags();\r\n                $(\".comments-text-box li:first-child\").slideDown('fast');\r\n                $(\".comment-box\", htmlContent).focus().fadeIn()\r\n                $(this).hide();\r\n                $(\".action-buttons\").show().slideDown('fast');\r\n                $(\".text-to-reply\").hide();\r\n            });\r\n\r\n            // Cancel new message\r\n            $(\".comment-box\", htmlContent).blur(function() {\r\n                var message = $(\".comments-text-box textarea\").val();\r\n\r\n                if (message.length == 0) {\r\n                    $(\".comments-text-box textarea\").val('');\r\n                    $(\".comments-text-box li:first-child\").slideUp('fast');\r\n                    $(\".make-new-comments\").fadeIn();\r\n                    $(\".action-buttons\").hide();\r\n\r\n                    resetRepliesFlags();\r\n                }\r\n            });\r\n\r\n            // Send a new message\r\n            $(\".send-new-comments\", htmlContent).click(function() {\r\n                var message = $(\".comments-text-box textarea\").val();\r\n\r\n                if (message.length == 0) {\r\n                    return;\r\n                }\r\n\r\n                // Create new reply\r\n                if ($(\".comments-text-box li:first-child\").data('reply-mode') == \"true\") {\r\n                    var listId = $(\".comments-text-box li:first-child\").data('id');\r\n                    var list = $(\"li[data-id='\" + listId + \"']\");\r\n                    $.when(self.dataService.makeNewReply({\r\n                        idCase: data.caseNumber,\r\n\r\n                        idComment: listId,\r\n                        comment: message\r\n                    })).done(function(dataNewComment) {\r\n                        // Increment global control of local new messages\r\n                        self.incrementStorage('bufferLocalNewComments_' + data.caseNumber, 1);\r\n\r\n                        var newReply = renderCommentsReplies(dataNewComment, dataNewComment.users);\r\n\r\n                        $(\".reply-list\", list).append(newReply);\r\n                        $(\".reply-list li:last\", list).show('highlight', 'slow');\r\n\r\n                        hideReplies($(\".reply-list\", list));\r\n                        replyToggle($(list));\r\n                    });\r\n                } else {\r\n                    // create new comment\r\n                    $.when(self.dataService.makeNewComment({\r\n                        idCase: data.caseNumber,\r\n\r\n                        comment: message\r\n                    })).done(function(dataNewComment) {\r\n                        // Increment global control of local new messages\r\n                        self.incrementStorage('bufferLocalNewComments_' + data.caseNumber, 1);\r\n\r\n                        var newComment = getRenderCommentList(dataNewComment, dataNewComment.users);\r\n\r\n                        $(\".reply-toggler\", newComment).addClass('hidden');\r\n                        $(\"#comment-list\").prepend(newComment);\r\n                        $(\"#comment-list li:first\").show('highlight', 'fast');\r\n\r\n                    });\r\n                }\r\n\r\n                $(\".comments-text-box li:first-child\").slideUp('fast');\r\n                $(\".make-new-comments\").show();\r\n                $(\".action-buttons\").hide();\r\n                $(\".comments-text-box textarea\").val('');\r\n                $(\".time-ago\").timeago();\r\n\r\n                resetRepliesFlags();\r\n            });\r\n\r\n            // Edit controls for categories\r\n            var categoryEdit = function() {\r\n                var self = $(this),\r\n                        selfParent = self.parent(),\r\n                        oldVal = selfParent.text().replace(/^\\s+|\\s+$/g, ''), // Trim, remove blank spaces\r\n                        oldIcon = self.siblings('a').children('span').attr('class').split(' ')[1],\r\n                        oldText = selfParent.html(),\r\n                        editControls = '<input type=\"text\" class=\"editBox\" value=\"' + oldVal + '\" /> <span class=\"filter-icon-ctrl btnSave\"></span> <span class=\"filter-icon-ctrl btnDiscard\"></span>';\r\n\r\n                selfParent.attr('data-old-icon', oldIcon);\r\n                selfParent.html(editControls).attr('data-old-text', oldText).addClass('no-pad');\r\n                $('.editBox').select();\r\n            };\r\n\r\n            $(htmlContent).delegate('.editBox', 'keypress', function(e) {\r\n                if (e.keyCode == 13) {\r\n                    $(this).parent().find('.btnSave').click();\r\n                }\r\n            });\r\n\r\n            // Save text of category changes\r\n            $(htmlContent).delegate('.btnSave', 'click', function() {\r\n                var selfParent = $(this).parent(),\r\n                        oldIcon = selfParent.attr('data-old-icon'),\r\n                        oldText = selfParent.attr('data-old-text'),\r\n                        newText = $(this).siblings('.editBox').val(),\r\n                        iconCategory = selfParent.html(oldText).find('a span.filter-icon'),\r\n                        filterTextColor = $('#filterText').attr('class'),\r\n                        filterTextDisable = $('#filterText').hasClass('disable');\r\n\r\n                if (!(filterTextDisable) && oldIcon === filterTextColor) {\r\n                    $('#filterText', htmlContent).text(newText);\r\n                    $('.filter-dropdown').removeClass('is-visible').addClass('is-hidden');\r\n                }\r\n\r\n                selfParent.removeAttr('data-old-text').html(oldText).find('a').empty().append(iconCategory, newText).removeClass('no-pad');\r\n\r\n                self.dataService.renameCommentCategory({\r\n                    idColorCategory: selfParent.data(\"category-id\"),\r\n                    colorName: newText\r\n                });\r\n            });\r\n\r\n            // Discard text of category changes\r\n            $(htmlContent).delegate('.btnDiscard', 'click', function() {\r\n                var selfParent = $(this).parent(),\r\n                        selfParentLength = selfParent.length,\r\n                        i = 0,\r\n                        selfParentItem,\r\n                        oldText;\r\n                for (; i < selfParentLength; i++) {\r\n                    selfParentItem = selfParent[i];\r\n                    oldText = $(selfParentItem).attr('data-old-text');\r\n                    $(selfParentItem).removeAttr('data-old-text').html(oldText).removeClass('no-pad');\r\n                }\r\n            });\r\n\r\n            // Close the category dropdown\r\n            function categoryClose() {\r\n                $(\".categories-dropdownmenu\").empty();\r\n                $(\".categories-dropdownmenu\").data('visible', false);\r\n            }\r\n\r\n            /**\r\n             *  Show sub menu with colors categories \r\n             *  @param options {referer,position}\r\n             */\r\n            var showDropDownMenu = function(options) {\r\n                var menu = $('.categories-dropdownmenu');\r\n                var referer = options.referer || $();\r\n                var css = options.css || '';\r\n                var idComment = options.idComment || '';\r\n                var position = options.position || {\r\n                    \"my\": \"right top\",\r\n                    \"at\": \"right top\",\r\n                    \"collision\": \"fit\",\r\n                    \"of\": referer.selector || referer\r\n                };\r\n\r\n                if (menu.data('name') != options.name) {\r\n                    categoryClose();\r\n                    menu.data('name', options.name || '');\r\n                    showDropDownMenu(options);\r\n                } else if (menu.data('visible')) {\r\n                    categoryClose();\r\n                } else {\r\n                    $.when(self.dataService.getCommentsCategories())\r\n                            .done(function(categories) {\r\n                        menu.empty();\r\n                        // Set position\r\n                        menu.position(position);\r\n\r\n                        renderDropDownMenu({\r\n                            categories: categories.categories,\r\n                            css: css,\r\n                            idComment: idComment,\r\n                            referer: referer\r\n                        }).appendTo(menu);\r\n                        // Set visibility\r\n                        menu.data('visible', true);\r\n                        menu.data('name', options.name || '');\r\n                    });\r\n                }\r\n            };\r\n\r\n            // Set events to button filter categories\r\n            $(\"#buttonFilter\", htmlContent).bind(\"click\", function() {\r\n                var self = this;\r\n                var options = {\r\n                    referer: $(\"#buttonFilter\", htmlContent),\r\n                    name: 'editCategories',\r\n                    css: 'editCategories'\r\n                }\r\n\r\n                if (readOnly) {\r\n                    options.position = {\r\n                        \"my\": \"left bottom\",\r\n                        \"at\": \"left bottom\",\r\n                        \"collision\": \"fit\",\r\n                        \"of\": self\r\n                    };\r\n                }\r\n                showDropDownMenu(options);\r\n            });\r\n\r\n\r\n            var getIdCase = function() {\r\n                return $('.comment-controls').data('idcase');\r\n            };\r\n\r\n            var setEventFilterCategory = function(e) {\r\n                if (e.isPropagationStopped()) {\r\n                    return;\r\n                }\r\n                var categoryId = $(this).parent().data('category-id');\r\n                var name = $('.categories-dropdownmenu').data('name');\r\n                var filterText = bizagi.util.trim($(this).text());\r\n\r\n                if (name == 'setCategories') {\r\n                    var idComment = $(this).data('idcomment');\r\n\r\n                    $.when(self.dataService.setCommentCategory({\r\n                        idCase: getIdCase,\r\n                        idColorCategory: categoryId,\r\n                        idComment: idComment\r\n                    }))\r\n                            .done(function() {\r\n                        $(\"#\" + idComment).removeClass();\r\n                        $(\"#\" + idComment).addClass(\"button-category\");\r\n                        $(\"#\" + idComment).addClass(getCategoryColor(categoryId));\r\n                        categoryClose();\r\n                    });\r\n                } else {\r\n                    // Filter by category\r\n                    $.when(self.dataService.getComments({\r\n                        idCase: getIdCase,\r\n                        idColorCategory: categoryId\r\n                    }))\r\n                            .done(function(data) {\r\n                        var target = $(\".comment-filter > #buttonFilter\");\r\n                        if (categoryId >= 0) {\r\n                            // Set filter name\r\n                            _getRenderCommentList = categoryId;\r\n                            $('.button-refresh').data('category-id', categoryId);\r\n                            $('#filterName').removeClass('is-hidden');\r\n                            $(\"#filterText\").text(filterText);\r\n                        } else {\r\n                            $('#filterName').addClass('is-hidden');\r\n                            $(\"#filterText\").text(\"\");\r\n                            _getRenderCommentList = -1;\r\n                        }\r\n\r\n                        $('#comment-list').empty();\r\n                        $('#comment-list').append(getRenderCommentList(data, data.users));\r\n\r\n                        // Set Color \r\n                        target.removeClass();\r\n                        target.addClass('button-category ' + getCategoryColor(categoryId));\r\n                        categoryClose();\r\n                        // Set category to refresh bottom\r\n                        $('.button-refresh').data('category-id', categoryId);\r\n                        hideAllReplies();\r\n                        $('.button-refresh').click();\r\n\r\n                    });\r\n                }\r\n                e.stopPropagation();\r\n            };\r\n\r\n            var setEventFilterClear = function() {\r\n                $('#filterClear').bind('click', function(e) {\r\n                    if (e.isPropagationStopped()) {\r\n                        return;\r\n                    }\r\n                    e.stopPropagation();\r\n                    _getRenderCommentList = -1;\r\n                    $(\".comment-filter > #buttonFilter\").removeClass();\r\n                    $(\".comment-filter > #buttonFilter\").addClass('button-category ' + getCategoryColor());\r\n\r\n                    // Set category to refresh bottom\r\n                    $('.button-refresh').data('category-id', '');\r\n                    $('#filterName').addClass('is-hidden');\r\n                    $('#filterText').text('');\r\n                    $('.button-refresh').click();\r\n                });\r\n            };\r\n\r\n\r\n            $(htmlContent).delegate('.close', 'click', categoryClose);\r\n            $(htmlContent).delegate('.btnEdit', 'click', categoryEdit);\r\n            $(htmlContent).delegate('.filter-category', 'click', setEventFilterCategory);\r\n            $(htmlContent).delegate('#filterClear', 'click', setEventFilterClear);\r\n\r\n            // Define events to edit mode\r\n            if (!readOnly) {\r\n                $(htmlContent).on(\"click\", \".button-category[data-own='true']\", function(e) {\r\n                    if (readOnly) {\r\n                        return;\r\n                    }\r\n                    if (e.isPropagationStopped()) {\r\n                        return;\r\n                    }\r\n                    e.stopPropagation();\r\n                    var self = this;\r\n                    showDropDownMenu({\r\n                        referer: self,\r\n                        name: 'setCategories',\r\n                        css: 'setCategories',\r\n                        idComment: $(self).data('id'),\r\n                        position: {\r\n                            \"my\": \"right top\",\r\n                            \"at\": \"left bottom\",\r\n                            \"collision\": \"fit\",\r\n                            \"of\": self\r\n                        }\r\n                    });\r\n                });\r\n\r\n                $(htmlContent).on('click', \".button-reply\", function(e) {\r\n                    if (e.isPropagationStopped())\r\n                        return;\r\n\r\n                    var id = $(this).data(\"id\");\r\n                    var textForReply = $(\"li[data-id='\" + id + \"'] .comment-text\").first().text();\r\n\r\n                    // Set data to active reply functionality\r\n                    $(\".comments-text-box li:first-child\").data('reply-mode', 'true');\r\n                    $(\".comments-text-box li:first-child\").data('id', id);\r\n\r\n                    // Set text to reply\r\n                    $(\".text-to-reply\").text(textForReply);\r\n                    $(\".text-to-reply\").show();\r\n\r\n                    $(\".comments-text-box textarea\").focus();\r\n                    $(\".comments-text-box\").addClass('comments-reply-box');\r\n                    $(\".comments-text-box li:first-child\").show().slideDown('fast');\r\n                    $(\".make-new-comments\").hide();\r\n                    $(\".action-buttons\").show().slideDown('fast');\r\n                    e.stopPropagation();\r\n                });\r\n\r\n                $(htmlContent).on(\"click\", \".button-delete\", function(e) {\r\n                    //if (e.isPropagationStopped()) return;\r\n                    //e.stopPropagation();\r\n                    var li = $(this).parents('li:first');\r\n                    var liId = $(this).data('id');\r\n                    var parent = li.parent();\r\n\r\n                    $.tmpl(self.commentsConfirm).dialog({\r\n                        resizable: true,\r\n                        modal: true,\r\n                        title: self.getResource(\"workportal-widget-comments-title\"),\r\n                        buttons: [\r\n                            {\r\n                                text: self.getResource(\"workportal-widget-comments-delete\"),\r\n                                click: function() {\r\n                                    // Call service\r\n                                    // Check if its reply or comment\r\n                                    if (parent.hasClass('reply-list')) {\r\n                                        var idComment = li.parents('li:first').data('id');\r\n                                        $.when(self.dataService.removeReply({\r\n                                            idCase: getIdCase,\r\n                                            idComment: idComment,\r\n                                            idReply: liId\r\n                                        }).done(function(state) {\r\n                                            evalState(state);\r\n                                        }));\r\n                                    } else {\r\n                                        $.when(self.dataService.removeComment({\r\n                                            idCase: getIdCase,\r\n                                            idComment: liId\r\n                                        }).done(function(state) {\r\n                                            evalState(state);\r\n                                        }));\r\n                                    }\r\n\r\n                                    var evalState = function(state) {\r\n                                        if (state.action) {\r\n                                            $.when(li.hide('highlight', 'fast'))\r\n                                                    .done(function() {\r\n                                                li.remove();\r\n                                                if (parent.hasClass('reply-list')) {\r\n                                                    parent.find('li').hide();\r\n                                                    parent.find('li:last').show();\r\n                                                    replyToggle(parent.parents('li:first'));\r\n                                                }\r\n                                            });\r\n                                        } else {\r\n                                            alert(state.message);\r\n                                        }\r\n                                    };\r\n\r\n                                    // Close dialog and menu\r\n                                    $(this).dialog(\"close\");\r\n                                    bizagi.workportal.desktop.popup.closePopupInstance();\r\n                                }\r\n                            },\r\n                            {\r\n                                text: self.getResource(\"workportal-widget-comments-cancel\"),\r\n                                click: function() {\r\n                                    $(this).dialog(\"close\");\r\n                                }\r\n                            }\r\n                        ]\r\n                    });\r\n                });\r\n            }\r\n\r\n            // Hide replies if it has more than one\r\n            var hideAllReplies = function() {\r\n                $.each($(\".reply-list\", htmlContent), function() {\r\n                    var replyToggleBotton = $(\".reply-toggler\", $(this).parents(\"li:first\"));\r\n                    if ($(\"li\", this).length > 1) {\r\n                        $(this).children('li:not(:last)').hide();\r\n                        replyToggleBotton.removeClass('hidden');\r\n                    } else {\r\n                        replyToggleBotton.addClass('hidden');\r\n                    }\r\n                });\r\n            };\r\n\r\n            // Show replies if it does been hidden\r\n            $(htmlContent).on('click', \".reply-toggler\", function(e) {\r\n                if (e.isPropagationStopped())\r\n                    return;\r\n                e.stopPropagation();\r\n                //Define show and hide actions\r\n                if ($(this).data('toggle-action') != \"hide\") {\r\n                    // Show list\r\n                    showReplies($(this).parent().find(\"ul\"));\r\n                    $(\"span\", this).addClass(\"expanded\");\r\n                    $(this).data('toggle-action', 'hide');\r\n                } else {\r\n                    // Show replies\r\n                    hideReplies($(this).parent().find(\"ul\"));\r\n                    $(\"span\", this).removeClass(\"expanded\");\r\n                    $(this).data('toggle-action', 'show');\r\n                }\r\n            });\r\n\r\n            hideAllReplies();\r\n            htmlContent.appendTo(commentsCanvas);\r\n\r\n            setPagination({\r\n                totalPages: comments.totalPages,\r\n                actualPage: comments.actualPage\r\n            }, $('.comments-pagination'));\r\n\r\n            def.resolve(commentsCanvas);\r\n        });\r\n\r\n        return def.promise();\r\n    },\r\n    getComments: function(options, callBack) {\r\n        var self = this;\r\n        var def = new $.Deferred();\r\n        options = options || {};\r\n        callBack = callBack || function() {\r\n        };\r\n        $.when(self.dataService.getComments(options))\r\n                .done(function(comments) {\r\n            callBack(comments);\r\n            def.resolve(comments);\r\n        });\r\n        return def.promise();\r\n    },\r\n    replaceTextToSmiles: function(message) {\r\n        var parseMessage = message;\r\n        var preParseMessage = \"\";\r\n        var securityPatterns = {\r\n            \"<br>\": \"\\n\",\r\n            \"[<]\": \"&lt;\",\r\n            \"[>]\": \"&gt;\"\r\n        };\r\n        var patterns = {\r\n            \":)\": \"smiley\",\r\n            \":!\": \"sarcastic\",\r\n            \":$\": \"embarrassed\",\r\n            \":(\": \"sad\",\r\n            \":'(\": \"cry\",\r\n            \";)\": \"wink\",\r\n            \":|\": \"disappointed\",\r\n            \":D\": \"happy\",\r\n            \":o\": \"surprise\",\r\n            \":p\": \"tongue\",\r\n            \":s\": \"confused\",\r\n            \" Y \": \"yes\",\r\n            \" N \": \"no\"\r\n        };\r\n\r\n        // Check XSS injection\r\n        while (preParseMessage != parseMessage) {\r\n            $.each(securityPatterns, function(key, value) {\r\n                var pattern = new RegExp(key, \"gm\");\r\n                preParseMessage = parseMessage;\r\n                parseMessage = parseMessage.replace(pattern, value, \"gm\");\r\n            });\r\n        }\r\n\r\n        $.each(patterns, function(key, value) {\r\n            var scapeKey = key.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, \"\\\\$&\");\r\n            var pattern = new RegExp(scapeKey);\r\n            var label = \"<div class='smiles \" + value + \"'></div>\";\r\n            parseMessage = parseMessage.replace(pattern, label, \"g\");\r\n        });\r\n\r\n        return parseMessage;\r\n    },\r\n    setStorage: function(key, value) {\r\n        var result = \"\";\r\n        key = key || \"\";\r\n\r\n        if (sessionStorage) {\r\n            result = sessionStorage.setItem(key, value);\r\n        }\r\n        return result;\r\n    },\r\n    incrementStorage: function(key, increment) {\r\n        var result = true;\r\n        var self = this;\r\n        if (sessionStorage) {\r\n            var newValue = parseInt(self.getStorage(key)) + parseInt(increment);\r\n            self.setStorage(key, newValue);\r\n        } else {\r\n            result = false;\r\n        }\r\n        return result;\r\n    },\r\n    getStorage: function(key) {\r\n        var result = undefined;\r\n        key = key || \"\";\r\n\r\n        if (sessionStorage) {\r\n            result = sessionStorage.getItem(key);\r\n        }\r\n        return result;\r\n    }\r\n};"]}