{"version":3,"sources":["jquery/workportal/desktop/widget/project.dashboard.menu.plan/bizagi.workportal.desktop.widgets.project.dashboard.menu.plan.js","jquery/workportal/desktop/widget/project.plan.sidebar/bizagi.workportal.desktop.widgets.project.plan.sidebar.js","jquery/workportal/desktop/widget/project.plan.action/bizagi.workportal.desktop.widgets.project.plan.action.js","jquery/workportal/desktop/widget/project.plan.state/bizagi.workportal.desktop.widgets.project.plan.state.js","jquery/workportal/desktop/widget/project.plan.progress/bizagi.workportal.desktop.widgets.project.plan.progress.js","jquery/workportal/desktop/widget/project.plan.time/bizagi.workportal.desktop.widgets.project.plan.time.js","jquery/workportal/desktop/widget/project.plan.parent/bizagi.workportal.desktop.widgets.project.plan.parent.js","jquery/workportal/desktop/widget/project.plan.users/bizagi.workportal.desktop.widgets.project.plan.users.js"],"names":["bizagi","workportal","widgets","widget","extend","init","workportalFacade","dataService","projectDashboard","params","self","this","_super","loadTemplates","project-dashboard-menu","getTemplate","concat","renderContent","content","$","postRender","contextsLeftSidebarCaseDashboard","forEach","context","sub","proxy","updateView","event","args","clean","$content","getContent","empty","template","menuPlanDashboard","menuDashboard","planState","getPlanState","plan","planChild","argsTemplate","showCommentsOptionMenu","showFilesOptionMenu","showTimeLineOptionMenu","isVisibleShowTimeLine","render","appendTo","showContextByMenuDashboard","toUpperCase","addClass","siblings","removeClass","handlerEvents","currentState","extraValidationShowTimeLine","loadContentById","preventDefault","$item","target","closest","data","backParentPlan","hasClass","pub","type","subMenuHandler","$comments","$files","$timeline","on","toggle","getLevelNavigator","currentLevelNavigator","parseInt","getParamsByBackFromPlan","typeContext","paramsNotify","off","unsub","injector","register","project","dashboard","menu","base","serviceloadDataPlan","supportNav","project-plan-sidebar","when","areTemplatedLoaded","done","idPlan","id","loadData","getDateServer","subscribe","loadedWithDataActivities","loadedWithDataFirstParent","unsubscribe","sidebar","notifier","planTemplateCreate","planPopupEdit","PENDING_PLAN","EXECUTING_PLAN","CLOSED_PLAN","CONTEXT_ACTIVITYPLAN","CONTEXT_ACTIVITYPLANOVERVIEW","CONTEXT_PLANCREATE","CONTEXT_ACTIVITYPLANCREATE","showActionsPlan","plan-action-main","tmpl","plugins","name","stateClosedPlan","currentStatePlan","contextualized","$contentWidget","initilizeActionMenu","onClosePlan","onNotifyLoadInfoSummaryPlan","clearAlertsOnFocus","showSucessMessage","printf","localization","getResource","showErrorMessage","setNamePlan","onNotifyExpandedRightSidebar","setStatePlan","statePlan","show","hide","namePlan","text","util","decodeHtmlEntities","onSelectMenu","ui","currentTarget","find","length","item","onClickMenuOpenEdition","onClickMenuDeletePlan","onClickMenuSaveAsTemplate","planSelected","showPopup","showPopupAddTemplatePlan","showConfirmationBox","callDeletePlan","always","response","status","onSubmitFormPlan","select","focus","parent","focusout","val","deletePlan","action","plan-state-main","renderWidget","append","state","plan-progress-main","valuePercentBarComplete","calculateProgress","progress","colorBar","$barRemainingDate","widthNumberDays","width","css","toString","completedActivities","totalActivities","activities","percentProgress","activity","workItemState","Math","round","datePickerRegional","plan-time-main","dueDate","updateWidget","planDatesToStamp","map","a","estimatedFinishDate","Date","getTime","startDate","finishDate","creationDate","closedDate","getClosedDatePlan","getIntervalOnMinutes","relativeTime","dateFormatter","getRelativeTime","now","minutesToShowTime","messageUnitTimeCalculated","replace","keywordResourceDescriptionDifference","getKeywordDifferenceDates","messageDescripionDifference","valueOfTimeCalculated","auxToDate","getSecondDate","auxPercentBar","getWidthBar","auxColorBar","getColorBarByPercent","fromDate","getFormattedDate","getFirstDate","toDate","percentBar","getLastActivity","JSON","parse","stringify","sort","activityA","activityB","getDifferenceBetweenDates","firstDate","secondDate","defer","Deferred","idUser","currentUser","callGetEffectiveDuration","difference","resolve","minutes","promise","minutesNowToDueDate","minutesCreateToNow","minutesDueDateToCreate","minutesCreateToDueDate","minutesStartToNow","minutesDueDateToNow","minutesStartToDueDate","milliseconds","intervalMinutes","differenceStartDateToCurrentDate","totalInterval","valuePercentInterval","ceil","differenceStartDateToClosedDate","percent","d","getEffectiveDuration","dateObj","monthNames","getMonth","formatDate","time","plan-parent-main","parentWorkItem","getPlanParent","planParent","idParent","radNumber","nameParent","displayName","idCase","idWorkflow","idWorkItem","idTask","processName","process","planName","isEmpty","guidActivity","goToParentCase","paramsDetailActivity","idActivity","getActivity","allowEdition","fail","msg","onClickGoToParentCase","routingExecute","usersMap","usersInformation","globalHandlersService","get","usersAssignees","plan-users-main","auxNoRepeatTypesUser","hashTypesUser","assigned","owner","cvsGuidUsers","activitiesUsers","ownerUserGuid","idUserCreator","ownerUserId","push","userGuid","userType","picture","guid","each","index","userId","userAssigned","userAssignedGuid","isRunning","inArray","filter","user","guidUser","assignee","justAssignees","label","initilizeTooltip","addEventHandlersModal","callGetDataUsers","then","showCreatorInformation","renderUserProfilesAndImages","allUsers","usersAssignee","indexOf","isOwner","isAssignee","usersAdapter","createJsonUserInfo","userCreator","userInfo","username","undefined","email","getInitials","userinformation","i","obj","$li","prop","html","console","log","csvguidUsers","usersGuids","join","height","getUsersData","getUsersAssignees","activityRuning","res_user","getUserAssignee","tasks","types","actUser","not","ev","$target","id_userSelected","attr","task","userParam","usertooltip","click","stopPropagation","publish","widgetName","BIZAGI_WORKPORTAL_WIDGET_USERS_MODAL","closeVisible","maximize","modalParameters","title","refreshInbox","users"],"mappings":"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","sourcesContent":["/*\r\n *   Name: Bizagi Workportal project Dashboard Menu Plan\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\r\n\r\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.dashboard.menu.plan\", {}, {\r\n\r\n   /*\r\n    *   Constructor\r\n    */\r\n   init: function (workportalFacade, dataService, projectDashboard, params) {\r\n      var self = this;\r\n      self.params = params || {};\r\n      self.projectDashboard = projectDashboard;\r\n\r\n      // Call base\r\n      self._super(workportalFacade, dataService, params);\r\n\r\n      //Load templates\r\n      self.loadTemplates({\r\n         \"project-dashboard-menu\": bizagi.getTemplate(\"bizagi.workportal.desktop.widgets.project.dashboard.menu.plan\").concat(\"#project-dashboard-menu\")\r\n      });\r\n   },\r\n\r\n   /**\r\n    * Renders the template defined in the widget\r\n    */\r\n   renderContent: function () {\r\n      var self = this;\r\n      self.content = $(\"<div></div>\");\r\n      return self.content;\r\n\r\n   },\r\n\r\n   /**\r\n    * links events with handlers\r\n    */\r\n   postRender: function () {\r\n      var self = this;\r\n      //Handlers\r\n      if(self.params && self.params.contextsLeftSidebarCaseDashboard){\r\n         self.params.contextsLeftSidebarCaseDashboard.forEach(function(context){\r\n            self.sub(context, $.proxy(self.updateView, self));\r\n         });\r\n      }\r\n\r\n   },\r\n\r\n\r\n   updateView: function (event, params) {\r\n      var self = this;\r\n      self.params = $.extend(self.params, params.args);\r\n      self.clean();\r\n      var $content = self.getContent().empty();\r\n\r\n      var template = self.getTemplate(\"project-dashboard-menu\");\r\n      self.params.menuPlanDashboard = self.params.menuPlanDashboard || {};\r\n      $.extend(self.params.menuPlanDashboard, self.params.menuDashboard);\r\n\r\n      self.planState = self.getPlanState(self.params.plan, self.params.planChild);\r\n      var argsTemplate = {\r\n         planState: self.planState,\r\n         showCommentsOptionMenu: self.params.menuPlanDashboard.showCommentsOptionMenu,\r\n         showFilesOptionMenu: self.params.menuPlanDashboard.showFilesOptionMenu,\r\n         showTimeLineOptionMenu: self.params.menuPlanDashboard.showTimeLineOptionMenu && self.isVisibleShowTimeLine(self.planState)\r\n      };\r\n      template.render(argsTemplate).appendTo($content);\r\n       \r\n      $(\"li[data-context='\" + self.params.showContextByMenuDashboard.toUpperCase() + \"']\", self.content).addClass(\"active\").siblings().removeClass(\"active\");\r\n\r\n      self.handlerEvents();\r\n   },\r\n\r\n    /**\r\n     * Return planState by plan or planChild\r\n     * @param plan\r\n     * @param planChild\r\n     * @returns {*}\r\n     */\r\n    getPlanState: function(plan, planChild){\r\n        var currentState;\r\n        if(planChild && planChild.currentState){\r\n            currentState = planChild.currentState;\r\n        }\r\n        else if(plan && plan.currentState){\r\n            currentState = plan.currentState;\r\n        }\r\n        return currentState;\r\n    },\r\n\r\n    /**\r\n     * Behavior visible timeline option\r\n     */\r\n    isVisibleShowTimeLine: function(planState){\r\n        var self = this;\r\n        var extraValidationShowTimeLine = true;\r\n        if(planState === \"PENDING\"){\r\n            extraValidationShowTimeLine = false;\r\n        }\r\n        return extraValidationShowTimeLine;\r\n    },\r\n\r\n   /*\r\n    *   Load Content By Id\r\n    */\r\n   loadContentById: function (event) {\r\n      var self = this;\r\n      event.preventDefault();\r\n      var $item = $(event.target).closest(\"li\");\r\n\r\n      if ($item.data(\"context\") === \"PLANBACK\") {\r\n         self.backParentPlan();\r\n      }\r\n      else{\r\n         if (!$item.hasClass(\"active\")) {\r\n            var showContextByMenuDashboard = $item.data(\"context\");\r\n            if (showContextByMenuDashboard) {\r\n\r\n               self.pub(\"notify\", {\r\n                  type: showContextByMenuDashboard.toUpperCase(),\r\n                  args: $.extend(self.params,{showContextByMenuDashboard: showContextByMenuDashboard})\r\n               });\r\n               $(\"li[data-context='\" + self.params.showContextByMenuDashboard.toUpperCase() + \"']\", self.content).addClass(\"active\").siblings().removeClass(\"active\");\r\n            }\r\n         }\r\n      }\r\n   },\r\n\r\n   subMenuHandler: function () {\r\n      var self = this;\r\n      var content = self.getContent();\r\n      var $comments = $(\"[data-context='PLANCOMMENTS']\", content);\r\n      var $files = $(\"[data-context='PLANFILES']\", content);\r\n      var $timeline = $(\"[data-context='PLANTIMELINE']\", content);\r\n\r\n      $(\".ui-bizagi-wp-project-tab-submenu a\", content).on(\"click\", function () {\r\n         $comments.toggle();\r\n         $files.toggle();\r\n         if(self.isVisibleShowTimeLine(self.planState)){\r\n            $timeline.toggle();\r\n         }\r\n      });\r\n   },\r\n\r\n   backParentPlan: function(){\r\n      var self = this;\r\n      //when a plan created from an activity is deleted, not created from a case\r\n      var getLevelNavigator = self.pub(\"notify\", { type: \"NAVIGATOR_GETLEVEL\"});\r\n      var currentLevelNavigator = parseInt(getLevelNavigator[0]);\r\n      var params = self.projectDashboard.getParamsByBackFromPlan(self.params, currentLevelNavigator);\r\n\r\n      self.pub(\"notify\", {\r\n         type: params.typeContext,\r\n         args: $.extend(self.params, params.paramsNotify)\r\n      });\r\n\r\n   },\r\n\r\n   handlerEvents: function(){\r\n      var self = this;\r\n      var content = self.getContent();\r\n\r\n      self.subMenuHandler();\r\n\r\n      $(\".ui-bizagi-wp-project-tab-links a\", content).on(\"click\",  $.proxy(self.loadContentById, self));\r\n   },\r\n\r\n   clean: function(){\r\n      var self = this;\r\n      var content = self.getContent();\r\n\r\n      $(\".ui-bizagi-wp-project-tab-links a\", content).off();\r\n\r\n      if(self.params && self.params.contextsLeftSidebarCaseDashboard){\r\n         self.params.contextsLeftSidebarCaseDashboard.forEach(function(context){\r\n            self.unsub(context, $.proxy(self.updateView, self));\r\n         });\r\n      }\r\n   }\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.project.dashboard.menu.plan\", [\"workportalFacade\", \"dataService\", \"bizagi.workportal.services.behaviors.projectDashboard\", bizagi.workportal.widgets.project.dashboard.menu.plan], true);","/*\r\n *   Name: Bizagi Workportal project Plan Sidebar\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\r\n\r\nbizagi.workportal.widgets.project.base.extend(\"bizagi.workportal.widgets.project.plan.sidebar\", {}, {\r\n\r\n   /*\r\n    *   Constructor\r\n    */\r\n   init: function (workportalFacade, dataService, serviceloadDataPlan, params) {\r\n      var self = this;\r\n\r\n      // Call base\r\n      self._super(workportalFacade, dataService, params);\r\n\r\n      self.serviceloadDataPlan = serviceloadDataPlan;\r\n      self.params = params || {};\r\n      params.supportNav = false;\r\n\r\n      //Load templates\r\n      self.loadTemplates({\r\n         \"project-plan-sidebar\": bizagi.getTemplate(\"bizagi.workportal.desktop.widget.project.plan.sidebar\").concat(\"#project-plan-sidebar\")\r\n      });\r\n\r\n   },\r\n\r\n    /*\r\n     * Renders the template defined in the widget\r\n     */\r\n    renderContent: function () {\r\n        var self = this;\r\n        var template = self.getTemplate(\"project-plan-sidebar\");\r\n        self.content = template.render({});\r\n        $.when(self.areTemplatedLoaded())\r\n                .done(function () {\r\n                    var params = {idPlan: self.params.plan.id};\r\n                    if (self.params.planChild && self.params.planChild.id) {\r\n                        params.idPlan = self.params.planChild.id;\r\n                    }\r\n                    self.serviceloadDataPlan.loadData(params, self.getDateServer, self.params);\r\n                    self.serviceloadDataPlan.subscribe(\"loadedWithDataActivities\", $.proxy(self.loadedWithDataActivities, self));\r\n                    self.serviceloadDataPlan.subscribe(\"loadedWithDataFirstParent\", $.proxy(self.loadedWithDataFirstParent, self));\r\n                });\r\n        return self.content;\r\n    },\r\n\r\n    loadedWithDataActivities: function(){\r\n        var self = this;\r\n        self.pub(\"notify\", {\r\n            type: \"LOADED_ACTIVITIES_PLAN\",\r\n            args: self.params\r\n        });\r\n        self.pub(\"notify\", {\r\n            type: \"UPDATE_INFO_PLAN\",\r\n            args: self.params\r\n        });\r\n        self.pub(\"notify\", {\r\n            type: \"LOAD_INFO_SUMMARY_PROGRESS_PLAN\",\r\n            args: self.params\r\n        });\r\n        self.pub(\"notify\", {\r\n            type: \"LOAD_INFO_ACTIVITIES_PLAN\",\r\n            args: self.params\r\n        });\r\n    },\r\n\r\n    loadedWithDataFirstParent: function(){\r\n        var self = this;\r\n        self.pub(\"notify\", {\r\n            type: \"LOAD_INFO_SUMMARY_PLAN\",\r\n            args: self.params\r\n        });\r\n    },\r\n\r\n    clean: function(){\r\n        var self = this;\r\n        if(self.serviceloadDataPlan){\r\n            self.serviceloadDataPlan.unsubscribe(\"loadedWithDataActivities\", $.proxy(self.loadedWithDataActivities, self));\r\n            self.serviceloadDataPlan.unsubscribe(\"loadedWithDataFirstParent\", $.proxy(self.loadedWithDataFirstParent, self));\r\n        }\r\n    }\r\n\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.sidebar\", [\"workportalFacade\", \"dataService\", \"bizagi.workportal.services.behaviors.loadDataPlan\", bizagi.workportal.widgets.project.plan.sidebar], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Action\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\r\n\r\nbizagi.workportal.widgets.project.base.extend(\"bizagi.workportal.widgets.project.plan.action\", {}, {\r\n\r\n    /*\r\n     *   Constructor\r\n     */\r\n    init: function (workportalFacade, dataService, projectDashboard, notifier, planTemplateCreate, planPopupEdit, params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(workportalFacade, dataService, params);\r\n\r\n        self.PENDING_PLAN = \"PENDING\";\r\n        self.EXECUTING_PLAN = \"EXECUTING\";\r\n        self.CLOSED_PLAN = \"CLOSED\";\r\n\r\n        self.CONTEXT_ACTIVITYPLAN = \"ACTIVITYPLAN\";\r\n        self.CONTEXT_ACTIVITYPLANOVERVIEW = \"ACTIVITYPLANOVERVIEW\";\r\n        self.CONTEXT_PLANCREATE = \"PLANCREATE\";\r\n        self.CONTEXT_ACTIVITYPLANCREATE = \"ACTIVITYPLANCREATE\";\r\n\r\n        self.showActionsPlan = false;\r\n        self.projectDashboard = projectDashboard;\r\n        self.notifier = notifier;\r\n        self.planTemplateCreate = planTemplateCreate;\r\n        self.planPopupEdit = planPopupEdit;\r\n\r\n        //Load templates\r\n        self.loadTemplates({\r\n            \"plan-action-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.action\").concat(\"#project-plan-action\")\r\n        });\r\n    },\r\n\r\n    renderContent: function () {\r\n        var self = this;\r\n        var tmpl = self.getTemplate(\"plan-action-main\");\r\n\r\n        self.showActionsPlan =  self.params.showContextByMenuDashboard !== self.CONTEXT_ACTIVITYPLAN &&\r\n            self.params.showContextByMenuDashboard !== self.CONTEXT_ACTIVITYPLANOVERVIEW;\r\n\r\n        self.plugins = {};\r\n        self.content = tmpl.render({\r\n            plan: self.params.plan.name,\r\n            stateClosedPlan: self.CLOSED_PLAN,\r\n            currentStatePlan: self.params.plan.currentState,\r\n            showActionsPlan: self.showActionsPlan\r\n        });\r\n\r\n        if (self.showActionsPlan) {\r\n            self.params.plan.contextualized = typeof(self.params.plan.contextualized) == \"undefined\" ? true : self.params.plan.contextualized;\r\n        }\r\n\r\n        return self.content;\r\n    },\r\n\r\n    postRender: function () {\r\n\r\n        var self = this;\r\n        var $contentWidget = self.getContent();\r\n\r\n        if(self.showActionsPlan){\r\n            self.initilizeActionMenu();\r\n            $(\"a#to-close-plan\", $contentWidget).on(\"click\", $.proxy(self.onClosePlan, self));\r\n        }\r\n\r\n        self.sub(\"LOAD_INFO_SUMMARY_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\r\n        self.clearAlertsOnFocus();\r\n\r\n        self.planTemplateCreate.sub('planTemplateCreatedSuccess', function () {\r\n            self.notifier.showSucessMessage(\r\n                printf(bizagi.localization.getResource('workportal-project-plan-create-template-success'), ''));\r\n        });\r\n        self.planTemplateCreate.sub('planTemplateCreatedFailed', function () {\r\n            self.notifier.showErrorMessage(\r\n                printf(bizagi.localization.getResource('workportal-project-plan-create-template-fail'), ''));\r\n        });\r\n\r\n        self.planPopupEdit.sub('planEditedSuccess', function () {\r\n            self.setNamePlan(self.params.plan.name);\r\n\r\n            self.pub(\"notify\", {\r\n                type: \"UPDATE_INFO_PLAN\"\r\n            });\r\n\r\n            self.pub(\"notify\", {\r\n                type: \"LOAD_INFO_SUMMARY_PLAN\",\r\n                args: self.params\r\n            });\r\n\r\n            self.notifier.showSucessMessage(\r\n                printf(bizagi.localization.getResource('workportal-project-plan-edit-success'), ''));\r\n        });\r\n\r\n        self.planPopupEdit.sub('planEditedFailed', function () {\r\n            self.notifier.showErrorMessage(\r\n                printf(bizagi.localization.getResource('workportal-project-plan-edit-fail'), ''));\r\n        });\r\n\r\n        self.sub(\"EXPANDED_RIGHT_SIDEBAR\", $.proxy(self.onNotifyExpandedRightSidebar, self));\r\n    },\r\n\r\n    onNotifyExpandedRightSidebar: function(){\r\n        var self = this;\r\n        if(self.showActionsPlan){\r\n            self.initilizeActionMenu();\r\n        }\r\n    },\r\n\r\n    /**\r\n     * Notifies when an event is raised\r\n     */\r\n\r\n    onNotifyLoadInfoSummaryPlan: function () {\r\n        var self = this;\r\n        self.setStatePlan(self.params.plan.currentState);\r\n        self.setNamePlan(self.params.plan.name);\r\n    },\r\n\r\n    /**\r\n     * UI\r\n     */\r\n\r\n    setStatePlan: function (statePlan) {\r\n        var self = this;\r\n        if (statePlan) {\r\n            switch (statePlan.toUpperCase()) {\r\n                case \"PENDING\":\r\n                    $(\".state-pending-plan\", self.content).show().siblings().hide();\r\n                    break;\r\n                case \"EXECUTING\":\r\n                    $(\".state-executing-plan\", self.content).show().siblings().hide();\r\n                    break;\r\n                case \"CLOSED\":\r\n                    $(\".state-closed-plan\", self.content).show().siblings().hide();\r\n                    break;\r\n            }\r\n        }\r\n    },\r\n\r\n    setNamePlan: function(namePlan){\r\n        var self = this;\r\n        $(\".ui-bizagi-wp-project-plan-header .bz-wp-section\", self.content).text(bizagi.util.decodeHtmlEntities(namePlan));\r\n    },\r\n\r\n    /**\r\n     Events\r\n     */\r\n    onSelectMenu: function (event, ui) {\r\n        var self = this;\r\n        if($(event.currentTarget).find(\"i\").length === 0){\r\n            var item = $(ui.item).data(\"item\");\r\n\r\n            switch (item) {\r\n                case \"edit\":\r\n                    self.onClickMenuOpenEdition();\r\n                    break;\r\n                case \"delete\":\r\n                    self.onClickMenuDeletePlan();\r\n                    break;\r\n                case \"saveastmpl\":\r\n                    self.onClickMenuSaveAsTemplate();\r\n                    break;\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    onClickMenuOpenEdition: function () {\r\n        var self = this;\r\n        var planSelected = self.params.plan;\r\n        self.planPopupEdit.showPopup(self.params, self.dataService, planSelected);\r\n    },\r\n\r\n    onClickMenuSaveAsTemplate: function () {\r\n        var self = this;\r\n        self.planTemplateCreate.showPopupAddTemplatePlan(self.params,\r\n            self.dataService, self.params.plan.contextualized, self.params.plan.id);\r\n    },\r\n\r\n    onClickMenuDeletePlan: function(){\r\n        var self = this;\r\n\r\n        $.when(bizagi.showConfirmationBox(bizagi.localization.getResource(\"workportal-project-plan-action-delete-confirmation\"), \"\", \"info\")).done(function () {\r\n            var params = { id: self.params.plan.id };\r\n\r\n            $.when(self.callDeletePlan(params)).always(function(response){\r\n                if (response.status === 200 || typeof (response.status) === \"undefined\") {\r\n                    $.extend(self.params.plan, params);\r\n                    self.notifier.showSucessMessage(\r\n                        printf(bizagi.localization.getResource(\"workportal-project-plan-delete-success\"), \"\"));\r\n\r\n                    //when a plan created from an activity is deleted, not created from a case\r\n                    var getLevelNavigator = self.pub(\"notify\", { type: \"NAVIGATOR_GETLEVEL\"});\r\n                    var currentLevelNavigator = parseInt(getLevelNavigator[0]);\r\n                    var params = self.projectDashboard.getParamsByBackFromPlan(self.params, currentLevelNavigator, true);\r\n\r\n                    self.pub(\"notify\", {\r\n                        type: params.typeContext,\r\n                        args: $.extend(self.params, params.paramsNotify)\r\n                    });\r\n                }\r\n                else{\r\n                    self.notifier.showErrorMessage(\r\n                        printf(bizagi.localization.getResource('workportal-project-plan-delete-fail'), ''));\r\n                }\r\n            });\r\n        });\r\n    },\r\n\r\n    onSubmitFormPlan: function (event) {\r\n        event.preventDefault();\r\n    },\r\n\r\n    initilizeActionMenu: function () {\r\n        var self = this;\r\n        $(\".ui-bizagi-wp-project-plan-action-menu\", self.content).menu({\r\n            select: $.proxy(self.onSelectMenu, self)\r\n        }).removeClass(\"ui-widget-content\");\r\n    },\r\n\r\n\r\n    /**\r\n     * Initialize edit plugin\r\n     */\r\n\r\n    clearAlertsOnFocus: function () {\r\n        $(\".ui-bizagi-wp-project-container-validator-relative input, .ui-bizagi-wp-project-container-validator-relative textarea\").focus(function () {\r\n            $(this).parent().find(\".k-invalid-msg\").hide();\r\n        }).focusout(function () {\r\n            if ($(this).val().length < 1) {\r\n                $(this).parent().find(\".k-invalid-msg\").show();\r\n            }\r\n        });\r\n    },\r\n\r\n    /*activitiesAreCompleted: function(activities){\r\n        var listActivities = activities || [];\r\n        var numActivitiesCompleted =  listActivities.filter(function(activity){\r\n            return activity.finishDate;\r\n        }).length;\r\n        return numActivitiesCompleted == activities.length;\r\n    },*/\r\n\r\n    /*getCopyObjectPlan: function(){\r\n        var self = this;\r\n        return {\r\n            id: self.params.plan.id,\r\n            name: self.params.plan.name,\r\n            description: self.params.plan.description,\r\n            dueDate: self.params.plan.dueDate,\r\n            waitForCompletion: self.params.plan.waitForCompletion,\r\n            currentState: self.params.plan.currentState,\r\n            parentWorkItem: self.params.plan.parentWorkItem,\r\n            creationDate: self.params.plan.creationDate,\r\n            startDate: self.params.plan.startDate,\r\n            idUserCreator: self.params.plan.idUserCreator,\r\n            contextualized: self.params.plan.contextualized,\r\n            activities: self.params.plan.activities\r\n        };\r\n    },*/\r\n\r\n    /**\r\n     * Call services\r\n     */\r\n    /*callUpdatePlan: function(params){\r\n        var self = this;\r\n        return $.when(self.dataService.updatePlan(params)).done(function () {\r\n            $.extend(self.params.plan, params);\r\n\r\n        });\r\n    },\r\n\r\n    callClosePlan: function(params){\r\n        var self = this;\r\n        return $.when(self.dataService.closePlan(params)).done(function () {\r\n            $.extend(self.params.plan, params);\r\n            self.notifier.showSucessMessage(\r\n                printf(bizagi.localization.getResource(\"workportal-project-plan-close-success\"), \"\"));\r\n        });\r\n    },*/\r\n\r\n    callDeletePlan: function(params){\r\n        var self = this;\r\n        return $.when(self.dataService.deletePlan(params));\r\n    },\r\n\r\n    clean: function(){\r\n        var self = this;\r\n        self.planTemplateCreate.unsub(\"planTemplateCreatedSuccess\");\r\n        self.planTemplateCreate.unsub(\"planTemplateCreatedFailed\");\r\n        self.planPopupEdit.unsub(\"planEditedSuccess\");\r\n        self.planPopupEdit.unsub(\"planEditedFailed\");\r\n\r\n        self.unsub(\"EXPANDED_RIGHT_SIDEBAR\", $.proxy(self.onNotifyExpandedRightSidebar, self));\r\n    }\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.action\", [\"workportalFacade\", \"dataService\",\r\n    \"bizagi.workportal.services.behaviors.projectDashboard\", \"notifier\",\r\n    \"bizagi.workportal.widgets.project.plan.template.create\",\r\n    \"bizagi.workportal.widgets.project.plan.edit\",\r\n    bizagi.workportal.widgets.project.plan.action], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan State\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\r\n\r\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.state\", {}, {\r\n\r\n   /*\r\n    *   Constructor\r\n    */\r\n   init: function (workportalFacade, dataService, params) {\r\n      var self = this;\r\n\r\n      // Call base\r\n      self._super(workportalFacade, dataService, params);\r\n\r\n      //Load templates\r\n      self.loadTemplates({\r\n         \"plan-state-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.state\").concat(\"#project-plan-state\")\r\n      });\r\n   },\r\n\r\n   renderContent: function () {\r\n      var self = this;\r\n      self.content = $(\"<div></div>\");\r\n      return self.content;\r\n   },\r\n\r\n   postRender: function () {\r\n      var self = this;\r\n      self.sub(\"LOAD_INFO_SUMMARY_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\r\n   },\r\n\r\n   /**\r\n    * Notifies when an event is raised\r\n    */\r\n\r\n   onNotifyLoadInfoSummaryPlan: function (event, params) {\r\n      var self = this;\r\n      var tmpl = self.getTemplate(\"plan-state-main\");\r\n      var renderWidget = tmpl.render({});\r\n      self.params = $.extend(self.params, params.args);\r\n\r\n       var state = self.params.plan.currentState;\r\n\r\n       switch (state.toUpperCase()) {\r\n         case \"PENDING\":\r\n            $(\".state-pending\", renderWidget).show().siblings().hide();\r\n            break;\r\n         case \"EXECUTING\":\r\n            $(\".state-executing\", renderWidget).show().siblings().hide();\r\n            break;\r\n         case \"CLOSED\":\r\n            $(\".state-closed\", renderWidget).show().siblings().hide();\r\n            break;\r\n      }\r\n      self.content.empty().append(renderWidget);\r\n\r\n   }\r\n\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.state\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.state], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Progress\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\r\n\r\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.progress\", {}, {\r\n\r\n   /*\r\n    *   Constructor\r\n    */\r\n   init: function (workportalFacade, dataService, params) {\r\n      var self = this;\r\n\r\n      // Call base\r\n      self._super(workportalFacade, dataService, params);\r\n\r\n      //Load templates\r\n      self.loadTemplates({\r\n         \"plan-progress-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.progress\").concat(\"#project-plan-progress\")\r\n      });\r\n   },\r\n\r\n   renderContent: function () {\r\n      var self = this;\r\n      self.content = $(\"<div></div>\");\r\n      return self.content;\r\n   },\r\n\r\n   postRender: function () {\r\n      var self = this;\r\n\r\n      self.sub(\"LOAD_INFO_SUMMARY_PROGRESS_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\r\n   },\r\n\r\n   /**\r\n    * Notifies when an event is raised\r\n    */\r\n\r\n   onNotifyLoadInfoSummaryPlan: function (event, params) {\r\n      var self = this;\r\n      self.params = $.extend(self.params, params.args);\r\n\r\n      var $content = self.getContent().empty();\r\n\r\n      var valuePercentBarComplete = self.calculateProgress();\r\n\r\n      var argsTemplate = {};\r\n      argsTemplate.progress = valuePercentBarComplete;\r\n\r\n      if(argsTemplate.progress < 33){\r\n         argsTemplate.colorBar = \"Red\";\r\n      }\r\n      else if(argsTemplate.progress < 66){\r\n         argsTemplate.colorBar = \"Yellow\";\r\n      }\r\n      else{\r\n         argsTemplate.colorBar = \"Green\";\r\n      }\r\n\r\n      //Update widget\r\n      var contentTemplate = self.getTemplate(\"plan-progress-main\");\r\n      contentTemplate\r\n         .render(argsTemplate)\r\n         .appendTo($content);\r\n\r\n      //Begin Adjust status bar next to the number days\r\n      var $barRemainingDate = $(\".remaining-days .time-remaining\", $content);\r\n      var widthNumberDays = $(\".remaining-days .days\", $content).width();\r\n      $barRemainingDate.css(\"padding-left\", (widthNumberDays + 7).toString() + \"px\");\r\n      //End Adjust status bar next to the number days\r\n\r\n\r\n   },\r\n\r\n   calculateProgress: function(){\r\n      var self = this;\r\n\r\n      var completedActivities = 0;\r\n      var totalActivities = self.params.plan.activities.length;\r\n      var percentProgress = 0;\r\n      \r\n      if(totalActivities !== 0){\r\n         self.params.plan.activities.forEach(function(activity){\r\n             if (activity.workItemState === \"Completed\") {\r\n               completedActivities++;\r\n            }\r\n         });\r\n         percentProgress = Math.round((completedActivities / totalActivities) * 100);\r\n      }\r\n      return percentProgress;\r\n   }\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.progress\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.progress], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Time\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\r\n\r\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.time\", {}, {\r\n\r\n   /*\r\n    *   Constructor\r\n    */\r\n   init: function (workportalFacade, dataService, params) {\r\n      var self = this;\r\n\r\n      // Call base\r\n      self._super(workportalFacade, dataService, params);\r\n\r\n      self.PENDING_PLAN = \"PENDING\";\r\n      self.EXECUTING_PLAN = \"EXECUTING\";\r\n      self.CLOSED_PLAN = \"CLOSED\";\r\n\r\n      //Regional\r\n      self.datePickerRegional = bizagi.localization.getResource(\"datePickerRegional\");\r\n\r\n      //Load templates\r\n      self.loadTemplates({\r\n         \"plan-time-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.time\").concat(\"#project-plan-time\")\r\n      });\r\n   },\r\n\r\n   renderContent: function () {\r\n      var self = this;\r\n      self.content = $(\"<div></div>\");\r\n      return self.content;\r\n   },\r\n\r\n   postRender: function () {\r\n      var self = this;\r\n\r\n      self.sub(\"LOAD_INFO_SUMMARY_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\r\n   },\r\n\r\n   /**\r\n    * Notifies when an event is raised\r\n    */\r\n\r\n   onNotifyLoadInfoSummaryPlan: function (event, params) {\r\n      var self = this;\r\n      self.params = $.extend(self.params, params.args);\r\n\r\n      if(self.params.plan){\r\n         if(self.params.plan.dueDate){\r\n            if(self.params.plan.currentState === self.PENDING_PLAN || self.params.plan.currentState === self.EXECUTING_PLAN ){\r\n               self.updateWidget(event, params);\r\n            }\r\n            else{\r\n               self.sub(\"LOADED_ACTIVITIES_PLAN\", $.proxy(self.updateWidget, self));\r\n            }\r\n         }\r\n         else{\r\n            self.getContent().empty();\r\n         }\r\n      }\r\n\r\n   },\r\n   \r\n   /**\r\n    * change the time properties string to timestamp number\r\n    * @param {*} plan \r\n    */\r\n   planDatesToStamp:function (plan) {\r\n      if(plan.activities)\r\n         plan.activities.map(function(a) {\r\n            if(a.estimatedFinishDate)a.estimatedFinishDate=new Date(a.estimatedFinishDate).getTime();\r\n            if(a.startDate)a.startDate=new Date(a.startDate).getTime();\r\n            if(a.finishDate)a.finishDate=new Date(a.finishDate).getTime();\r\n         });\r\n      if(plan.dueDate)plan.dueDate=new Date(plan.dueDate).getTime();\r\n      if(plan.creationDate)plan.creationDate=new Date(plan.creationDate).getTime();\r\n      if(plan.startDate)plan.startDate=new Date(plan.startDate).getTime();\r\n      if(plan.closedDate)plan.closedDate=new Date(plan.closedDate).getTime();\r\n      if(plan.finishDate)plan.finishDate=new Date(plan.finishDate).getTime();\r\n   },\r\n   updateWidget: function(event, params){\r\n      var self = this;\r\n      self.params = $.extend(self.params, params.args);\r\n      self.planDatesToStamp(self.params.plan);\r\n      var $content = self.getContent().empty();\r\n      if(self.params.plan.currentState === self.CLOSED_PLAN){\r\n         self.getClosedDatePlan(self.params.plan);\r\n      }\r\n      $.when(self.getIntervalOnMinutes(self.params.plan)).done(function(response){\r\n         var relativeTime =  bizagi.util.dateFormatter.getRelativeTime(new Date(Date.now() - (response.minutesToShowTime * 60 * 1000)), null, true);\r\n\r\n         var messageUnitTimeCalculated = relativeTime.replace(/\\d/g,\"\");\r\n         var keywordResourceDescriptionDifference = self.getKeywordDifferenceDates(self.params.plan);\r\n         var messageDescripionDifference = bizagi.localization.getResource(\"workportal-project-plan-state-\" + keywordResourceDescriptionDifference);\r\n         messageDescripionDifference = messageDescripionDifference.replace(\"%s\", messageUnitTimeCalculated);\r\n\r\n         var valueOfTimeCalculated = relativeTime.replace(/\\D/g,\"\");\r\n\r\n         var auxToDate = self.getSecondDate(self.params.plan);\r\n         var auxPercentBar = self.getWidthBar(self.params.plan, response);\r\n         var auxColorBar = self.getColorBarByPercent(auxPercentBar);\r\n         var argsTemplate = {\r\n            fromDate:  self.getFormattedDate(new Date(self.getFirstDate(self.params.plan))),\r\n            toDate: auxToDate ? self.getFormattedDate(new Date(auxToDate)) : null,\r\n            valueOfTimeCalculated: valueOfTimeCalculated,\r\n            messageDescripionDifference: messageDescripionDifference,\r\n            percentBar: auxPercentBar,\r\n            colorBar: auxColorBar\r\n         };\r\n\r\n         var contentTemplate = self.getTemplate(\"plan-time-main\");\r\n         contentTemplate\r\n            .render(argsTemplate)\r\n            .appendTo($content);\r\n\r\n      });\r\n   },\r\n   getFirstDate: function(plan){\r\n      var self = this;\r\n      switch(plan.currentState){\r\n         case self.PENDING_PLAN:\r\n            if(plan.dueDate){\r\n               return plan.dueDate;\r\n            }\r\n            else{\r\n               return plan.creationDate;\r\n            }\r\n            break;\r\n         case self.EXECUTING_PLAN:\r\n         case self.CLOSED_PLAN:\r\n            return plan.startDate;\r\n      }\r\n   },\r\n   getSecondDate: function(plan){\r\n      var self = this;\r\n      switch(plan.currentState){\r\n         case self.PENDING_PLAN:\r\n            return null;\r\n         case self.EXECUTING_PLAN:\r\n            return plan.dueDate;\r\n         case self.CLOSED_PLAN:\r\n            return plan.closedDate;\r\n      }\r\n   },\r\n   getLastActivity: function(activities){\r\n      var copyActivities = JSON.parse(JSON.stringify(activities));\r\n      return copyActivities.sort(function(activityA, activityB){\r\n         return (activityA.finishDate < activityB.finishDate) ? 1 : -1;\r\n      })[0];\r\n   },\r\n\r\n   getClosedDatePlan: function(plan){\r\n      var self = this;\r\n      plan.closedDate =  self.getLastActivity(plan.activities).finishDate;\r\n      return plan.closedDate;\r\n   },\r\n\r\n   getDifferenceBetweenDates: function(firstDate, secondDate){\r\n      var self = this;\r\n      var defer = $.Deferred();\r\n      var params = {\r\n         idUser: bizagi.currentUser.idUser,\r\n         fromDate: firstDate,\r\n         toDate: secondDate\r\n\r\n      };\r\n      $.when(self.callGetEffectiveDuration(params)).done(function(difference){\r\n         defer.resolve(difference.minutes);\r\n      });\r\n      return defer.promise();\r\n   },\r\n\r\n   getIntervalOnMinutes: function(plan){\r\n      var self = this;\r\n      var defer = $.Deferred();\r\n      switch(plan.currentState){\r\n         case self.PENDING_PLAN:\r\n            if(plan.dueDate > Date.now()){\r\n               $.when(self.getDifferenceBetweenDates(Date.now(), plan.dueDate)).done(function(minutesNowToDueDate){\r\n                   $.when(self.getDifferenceBetweenDates(plan.creationDate, Date.now())).done(function(minutesCreateToNow){\r\n                       defer.resolve({minutesToShowTime: minutesNowToDueDate, minutesCreateToNow: minutesCreateToNow});\r\n                   });\r\n               });\r\n            }\r\n            else if(plan.dueDate < plan.creationDate){\r\n               $.when(self.getDifferenceBetweenDates(plan.dueDate,  plan.creationDate)).done(function(minutesDueDateToCreate){\r\n                   $.when(self.getDifferenceBetweenDates(plan.creationDate, Date.now())).done(function(minutesCreateToNow){\r\n                       defer.resolve({minutesToShowTime: minutesDueDateToCreate + minutesCreateToNow, minutesCreateToNow: minutesCreateToNow});\r\n                   });\r\n               });\r\n            }\r\n            else if(plan.dueDate > plan.creationDate){\r\n                $.when(self.getDifferenceBetweenDates(plan.creationDate, plan.dueDate)).done(function(minutesCreateToDueDate){\r\n                    $.when(self.getDifferenceBetweenDates(plan.dueDate, Date.now())).done(function(minutesCreateToNow){\r\n                        defer.resolve({minutesToShowTime: minutesCreateToDueDate + minutesCreateToNow, minutesCreateToNow: minutesCreateToNow});\r\n                    });\r\n                });\r\n            }\r\n            break;\r\n         case self.EXECUTING_PLAN:\r\n            if(plan.dueDate){\r\n               if(plan.dueDate > Date.now()){\r\n                  $.when(self.getDifferenceBetweenDates(Date.now(), plan.dueDate)).done(function(minutesNowToDueDate){\r\n                      $.when(self.getDifferenceBetweenDates(plan.startDate, Date.now())).done(function(minutesStartToNow){\r\n                          defer.resolve({minutesToShowTime: minutesNowToDueDate, minutesStartToNow: minutesStartToNow});\r\n                      });\r\n                  });\r\n               }\r\n               else{\r\n                  $.when(self.getDifferenceBetweenDates(plan.dueDate, Date.now())).done(function(minutesDueDateToNow){\r\n                      $.when(self.getDifferenceBetweenDates(plan.startDate, plan.dueDate)).done(function(minutesStartToDueDate){\r\n                          defer.resolve({minutesToShowTime: minutesDueDateToNow, minutesStartToDueDate: minutesStartToDueDate});\r\n                      });\r\n                  });\r\n               }\r\n\r\n            }\r\n            else{\r\n               $.when(self.getDifferenceBetweenDates(plan.startDate, Date.now())).done(function(minutes){\r\n                  defer.resolve({minutesToShowTime: minutes});\r\n               });\r\n            }\r\n            break;\r\n         case self.CLOSED_PLAN:\r\n            $.when(self.getDifferenceBetweenDates(plan.startDate, plan.closedDate)).done(function(minutes){\r\n               defer.resolve({minutesToShowTime: minutes});\r\n            });\r\n\r\n      }\r\n      return defer.promise();\r\n   },\r\n\r\n   getKeywordDifferenceDates: function(plan){\r\n      var self = this;\r\n      switch(plan.currentState){\r\n         case self.PENDING_PLAN:\r\n            if(plan.dueDate > Date.now()){\r\n               return \"remaining\";\r\n            }\r\n            else {\r\n               return \"exceeded\";\r\n            }\r\n            break;\r\n         case self.EXECUTING_PLAN:\r\n            if(plan.dueDate){\r\n               if(plan.dueDate > Date.now()){\r\n                  return \"remaining\";\r\n               }\r\n               else{\r\n                  return \"exceeded\";\r\n               }\r\n\r\n            }\r\n            else{\r\n               return \"opened\";\r\n            }\r\n            break;\r\n         case self.CLOSED_PLAN:\r\n            return \"executed\";\r\n      }\r\n   },\r\n\r\n   getRelativeTime: function(milliseconds){\r\n      return bizagi.util.dateFormatter.getRelativeTime(milliseconds, null, false);\r\n   },\r\n\r\n   getWidthBar: function(plan, intervalMinutes){\r\n      var self = this,\r\n         differenceStartDateToCurrentDate = {};\r\n      switch(plan.currentState) {\r\n         case self.PENDING_PLAN:\r\n            if(plan.dueDate){\r\n               if(plan.dueDate < Date.now()){\r\n                  return 0;\r\n               }\r\n               else{\r\n                   var totalInterval = intervalMinutes.minutesCreateToNow + intervalMinutes.minutesToShowTime;\r\n                   valuePercentInterval = intervalMinutes.minutesToShowTime;\r\n                   return Math.ceil(valuePercentInterval * 100 / totalInterval);\r\n               }\r\n            }\r\n            else{\r\n               return 0;\r\n            }\r\n            break;\r\n         case self.EXECUTING_PLAN:\r\n            if(plan.dueDate) {\r\n               if (plan.dueDate > Date.now()) {\r\n                  var totalInterval = intervalMinutes.minutesStartToNow + intervalMinutes.minutesToShowTime;\r\n                  valuePercentInterval = intervalMinutes.minutesToShowTime;\r\n                  return Math.ceil(valuePercentInterval * 100 / totalInterval);\r\n               }\r\n               else{\r\n                  return 0;\r\n               }\r\n            }\r\n            else{\r\n               return 0;\r\n            }\r\n            break;\r\n         case self.CLOSED_PLAN:\r\n            if(plan.closedDate > Date.now()){\r\n               var differenceStartDateToClosedDate = plan.closedDate - plan.startDate;\r\n               differenceStartDateToCurrentDate = Date.now() - plan.startDate;\r\n               return Math.ceil(differenceStartDateToCurrentDate * 100 / differenceStartDateToClosedDate);\r\n            }\r\n            else{\r\n               return 100;\r\n            }\r\n      }\r\n\r\n\r\n   },\r\n\r\n   getColorBarByPercent: function(percent){\r\n      if(percent < 33){\r\n         return \"Red\";\r\n      }\r\n      else if(percent < 66){\r\n         return \"Yellow\";\r\n      }\r\n      else {\r\n         return \"Green\";\r\n      }\r\n   },\r\n\r\n   /**\r\n    * Call services\r\n    */\r\n\r\n   callGetEffectiveDuration: function(params){\r\n      var self = this;\r\n      var d = $.Deferred();\r\n\r\n      $.when(\r\n         self.dataService.getEffectiveDuration(params)\r\n      ).done(function (data) {\r\n            d.resolve(data);\r\n         });\r\n      return d.promise();\r\n   },\r\n\r\n   getFormattedDate: function (dateObj) {\r\n      var self = this;\r\n      var monthsNames = self.datePickerRegional.monthNames;\r\n      var shortMonth = dateObj.getMonth();\r\n      return monthsNames[shortMonth] + \" \" + bizagi.util.dateFormatter.formatDate(dateObj, \"dd hh:mm tt\", bizagi.localization.getResource(\"datePickerRegional\"));\r\n   }\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.time\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.time], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Parent\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\r\n\r\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.parent\", {}, {\r\n\r\n    /*\r\n     *   Constructor\r\n     */\r\n    init: function (workportalFacade, dataService, params) {\r\n        var self = this;\r\n\r\n        // Call base\r\n        self._super(workportalFacade, dataService, params);\r\n\r\n        //Load templates\r\n        self.loadTemplates({\r\n            \"plan-parent-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.parent\").concat(\"#project-plan-parent\")\r\n        });\r\n    },\r\n\r\n    renderContent: function () {\r\n\r\n        var self = this;\r\n        self.content = $(\"<div></div>\");\r\n        return self.content;\r\n    },\r\n\r\n    postRender: function () {\r\n        var self = this;\r\n        self.sub(\"LOAD_INFO_SUMMARY_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\r\n    },\r\n\r\n    /**\r\n     * Notifies when an event is raised\r\n     */\r\n    onNotifyLoadInfoSummaryPlan: function (event, params) {\r\n        var self = this,\r\n        $content = self.getContent().empty();\r\n        self.params = $.extend(self.params, params.args);\r\n        if (self.params.plan.parentWorkItem) {\r\n            $.when(self.dataService.getPlanParent({ idPlan: self.params.plan.id })).done(function(planParent) {\r\n                self.params.plan.parent = planParent;\r\n\r\n                  if (self.params.plan.parent) {\r\n                    var argsTemplate = {\r\n                        idParent: self.params.plan.parent.radNumber,\r\n                        nameParent: self.params.plan.parent.displayName,\r\n                        idCase: self.params.plan.parent.idCase,\r\n                        idWorkflow: self.params.plan.parent.idWorkflow,\r\n                        idWorkItem: self.params.plan.parent.idWorkItem,\r\n                        idTask: self.params.plan.parent.idTask,\r\n                        processName: self.params.process ? self.params.process : self.params.plan.parent.planName\r\n                    };\r\n\r\n                    if(bizagi.util.isEmpty(self.params.plan.parent.guidActivity)){\r\n                        self.goToParentCase($content, argsTemplate);\r\n                    }else{\r\n                        var paramsDetailActivity = {\r\n                            idPlan: self.params.plan.id,\r\n                            idActivity: self.params.plan.parent.guidActivity \r\n                        };\r\n                        $.when(self.dataService.getActivity(paramsDetailActivity)).done(function (response) {\r\n                            self.params.plan.parent.allowEdition = response.allowEdition;\r\n                            self.goToParentCase($content, argsTemplate);\r\n                         });\r\n                    }\r\n                    \r\n                }\r\n            \r\n            }).fail(function(msg) {\r\n\r\n            });\r\n        }\r\n    },\r\n    goToParentCase: function(content, argsTemplate){\r\n        var self = this\r\n        //TODO: double call because routing dont release memory and widgets\r\n        //Test with a breakpoint\r\n        content.empty();\r\n\r\n        //Update widget\r\n        var contentTemplate = self.getTemplate(\"plan-parent-main\");\r\n        contentTemplate\r\n            .render(argsTemplate)\r\n            .appendTo(content);\r\n        $(\"#go-to-parent-case\", content).on(\"click\", $.proxy(self.onClickGoToParentCase, self));\r\n    },\r\n    onClickGoToParentCase: function (event) {\r\n        event.preventDefault();\r\n        var self = this;\r\n        self.routingExecute($(event.target).closest(\"#go-to-parent-case\"));\r\n    }\r\n});\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.parent\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.parent], true);","/*\r\n *   Name: Bizagi Workportal Desktop Project Plan Users\r\n *   Author: Elkin Fernando Siabato Cruz\r\n */\r\n\r\nbizagi.workportal.widgets.widget.extend(\"bizagi.workportal.widgets.project.plan.users\", {}, {\r\n\r\n    /*\r\n     *   Constructor\r\n     */\r\n    init: function (workportalFacade, dataService, params) {\r\n        var self = this;\r\n        self.usersMap = {};\r\n        self.plugins = {};\r\n        self.usersInformation=[];\r\n        self.globalHandlersService = bizagi.injector.get('globalHandlersService');\r\n        self.usersAssignees = [];\r\n        // Call base\r\n        self._super(workportalFacade, dataService, params);\r\n\r\n        //Load templates\r\n        self.loadTemplates({\r\n            \"plan-users-main\": bizagi.getTemplate(\"bizagi.workportal.desktop.project.plan.users\").concat(\"#project-plan-users\")\r\n        });\r\n\r\n        self.auxNoRepeatTypesUser = {};\r\n        self.hashTypesUser = {\r\n            \"assigned\": bizagi.localization.getResource(\"workportal-project-user-assigned\"),\r\n            \"owner\": bizagi.localization.getResource(\"workportal-project-user-owner\")\r\n        };\r\n    },\r\n\r\n    renderContent: function () {\r\n\r\n        var self = this;\r\n        self.content = $(\"<div></div>\");\r\n        return self.content;\r\n    },\r\n\r\n    postRender: function () {\r\n        var self = this;\r\n        self.sub(\"LOAD_INFO_ACTIVITIES_PLAN\", $.proxy(self.onNotifyLoadInfoSummaryPlan, self));\r\n    },\r\n\r\n    /**\r\n     * Notifies when an event is raised\r\n     */\r\n    onNotifyLoadInfoSummaryPlan: function (event, params) {\r\n        var self = this,\r\n            args = params.args,\r\n            cvsGuidUsers = [],\r\n            activitiesUsers = [],\r\n            $content = self.getContent().empty();\r\n            var ownerUserGuid = params.args.plan.idUserCreator;\r\n            var ownerUserId = params.args.plan.idUserCreator;\r\n        self.params = $.extend(self.params, params.args);\r\n\r\n        activitiesUsers.push({ \"idUser\": ownerUserId, 'userGuid': ownerUserGuid, \"userType\": [\"owner\"]});\r\n        self.usersMap[\"-\" + ownerUserId + \"-\"] = {\r\n            picture: \"\",\r\n            id: ownerUserId,\r\n            guid: ownerUserGuid,\r\n            name: \"\",\r\n            userType: [\"owner\"]\r\n        };\r\n        cvsGuidUsers.push(ownerUserId);\r\n        $.each(self.params.plan.activities, function (index, activity) {\r\n            var userId = activity.userAssigned;\r\n            var userGuid = activity.userAssignedGuid;\r\n            if(activity.isRunning == true){\r\n                if (userId === ownerUserId) {\r\n                    if($.inArray(\"Assigned\", activitiesUsers[0].userType) === -1){\r\n                        activitiesUsers[0].userType.push(\"Assigned\");\r\n                        self.usersMap[\"-\" + ownerUserId + \"-\"].userType.push(\"Assigned\");\r\n                    }\r\n                }\r\n                else {\r\n                    self.usersMap[\"-\" + userId + \"-\"] = {\r\n                        picture: \"\",\r\n                        id: userId,\r\n                        guid: userGuid,\r\n                        name: \"\",\r\n                        userType: [\"Assigned\"]\r\n                    };\r\n                    if (activitiesUsers.filter(function(user) { return user.idUser == userId; }).length === 0) {\r\n                        activitiesUsers.push({\"idUser\": userId, \"guidUser\": userGuid, \"userType\": [\"Assigned\"]});\r\n                        cvsGuidUsers.push(userId);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        self.activitiesUsers = activitiesUsers;\r\n        self.params = args;\r\n        //Update widget\r\n        var contentTemplate = self.getTemplate(\"plan-users-main\");\r\n        contentTemplate\r\n            .render({\r\n                assignee: self.justAssignees(activitiesUsers),\r\n                label: bizagi.localization.getResource(\"workportal-project-plan-assignee\")\r\n            })\r\n            .appendTo($content);\r\n        self.initilizeTooltip();\r\n        self.addEventHandlersModal();\r\n        $.when(self.callGetDataUsers(cvsGuidUsers)).then(function () {\r\n            self.showCreatorInformation(ownerUserId);\r\n            self.renderUserProfilesAndImages();\r\n        });\r\n    },\r\n\r\n    /**\r\n     * return standar userAdapter information with only assigned users when the plan has started\r\n     * @param {Array} allUsers \r\n     */\r\n    justAssignees: function (allUsers) {\r\n        var self = this;\r\n        var usersAssignee=[];\r\n        if ([\"CLOSED\", \"PENDING\"].indexOf(self.params.plan.currentState)==-1) {\r\n            allUsers.map(function(user) {\r\n                var isOwner=user.userType.indexOf(\"owner\")!==-1;\r\n                var isAssignee=user.userType.indexOf(\"Assigned\")!==-1;\r\n                usersAssignee.push(usersAdapter.createJsonUserInfo(user.idUser, \"\", \"\", \"\", \"\", \"\", isAssignee, isOwner, [], []));\r\n            });\r\n        }\r\n        return usersAdapter.justAssignees(usersAssignee);\r\n    },\r\n\r\n    /**\r\n     * show the information of the creator case\r\n     * @param {string} ownerUserId guid user creator\r\n     */\r\n    showCreatorInformation: function (ownerUserId) {\r\n        var self = this;\r\n        var userCreator=self.usersInformation.find(function(user) {\r\n            return user.id==ownerUserId\r\n        });\r\n        var userInfo = usersAdapter.createJsonUserInfo(\r\n            userCreator.id,\r\n            userCreator.name,\r\n            userCreator.username,\r\n            userCreator.picture?\"data:image/png;base64,\"+userCreator.picture:undefined,\r\n            userCreator.email,\r\n            userCreator.name.getInitials(),\r\n            false,\r\n            true,\r\n            [],\r\n            []\r\n        );\r\n        self.content.find(\".ui-bizagi-wp-project-plan-users .ui-bizagi-wp-project-users-creator-info\").userinformation(self, { user: userInfo });\r\n    },\r\n\r\n    /**\r\n     * UI\r\n     */\r\n    renderUserProfilesAndImages: function () {\r\n        var self = this;\r\n        $.each(self.usersMap, function (i, obj) {\r\n            var $li = $(\".ui-bizagi-wp-userlist li[data-iduser=\" + obj.id + \"]\", self.content);\r\n\r\n            if (obj.picture !== \"\") {\r\n                $li.find(\"img\").prop(\"src\", obj.picture);\r\n                $(\".bz-wp-avatar-label\", $li).hide();\r\n            }\r\n            else {\r\n                if(obj.name!==undefined){\r\n                    $(\".bz-wp-avatar-img\", $li).hide();\r\n                    $(\".bz-wp-avatar-label\", $li).html(obj.name.getInitials());\r\n                }\r\n                else{\r\n                    console.log(\"obj.name is undefined\");\r\n                }\r\n\r\n            }\r\n        });\r\n    },\r\n\r\n    /*\r\n     *  Get data for users\r\n     */\r\n    callGetDataUsers: function (csvguidUsers) {\r\n        var self = this,\r\n            params = {},\r\n            defer = $.Deferred();\r\n        params = {\r\n            usersGuids: csvguidUsers.join(),\r\n            width: 50,\r\n            height: 50\r\n        };\r\n        $.when(self.dataService.getUsersData(params)).always(function (response) {            \r\n            self.usersInformation = response;\r\n            for (var i = 0, length = response.length; i < length; i += 1) {\r\n                if (typeof (response[i].name) === \"undefined\") {\r\n                    bizagi.log(response[i] + \" Id Not Found\", response, \"error\");\r\n                } else {\r\n                    if(self.usersMap[\"-\" + response[i].id + \"-\"]){\r\n                        self.usersMap[\"-\" + response[i].id + \"-\"].picture += (response[i].picture) ? \"data:image/png;base64,\" + response[i].picture : \"\";\r\n                        self.usersMap[\"-\" + response[i].id + \"-\"].name = response[i].name || \"\";\r\n                    }\r\n                    else{\r\n                        console.log(\"self.usersMap['-' + response[i].id + '-'] is undefined\")\r\n                    }\r\n\r\n                }\r\n            }\r\n            self.getUsersAssignees();\r\n            defer.resolve();\r\n        });\r\n        return defer.promise();\r\n    },\r\n    \r\n    /*\r\n    * validate if the activity is running\r\n    */\r\n    activityRuning: function (activity) {\r\n        return activity.startDate !== null;\r\n    },\r\n\r\n    getUsersAssignees: function(){\r\n        var self = this;\r\n        for(var i=0; i<self.usersInformation.length; i++){\r\n            var res_user=self.getUserAssignee(self.usersInformation[i]);\r\n            if (res_user!==false) {\r\n                self.usersAssignees.push(res_user);\r\n            }\r\n        }\r\n\r\n    },\r\n\r\n    getUserAssignee: function(user){\r\n        var self =  this;\r\n        var tasks = [];\r\n        $.each(self.params.plan.activities, function (index, activity) {\r\n            var userId = activity.userAssigned;\r\n            if (userId === user.id && self.activityRuning(activity)) {\r\n                tasks.push({ \"name\": activity.name });\r\n            }\r\n        });\r\n        if(tasks.length==0)return false;\r\n        user.tasks = tasks;\r\n        var types = self.activitiesUsers.find(function(actUser) {\r\n            return actUser.idUser == user.id;\r\n        });\r\n        user.types = types===undefined?[]:types.userType;\r\n        \r\n        var userAssignees = usersAdapter.createJsonUserInfo(\r\n            user.id, \r\n            user.name, \r\n            user.username, \r\n            user.picture ? \"data:image/png;base64,\" + user.picture : undefined, \r\n            user.email, \r\n            user.name.getInitials(),\r\n            user.types.indexOf(\"Assigned\") > -1, \r\n            user.types.indexOf(\"owner\") > -1, \r\n            user.tasks, \r\n            []);\r\n\r\n            return userAssignees;\r\n       },\r\n\r\n    /*\r\n     *  Tooltips\r\n     */\r\n    initilizeTooltip: function () {\r\n        var self = this;\r\n\r\n        $(\".ui-bizagi-wp-userlist > li\", self.content).not(\".moreUsers\").on('mouseenter', '', function (ev) {\r\n            var $target = $(ev.target);\r\n            var id_userSelected=$target.closest(\"[data-iduser]\").attr('data-iduser');\r\n            var user=self.usersInformation.find(function(user) {\r\n                return user.id==id_userSelected;\r\n            });\r\n            var activities=[];\r\n\r\n            if(user.tasks)\r\n                user.tasks.map(function(task) {\r\n                    activities.push(task.name);\r\n                });\r\n\r\n            var types = self.activitiesUsers.find(function(actUser) {\r\n                return actUser.idUser == id_userSelected;\r\n            });\r\n            user.types = types.userType;\r\n           \r\n            user.owner = user.types.find(function(type){\r\n                return type == \"owner\";\r\n            });\r\n            user.isAssignee = user.types.find(function(type){\r\n                return type == \"Assigned\";\r\n            });\r\n                \r\n            var userParam= usersAdapter.createJsonUserInfo(user.id, user.name, user.username, user.picture?\"data:image/png;base64,\"+user.picture:undefined, user.email,  user.name.getInitials(), user.isAssignee, user.owner, activities, []);\r\n            $target.parent().usertooltip(self, { target: $target, user: userParam });\r\n        });\r\n    },\r\n    addEventHandlersModal: function () {\r\n        var self =  this;\r\n        $(\".moreUsers\").click(function(event) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            var usersAssignees = self.usersAssignees || [];\r\n            self.globalHandlersService.publish(\"showDialogWidget\", {\r\n                widgetName: bizagi.workportal.widgets.widget.BIZAGI_WORKPORTAL_WIDGET_USERS_MODAL,\r\n                closeVisible: true,\r\n                data: usersAssignees,\r\n                maximize: true,\r\n                modalParameters: {\r\n                    title: bizagi.localization.getResource(\"workportal-project-users-title\")+ \" (\"+usersAssignees.length+\")\",\r\n                    width: 790,\r\n                    height: 526,\r\n                    refreshInbox: false\r\n                }\r\n            });\r\n         });\r\n       }\r\n});\r\n\r\n\r\n\r\nbizagi.injector.register(\"bizagi.workportal.widgets.project.plan.users\", [\"workportalFacade\", \"dataService\", bizagi.workportal.widgets.project.plan.users], true);"]}